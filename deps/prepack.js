export const Prepack = (function(e) {
  var t = {};
  function r(n) {
    if (t[n]) return t[n].exports;
    var i = t[n] = { i: n, l: false, exports: {} };
    return e[n].call(i.exports, i, i.exports, r), i.l = true, i.exports;
  }
  return r.m = e, r.c = t, r.d = function(e2, t2, n) {
    r.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: n });
  }, r.r = function(e2) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
  }, r.t = function(e2, t2) {
    if (1 & t2 && (e2 = r(e2)), 8 & t2) return e2;
    if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule) return e2;
    var n = /* @__PURE__ */ Object.create(null);
    if (r.r(n), Object.defineProperty(n, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2) for (var i in e2) r.d(n, i, function(t3) {
      return e2[t3];
    }.bind(null, i));
    return n;
  }, r.n = function(e2) {
    var t2 = e2 && e2.__esModule ? function() {
      return e2.default;
    } : function() {
      return e2;
    };
    return r.d(t2, "a", t2), t2;
  }, r.o = function(e2, t2) {
    return Object.prototype.hasOwnProperty.call(e2, t2);
  }, r.p = "", r(r.s = 779);
})([function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "Value", { enumerable: true, get: function() {
    return n.default;
  } }), Object.defineProperty(t, "ConcreteValue", { enumerable: true, get: function() {
    return i.default;
  } }), Object.defineProperty(t, "PrimitiveValue", { enumerable: true, get: function() {
    return a.default;
  } }), Object.defineProperty(t, "ObjectValue", { enumerable: true, get: function() {
    return o.default;
  } }), Object.defineProperty(t, "FunctionValue", { enumerable: true, get: function() {
    return s.default;
  } }), Object.defineProperty(t, "ECMAScriptFunctionValue", { enumerable: true, get: function() {
    return u.default;
  } }), Object.defineProperty(t, "ECMAScriptSourceFunctionValue", { enumerable: true, get: function() {
    return l.default;
  } }), Object.defineProperty(t, "BoundFunctionValue", { enumerable: true, get: function() {
    return c.default;
  } }), Object.defineProperty(t, "NativeFunctionValue", { enumerable: true, get: function() {
    return f.default;
  } }), Object.defineProperty(t, "NativeFunctionCallback", { enumerable: true, get: function() {
    return f.NativeFunctionCallback;
  } }), Object.defineProperty(t, "ArrayValue", { enumerable: true, get: function() {
    return p.default;
  } }), Object.defineProperty(t, "UndefinedValue", { enumerable: true, get: function() {
    return d.default;
  } }), Object.defineProperty(t, "EmptyValue", { enumerable: true, get: function() {
    return h.default;
  } }), Object.defineProperty(t, "NullValue", { enumerable: true, get: function() {
    return v.default;
  } }), Object.defineProperty(t, "NumberValue", { enumerable: true, get: function() {
    return y.NumberValue;
  } }), Object.defineProperty(t, "IntegralValue", { enumerable: true, get: function() {
    return y.IntegralValue;
  } }), Object.defineProperty(t, "ProxyValue", { enumerable: true, get: function() {
    return m.default;
  } }), Object.defineProperty(t, "StringExotic", { enumerable: true, get: function() {
    return b.default;
  } }), Object.defineProperty(t, "ArgumentsExotic", { enumerable: true, get: function() {
    return g.default;
  } }), Object.defineProperty(t, "IntegerIndexedExotic", { enumerable: true, get: function() {
    return w.default;
  } }), Object.defineProperty(t, "BooleanValue", { enumerable: true, get: function() {
    return E.default;
  } }), Object.defineProperty(t, "StringValue", { enumerable: true, get: function() {
    return S.default;
  } }), Object.defineProperty(t, "SymbolValue", { enumerable: true, get: function() {
    return T.default;
  } }), Object.defineProperty(t, "AbstractValue", { enumerable: true, get: function() {
    return A.default;
  } }), Object.defineProperty(t, "AbstractObjectValue", { enumerable: true, get: function() {
    return C.default;
  } });
  var n = P(r(193)), i = P(r(645)), a = P(r(192)), o = P(r(644)), s = P(r(453)), u = P(r(452)), l = P(r(451)), c = P(r(450)), f = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(449)), p = P(r(448)), d = P(r(447)), h = P(r(148)), v = P(r(446)), y = r(445), m = P(r(444)), b = P(r(443)), g = P(r(442)), w = P(r(441)), E = P(r(440)), S = P(r(439)), T = P(r(438)), A = P(r(437)), C = P(r(147));
  function P(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
    if (e2) return;
    var r2 = "".concat(t2, "\nThis is likely a bug in Prepack, not your code. Feel free to open an issue on GitHub."), i = new n.InvariantError(r2);
    throw i.name = "Invariant Violation", i;
  };
  var n = r(4);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.setCreate = function(e2) {
    t.Create = n = e2;
  }, t.setEnvironment = function(e2) {
    t.Environment = i = e2;
  }, t.setFunctions = function(e2) {
    t.Functions = a = e2;
  }, t.setLeak = function(e2) {
    t.Leak = o = e2;
  }, t.setMaterialize = function(e2) {
    t.Materialize = s = e2;
  }, t.setJoin = function(e2) {
    t.Join = u = e2;
  }, t.setPath = function(e2) {
    t.Path = l = e2;
  }, t.setPathConditions = function(e2) {
    t.createPathConditions = c = e2;
  }, t.setProperties = function(e2) {
    t.Properties = f = e2;
  }, t.setTo = function(e2) {
    t.To = p = e2;
  }, t.setWiden = function(e2) {
    t.Widen = d = e2;
  }, t.setConcretize = function(e2) {
    t.concretize = h = e2;
  }, t.setUtils = function(e2) {
    t.Utils = v = e2;
  }, t.setDebugReproManager = function(e2) {
    t.DebugReproManager = y = e2;
  }, t.DebugReproManager = t.Utils = t.concretize = t.Widen = t.To = t.Properties = t.createPathConditions = t.Path = t.Join = t.Materialize = t.Leak = t.Functions = t.Environment = t.Create = void 0;
  var n = null;
  t.Create = n;
  var i = null;
  t.Environment = i;
  var a = null;
  t.Functions = a;
  var o = null;
  t.Leak = o;
  var s = null;
  t.Materialize = s;
  var u = null;
  t.Join = u;
  var l = null;
  t.Path = l;
  var c = null;
  t.createPathConditions = c;
  var f = null;
  t.Properties = f;
  var p = null;
  t.To = p;
  var d = null;
  t.Widen = d;
  var h = null;
  t.concretize = h;
  var v = null;
  t.Utils = v;
  var y = null;
  t.DebugReproManager = y;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true });
  var n = r(16);
  Object.keys(n).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return n[e2];
    } });
  });
  var i = r(15);
  Object.keys(i).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return i[e2];
    } });
  });
  var a = r(22);
  Object.keys(a).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return a[e2];
    } });
  });
  var o = r(183);
  Object.keys(o).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return o[e2];
    } });
  });
  var s = r(13);
  Object.keys(s).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return s[e2];
    } });
  });
  var u = r(20);
  Object.keys(u).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return u[e2];
    } });
  });
  var l = r(619);
  Object.keys(l).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return l[e2];
    } });
  });
  var c = r(184);
  Object.keys(c).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return c[e2];
    } });
  });
  var f = r(11);
  Object.keys(f).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return f[e2];
    } });
  });
  var p = r(43);
  Object.keys(p).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return p[e2];
    } });
  });
  var d = r(182);
  Object.keys(d).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return d[e2];
    } });
  });
  var h = r(618);
  Object.keys(h).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return h[e2];
    } });
  });
  var v = r(83);
  Object.keys(v).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return v[e2];
    } });
  });
  var y = r(114);
  Object.keys(y).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return y[e2];
    } });
  });
  var m = r(53);
  Object.keys(m).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return m[e2];
    } });
  });
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && l(e2, t2);
  }
  function s(e2) {
    var t2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
    return (s = function(e3) {
      if (null === e3 || !(function(e4) {
        return -1 !== Function.toString.call(e4).indexOf("[native code]");
      })(e3)) return e3;
      if ("function" != typeof e3) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t2) {
        if (t2.has(e3)) return t2.get(e3);
        t2.set(e3, r2);
      }
      function r2() {
        return u(e3, arguments, c(this).constructor);
      }
      return r2.prototype = Object.create(e3.prototype, { constructor: { value: r2, enumerable: false, writable: true, configurable: true } }), l(r2, e3);
    })(e2);
  }
  function u(e2, t2, r2) {
    return (u = (function() {
      if ("undefined" == typeof Reflect || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if ("function" == typeof Proxy) return true;
      try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    })() ? Reflect.construct : function(e3, t3, r3) {
      var n2 = [null];
      n2.push.apply(n2, t3);
      var i2 = new (Function.bind.apply(e3, n2))();
      return r3 && l(i2, r3.prototype), i2;
    }).apply(null, arguments);
  }
  function l(e2, t2) {
    return (l = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function c(e2) {
    return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.NestedOptimizedFunctionSideEffect = t.InvariantError = t.InfeasiblePathError = t.FatalError = t.CompilerDiagnostic = void 0;
  var f = (function(e2) {
    function t2(e3, r2, n2, o2, s2) {
      var u2;
      return i(this, t2), (u2 = a(this, c(t2).call(this, e3))).location = r2, u2.severity = o2, u2.errorCode = n2, u2.sourceFilePaths = s2, u2;
    }
    return o(t2, s(Error)), t2;
  })();
  t.CompilerDiagnostic = f;
  var p = (function(e2) {
    function t2(e3) {
      return i(this, t2), a(this, c(t2).call(this, void 0 === e3 ? "A fatal error occurred while prepacking." : e3));
    }
    return o(t2, s(Error)), t2;
  })();
  t.FatalError = p;
  var d = (function(e2) {
    function t2() {
      return i(this, t2), a(this, c(t2).call(this, "Infeasible path explored"));
    }
    return o(t2, s(Error)), t2;
  })();
  t.InfeasiblePathError = d;
  var h = (function(e2) {
    function t2(e3) {
      return i(this, t2), a(this, c(t2).call(this, e3));
    }
    return o(t2, s(Error)), t2;
  })();
  t.InvariantError = h;
  var v = (function(e2) {
    function t2() {
      return i(this, t2), a(this, c(t2).apply(this, arguments));
    }
    return o(t2, s(Error)), t2;
  })();
  t.NestedOptimizedFunctionSideEffect = v;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true });
  var n = { react: true, assertNode: true, createTypeAnnotationBasedOnTypeof: true, createUnionTypeAnnotation: true, cloneNode: true, clone: true, cloneDeep: true, cloneWithoutLoc: true, addComment: true, addComments: true, inheritInnerComments: true, inheritLeadingComments: true, inheritsComments: true, inheritTrailingComments: true, removeComments: true, ensureBlock: true, toBindingIdentifierName: true, toBlock: true, toComputedKey: true, toExpression: true, toIdentifier: true, toKeyAlias: true, toSequenceExpression: true, toStatement: true, valueToNode: true, appendToMemberExpression: true, inherits: true, prependToMemberExpression: true, removeProperties: true, removePropertiesDeep: true, removeTypeDuplicates: true, getBindingIdentifiers: true, getOuterBindingIdentifiers: true, traverse: true, traverseFast: true, shallowEqual: true, is: true, isBinding: true, isBlockScoped: true, isImmutable: true, isLet: true, isNode: true, isNodesEquivalent: true, isReferenced: true, isScope: true, isSpecifierDefault: true, isType: true, isValidES3Identifier: true, isValidIdentifier: true, isVar: true, matchesPattern: true, validate: true, buildMatchMemberExpression: true };
  Object.defineProperty(t, "assertNode", { enumerable: true, get: function() {
    return s.default;
  } }), Object.defineProperty(t, "createTypeAnnotationBasedOnTypeof", { enumerable: true, get: function() {
    return l.default;
  } }), Object.defineProperty(t, "createUnionTypeAnnotation", { enumerable: true, get: function() {
    return c.default;
  } }), Object.defineProperty(t, "cloneNode", { enumerable: true, get: function() {
    return p.default;
  } }), Object.defineProperty(t, "clone", { enumerable: true, get: function() {
    return d.default;
  } }), Object.defineProperty(t, "cloneDeep", { enumerable: true, get: function() {
    return h.default;
  } }), Object.defineProperty(t, "cloneWithoutLoc", { enumerable: true, get: function() {
    return v.default;
  } }), Object.defineProperty(t, "addComment", { enumerable: true, get: function() {
    return y.default;
  } }), Object.defineProperty(t, "addComments", { enumerable: true, get: function() {
    return m.default;
  } }), Object.defineProperty(t, "inheritInnerComments", { enumerable: true, get: function() {
    return b.default;
  } }), Object.defineProperty(t, "inheritLeadingComments", { enumerable: true, get: function() {
    return g.default;
  } }), Object.defineProperty(t, "inheritsComments", { enumerable: true, get: function() {
    return w.default;
  } }), Object.defineProperty(t, "inheritTrailingComments", { enumerable: true, get: function() {
    return E.default;
  } }), Object.defineProperty(t, "removeComments", { enumerable: true, get: function() {
    return S.default;
  } }), Object.defineProperty(t, "ensureBlock", { enumerable: true, get: function() {
    return C.default;
  } }), Object.defineProperty(t, "toBindingIdentifierName", { enumerable: true, get: function() {
    return P.default;
  } }), Object.defineProperty(t, "toBlock", { enumerable: true, get: function() {
    return O.default;
  } }), Object.defineProperty(t, "toComputedKey", { enumerable: true, get: function() {
    return x.default;
  } }), Object.defineProperty(t, "toExpression", { enumerable: true, get: function() {
    return _.default;
  } }), Object.defineProperty(t, "toIdentifier", { enumerable: true, get: function() {
    return V.default;
  } }), Object.defineProperty(t, "toKeyAlias", { enumerable: true, get: function() {
    return D.default;
  } }), Object.defineProperty(t, "toSequenceExpression", { enumerable: true, get: function() {
    return N.default;
  } }), Object.defineProperty(t, "toStatement", { enumerable: true, get: function() {
    return I.default;
  } }), Object.defineProperty(t, "valueToNode", { enumerable: true, get: function() {
    return k.default;
  } }), Object.defineProperty(t, "appendToMemberExpression", { enumerable: true, get: function() {
    return F.default;
  } }), Object.defineProperty(t, "inherits", { enumerable: true, get: function() {
    return R.default;
  } }), Object.defineProperty(t, "prependToMemberExpression", { enumerable: true, get: function() {
    return M.default;
  } }), Object.defineProperty(t, "removeProperties", { enumerable: true, get: function() {
    return B.default;
  } }), Object.defineProperty(t, "removePropertiesDeep", { enumerable: true, get: function() {
    return L.default;
  } }), Object.defineProperty(t, "removeTypeDuplicates", { enumerable: true, get: function() {
    return $.default;
  } }), Object.defineProperty(t, "getBindingIdentifiers", { enumerable: true, get: function() {
    return G.default;
  } }), Object.defineProperty(t, "getOuterBindingIdentifiers", { enumerable: true, get: function() {
    return z.default;
  } }), Object.defineProperty(t, "traverse", { enumerable: true, get: function() {
    return U.default;
  } }), Object.defineProperty(t, "traverseFast", { enumerable: true, get: function() {
    return W.default;
  } }), Object.defineProperty(t, "shallowEqual", { enumerable: true, get: function() {
    return q.default;
  } }), Object.defineProperty(t, "is", { enumerable: true, get: function() {
    return H.default;
  } }), Object.defineProperty(t, "isBinding", { enumerable: true, get: function() {
    return K.default;
  } }), Object.defineProperty(t, "isBlockScoped", { enumerable: true, get: function() {
    return J.default;
  } }), Object.defineProperty(t, "isImmutable", { enumerable: true, get: function() {
    return Y.default;
  } }), Object.defineProperty(t, "isLet", { enumerable: true, get: function() {
    return X.default;
  } }), Object.defineProperty(t, "isNode", { enumerable: true, get: function() {
    return Q.default;
  } }), Object.defineProperty(t, "isNodesEquivalent", { enumerable: true, get: function() {
    return Z.default;
  } }), Object.defineProperty(t, "isReferenced", { enumerable: true, get: function() {
    return ee.default;
  } }), Object.defineProperty(t, "isScope", { enumerable: true, get: function() {
    return te.default;
  } }), Object.defineProperty(t, "isSpecifierDefault", { enumerable: true, get: function() {
    return re.default;
  } }), Object.defineProperty(t, "isType", { enumerable: true, get: function() {
    return ne.default;
  } }), Object.defineProperty(t, "isValidES3Identifier", { enumerable: true, get: function() {
    return ie.default;
  } }), Object.defineProperty(t, "isValidIdentifier", { enumerable: true, get: function() {
    return ae.default;
  } }), Object.defineProperty(t, "isVar", { enumerable: true, get: function() {
    return oe.default;
  } }), Object.defineProperty(t, "matchesPattern", { enumerable: true, get: function() {
    return se.default;
  } }), Object.defineProperty(t, "validate", { enumerable: true, get: function() {
    return ue.default;
  } }), Object.defineProperty(t, "buildMatchMemberExpression", { enumerable: true, get: function() {
    return le.default;
  } }), t.react = void 0;
  var i = fe(r(776)), a = fe(r(775)), o = fe(r(774)), s = fe(r(694)), u = r(693);
  Object.keys(u).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && (Object.prototype.hasOwnProperty.call(n, e2) || Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return u[e2];
    } }));
  });
  var l = fe(r(692)), c = fe(r(691)), f = r(23);
  Object.keys(f).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && (Object.prototype.hasOwnProperty.call(n, e2) || Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return f[e2];
    } }));
  });
  var p = fe(r(65)), d = fe(r(206)), h = fe(r(690)), v = fe(r(689)), y = fe(r(688)), m = fe(r(205)), b = fe(r(204)), g = fe(r(202)), w = fe(r(201)), E = fe(r(200)), S = fe(r(673)), T = r(672);
  Object.keys(T).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && (Object.prototype.hasOwnProperty.call(n, e2) || Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return T[e2];
    } }));
  });
  var A = r(45);
  Object.keys(A).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && (Object.prototype.hasOwnProperty.call(n, e2) || Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return A[e2];
    } }));
  });
  var C = fe(r(671)), P = fe(r(670)), O = fe(r(199)), x = fe(r(669)), _ = fe(r(668)), V = fe(r(198)), D = fe(r(667)), N = fe(r(666)), I = fe(r(664)), k = fe(r(663)), j = r(29);
  Object.keys(j).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && (Object.prototype.hasOwnProperty.call(n, e2) || Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return j[e2];
    } }));
  });
  var F = fe(r(659)), R = fe(r(658)), M = fe(r(657)), B = fe(r(195)), L = fe(r(197)), $ = fe(r(207)), G = fe(r(84)), z = fe(r(656)), U = fe(r(655)), W = fe(r(196)), q = fe(r(132)), H = fe(r(121)), K = fe(r(654)), J = fe(r(653)), Y = fe(r(652)), X = fe(r(194)), Q = fe(r(208)), Z = fe(r(651)), ee = fe(r(650)), te = fe(r(649)), re = fe(r(648)), ne = fe(r(120)), ie = fe(r(647)), ae = fe(r(66)), oe = fe(r(646)), se = fe(r(230)), ue = fe(r(209)), le = fe(r(231)), ce = r(17);
  function fe(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  Object.keys(ce).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && (Object.prototype.hasOwnProperty.call(n, e2) || Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return ce[e2];
    } }));
  });
  var pe = { isReactComponent: i.default, isCompatTag: a.default, buildChildren: o.default };
  t.react = pe;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function a(e2) {
    return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function o(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && s(e2, t2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function u(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function l(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function c(e2, t2, r2) {
    return t2 && l(e2.prototype, t2), r2 && l(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.cloneDescriptor = function(e2) {
    return void 0 === e2 ? void 0 : new h(e2);
  }, t.equalDescriptors = function(e2, t2) {
    if (e2.writable !== t2.writable) return false;
    if (e2.enumerable !== t2.enumerable) return false;
    if (e2.configurable !== t2.configurable) return false;
    if (void 0 !== e2.value && void 0 === t2.value) return false;
    return e2.get === t2.get && e2.set === t2.set;
  }, t.AbstractJoinedDescriptor = t.InternalSlotDescriptor = t.PropertyDescriptor = t.Descriptor = void 0;
  var f = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), p = r(4);
  var d = (function() {
    function e2() {
      u(this, e2), (0, f.default)(this.constructor !== e2, "Descriptor is an abstract base class");
    }
    return c(e2, [{ key: "throwIfNotConcrete", value: function(e3) {
      var t2 = new p.CompilerDiagnostic("only known descriptors supported", e3.currentLocation, "PP0042", "FatalError");
      throw e3.handleError(t2), new p.FatalError();
    } }, { key: "mightHaveBeenDeleted", value: function() {
      (0, f.default)(false, "should have been overridden by subclass");
    } }]), e2;
  })();
  t.Descriptor = d;
  var h = (function(e2) {
    function t2(e3) {
      var r2;
      return u(this, t2), (r2 = i(this, a(t2).call(this))).writable = e3.writable, r2.enumerable = e3.enumerable, r2.configurable = e3.configurable, r2.value = e3.value, r2.get = e3.get, r2.set = e3.set, r2;
    }
    return o(t2, d), c(t2, [{ key: "throwIfNotConcrete", value: function(e3) {
      return this;
    } }, { key: "mightHaveBeenDeleted", value: function() {
      return void 0 !== this.value && this.value.mightHaveBeenDeleted();
    } }]), t2;
  })();
  t.PropertyDescriptor = h;
  var v = (function(e2) {
    function t2(e3) {
      var r2;
      return u(this, t2), (r2 = i(this, a(t2).call(this))).value = Array.isArray(e3) ? e3.slice(0) : e3, r2;
    }
    return o(t2, d), c(t2, [{ key: "mightHaveBeenDeleted", value: function() {
      return false;
    } }]), t2;
  })();
  t.InternalSlotDescriptor = v;
  var y = (function(e2) {
    function t2(e3, r2, n2) {
      var o2;
      return u(this, t2), (o2 = i(this, a(t2).call(this))).joinCondition = e3, o2.descriptor1 = r2, o2.descriptor2 = n2, o2;
    }
    return o(t2, d), c(t2, [{ key: "mightHaveBeenDeleted", value: function() {
      return !(this.descriptor1 && !this.descriptor1.mightHaveBeenDeleted()) || !(this.descriptor2 && !this.descriptor2.mightHaveBeenDeleted());
    } }]), t2;
  })();
  t.AbstractJoinedDescriptor = y;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2, r2) {
    return (n = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = o(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function i(e2) {
    return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function a(e2, t2) {
    return !t2 || "object" !== i(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && u(e2, t2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function l(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function c(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function f(e2, t2, r2) {
    return t2 && c(e2.prototype, t2), r2 && c(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.JoinedNormalAndAbruptCompletions = t.JoinedAbruptCompletions = t.ReturnCompletion = t.BreakCompletion = t.ContinueCompletion = t.ThrowCompletion = t.AbruptCompletion = t.SimpleNormalCompletion = t.NormalCompletion = t.Completion = void 0;
  var p = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), d = (r(35), r(0));
  var h = (function() {
    function e2(t2, r2, n2) {
      l(this, e2), this.value = t2, this.target = n2, this.location = r2, (0, p.default)(this.constructor !== e2, "Completion is an abstract base class");
    }
    return f(e2, [{ key: "containsSelectedCompletion", value: function(e3) {
      return e3(this);
    } }, { key: "shallowClone", value: function() {
      (0, p.default)(false, "abstract base method");
    } }, { key: "toDisplayString", value: function() {
      return "[" + this.constructor.name + " value " + (this.value ? this.value.toDisplayString() : "undefined") + "]";
    } }], [{ key: "makeAllNormalCompletionsResultInUndefined", value: function(t2) {
      var r2 = t2.value.$Realm.intrinsics.undefined;
      t2 instanceof y ? t2.value = r2 : t2 instanceof T && (void 0 !== t2.composedWith && e2.makeAllNormalCompletionsResultInUndefined(t2.composedWith), e2.makeAllNormalCompletionsResultInUndefined(t2.consequent), e2.makeAllNormalCompletionsResultInUndefined(t2.alternate));
    } }, { key: "makeSelectedCompletionsInfeasible", value: function(t2, r2) {
      var n2 = r2.value.$Realm.intrinsics.__bottomValue;
      t2(r2) ? r2.value = n2 : (r2 instanceof T || r2 instanceof S) && (r2 instanceof T && void 0 !== r2.composedWith && e2.makeSelectedCompletionsInfeasible(t2, r2.composedWith), e2.makeSelectedCompletionsInfeasible(t2, r2.consequent), e2.makeSelectedCompletionsInfeasible(t2, r2.alternate));
    } }, { key: "makeSelectedCompletionsInfeasibleInCopy", value: function(t2, r2) {
      var n2 = r2.value.$Realm.intrinsics.__bottomValue, i2 = r2.shallowClone();
      if (t2(i2)) i2.value = n2;
      else if (i2 instanceof T || i2 instanceof S) {
        if (i2.consequent = e2.makeSelectedCompletionsInfeasibleInCopy(t2, i2.consequent), i2.alternate = e2.makeSelectedCompletionsInfeasibleInCopy(t2, i2.alternate), i2.consequent.value === n2) return i2.alternate;
        if (i2.alternate.value === n2) return i2.consequent;
      }
      return i2;
    } }, { key: "normalizeSelectedCompletions", value: function(t2, r2) {
      if (t2(r2)) return new y(r2.value);
      var n2;
      if (r2 instanceof T && ((0, p.default)(void 0 === r2.savedEffects), void 0 !== r2.composedWith && (n2 = e2.normalizeSelectedCompletions(t2, r2.composedWith))), r2 instanceof T || r2 instanceof S) {
        var i2 = e2.normalizeSelectedCompletions(t2, r2.consequent), a2 = e2.normalizeSelectedCompletions(t2, r2.alternate);
        if (void 0 === n2) return i2 === r2.consequent && a2 === r2.alternate ? r2 : i2 instanceof m && a2 instanceof m ? r2 : i2 instanceof y && a2 instanceof y ? new y(d.AbstractValue.createFromConditionalOp(r2.value.$Realm, r2.joinCondition, i2.value, a2.value)) : ((0, p.default)(i2 instanceof m || i2 instanceof v), (0, p.default)(a2 instanceof m || a2 instanceof v), new T(r2.joinCondition, i2, a2));
        (0, p.default)(i2 instanceof m || i2 instanceof v), (0, p.default)(a2 instanceof m || a2 instanceof v);
        var o2 = new T(r2.joinCondition, i2, a2);
        return n2 instanceof T && (o2.composedWith = n2), o2;
      }
      return r2;
    } }]), e2;
  })();
  t.Completion = h;
  var v = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return l(this, t2), i2 = a(this, o(t2).call(this, e3, r2, n2)), (0, p.default)(i2.constructor !== t2, "NormalCompletion is an abstract base class"), i2;
    }
    return s(t2, h), t2;
  })();
  t.NormalCompletion = v;
  var y = (function(e2) {
    function t2() {
      return l(this, t2), a(this, o(t2).apply(this, arguments));
    }
    return s(t2, v), f(t2, [{ key: "shallowClone", value: function() {
      return new t2(this.value, this.location, this.target);
    } }]), t2;
  })();
  t.SimpleNormalCompletion = y;
  var m = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return l(this, t2), i2 = a(this, o(t2).call(this, e3, r2, n2)), (0, p.default)(i2.constructor !== t2, "AbruptCompletion is an abstract base class"), i2;
    }
    return s(t2, h), t2;
  })();
  t.AbruptCompletion = m;
  var b = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
      return l(this, t2), (i2 = a(this, o(t2).call(this, e3, r2))).nativeStack = n2 || new Error().stack, i2;
    }
    return s(t2, m), f(t2, [{ key: "shallowClone", value: function() {
      return new t2(this.value, this.location, this.nativeStack, false);
    } }]), t2;
  })();
  t.ThrowCompletion = b;
  var g = (function(e2) {
    function t2(e3, r2, n2) {
      return l(this, t2), a(this, o(t2).call(this, e3, r2, n2 || null));
    }
    return s(t2, m), f(t2, [{ key: "shallowClone", value: function() {
      return new t2(this.value, this.location, this.target);
    } }]), t2;
  })();
  t.ContinueCompletion = g;
  var w = (function(e2) {
    function t2(e3, r2, n2) {
      return l(this, t2), a(this, o(t2).call(this, e3, r2, n2 || null));
    }
    return s(t2, m), f(t2, [{ key: "shallowClone", value: function() {
      return new t2(this.value, this.location, this.target);
    } }]), t2;
  })();
  t.BreakCompletion = w;
  var E = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return l(this, t2), n2 = a(this, o(t2).call(this, e3, r2)), e3 instanceof d.EmptyValue && (n2.value = e3.$Realm.intrinsics.undefined), n2;
    }
    return s(t2, m), f(t2, [{ key: "shallowClone", value: function() {
      return new t2(this.value, this.location);
    } }]), t2;
  })();
  t.ReturnCompletion = E;
  var S = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return l(this, t2), (i2 = a(this, o(t2).call(this, e3.$Realm.intrinsics.empty, r2.location))).joinCondition = e3, i2.consequent = r2, i2.alternate = n2, i2;
    }
    return s(t2, m), f(t2, [{ key: "containsSelectedCompletion", value: function(e3) {
      return !!e3(this.consequent) || (!!e3(this.alternate) || (!!(this.consequent instanceof t2 && this.consequent.containsSelectedCompletion(e3)) || !!(this.alternate instanceof t2 && this.alternate.containsSelectedCompletion(e3))));
    } }, { key: "shallowClone", value: function() {
      return new t2(this.joinCondition, this.consequent, this.alternate);
    } }, { key: "toDisplayString", value: function() {
      return n(o(t2.prototype), "toDisplayString", this).call(this).slice(0, -1) + " c: [" + this.consequent.toDisplayString() + "] a: [" + this.alternate.toDisplayString() + "]]";
    } }]), t2;
  })();
  t.JoinedAbruptCompletions = S;
  var T = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return l(this, t2), (i2 = a(this, o(t2).call(this, r2 instanceof v ? r2.value : n2.value, r2.location))).joinCondition = e3, i2.consequent = r2, i2.alternate = n2, i2.pathConditionsAtCreation = e3.$Realm.pathConditions, i2;
    }
    return s(t2, v), f(t2, [{ key: "containsSelectedCompletion", value: function(e3) {
      return !(void 0 === this.composedWith || !this.composedWith.containsSelectedCompletion(e3)) || (!!e3(this.consequent) || (!!e3(this.alternate) || (!(!(this.consequent instanceof S || this.consequent instanceof t2) || !this.consequent.containsSelectedCompletion(e3)) || !(!(this.alternate instanceof S || this.alternate instanceof t2) || !this.alternate.containsSelectedCompletion(e3)))));
    } }, { key: "shallowClone", value: function() {
      var e3 = new t2(this.joinCondition, this.consequent, this.alternate);
      return e3.composedWith = this.composedWith, e3.pathConditionsAtCreation = this.pathConditionsAtCreation, e3;
    } }, { key: "toDisplayString", value: function() {
      return n(o(t2.prototype), "toDisplayString", this).call(this).slice(0, -1) + " c: [" + this.consequent.toDisplayString() + "] a: [" + this.alternate.toDisplayString() + "]]";
    } }]), t2;
  })();
  t.JoinedNormalAndAbruptCompletions = T;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2, r2) {
    return t2 && a(e2.prototype, t2), r2 && a(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.construct_empty_effects = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new f.SimpleNormalCompletion(e2.intrinsics.empty);
    return new E(t2, new h.Generator(e2, "construct_empty_effects", e2.pathConditions), /* @__PURE__ */ new Map(), /* @__PURE__ */ new Map(), /* @__PURE__ */ new Set());
  }, t.Realm = t.ExecutionContext = t.Tracer = t.Effects = void 0;
  r(117);
  var s = r(4), u = r(0), l = (r(12), r(10)), c = r(3), f = r(7), p = b(r(1)), d = b(r(191)), h = r(9), v = r(44), y = r(2), m = r(6);
  function b(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function g(e2, t2, r2) {
    return t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2, e2;
  }
  var w = 0, E = (function() {
    function e2(t2, r2, n2, a2, o2) {
      i(this, e2), this.result = t2, this.generator = r2, this.modifiedBindings = n2, this.modifiedProperties = a2, this.createdObjects = o2, this.canBeApplied = true, this._id = w++;
    }
    return o(e2, [{ key: "shallowCloneWithResult", value: function(t2) {
      return new e2(t2, this.generator, this.modifiedBindings, this.modifiedProperties, this.createdObjects);
    } }, { key: "toDisplayString", value: function() {
      return y.Utils.jsonToDisplayString(this, 10);
    } }, { key: "toDisplayJson", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
      return e3 <= 0 ? "Effects ".concat(this._id) : y.Utils.verboseToDisplayJson(this, e3);
    } }]), e2;
  })();
  t.Effects = E;
  var S = (function() {
    function e2() {
      i(this, e2);
    }
    return o(e2, [{ key: "beginEvaluateForEffects", value: function(e3) {
    } }, { key: "endEvaluateForEffects", value: function(e3, t2) {
    } }, { key: "detourCall", value: function(e3, t2, r2, n2, i2) {
    } }, { key: "beforeCall", value: function(e3, t2, r2, n2) {
    } }, { key: "afterCall", value: function(e3, t2, r2, n2, i2) {
    } }, { key: "beginOptimizingFunction", value: function(e3, t2) {
    } }, { key: "endOptimizingFunction", value: function(e3) {
    } }]), e2;
  })();
  t.Tracer = S;
  var T = (function() {
    function e2() {
      i(this, e2);
    }
    return o(e2, [{ key: "setCaller", value: function(e3) {
      this.caller = e3;
    } }, { key: "setFunction", value: function(e3) {
      e3 instanceof u.ECMAScriptSourceFunctionValue && (this.isStrict = e3.$Strict), this.function = e3;
    } }, { key: "setLocation", value: function(e3) {
      e3 && (this.loc = e3);
    } }, { key: "setRealm", value: function(e3) {
      this.realm = e3;
    } }, { key: "setReadOnly", value: function(e3) {
      var t2 = this.isReadOnly;
      return this.variableEnvironment && (this.variableEnvironment.environmentRecord.isReadOnly = e3), this.lexicalEnvironment && (this.lexicalEnvironment.environmentRecord.isReadOnly = e3), this.isReadOnly = e3, t2;
    } }, { key: "suspend", value: function() {
    } }, { key: "resume", value: function() {
      return this.realm.intrinsics.undefined;
    } }]), e2;
  })();
  t.ExecutionContext = T;
  var A = (function() {
    function e2(t2, r2) {
      i(this, e2), g(this, "contextStack", []), g(this, "MOBILE_JSC_VERSION", "jsc-600-1-4-17"), g(this, "suppressDiagnostics", false), g(this, "objectCount", 0), g(this, "symbolCount", 867501803871088), g(this, "functionBodyUniqueTagSeed", 1), g(this, "nextGeneratorId", 0), this.statistics = r2, this.isReadOnly = false, this.useAbstractInterpretation = true === t2.serialize || Array.isArray(t2.check), this.ignoreLeakLogic = false, this.isInPureTryStatement = false, void 0 !== t2.mathRandomSeed && (this.mathRandomGenerator = (0, d.default)(t2.mathRandomSeed)), this.strictlyMonotonicDateNow = !!t2.strictlyMonotonicDateNow, this.abstractValueImpliesMax = void 0 !== t2.abstractValueImpliesMax ? t2.abstractValueImpliesMax : 0, this.abstractValueImpliesCounter = 0, this.inSimplificationPath = false, this.timeout = t2.timeout, void 0 !== this.timeout && (this.timeoutCounter = this.timeoutCounterThreshold = 1024), this.start = Date.now(), this.compatibility = void 0 !== t2.compatibility ? t2.compatibility : "browser", this.remainingCalls = t2.maxStackDepth || 112, this.invariantLevel = t2.invariantLevel || 0, this.invariantMode = t2.invariantMode || "throw", this.emitConcreteModel = !!t2.emitConcreteModel, this.$TemplateMap = [], this.pathConditions = (0, y.createPathConditions)(), this.useAbstractInterpretation && (this.preludeGenerator = new v.PreludeGenerator(t2.debugNames, t2.uniqueSuffix), u.ObjectValue.setupTrackedPropertyAccessors(u.ObjectValue.trackedPropertyNames), u.ObjectValue.setupTrackedPropertyAccessors(u.NativeFunctionValue.trackedPropertyNames), u.ObjectValue.setupTrackedPropertyAccessors(u.ProxyValue.trackedPropertyNames)), this.collectedNestedOptimizedFunctionEffects = /* @__PURE__ */ new Map(), this.tracers = [], this.intrinsics = {}, this.$GlobalObject = {}, this.evaluators = /* @__PURE__ */ Object.create(null), this.$GlobalEnv = void 0, this.derivedIds = /* @__PURE__ */ new Map(), this.temporalEntryArgToEntries = /* @__PURE__ */ new Map(), this.temporalEntryCounter = 0, this.instantRender = { enabled: t2.instantRender || false }, this.react = { abstractHints: /* @__PURE__ */ new WeakMap(), activeReconciler: void 0, classComponentMetadata: /* @__PURE__ */ new Map(), currentOwner: void 0, defaultPropsHelper: void 0, emptyArray: void 0, emptyObject: void 0, enabled: t2.reactEnabled || false, failOnUnsupportedSideEffects: false !== t2.reactFailOnUnsupportedSideEffects, hoistableFunctions: /* @__PURE__ */ new WeakMap(), hoistableReactElements: /* @__PURE__ */ new WeakMap(), noopFunction: void 0, optimizeNestedFunctions: t2.reactOptimizeNestedFunctions || false, output: t2.reactOutput || "create-element", propsWithNoPartialKeyOrRef: /* @__PURE__ */ new WeakSet(), reactElements: /* @__PURE__ */ new WeakMap(), reactElementStringTypeReferences: /* @__PURE__ */ new Map(), reactProps: /* @__PURE__ */ new WeakSet(), symbols: /* @__PURE__ */ new Map(), usedReactElementKeys: /* @__PURE__ */ new Set(), verbose: t2.reactVerbose || false }, this.reportSideEffectCallbacks = /* @__PURE__ */ new Set(), this.alreadyDescribedLocations = /* @__PURE__ */ new WeakMap(), this.stripFlow = t2.stripFlow || false, this.fbLibraries = { other: /* @__PURE__ */ new Map(), react: void 0, reactDom: void 0, reactDomServer: void 0, reactNative: void 0, reactRelay: void 0 }, this.errorHandler = t2.errorHandler, this.globalSymbolRegistry = [], this.activeLexicalEnvironments = /* @__PURE__ */ new Set(), this._abstractValuesDefined = /* @__PURE__ */ new Set(), this.debugNames = t2.debugNames, this._checkedObjectIds = /* @__PURE__ */ new Map(), this.optimizedFunctions = /* @__PURE__ */ new Map(), this.arrayNestedOptimizedFunctionsEnabled = t2.arrayNestedOptimizedFunctionsEnabled || t2.instantRender || false;
    }
    return o(e2, [{ key: "isCompatibleWith", value: function(e3) {
      return e3 === this.compatibility;
    } }, { key: "getGlobalLetBinding", value: function(e3) {
      var t2 = this.$GlobalEnv.environmentRecord;
      (0, p.default)(t2 instanceof l.GlobalEnvironmentRecord);
      var r2 = t2.$DeclarativeRecord;
      try {
        return r2.HasBinding(e3) ? r2.GetBindingValue(e3, false) : void 0;
      } catch (e4) {
        if (e4 instanceof s.FatalError) return;
        throw e4;
      }
    } }, { key: "setReadOnly", value: function(e3) {
      var t2 = this.isReadOnly;
      return this.isReadOnly = e3, this.$GlobalEnv.environmentRecord.isReadOnly = e3, this.contextStack.forEach(function(t3) {
        t3.setReadOnly(e3);
      }), t2;
    } }, { key: "testTimeout", value: function() {
      var e3 = this.timeout;
      if (void 0 !== e3 && !--this.timeoutCounter && (this.timeoutCounter = this.timeoutCounterThreshold, Date.now() - this.start > e3)) {
        var t2 = new s.CompilerDiagnostic("total time has exceeded the timeout time: ".concat(e3), this.currentLocation, "PP0036", "FatalError");
        throw this.handleError(t2), new s.FatalError("Timed out");
      }
    } }, { key: "hasRunningContext", value: function() {
      return 0 !== this.contextStack.length;
    } }, { key: "getRunningContext", value: function() {
      var e3 = this.contextStack[this.contextStack.length - 1];
      return (0, p.default)(e3, "There's no running execution context"), e3;
    } }, { key: "clearBlockBindings", value: function(e3, t2) {
      if (void 0 !== e3) {
        var r2 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = e3.keys()[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            s2.mightHaveBeenCaptured || t2.bindings[s2.name] && t2.bindings[s2.name] === s2 && e3.delete(s2);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r2 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
      }
    } }, { key: "onDestroyScope", value: function(e3) {
      (0, p.default)(this.activeLexicalEnvironments.has(e3));
      var t2 = this.modifiedBindings;
      if (t2) {
        var r2 = e3.environmentRecord;
        r2 instanceof l.DeclarativeEnvironmentRecord && this.clearBlockBindings(t2, r2);
      }
      this.activeLexicalEnvironments.delete(e3), e3.destroy();
    } }, { key: "startCall", value: function() {
      if (0 === this.remainingCalls) {
        var e3 = new s.CompilerDiagnostic("Maximum stack depth exceeded", this.currentLocation, "PP0045", "FatalError");
        throw this.handleError(e3), new s.FatalError();
      }
      this.remainingCalls--;
    } }, { key: "endCall", value: function() {
      this.remainingCalls++;
    } }, { key: "pushContext", value: function(e3) {
      this.contextStack.push(e3);
    } }, { key: "markVisibleLocalBindingsAsPotentiallyCaptured", value: function() {
      var e3 = this.getRunningContext();
      if (void 0 !== e3.function) for (var t2 = e3.lexicalEnvironment; null != t2; ) {
        var r2 = t2.environmentRecord;
        if (r2 instanceof l.DeclarativeEnvironmentRecord) {
          var n2 = r2.bindings;
          for (var i2 in n2) {
            n2[i2].mightHaveBeenCaptured = true;
          }
        }
        t2 = t2.parent;
      }
    } }, { key: "clearFunctionBindings", value: function(e3, t2) {
      if (void 0 !== e3) {
        var r2 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = e3.keys()[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            s2.mightHaveBeenCaptured || s2.environment instanceof l.FunctionEnvironmentRecord && s2.environment.$FunctionObject === t2 && e3.delete(s2);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r2 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
      }
    } }, { key: "popContext", value: function(e3) {
      var t2 = e3.function;
      t2 && this.clearFunctionBindings(this.modifiedBindings, t2);
      var r2 = this.contextStack.pop();
      (0, p.default)(r2 === e3);
    } }, { key: "wrapInGlobalEnv", value: function(e3) {
      var t2 = new T();
      t2.isStrict = this.isStrict, t2.lexicalEnvironment = this.$GlobalEnv, t2.variableEnvironment = this.$GlobalEnv, t2.realm = this, this.pushContext(t2);
      try {
        return e3();
      } finally {
        this.popContext(t2);
      }
    } }, { key: "assignToGlobal", value: function(e3, t2) {
      var r2 = this;
      this.wrapInGlobalEnv(function() {
        return r2.$GlobalEnv.assignToGlobal(e3, t2);
      });
    } }, { key: "deleteGlobalBinding", value: function(e3) {
      this.$GlobalEnv.environmentRecord.DeleteBinding(e3);
    } }, { key: "neverCheckProperty", value: function(e3, t2) {
      return t2.startsWith("__") || e3 === this.$GlobalObject && "global" === t2 || void 0 !== e3.intrinsicName && e3.intrinsicName.startsWith("__");
    } }, { key: "_getCheckedBindings", value: function() {
      var e3 = this.$GlobalObject;
      (0, p.default)(e3 instanceof u.ObjectValue);
      var t2 = e3.properties.get("__checkedBindings");
      (0, p.default)(void 0 !== t2);
      var r2 = t2.descriptor && t2.descriptor.throwIfNotConcrete(this).value;
      return (0, p.default)(r2 instanceof u.ObjectValue), r2;
    } }, { key: "markPropertyAsChecked", value: function(e3, t2) {
      (0, p.default)(!this.neverCheckProperty(e3, t2));
      var r2 = this._checkedObjectIds.get(e3);
      void 0 === r2 && this._checkedObjectIds.set(e3, r2 = this._checkedObjectIds.size);
      var n2 = "__propertyHasBeenChecked__".concat(r2, ":").concat(t2), i2 = this._getCheckedBindings();
      i2.$Set(n2, this.intrinsics.true, i2);
    } }, { key: "hasBindingBeenChecked", value: function(e3, t2) {
      if (this.neverCheckProperty(e3, t2)) return true;
      var r2 = this._checkedObjectIds.get(e3);
      if (void 0 === r2) return false;
      var n2 = "__propertyHasBeenChecked__".concat(r2, ":").concat(t2), i2 = this._getCheckedBindings().properties.get(n2);
      if (void 0 === i2) return false;
      var a2 = i2.descriptor && i2.descriptor.throwIfNotConcrete(this).value;
      return a2 instanceof u.Value && !a2.mightNotBeTrue();
    } }, { key: "evaluatePure", value: function(e3, t2, r2) {
      var n2, i2 = this.createdObjectsTrackedForLeaks;
      this.createdObjectsTrackedForLeaks = /* @__PURE__ */ new Set(), null !== r2 && (t2 || (n2 = this.reportSideEffectCallbacks, this.reportSideEffectCallbacks = /* @__PURE__ */ new Set()), this.reportSideEffectCallbacks.add(r2));
      try {
        return e3();
      } finally {
        this.createdObjectsTrackedForLeaks = i2, null !== r2 && (t2 || void 0 === n2 || (this.reportSideEffectCallbacks = n2), this.reportSideEffectCallbacks.delete(r2));
      }
    } }, { key: "isInPureScope", value: function() {
      return !!this.createdObjectsTrackedForLeaks;
    } }, { key: "evaluateWithoutLeakLogic", value: function(e3) {
      (0, p.default)(!this.ignoreLeakLogic, "Nesting evaluateWithoutLeakLogic() calls is not supported."), this.ignoreLeakLogic = true;
      try {
        return e3();
      } finally {
        this.ignoreLeakLogic = false;
      }
    } }, { key: "evaluateWithPossibleThrowCompletion", value: function(e3, t2, r2) {
      (0, p.default)(this.isInPureScope(), "only abstract abrupt completion in pure functions");
      var n2 = e3();
      if (this.isInPureTryStatement) {
        var i2 = new s.CompilerDiagnostic("Possible throw inside try/catch is not yet supported", this.currentLocation, "PP0021", "RecoverableError");
        if ("Recover" !== this.handleError(i2)) throw new s.FatalError();
      }
      return n2;
    } }, { key: "evaluateNodeForEffects", value: function(e3, t2, r2, n2) {
      var i2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "evaluateNodeForEffects";
      return this.evaluateForEffects(function() {
        return r2.evaluateCompletionDeref(e3, t2);
      }, n2, i2);
    } }, { key: "evaluateForEffectsInGlobalEnv", value: function(e3, t2) {
      var r2 = this, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "evaluateForEffectsInGlobalEnv";
      return this.wrapInGlobalEnv(function() {
        return r2.evaluateForEffects(e3, t2, n2);
      });
    } }, { key: "withEffectsAppliedInGlobalEnv", value: function(e3, t2) {
      var r2, n2 = this;
      return this.evaluateForEffectsInGlobalEnv(function() {
        try {
          return n2.applyEffects(t2, "", false), r2 = e3(t2), n2.intrinsics.undefined;
        } finally {
          n2.restoreBindings(t2.modifiedBindings), n2.restoreProperties(t2.modifiedProperties), (0, p.default)(!t2.canBeApplied), t2.canBeApplied = true;
        }
      }), (0, p.default)(void 0 !== r2, "If we get here, func must have returned undefined."), r2;
    } }, { key: "evaluateNodeForEffectsInGlobalEnv", value: function(e3, t2, r2) {
      var n2 = this;
      return this.wrapInGlobalEnv(function() {
        return n2.evaluateNodeForEffects(e3, false, n2.$GlobalEnv, t2, r2);
      });
    } }, { key: "evaluateWithoutEffects", value: function(e3) {
      var t2 = this.generator, r2 = this.modifiedBindings, n2 = this.modifiedProperties, i2 = this.createdObjects, a2 = this.savedCompletion;
      try {
        return this.generator = new h.Generator(this, "evaluateIgnoringEffects", this.pathConditions), this.modifiedBindings = void 0, this.modifiedProperties = void 0, this.createdObjects = void 0, this.savedCompletion = void 0, e3();
      } finally {
        this.generator = t2, this.modifiedBindings = r2, this.modifiedProperties = n2, this.createdObjects = i2, this.savedCompletion = a2;
      }
    } }, { key: "evaluateForEffects", value: function(e3, t2, r2) {
      var i2, a2 = n(this.getAndResetModifiedMaps(), 2), o2 = a2[0], s2 = a2[1], c2 = this.generator, d2 = this.createdObjects, v2 = this.savedCompletion;
      this.generator = new h.Generator(this, r2, this.pathConditions), this.createdObjects = /* @__PURE__ */ new Set(), this.savedCompletion = void 0;
      try {
        var m2, b2 = true, g2 = false, w2 = void 0;
        try {
          for (var S2, T2 = this.tracers[Symbol.iterator](); !(b2 = (S2 = T2.next()).done); b2 = true) {
            S2.value.beginEvaluateForEffects(t2);
          }
        } catch (e4) {
          g2 = true, w2 = e4;
        } finally {
          try {
            b2 || null == T2.return || T2.return();
          } finally {
            if (g2) throw w2;
          }
        }
        try {
          try {
            (m2 = e3()) instanceof l.Reference ? m2 = y.Environment.GetValue(this, m2) : m2 instanceof f.SimpleNormalCompletion && (m2 = m2.value);
          } catch (e4) {
            if (!(e4 instanceof f.AbruptCompletion)) throw e4;
            m2 = e4;
          }
          m2 = y.Functions.incorporateSavedCompletion(this, m2), (0, p.default)(void 0 !== m2), (0, p.default)(void 0 !== this.generator), (0, p.default)(void 0 !== this.modifiedBindings), (0, p.default)(void 0 !== this.modifiedProperties), (0, p.default)(void 0 !== this.createdObjects);
          var A2 = this.generator, C = this.modifiedBindings, P = this.modifiedProperties, O = this.createdObjects;
          return m2 instanceof u.Value && (m2 = new f.SimpleNormalCompletion(m2)), i2 = new E(m2, A2, C, P, O);
        } finally {
          if (void 0 !== i2) this.restoreBindings(i2.modifiedBindings), this.restoreProperties(i2.modifiedProperties);
          else {
            this.restoreBindings(this.modifiedBindings), this.restoreProperties(this.modifiedProperties);
            for (var x = this.savedCompletion; void 0 !== x; ) {
              var _ = x.savedEffects;
              void 0 !== _ && (this.restoreBindings(_.modifiedBindings), this.restoreProperties(_.modifiedProperties)), x = x.composedWith;
            }
          }
          this.generator = c2, this.modifiedBindings = o2, this.modifiedProperties = s2, this.createdObjects = d2, this.savedCompletion = v2;
        }
      } finally {
        var V = true, D = false, N = void 0;
        try {
          for (var I, k = this.tracers[Symbol.iterator](); !(V = (I = k.next()).done); V = true) {
            I.value.endEvaluateForEffects(t2, i2);
          }
        } catch (e4) {
          D = true, N = e4;
        } finally {
          try {
            V || null == k.return || k.return();
          } finally {
            if (D) throw N;
          }
        }
      }
    } }, { key: "evaluateWithUndo", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.intrinsics.undefined;
      if (!this.useAbstractInterpretation) return e3();
      var r2 = this.errorHandler;
      this.errorHandler = function(e4) {
        return "Information" === e4.severity || "Warning" === e4.severity ? "Recover" : "Fail";
      };
      try {
        var n2 = this.evaluateForEffects(function() {
          try {
            return e3();
          } catch (e4) {
            if (e4 instanceof f.Completion) return t2;
            if (e4 instanceof s.FatalError) return t2;
            throw e4;
          }
        }, void 0, "evaluateWithUndo");
        return n2.result instanceof f.SimpleNormalCompletion ? n2.result.value : t2;
      } finally {
        this.errorHandler = r2;
      }
    } }, { key: "evaluateWithUndoForDiagnostic", value: function(e3) {
      if (!this.useAbstractInterpretation) return e3();
      var t2, r2 = this.errorHandler;
      try {
        this.errorHandler = function(e4) {
          return t2 = e4, "Fail";
        };
        var n2 = this.evaluateForEffects(e3, void 0, "evaluateWithUndoForDiagnostic");
        this.applyEffects(n2);
        var i2 = n2.result;
        if (i2 instanceof f.AbruptCompletion) throw i2;
        return i2.value;
      } catch (e4) {
        if (void 0 !== t2) return t2;
        throw e4;
      } finally {
        this.errorHandler = r2;
      }
    } }, { key: "evaluateForFixpointEffects", value: function(e3) {
      try {
        for (var t2, r2 = function() {
          var r3, i3 = n(e3(), 2);
          if (t2 = i3[0], r3 = i3[1], !(t2 instanceof u.AbstractValue)) throw new s.FatalError("loop terminates before fixed point");
          return (0, p.default)(r3 instanceof f.Completion), r3;
        }, i2 = this.evaluateForEffects(r2, void 0, "evaluateForFixpointEffects/1"); ; ) {
          this.restoreBindings(i2.modifiedBindings), this.restoreProperties(i2.modifiedProperties);
          var a2 = this.evaluateForEffects(r2, void 0, "evaluateForFixpointEffects/2");
          if (this.restoreBindings(i2.modifiedBindings), this.restoreProperties(i2.modifiedProperties), y.Widen.containsEffects(i2, a2)) {
            var o2 = a2;
            return this._applyPropertiesToNewlyCreatedObjects(o2.modifiedProperties, o2.createdObjects), this._emitPropertyAssignments(o2.generator, o2.modifiedProperties, o2.createdObjects), this._emitLocalAssignments(o2.generator, o2.modifiedBindings, o2.createdObjects), (0, p.default)(t2 instanceof u.AbstractValue), [i2, a2, o2.generator.deriveAbstract(t2.types, t2.values, [t2], (0, h.createOperationDescriptor)("SINGLE_ARG"), { skipInvariant: true })];
          }
          i2 = y.Widen.widenEffects(this, i2, a2);
        }
      } catch (e4) {
        if (e4 instanceof s.FatalError) return;
        throw e4;
      }
    } }, { key: "evaluateWithAbstractConditional", value: function(e3, t2, r2) {
      var n2;
      if (y.Path.implies(e3)) n2 = t2();
      else if (y.Path.impliesNot(e3)) n2 = r2();
      else {
        var i2, a2;
        try {
          i2 = y.Path.withCondition(e3, t2);
        } catch (e4) {
          if (!(e4 instanceof s.InfeasiblePathError)) throw e4;
        }
        try {
          a2 = y.Path.withInverseCondition(e3, r2);
        } catch (e4) {
          if (!(e4 instanceof s.InfeasiblePathError)) throw e4;
        }
        if (void 0 === i2 || void 0 === a2) {
          if (void 0 === i2 && void 0 === a2) throw new s.InfeasiblePathError();
          n2 = i2 || a2, (0, p.default)(void 0 !== n2);
        } else n2 = y.Join.joinEffects(e3, i2, a2);
      }
      return this.applyEffects(n2), e3.$Realm.returnOrThrowCompletion(n2.result);
    } }, { key: "_applyPropertiesToNewlyCreatedObjects", value: function(e3, t2) {
      void 0 !== e3 && e3.forEach(function(e4, r2, n2) {
        t2.has(r2.object) && (r2.descriptor = e4);
      });
    } }, { key: "_emitLocalAssignments", value: function(e3, t2, r2) {
      var n2 = /* @__PURE__ */ new Map();
      t2.forEach(function(t3, r3, i2) {
        var a2 = t3.value;
        if (a2 instanceof u.AbstractValue) {
          (0, p.default)(void 0 !== a2.operationDescriptor);
          var o2 = e3.deriveAbstract(a2.types, a2.values, [a2], (0, h.createOperationDescriptor)("SINGLE_ARG"));
          n2.set(r3, o2);
        }
      }), t2.forEach(function(t3, i2, a2) {
        var o2 = t3.value;
        if (o2 instanceof u.AbstractValue) {
          var s2 = i2.phiNode, l2 = n2.get(i2);
          (0, p.default)(void 0 !== l2), e3.emitStatement([l2], (0, h.createOperationDescriptor)("LOCAL_ASSIGNMENT", { value: s2 }));
        }
        if (o2 instanceof u.ObjectValue && r2.has(o2)) {
          var c2 = i2.phiNode;
          e3.emitStatement([o2], (0, h.createOperationDescriptor)("LOCAL_ASSIGNMENT", { value: c2 }));
        }
      });
    } }, { key: "_emitPropertyAssignments", value: function(e3, t2, r2) {
      var n2 = this, i2 = /* @__PURE__ */ new Map();
      t2.forEach(function(t3, a2, o2) {
        if (!r2.has(a2.object) && !a2.object.refuseSerialization) {
          var s2 = t3 && t3.throwIfNotConcrete(n2).value;
          if (s2 instanceof u.AbstractValue) {
            (0, p.default)(void 0 !== s2.operationDescriptor);
            var l2 = e3.deriveAbstract(s2.types, s2.values, [a2.object, s2], (0, h.createOperationDescriptor)("LOGICAL_PROPERTY_ASSIGNMENT", { propertyBinding: a2, value: s2 }), { skipInvariant: true });
            i2.set(a2, l2);
          }
        }
      }), t2.forEach(function(t3, a2, o2) {
        if (!r2.has(a2.object) && !a2.object.refuseSerialization) {
          var s2 = a2.pathNode, l2 = i2.get(a2);
          (0, p.default)(void 0 !== t3);
          var c2 = t3.throwIfNotConcrete(n2).value;
          (0, p.default)(c2 instanceof u.Value);
          var f2 = a2.key;
          "string" == typeof f2 ? void 0 !== s2 && e3.emitStatement([a2.object, l2 || c2, n2.intrinsics.empty, new u.StringValue(n2, f2)], (0, h.createOperationDescriptor)("CONDITIONAL_PROPERTY_ASSIGNMENT", { path: s2, value: c2 })) : ((0, p.default)(f2 instanceof u.Value), e3.emitStatement([a2.object, f2, l2 || c2, n2.intrinsics.empty], (0, h.createOperationDescriptor)("PROPERTY_ASSIGNMENT", { path: s2 })));
        }
      });
    } }, { key: "returnOrThrowCompletion", value: function(e3) {
      if (e3 instanceof u.Value && (e3 = new f.SimpleNormalCompletion(e3)), e3 instanceof f.AbruptCompletion) {
        var t2 = y.Functions.incorporateSavedCompletion(this, e3);
        (0, p.default)(t2 instanceof f.Completion), e3 = t2;
      }
      var r2 = this.composeWithSavedCompletion(e3);
      if (r2 instanceof f.AbruptCompletion) throw r2;
      return r2.value;
    } }, { key: "composeWithSavedCompletion", value: function(e3) {
      if (void 0 === this.savedCompletion) return e3 instanceof f.JoinedNormalAndAbruptCompletions && (this.savedCompletion = e3, this.pushPathConditionsLeadingToNormalCompletions(e3), this.captureEffects(e3)), e3;
      var t2 = y.Join.composeCompletions(this.savedCompletion, e3);
      return t2 instanceof f.JoinedNormalAndAbruptCompletions ? (this.savedCompletion = t2, this.pushPathConditionsLeadingToNormalCompletions(e3), void 0 === t2.savedEffects && this.captureEffects(t2)) : this.savedCompletion = void 0, t2;
    } }, { key: "pushPathConditionsLeadingToNormalCompletions", value: function(e3) {
      var t2 = this, r2 = t2.intrinsics.__bottomValue;
      if (e3 instanceof f.JoinedNormalAndAbruptCompletions && void 0 !== e3.composedWith && this.pushPathConditionsLeadingToNormalCompletions(e3.composedWith), e3 instanceof f.JoinedAbruptCompletions || e3 instanceof f.JoinedNormalAndAbruptCompletions) {
        var n2 = e3.joinCondition;
        if (e3.consequent.value === r2 || m2(f.AbruptCompletion, e3.consequent)) {
          if (e3.alternate.value === r2 || m2(f.AbruptCompletion, e3.alternate)) return;
          y.Path.pushInverseAndRefine(e3.joinCondition), this.pushPathConditionsLeadingToNormalCompletions(e3.alternate);
        } else if (e3.alternate.value === r2 || m2(f.AbruptCompletion, e3.alternate)) {
          if (e3.consequent.value === r2) return;
          y.Path.pushAndRefine(e3.joinCondition), this.pushPathConditionsLeadingToNormalCompletions(e3.consequent);
        } else if (m2(f.NormalCompletion, e3.consequent)) {
          if (!m2(f.NormalCompletion, e3.alternate)) {
            var i2 = b2(e3.alternate), a2 = u.AbstractValue.createFromLogicalOp(t2, "||", n2, i2, void 0, true, true);
            y.Path.pushAndRefine(a2);
          }
        } else if (m2(f.NormalCompletion, e3.alternate)) {
          var o2 = b2(e3.consequent), s2 = u.AbstractValue.createFromUnaryOp(t2, "!", n2, true, void 0, true, true), l2 = u.AbstractValue.createFromLogicalOp(t2, "||", s2, o2, void 0, true, true);
          y.Path.pushAndRefine(l2);
        } else {
          var c2 = u.AbstractValue.createFromLogicalOp(t2, "&&", n2, b2(e3.consequent), void 0, true, true), d2 = u.AbstractValue.createFromUnaryOp(t2, "!", n2, true, void 0, true, true), h2 = u.AbstractValue.createFromLogicalOp(t2, "&&", d2, b2(e3.alternate), void 0, true, true), v2 = u.AbstractValue.createFromLogicalOp(t2, "||", c2, h2, void 0, true, true);
          y.Path.pushAndRefine(v2);
        }
      }
      return;
      function m2(e4, t3) {
        return t3 instanceof f.JoinedNormalAndAbruptCompletions ? !(void 0 !== t3.composedWith && !m2(e4, t3.composedWith)) && (m2(e4, t3.consequent) && m2(e4, t3.alternate)) : t3 instanceof f.JoinedAbruptCompletions ? m2(e4, t3.consequent) && m2(e4, t3.alternate) : t3 instanceof e4;
      }
      function b2(e4) {
        var n3, i3;
        if (e4 instanceof f.JoinedNormalAndAbruptCompletions && void 0 !== e4.composedWith && (n3 = b2(e4.composedWith)), !(e4 instanceof f.JoinedAbruptCompletions || e4 instanceof f.JoinedNormalAndAbruptCompletions)) return e4 instanceof f.AbruptCompletion ? t2.intrinsics.false : t2.intrinsics.true;
        if (e4.consequent.value === r2 || m2(f.AbruptCompletion, e4.consequent)) {
          if (!m2(f.AbruptCompletion, e4.alternate)) {
            var a3 = u.AbstractValue.createFromUnaryOp(t2, "!", e4.joinCondition, true, void 0, true, true);
            i3 = m2(f.NormalCompletion, e4.alternate) ? a3 : u.AbstractValue.createFromLogicalOp(t2, "&&", a3, b2(e4.alternate), void 0, true, true);
          }
        } else if (e4.alternate.value === r2 || m2(f.AbruptCompletion, e4.alternate)) {
          if (!m2(f.AbruptCompletion, e4.consequent)) if (m2(f.NormalCompletion, e4.consequent)) i3 = e4.joinCondition;
          else {
            var o3 = e4.joinCondition;
            i3 = u.AbstractValue.createFromLogicalOp(t2, "&&", o3, b2(e4.consequent), void 0, true, true);
          }
        } else {
          var s3 = e4.joinCondition, l3 = u.AbstractValue.createFromLogicalOp(t2, "&&", s3, b2(e4.consequent), void 0, true, true), c3 = u.AbstractValue.createFromUnaryOp(t2, "!", s3, true, void 0, true, true), d3 = u.AbstractValue.createFromLogicalOp(t2, "&&", c3, b2(e4.alternate), void 0, true, true);
          i3 = u.AbstractValue.createFromLogicalOp(t2, "||", l3, d3, void 0, true, true);
        }
        return void 0 === n3 && void 0 === i3 ? t2.intrinsics.false : void 0 === n3 ? ((0, p.default)(void 0 !== i3), i3) : void 0 === i3 ? n3 : u.AbstractValue.createFromLogicalOp(t2, "&&", n3, i3, void 0, true, true);
      }
    } }, { key: "captureEffects", value: function(e3) {
      (0, p.default)(void 0 === e3.savedEffects), e3.savedEffects = new E(new f.SimpleNormalCompletion(this.intrinsics.undefined), this.generator, this.modifiedBindings, this.modifiedProperties, this.createdObjects), this.generator = new h.Generator(this, "captured", this.pathConditions), this.modifiedBindings = /* @__PURE__ */ new Map(), this.modifiedProperties = /* @__PURE__ */ new Map(), this.createdObjects = /* @__PURE__ */ new Set();
    } }, { key: "getCapturedEffects", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.intrinsics.undefined;
      return (0, p.default)(void 0 !== this.generator), (0, p.default)(void 0 !== this.modifiedBindings), (0, p.default)(void 0 !== this.modifiedProperties), (0, p.default)(void 0 !== this.createdObjects), new E(e3 instanceof f.Completion ? e3 : new f.SimpleNormalCompletion(e3), this.generator, this.modifiedBindings, this.modifiedProperties, this.createdObjects);
    } }, { key: "stopEffectCaptureAndUndoEffects", value: function(e3) {
      if (this.restoreBindings(this.modifiedBindings), this.restoreProperties(this.modifiedProperties), void 0 !== e3.savedEffects) {
        var t2 = e3.savedEffects;
        e3.savedEffects = void 0, this.generator = t2.generator, this.modifiedBindings = t2.modifiedBindings, this.modifiedProperties = t2.modifiedProperties, this.createdObjects = t2.createdObjects;
      } else (0, p.default)(false);
    } }, { key: "applyEffects", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
      (0, p.default)(e3.canBeApplied, "Effects have been applied and not properly reverted. It is not safe to apply them a second time."), e3.canBeApplied = false;
      var n2 = e3.generator, i2 = e3.modifiedBindings, a2 = e3.modifiedProperties, o2 = e3.createdObjects;
      r2 && this.appendGenerator(n2, t2), this.restoreBindings(i2), this.restoreProperties(a2);
      var s2 = this.modifiedBindings;
      void 0 !== s2 && i2.forEach(function(e4, t3, r3) {
        (0, p.default)(void 0 !== s2), s2.has(t3) || s2.set(t3, e4);
      });
      var u2 = this.modifiedProperties;
      if (void 0 !== u2 && a2.forEach(function(e4, t3, r3) {
        (0, p.default)(void 0 !== u2), u2.has(t3) || u2.set(t3, e4);
      }), o2.size > 0) {
        var l2 = this.createdObjects;
        void 0 === l2 ? this.createdObjects = new Set(o2) : o2.forEach(function(e4, t3) {
          (0, p.default)(void 0 !== l2), l2.add(e4);
        });
      }
    } }, { key: "outputToConsole", value: function(e3, t2) {
      if (this.isReadOnly) throw new s.FatalError("Trying to create console output in read-only realm");
      this.useAbstractInterpretation ? ((0, p.default)(void 0 !== this.generator), this.generator.emitConsoleLog(e3, t2)) : console[e3]((function(e4, t3) {
        var r2 = "";
        for (; t3.length; ) {
          var n2 = t3.shift(), i2 = y.To.ToString(e4, n2);
          r2 += i2;
        }
        return r2;
      })(this, t2));
    } }, { key: "recordModifiedBinding", value: function(e3, t2) {
      var r2 = this;
      if (void 0 !== this.modifiedBindings && !this.modifiedBindings.has(e3) && void 0 !== t2 && this.isInPureScope()) {
        var n2 = e3.environment;
        if (!(n2 instanceof l.DeclarativeEnvironmentRecord) || n2 instanceof l.DeclarativeEnvironmentRecord && !(function(e4) {
          for (var t3 = r2.getRunningContext().lexicalEnvironment; null !== t3; ) {
            if (t3.environmentRecord === e4) return !t3.destroyed;
            t3 = t3.parent;
          }
          return false;
        })(n2)) {
          var i2 = true, a2 = false, o2 = void 0;
          try {
            for (var u2, c2 = this.reportSideEffectCallbacks[Symbol.iterator](); !(i2 = (u2 = c2.next()).done); i2 = true) {
              (0, u2.value)("MODIFIED_BINDING", e3, t2.expressionLocation);
            }
          } catch (e4) {
            a2 = true, o2 = e4;
          } finally {
            try {
              i2 || null == c2.return || c2.return();
            } finally {
              if (a2) throw o2;
            }
          }
        }
      }
      if (e3.environment.isReadOnly) throw new s.FatalError("Trying to modify a binding in read-only realm");
      return void 0 === this.modifiedBindings || this.modifiedBindings.has(e3) || this.modifiedBindings.set(e3, { hasLeaked: e3.hasLeaked, value: e3.value }), e3;
    } }, { key: "callReportObjectGetOwnProperties", value: function(e3) {
      void 0 !== this.reportObjectGetOwnProperties && this.reportObjectGetOwnProperties(e3);
    } }, { key: "callReportPropertyAccess", value: function(e3, t2) {
      void 0 !== this.reportPropertyAccess && this.reportPropertyAccess(e3, t2);
    } }, { key: "recordModifiedProperty", value: function(e3) {
      if (void 0 !== e3) {
        if (this.isInPureScope()) {
          var t2 = e3.object;
          (0, p.default)(t2 instanceof u.ObjectValue);
          var r2 = this.createdObjectsTrackedForLeaks;
          if (!(void 0 === r2 || r2.has(t2) || "string" == typeof e3.key && e3.key.includes("__propertyHasBeenChecked__") || "_temporalAlias" === e3.key)) if (e3.object === this.$GlobalObject) {
            var n2 = true, i2 = false, a2 = void 0;
            try {
              for (var o2, l2 = this.reportSideEffectCallbacks[Symbol.iterator](); !(n2 = (o2 = l2.next()).done); n2 = true) {
                (0, o2.value)("MODIFIED_GLOBAL", e3, t2.expressionLocation);
              }
            } catch (e4) {
              i2 = true, a2 = e4;
            } finally {
              try {
                n2 || null == l2.return || l2.return();
              } finally {
                if (i2) throw a2;
              }
            }
          } else {
            var c2 = true, f2 = false, d2 = void 0;
            try {
              for (var h2, v2 = this.reportSideEffectCallbacks[Symbol.iterator](); !(c2 = (h2 = v2.next()).done); c2 = true) {
                (0, h2.value)("MODIFIED_PROPERTY", e3, t2.expressionLocation);
              }
            } catch (e4) {
              f2 = true, d2 = e4;
            } finally {
              try {
                c2 || null == v2.return || v2.return();
              } finally {
                if (f2) throw d2;
              }
            }
          }
        }
        if (this.isReadOnly && (this.getRunningContext().isReadOnly || !this.isNewObject(e3.object))) throw new s.FatalError("Trying to modify a property in read-only realm");
        if (this.callReportPropertyAccess(e3, true), void 0 !== this.modifiedProperties && !this.modifiedProperties.has(e3)) {
          var y2, b2 = e3.descriptor;
          void 0 === b2 ? y2 = void 0 : b2 instanceof m.AbstractJoinedDescriptor ? y2 = new m.AbstractJoinedDescriptor(b2.joinCondition, b2.descriptor1, b2.descriptor2) : b2 instanceof m.PropertyDescriptor ? y2 = (0, m.cloneDescriptor)(b2) : b2 instanceof m.InternalSlotDescriptor ? y2 = new m.InternalSlotDescriptor(b2.value) : (0, p.default)(false, "unknown descriptor"), this.modifiedProperties.set(e3, y2);
        }
      }
    } }, { key: "isNewObject", value: function(e3) {
      return !(e3 instanceof u.AbstractObjectValue) && (void 0 === this.createdObjects || this.createdObjects.has(e3));
    } }, { key: "recordNewObject", value: function(e3) {
      void 0 !== this.createdObjects && this.createdObjects.add(e3), void 0 !== this.createdObjectsTrackedForLeaks && this.createdObjectsTrackedForLeaks.add(e3);
    } }, { key: "getAndResetModifiedMaps", value: function() {
      var e3 = [this.modifiedBindings, this.modifiedProperties];
      return this.modifiedBindings = /* @__PURE__ */ new Map(), this.modifiedProperties = /* @__PURE__ */ new Map(), e3;
    } }, { key: "restoreBindings", value: function(e3) {
      void 0 !== e3 && e3.forEach(function(e4, t2, r2) {
        var n2 = e4.hasLeaked, i2 = e4.value, a2 = t2.hasLeaked, o2 = t2.value;
        t2.hasLeaked = n2, t2.value = i2, r2.set(t2, { hasLeaked: a2, value: o2 });
      });
    } }, { key: "restoreProperties", value: function(e3) {
      void 0 !== e3 && e3.forEach(function(e4, t2, r2) {
        var n2 = t2.descriptor;
        t2.descriptor = e4, r2.set(t2, n2);
      });
    } }, { key: "setModifiedMaps", value: function(e3, t2) {
      this.modifiedBindings = e3, this.modifiedProperties = t2;
    } }, { key: "rebuildObjectProperty", value: function(e3, t2, r2, n2) {
      if (r2 instanceof u.AbstractValue) {
        if ("abstractConcreteUnion" === r2.kind) {
          (0, p.default)(r2.args.length >= 2);
          var i2 = r2.args[0];
          (0, p.default)(i2 instanceof u.AbstractValue), r2 = i2;
        }
        if (!r2.isIntrinsic()) {
          r2.intrinsicName = "".concat(n2, ".").concat(t2), r2.kind = "rebuiltProperty", r2.args = [e3, new u.StringValue(this, t2)], r2.operationDescriptor = (0, h.createOperationDescriptor)("REBUILT_OBJECT");
          var a2 = r2.intrinsicName;
          (0, p.default)(void 0 !== a2), this.rebuildNestedProperties(r2, a2);
        }
      }
    } }, { key: "rebuildNestedProperties", value: function(e3, t2) {
      if (e3 instanceof u.AbstractObjectValue && !e3.values.isTop()) {
        var r2 = e3.getTemplate();
        (0, p.default)(!r2.intrinsicName || r2.intrinsicName === t2), r2.intrinsicName = t2, r2.intrinsicNameGenerated = true;
        var i2 = true, a2 = false, o2 = void 0;
        try {
          for (var l2, c2 = r2.properties[Symbol.iterator](); !(i2 = (l2 = c2.next()).done); i2 = true) {
            var f2 = n(l2.value, 2), d2 = f2[0], h2 = f2[1];
            if (void 0 !== h2 && void 0 !== h2.descriptor) {
              (0, p.default)(void 0 !== h2.descriptor);
              var v2 = h2.descriptor.throwIfNotConcrete(this), m2 = v2.value;
              if (y.Properties.ThrowIfMightHaveBeenDeleted(v2), void 0 === m2) throw u.AbstractValue.reportIntrospectionError(e3, d2), new s.FatalError();
              (0, p.default)(m2 instanceof u.Value), this.rebuildObjectProperty(e3, d2, m2, t2);
            }
          }
        } catch (e4) {
          a2 = true, o2 = e4;
        } finally {
          try {
            i2 || null == c2.return || c2.return();
          } finally {
            if (a2) throw o2;
          }
        }
      }
    } }, { key: "createExecutionContext", value: function() {
      var e3 = new T(), t2 = this.nextContextLocation;
      return t2 && (e3.setLocation(t2), this.nextContextLocation = null), e3;
    } }, { key: "setNextExecutionContextLocation", value: function(e3) {
      var t2 = this.nextContextLocation;
      return this.nextContextLocation = e3, t2;
    } }, { key: "instantRenderBailout", value: function(e3, t2) {
      void 0 === t2 && (t2 = this.currentLocation);
      var r2 = new s.CompilerDiagnostic(e3, t2, "PP0039", "RecoverableError");
      if ("Fail" === this.handleError(r2)) throw new s.FatalError();
    } }, { key: "reportIntrospectionError", value: function(e3) {
      void 0 === e3 && (e3 = ""), "string" == typeof e3 && (e3 = new u.StringValue(this, e3)), (0, p.default)(e3 instanceof u.StringValue), this.nextContextLocation = this.currentLocation;
      var t2 = new s.CompilerDiagnostic(e3.value, this.currentLocation, "PP0001", "FatalError");
      this.handleError(t2);
    } }, { key: "createErrorThrowCompletion", value: function(e3, t2) {
      return (0, p.default)(e3 !== this.intrinsics.__IntrospectionError), void 0 === t2 && (t2 = ""), "string" == typeof t2 && (t2 = new u.StringValue(this, t2)), (0, p.default)(t2 instanceof u.StringValue), this.nextContextLocation = this.currentLocation, new f.ThrowCompletion((0, c.Construct)(this, e3, [t2]), this.currentLocation);
    } }, { key: "appendGenerator", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", r2 = this.generator;
      void 0 !== r2 ? r2.appendGenerator(e3, t2) : (0, p.default)(e3.empty());
    } }, { key: "evaluateForEffectsWithPriorEffects", value: function(e3, t2, r2) {
      var n2 = this;
      return this.evaluateForEffects(function() {
        var r3 = true, i2 = false, a2 = void 0;
        try {
          for (var o2, s2 = e3[Symbol.iterator](); !(r3 = (o2 = s2.next()).done); r3 = true) {
            var u2 = o2.value;
            n2.applyEffects(u2);
          }
        } catch (e4) {
          i2 = true, a2 = e4;
        } finally {
          try {
            r3 || null == s2.return || s2.return();
          } finally {
            if (i2) throw a2;
          }
        }
        try {
          return t2();
        } finally {
          var l2 = true, c2 = false, f2 = void 0;
          try {
            for (var d2, h2 = e3[Symbol.iterator](); !(l2 = (d2 = h2.next()).done); l2 = true) {
              var v2 = d2.value;
              (0, p.default)(!v2.canBeApplied), v2.canBeApplied = true;
            }
          } catch (e4) {
            c2 = true, f2 = e4;
          } finally {
            try {
              l2 || null == h2.return || h2.return();
            } finally {
              if (c2) throw f2;
            }
          }
        }
      }, void 0, r2);
    } }, { key: "evaluateWithIncreasedMaxStackDepth", value: function(e3, t2) {
      (0, p.default)(e3 > 0), this.remainingCalls += e3;
      try {
        return t2();
      } finally {
        this.remainingCalls -= e3;
      }
    } }, { key: "handleError", value: function(e3) {
      var t2 = this;
      if (!e3.callStack && this.contextStack.length > 0) {
        var r2 = this.evaluateWithIncreasedMaxStackDepth(1, function() {
          return t2.evaluateWithoutEffects(function() {
            return (0, c.Construct)(t2, t2.intrinsics.Error).throwIfNotConcreteObject();
          });
        })._SafeGetDataPropertyValue("stack");
        r2 instanceof u.StringValue && (e3.callStack = r2.value);
      }
      if (this.debuggerInstance && this.debuggerInstance.shouldStopForSeverity(e3.severity) && this.debuggerInstance.handlePrepackError(e3), void 0 !== this.debugReproManager) {
        var n2 = this.debugReproManager, i2 = { sourceFiles: n2.getSourceFilePaths(), sourceMaps: n2.getSourceMapPaths() };
        e3.sourceFilePaths = i2;
      }
      var a2 = this.errorHandler;
      if (!a2) {
        var o2 = "".concat(e3.errorCode, ": ").concat(e3.message);
        if (e3.location) {
          var s2 = e3.location.start, l2 = e3.location.end;
          o2 += " at ".concat(s2.line, ":").concat(s2.column, " to ").concat(l2.line, ":").concat(l2.column);
        }
        try {
          switch (e3.severity) {
            case "Information":
              return console.log("Info: ".concat(o2)), "Recover";
            case "Warning":
              return console.warn("Warn: ".concat(o2)), "Recover";
            case "RecoverableError":
              return console.error("Error: ".concat(o2)), "Fail";
            case "FatalError":
              return console.error("Fatal Error: ".concat(o2)), "Fail";
            default:
              (0, p.default)(false, "Unexpected error type");
          }
        } finally {
          console.log(e3.callStack);
        }
      }
      return a2(e3, this.suppressDiagnostics);
    } }, { key: "saveNameString", value: function(e3) {
      this._abstractValuesDefined.add(e3);
    } }, { key: "isNameStringUnique", value: function(e3) {
      return !this._abstractValuesDefined.has(e3);
    } }, { key: "getTemporalOperationEntryFromDerivedValue", value: function(e3) {
      var t2 = e3.intrinsicName;
      if (t2) return e3.$Realm.derivedIds.get(t2);
    } }, { key: "getTemporalGeneratorEntriesReferencingArg", value: function(e3) {
      return this.temporalEntryArgToEntries.get(e3);
    } }, { key: "saveTemporalGeneratorEntryArgs", value: function(e3) {
      var t2 = e3.args, r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = t2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var s2 = a2.value, u2 = this.temporalEntryArgToEntries.get(s2);
          void 0 === u2 && (u2 = /* @__PURE__ */ new Set(), this.temporalEntryArgToEntries.set(s2, u2)), u2.add(e3);
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
    } }]), e2;
  })();
  t.Realm = A;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2, r2) {
    return (a = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = u(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function o(e2) {
    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function s(e2, t2) {
    return !t2 || "object" !== o(t2) && "function" != typeof t2 ? f(e2) : t2;
  }
  function u(e2) {
    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function l(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && c(e2, t2);
  }
  function c(e2, t2) {
    return (c = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function f(e2) {
    if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e2;
  }
  function p(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function d(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function h(e2, t2, r2) {
    return t2 && d(e2.prototype, t2), r2 && d(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createOperationDescriptor = S, t.attemptToMergeEquivalentObjectAssigns = D, t.Generator = t.TemporalObjectAssignEntry = t.TemporalOperationEntry = t.GeneratorEntry = void 0;
  var v = r(0), y = r(4), m = (r(12), (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1))), b = r(7), g = r(2), w = (r(44), r(6));
  function E(e2, t2, r2) {
    return t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2, e2;
  }
  function S(e2) {
    return { data: arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, type: e2 };
  }
  var T = (function() {
    function e2(t2) {
      p(this, e2), this.index = t2.temporalEntryCounter++;
    }
    return h(e2, [{ key: "print", value: function(e3) {
      (0, m.default)(false, "GeneratorEntry is an abstract base class");
    } }, { key: "visit", value: function(e3, t2) {
      (0, m.default)(false, "GeneratorEntry is an abstract base class");
    } }, { key: "serialize", value: function(e3) {
      (0, m.default)(false, "GeneratorEntry is an abstract base class");
    } }, { key: "getDependencies", value: function() {
      (0, m.default)(false, "GeneratorEntry is an abstract base class");
    } }, { key: "notEqualToAndDoesNotHappenBefore", value: function(e3) {
      return this.index > e3.index;
    } }, { key: "notEqualToAndDoesNotHappenAfter", value: function(e3) {
      return this.index < e3.index;
    } }]), e2;
  })();
  t.GeneratorEntry = T;
  var A = (function(e2) {
    function t2(e3, r2) {
      var n2;
      if (p(this, t2), n2 = s(this, u(t2).call(this, e3)), Object.assign(f(f(n2)), r2), void 0 !== n2.mutatesOnly) {
        (0, m.default)(!n2.isPure);
        var i2 = true, a2 = false, o2 = void 0;
        try {
          for (var l2, c2 = n2.mutatesOnly[Symbol.iterator](); !(i2 = (l2 = c2.next()).done); i2 = true) {
            var d2 = l2.value;
            (0, m.default)(n2.args.includes(d2));
          }
        } catch (e4) {
          a2 = true, o2 = e4;
        } finally {
          try {
            i2 || null == c2.return || c2.return();
          } finally {
            if (a2) throw o2;
          }
        }
      }
      return (0, m.default)(void 0 !== n2.operationDescriptor), n2;
    }
    return l(t2, T), h(t2, [{ key: "print", value: function(e3) {
      var t3 = this.operationDescriptor;
      e3.printGeneratorEntry(this.declared, t3.type, this.args, this.operationDescriptor.data, { isPure: !!this.isPure, mutatesOnly: this.mutatesOnly });
    } }, { key: "toDisplayJson", value: function(e3) {
      if (e3 <= 0) return "TemporalOperation".concat(this.index);
      var t3 = (function(e4) {
        for (var t4 = 1; t4 < arguments.length; t4++) {
          var r2 = null != arguments[t4] ? arguments[t4] : {}, n2 = Object.keys(r2);
          "function" == typeof Object.getOwnPropertySymbols && (n2 = n2.concat(Object.getOwnPropertySymbols(r2).filter(function(e5) {
            return Object.getOwnPropertyDescriptor(r2, e5).enumerable;
          }))), n2.forEach(function(t5) {
            E(e4, t5, r2[t5]);
          });
        }
        return e4;
      })({ type: "TemporalOperation" }, this);
      return delete t3.operationDescriptor, g.Utils.verboseToDisplayJson(t3, e3);
    } }, { key: "visit", value: function(e3, t3) {
      var r2 = this.isPure && this.declared && e3.canOmit(this.declared);
      if (!r2 && this.declared && void 0 !== this.mutatesOnly) {
        r2 = true;
        var n2 = true, i2 = false, a2 = void 0;
        try {
          for (var o2, s2 = this.mutatesOnly[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
            var u2 = o2.value;
            e3.canOmit(u2) || (r2 = false);
          }
        } catch (e4) {
          i2 = true, a2 = e4;
        } finally {
          try {
            n2 || null == s2.return || s2.return();
          } finally {
            if (i2) throw a2;
          }
        }
      }
      if (r2) return e3.recordDelayedEntry(t3, this), false;
      this.declared && e3.recordDeclaration(this.declared);
      for (var l2 = 0, c2 = this.args.length; l2 < c2; l2++) {
        var f2 = this.args[l2], p2 = e3.visitEquivalentValue(f2);
        if (this.args[l2] = p2, 0 === l2) switch (this.operationDescriptor.type) {
          case "CALL_BAILOUT":
            f2 === this.operationDescriptor.data.thisArg && (this.operationDescriptor.data.thisArg = p2);
            break;
          case "CONDITIONAL_THROW":
            this.operationDescriptor.data.value = p2;
        }
        else if (1 === l2) switch (this.operationDescriptor.type) {
          case "EMIT_PROPERTY_ASSIGNMENT":
          case "LOGICAL_PROPERTY_ASSIGNMENT":
            this.operationDescriptor.data.value = p2;
            break;
          case "CONDITIONAL_PROPERTY_ASSIGNMENT":
            f2 === this.operationDescriptor.data.value && (this.operationDescriptor.data.value = p2);
            break;
          case "DEFINE_PROPERTY":
            (0, m.default)(p2 instanceof v.ObjectValue), this.operationDescriptor.data.object = p2;
        }
      }
      var d2 = this.getDependencies();
      if (void 0 !== d2) {
        var h2 = true, y2 = false, b2 = void 0;
        try {
          for (var g2, w2 = d2[Symbol.iterator](); !(h2 = (g2 = w2.next()).done); h2 = true) {
            var E2 = g2.value;
            e3.visitGenerator(E2, t3);
          }
        } catch (e4) {
          y2 = true, b2 = e4;
        } finally {
          try {
            h2 || null == w2.return || w2.return();
          } finally {
            if (y2) throw b2;
          }
        }
      }
      return true;
    } }, { key: "serialize", value: function(e3) {
      var t3 = this.isPure && this.declared && e3.canOmit(this.declared);
      if (!t3 && this.declared && void 0 !== this.mutatesOnly) {
        t3 = true;
        var r2 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = this.mutatesOnly[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            e3.canOmit(s2) || (t3 = false);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r2 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
      }
      if (!t3) {
        var u2 = this.args.map(function(t4, r3) {
          return e3.serializeValue(t4);
        }), l2 = /* @__PURE__ */ new Set(), c2 = void 0 !== this.declared ? this.declared.intrinsicName : void 0, f2 = e3.serializeOperationDescriptor(this.operationDescriptor, u2, e3, l2, c2);
        if ("BlockStatement" === f2.type) {
          var p2 = f2.body;
          if (0 === p2.length) return;
          1 === p2.length && (f2 = p2[0]);
        }
        var d2 = this.declared;
        void 0 !== d2 && e3.options.debugScopes && e3.emit(e3.serializeDebugScopeComment(d2)), e3.emit(f2), e3.processValues(l2), void 0 !== this.declared && e3.declare(this.declared);
      }
    } }, { key: "getDependencies", value: function() {
      var e3 = this.operationDescriptor;
      switch (e3.type) {
        case "DO_WHILE":
          var t3 = e3.data.generator;
          return (0, m.default)(void 0 !== t3), [t3];
        case "JOIN_GENERATORS":
          var r2 = e3.data.generators;
          return (0, m.default)(void 0 !== r2), r2;
        default:
          return;
      }
    } }]), t2;
  })();
  t.TemporalOperationEntry = A;
  var C = (function(e2) {
    function t2() {
      return p(this, t2), s(this, u(t2).apply(this, arguments));
    }
    return l(t2, A), h(t2, [{ key: "visit", value: function(e3, r2) {
      var n2 = this.declared;
      if (!(n2 instanceof v.AbstractObjectValue || n2 instanceof v.ObjectValue)) return false;
      var i2 = n2.$Realm, o2 = D(i2, e3, this);
      if (o2 instanceof t2) {
        for (var s2 = o2; s2 instanceof t2; ) (s2 = D(i2, e3, o2)) instanceof t2 && (o2 = s2);
        this.args = o2.args;
      } else if ("POSSIBLE_OPTIMIZATION" === o2) return e3.recordDelayedEntry(r2, this), false;
      return a(u(t2.prototype), "visit", this).call(this, e3, r2);
    } }]), t2;
  })();
  t.TemporalObjectAssignEntry = C;
  var P = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return p(this, t2), n2 = s(this, u(t2).call(this, e3)), Object.assign(f(f(n2)), r2), n2;
    }
    return l(t2, T), h(t2, [{ key: "print", value: function(e3) {
      e3.printGeneratorEntry(void 0, "MODIFIED_PROPERTY", [], { descriptor: this.newDescriptor, propertyBinding: this.propertyBinding }, { isPure: false, mutatesOnly: void 0 });
    } }, { key: "toDisplayString", value: function() {
      var e3 = this.propertyBinding.key, t3 = e3 instanceof v.Value ? e3.toDisplayString() : e3;
      return (0, m.default)(void 0 !== t3), "[ModifiedProperty ".concat(t3, "]");
    } }, { key: "serialize", value: function(e3) {
      var t3 = this.propertyBinding.descriptor;
      (0, m.default)(t3 === this.newDescriptor), e3.emitPropertyModification(this.propertyBinding);
    } }, { key: "visit", value: function(e3, t3) {
      (0, m.default)(t3 === this.containingGenerator, "This entry requires effects to be applied and may not be moved");
      var r2 = this.propertyBinding.descriptor;
      return (0, m.default)(r2 === this.newDescriptor), e3.visitModifiedProperty(this.propertyBinding), true;
    } }, { key: "getDependencies", value: function() {
    } }]), t2;
  })(), O = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return p(this, t2), n2 = s(this, u(t2).call(this, e3)), Object.assign(f(f(n2)), r2), n2;
    }
    return l(t2, T), h(t2, [{ key: "print", value: function(e3) {
      e3.printGeneratorEntry(void 0, "MODIFIED_BINDING", [], { binding: this.modifiedBinding, value: this.modifiedBinding.value }, { isPure: false, mutatesOnly: void 0 });
    } }, { key: "toDisplayString", value: function() {
      return "[ModifiedBinding ".concat(this.modifiedBinding.name, "]");
    } }, { key: "serialize", value: function(e3) {
      e3.emitBindingModification(this.modifiedBinding);
    } }, { key: "visit", value: function(e3, t3) {
      return (0, m.default)(t3 === this.containingGenerator, "This entry requires effects to be applied and may not be moved"), e3.visitModifiedBinding(this.modifiedBinding), true;
    } }, { key: "getDependencies", value: function() {
    } }]), t2;
  })(), x = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return p(this, t2), (i2 = s(this, u(t2).call(this, e3))).returnValue = n2.promoteEmptyToUndefined(), i2.containingGenerator = r2, i2;
    }
    return l(t2, T), h(t2, [{ key: "print", value: function(e3) {
      e3.printGeneratorEntry(void 0, "RETURN", [this.returnValue], {}, { isPure: false, mutatesOnly: void 0 });
    } }, { key: "toDisplayString", value: function() {
      return "[Return ".concat(this.returnValue.toDisplayString(), "]");
    } }, { key: "visit", value: function(e3, t3) {
      return (0, m.default)(t3 === this.containingGenerator, "This entry requires effects to be applied and may not be moved"), this.returnValue = e3.visitEquivalentValue(this.returnValue), true;
    } }, { key: "serialize", value: function(e3) {
      e3.emit(e3.serializeReturnValue(this.returnValue));
    } }, { key: "getDependencies", value: function() {
    } }]), t2;
  })(), _ = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return p(this, t2), (i2 = s(this, u(t2).call(this, e3))).binding = r2, i2.value = n2, i2;
    }
    return l(t2, T), h(t2, [{ key: "print", value: function(e3) {
      e3.printGeneratorEntry(void 0, "BINDING_ASSIGNMENT", [this.value], { binding: this.binding }, { isPure: false, mutatesOnly: void 0 });
    } }, { key: "toDisplayString", value: function() {
      return "[BindingAssignment ".concat(this.binding.name, " = ").concat(this.value.toDisplayString(), "]");
    } }, { key: "serialize", value: function(e3) {
      e3.emit(e3.serializeBindingAssignment(this.binding, this.value));
    } }, { key: "visit", value: function(e3, t3) {
      return this.value = e3.visitBindingAssignment(this.binding, this.value), true;
    } }, { key: "getDependencies", value: function() {
    } }]), t2;
  })(), V = (function() {
    function e2(t2, r2, n2, i2) {
      p(this, e2), (0, m.default)(t2.useAbstractInterpretation);
      var a2 = t2.preludeGenerator;
      (0, m.default)(a2), this.preludeGenerator = a2, this.realm = t2, this._entries = [], this.id = t2.nextGeneratorId++, this._name = r2, this.effectsToApply = i2, this.pathConditions = n2;
    }
    return h(e2, [{ key: "print", value: function(e3) {
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this._entries[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          i2.value.print(e3);
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }, { key: "toDisplayString", value: function() {
      return g.Utils.jsonToDisplayString(this, 2);
    } }, { key: "toDisplayJson", value: function(e3) {
      return e3 <= 0 ? "Generator".concat(this.id, "-").concat(this._name) : g.Utils.verboseToDisplayJson(this, e3);
    } }, { key: "emitPropertyModification", value: function(e3) {
      (0, m.default)(void 0 !== this.effectsToApply);
      var t2 = e3.descriptor;
      if (void 0 !== t2 && t2 instanceof w.PropertyDescriptor) {
        var r2 = t2.value;
        if (r2 instanceof v.AbstractValue) {
          if ("conditional" === r2.kind) {
            var n2 = i(r2.args, 3), a2 = n2[0], o2 = n2[1], s2 = n2[2];
            if (a2 instanceof v.AbstractValue && "template for property name condition" === a2.kind) {
              var u2 = new w.PropertyDescriptor(Object.assign({}, t2, { value: s2 })), l2 = Object.assign({}, e3, { descriptor: u2 });
              this.emitPropertyModification(l2);
              var c2 = new w.PropertyDescriptor(Object.assign({}, t2, { value: o2 })), f2 = a2.args[0];
              (0, m.default)(f2 instanceof v.AbstractValue);
              var p2 = Object.assign({}, e3, { key: f2, descriptor: c2 });
              return void this.emitPropertyModification(p2);
            }
          } else if ("template for prototype member expression" === r2.kind) return;
        }
      }
      this._entries.push(new P(this.realm, { propertyBinding: e3, newDescriptor: t2, containingGenerator: this }));
    } }, { key: "emitBindingModification", value: function(e3) {
      (0, m.default)(void 0 !== this.effectsToApply), this._entries.push(new O(this.realm, { modifiedBinding: e3, containingGenerator: this }));
    } }, { key: "emitReturnValue", value: function(e3) {
      this._entries.push(new x(this.realm, this, e3));
    } }, { key: "getName", value: function() {
      return "".concat(this._name, "(#").concat(this.id, ")");
    } }, { key: "empty", value: function() {
      return 0 === this._entries.length;
    } }, { key: "emitGlobalDeclaration", value: function(e3, t2) {
      this.preludeGenerator.declaredGlobals.add(e3), t2 instanceof v.UndefinedValue || this.emitGlobalAssignment(e3, t2);
    } }, { key: "emitGlobalAssignment", value: function(e3, t2) {
      this._addEntry({ args: [t2, new v.StringValue(this.realm, e3)], operationDescriptor: S("GLOBAL_ASSIGNMENT") });
    } }, { key: "emitConcreteModel", value: function(e3, t2) {
      this._addEntry({ args: [(0, g.concretize)(this.realm, t2), new v.StringValue(this.realm, e3)], operationDescriptor: S("CONCRETE_MODEL") });
    } }, { key: "emitGlobalDelete", value: function(e3) {
      this._addEntry({ args: [new v.StringValue(this.realm, e3)], operationDescriptor: S("GLOBAL_DELETE") });
    } }, { key: "emitBindingAssignment", value: function(e3, t2) {
      this._entries.push(new _(this.realm, e3, t2));
    } }, { key: "emitPropertyAssignment", value: function(e3, t2, r2) {
      e3 instanceof v.ObjectValue && e3.refuseSerialization || ("string" == typeof t2 && (t2 = new v.StringValue(this.realm, t2)), this._addEntry({ args: [e3, r2, t2], operationDescriptor: S("EMIT_PROPERTY_ASSIGNMENT", { value: r2 }) }));
    } }, { key: "emitDefineProperty", value: function(e3, t2, r2) {
      var n2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
      if (!e3.refuseSerialization) if (r2.enumerable && r2.configurable && r2.writable && r2.value && !n2) {
        var i2 = r2.value;
        (0, m.default)(i2 instanceof v.Value), this.emitPropertyAssignment(e3, t2, i2);
      } else {
        var a2 = (r2 = new w.PropertyDescriptor(r2)).value || e3.$Realm.intrinsics.undefined;
        (0, m.default)(a2 instanceof v.Value), this._addEntry({ args: [new v.StringValue(this.realm, t2), e3, a2, r2.get || e3.$Realm.intrinsics.undefined, r2.set || e3.$Realm.intrinsics.undefined], operationDescriptor: S("DEFINE_PROPERTY", { object: e3, descriptor: r2 }) });
      }
    } }, { key: "emitPropertyDelete", value: function(e3, t2) {
      e3.refuseSerialization || this._addEntry({ args: [e3, new v.StringValue(this.realm, t2)], operationDescriptor: S("PROPERTY_DELETE") });
    } }, { key: "emitCall", value: function(e3, t2) {
      this._addEntry({ args: t2, operationDescriptor: S("EMIT_CALL", { callFunctionRef: e3 }) });
    } }, { key: "emitConsoleLog", value: function(e3, t2) {
      var r2 = this;
      this._addEntry({ args: [new v.StringValue(this.realm, e3)].concat(n(t2.map(function(e4) {
        return "string" == typeof e4 ? new v.StringValue(r2.realm, e4) : e4;
      }))), operationDescriptor: S("CONSOLE_LOG") });
    } }, { key: "emitDoWhileStatement", value: function(e3, t2) {
      this._addEntry({ args: [], operationDescriptor: S("DO_WHILE", { generator: t2, value: e3 }) });
    } }, { key: "emitConditionalThrow", value: function(e3) {
      e3 instanceof v.EmptyValue || (this._issueThrowCompilerDiagnostic(e3), this._addEntry({ args: [e3], operationDescriptor: S("CONDITIONAL_THROW", { value: e3 }) }));
    } }, { key: "_issueThrowCompilerDiagnostic", value: function(e3) {
      var t2 = "Program may terminate with exception";
      if (e3 instanceof v.ObjectValue) {
        var r2 = e3, n2 = this.realm.evaluateWithUndo(function() {
          return r2._SafeGetDataPropertyValue("message");
        });
        n2 instanceof v.StringValue && (t2 += ": ".concat(n2.value));
        var i2 = this.realm.evaluateWithUndo(function() {
          return r2._SafeGetDataPropertyValue("stack");
        });
        i2 instanceof v.StringValue && (t2 += "\n  ".concat(i2.value));
      }
      var a2 = new y.CompilerDiagnostic(t2, e3.expressionLocation, "PP0023", "Warning");
      this.realm.handleError(a2);
    } }, { key: "emitThrow", value: function(e3) {
      this._issueThrowCompilerDiagnostic(e3), this.emitStatement([e3], S("THROW"));
    } }, { key: "emitFullInvariant", value: function(e3, t2, r2) {
      if (!e3.refuseSerialization) if (r2 instanceof v.AbstractValue) {
        var n2 = false, i2 = [], a2 = /* @__PURE__ */ new Set();
        if ((function e4(t3) {
          if ("abstractConcreteUnion" === t3.kind) {
            var r3 = true, o2 = false, s2 = void 0;
            try {
              for (var u2, l2 = t3.args[Symbol.iterator](); !(r3 = (u2 = l2.next()).done); r3 = true) {
                var c2 = u2.value;
                c2 instanceof v.ConcreteValue ? i2.push(c2) : ((0, m.default)(c2 instanceof v.AbstractValue), e4(c2));
              }
            } catch (e5) {
              o2 = true, s2 = e5;
            } finally {
              try {
                r3 || null == l2.return || l2.return();
              } finally {
                if (o2) throw s2;
              }
            }
          } else t3.getType() === v.Value ? n2 = true : a2.add(t3.getType());
        })(r2), n2) return;
        this._emitInvariant([new v.StringValue(this.realm, t2), r2, r2], S("FULL_INVARIANT_ABSTRACT", { concreteComparisons: i2, typeComparisons: a2 }), S("INVARIANT_APPEND"));
      } else r2 instanceof v.FunctionValue ? this._emitInvariant([new v.StringValue(this.realm, t2), e3, r2, e3], S("FULL_INVARIANT_FUNCTION"), S("INVARIANT_APPEND")) : this._emitInvariant([new v.StringValue(this.realm, t2), e3, r2, e3], S("FULL_INVARIANT"), S("INVARIANT_APPEND"));
    } }, { key: "emitPropertyInvariant", value: function(e3, t2, r2) {
      e3.refuseSerialization || this._emitInvariant([new v.StringValue(this.realm, t2), e3, e3], S("PROPERTY_INVARIANT", { state: r2 }), S("INVARIANT_APPEND"));
    } }, { key: "_emitInvariant", value: function(e3, t2, r2) {
      (0, m.default)(this.realm.invariantLevel > 0);
      var n2 = S("INVARIANT", { appendLastToInvariantOperationDescriptor: r2, violationConditionOperationDescriptor: t2 });
      this._addEntry({ args: e3, operationDescriptor: n2 });
    } }, { key: "emitCallAndCaptureResult", value: function(e3, t2, r2, n2, i2) {
      return this.deriveAbstract(e3, t2, n2, S("EMIT_CALL_AND_CAPTURE_RESULT", { callFunctionRef: r2 }), { kind: i2 });
    } }, { key: "emitStatement", value: function(e3, t2) {
      (0, m.default)("function" != typeof t2), this._addEntry({ args: e3, operationDescriptor: t2 });
    } }, { key: "emitVoidExpression", value: function(e3, t2, r2, n2) {
      return this._addEntry({ args: r2, operationDescriptor: n2 }), this.realm.intrinsics.undefined;
    } }, { key: "emitForInStatement", value: function(e3, t2, r2, n2, i2) {
      this._addEntry({ args: [e3, n2, r2, n2, r2], operationDescriptor: S("FOR_IN", { boundName: i2, lh: t2 }) });
    } }, { key: "deriveConcreteObject", value: function(e3, t2, r2, n2) {
      var i2 = this.preludeGenerator.nameGenerator.generate("derived"), a2 = e3(i2);
      return a2.intrinsicNameGenerated = true, a2._isScopedTemplate = true, (0, m.default)(a2.intrinsicName === i2), this._addDerivedEntry({ isPure: n2 ? n2.isPure : void 0, declared: a2, args: t2, operationDescriptor: r2 }), a2;
    } }, { key: "deriveAbstract", value: function(e3, t2, r2, n2, i2) {
      var a2 = this.preludeGenerator.nameGenerator.generate("derived"), o2 = {};
      i2 && void 0 !== i2.kind && (o2.kind = i2.kind), i2 && void 0 !== i2.shape && (o2.shape = i2.shape);
      var s2 = new (v.Value.isTypeCompatibleWith(e3.getType(), v.ObjectValue) ? v.AbstractObjectValue : v.AbstractValue)(this.realm, e3, t2, 1735003607742176 + this.realm.derivedIds.size, [], S("IDENTIFIER", { id: a2 }), o2);
      s2.intrinsicName = a2, this._addDerivedEntry({ isPure: i2 ? i2.isPure : void 0, declared: s2, args: r2, operationDescriptor: n2, mutatesOnly: i2 ? i2.mutatesOnly : void 0 });
      var u2, l2 = e3.getType();
      return i2 && i2.skipInvariant ? s2 : (l2 instanceof v.FunctionValue ? u2 = "function" : l2 === v.UndefinedValue ? (0, m.default)(false) : l2 === v.NullValue ? (0, m.default)(false) : l2 === v.StringValue ? u2 = "string" : l2 === v.BooleanValue ? u2 = "boolean" : l2 === v.NumberValue ? u2 = "number" : l2 === v.IntegralValue ? u2 = "number" : l2 === v.SymbolValue ? u2 = "symbol" : l2 === v.ObjectValue && (u2 = "object"), void 0 !== u2 && this.realm.invariantLevel >= 1 && this._emitInvariant([new v.StringValue(this.realm, u2), s2, s2], S("DERIVED_ABSTRACT_INVARIANT"), S("SINGLE_ARG")), s2);
    } }, { key: "visit", value: function(e3) {
      var t2 = this, r2 = function() {
        var r3 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = t2._entries[Symbol.iterator](); !(r3 = (a2 = o2.next()).done); r3 = true) {
            a2.value.visit(e3, t2);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r3 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
        return null;
      };
      this.effectsToApply ? this.realm.withEffectsAppliedInGlobalEnv(r2, this.effectsToApply) : r2();
    } }, { key: "serialize", value: function(e3) {
      var t2 = this, r2 = function() {
        e3.initGenerator(t2);
        var r3 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = t2._entries[Symbol.iterator](); !(r3 = (a2 = o2.next()).done); r3 = true) {
            a2.value.serialize(e3);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r3 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
        return e3.finalizeGenerator(t2), null;
      };
      this.effectsToApply ? this.realm.withEffectsAppliedInGlobalEnv(r2, this.effectsToApply) : r2();
    } }, { key: "getDependencies", value: function() {
      var e3 = [], t2 = true, r2 = false, i2 = void 0;
      try {
        for (var a2, o2 = this._entries[Symbol.iterator](); !(t2 = (a2 = o2.next()).done); t2 = true) {
          var s2 = a2.value.getDependencies();
          void 0 !== s2 && e3.push.apply(e3, n(s2));
        }
      } catch (e4) {
        r2 = true, i2 = e4;
      } finally {
        try {
          t2 || null == o2.return || o2.return();
        } finally {
          if (r2) throw i2;
        }
      }
      return e3;
    } }, { key: "_addEntry", value: function(e3) {
      var t2, r2 = e3.operationDescriptor;
      return t2 = r2 && "OBJECT_ASSIGN" === r2.type ? new C(this.realm, e3) : new A(this.realm, e3), this.realm.saveTemporalGeneratorEntryArgs(t2), this._entries.push(t2), t2;
    } }, { key: "_addDerivedEntry", value: function(e3) {
      var t2 = e3.declared;
      (0, m.default)(void 0 !== t2);
      var r2 = t2.intrinsicName;
      (0, m.default)(void 0 !== r2);
      var n2 = this._addEntry(e3);
      this.realm.derivedIds.set(r2, n2);
    } }, { key: "appendGenerator", value: function(e3, t2) {
      var r2;
      (0, m.default)(e3 !== this), (0, m.default)(e3.realm === this.realm), (0, m.default)(e3.preludeGenerator === this.preludeGenerator), (0, m.default)(void 0 === e3.effectsToApply), e3.empty() || (r2 = this._entries).push.apply(r2, n(e3._entries));
    } }, { key: "joinGenerators", value: function(e3, t2, r2) {
      if ((0, m.default)(t2 !== this && r2 !== this && t2 !== r2), !t2.empty() || !r2.empty()) {
        var n2 = [t2, r2];
        this._addEntry({ args: [e3], operationDescriptor: S("JOIN_GENERATORS", { generators: n2 }) });
      }
    } }], [{ key: "_generatorOfEffects", value: function(t2, r2, n2, i2) {
      var a2 = i2.result, o2 = i2.generator, s2 = i2.modifiedBindings, u2 = i2.modifiedProperties, l2 = i2.createdObjects, c2 = new e2(t2, r2, o2.pathConditions, i2);
      c2.appendGenerator(o2, o2._name);
      var f2 = true, p2 = false, d2 = void 0;
      try {
        for (var h2, y2 = u2.keys()[Symbol.iterator](); !(f2 = (h2 = y2.next()).done); f2 = true) {
          var w2 = h2.value, E2 = w2.object;
          (0, m.default)(E2.isValid()), l2.has(E2) || (v.ObjectValue.refuseSerializationOnPropertyBinding(w2) || E2.isIntrinsic() || c2.emitPropertyModification(w2));
        }
      } catch (e3) {
        p2 = true, d2 = e3;
      } finally {
        try {
          f2 || null == y2.return || y2.return();
        } finally {
          if (p2) throw d2;
        }
      }
      var S2 = true, T2 = false, A2 = void 0;
      try {
        for (var C2, P2 = s2.keys()[Symbol.iterator](); !(S2 = (C2 = P2.next()).done); S2 = true) {
          var O2 = C2.value;
          O2.environment.id >= n2 || c2.emitBindingModification(O2);
        }
      } catch (e3) {
        T2 = true, A2 = e3;
      } finally {
        try {
          S2 || null == P2.return || P2.return();
        } finally {
          if (T2) throw A2;
        }
      }
      if (a2 instanceof v.UndefinedValue) return c2;
      if (a2 instanceof b.SimpleNormalCompletion) c2.emitReturnValue(a2.value);
      else if (a2 instanceof b.ThrowCompletion) c2.emitThrow(a2.value);
      else if (a2 instanceof b.JoinedNormalAndAbruptCompletions) {
        c2.emitConditionalThrow(g.Join.joinValuesOfSelectedCompletions(function(e3) {
          return e3 instanceof b.ThrowCompletion && e3.value !== t2.intrinsics.__bottomValue && !(e3.value instanceof v.EmptyValue);
        }, a2, true)), c2.emitReturnValue(a2.value);
      } else (0, m.default)(false);
      return c2;
    } }, { key: "fromEffects", value: function(e3, t2, r2) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
      return t2.withEffectsAppliedInGlobalEnv(this._generatorOfEffects.bind(this, t2, r2, n2), e3);
    } }]), e2;
  })();
  function D(e2, t2, r2) {
    var i2 = r2.args;
    if (i2.length < 2) return "NO_OPTIMIZATION";
    var a2 = i2[0];
    e: for (var o2 = 1; o2 < i2.length; o2++) {
      var s2 = i2[o2];
      if (t2.canOmit(s2) && s2 instanceof v.AbstractObjectValue) {
        var u2 = e2.getTemporalOperationEntryFromDerivedValue(s2);
        if (!(u2 instanceof C)) continue;
        var l2 = u2.args;
        if (l2.length < 1) continue;
        for (var c2 = [], f2 = 1; f2 < l2.length; f2++) {
          var p2 = l2[f2];
          if (p2 instanceof v.ObjectValue && p2.mightBeLeakedObject()) continue e;
          if (p2 instanceof v.ObjectValue || p2 instanceof v.AbstractValue) {
            var d2 = e2.getTemporalGeneratorEntriesReferencingArg(p2);
            if (void 0 !== d2) {
              var h2 = true, y2 = false, m2 = void 0;
              try {
                for (var b2, g2 = d2[Symbol.iterator](); !(h2 = (b2 = g2.next()).done); h2 = true) {
                  var w2 = b2.value;
                  if (!(w2 instanceof C) && (w2.notEqualToAndDoesNotHappenBefore(u2) && w2.notEqualToAndDoesNotHappenAfter(r2))) continue e;
                }
              } catch (e3) {
                y2 = true, m2 = e3;
              } finally {
                try {
                  h2 || null == g2.return || g2.return();
                } finally {
                  if (y2) throw m2;
                }
              }
            }
          }
          c2.push(p2);
        }
        if (!t2.canOmit(a2)) {
          var E2 = i2.slice(1, o2 - 1), S2 = i2.slice(o2 + 1), T2 = [a2].concat(n(E2), c2, n(S2)), A2 = Object.assign({}, r2, { args: T2 });
          return new C(e2, A2);
        }
        return "POSSIBLE_OPTIMIZATION";
      }
    }
    return "NO_OPTIMIZATION";
  }
  t.Generator = V;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2) {
    return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function a(e2, t2) {
    return !t2 || "object" !== i(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && u(e2, t2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function l(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function c(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function f(e2, t2, r2) {
    return t2 && c(e2.prototype, t2), r2 && c(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.materializeBinding = x, t.leakBinding = function(e2) {
    var t2 = e2.environment.realm;
    e2.hasLeaked || (e2.mutable ? t2.recordModifiedBinding(e2).hasLeaked = true : e2.hasLeaked = true, x(t2, e2));
    true === e2.mutable && (e2.value = void 0);
  }, t.isValidBaseValue = function(e2) {
    return e2 instanceof y.AbstractValue || e2 instanceof y.ObjectValue || F(e2);
  }, t.mightBecomeAnObject = F, t.Reference = t.LexicalEnvironment = t.GlobalEnvironmentRecord = t.FunctionEnvironmentRecord = t.ObjectEnvironmentRecord = t.DeclarativeEnvironmentRecord = t.EnvironmentRecord = void 0;
  var p = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), d = r(7), h = r(4), v = r(8), y = r(0), m = O(r(71)), b = O(r(1)), g = O(r(39)), w = r(3), E = r(2), S = r(12), T = O(r(192)), A = r(9), C = r(164), P = r(6);
  function O(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function x(e2, t2) {
    var r2 = e2.generator;
    (0, b.default)(void 0 !== r2);
    var n2 = t2.value;
    void 0 !== n2 && n2 !== e2.intrinsics.undefined && r2.emitBindingAssignment(t2, n2);
  }
  var _ = (function() {
    function e2(t2) {
      l(this, e2), (0, b.default)(t2, "expected realm"), this.realm = t2, this.isReadOnly = false, this.id = e2.nextId++;
    }
    return f(e2, [{ key: "HasBinding", value: function(e3) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "CreateMutableBinding", value: function(e3, t2, r2) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "CreateImmutableBinding", value: function(e3, t2, r2, n2) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "InitializeBinding", value: function(e3, t2, r2) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "SetMutableBinding", value: function(e3, t2, r2) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "GetBindingValue", value: function(e3, t2) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "DeleteBinding", value: function(e3) {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "HasThisBinding", value: function() {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "GetThisBinding", value: function() {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "HasSuperBinding", value: function() {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "WithBaseObject", value: function() {
      (0, b.default)(false, "abstract method; please override");
    } }, { key: "BindThisValue", value: function(e3) {
      (0, b.default)(false, "abstract method; please override");
    } }]), e2;
  })();
  t.EnvironmentRecord = _, (function(e2, t2, r2) {
    t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2;
  })(_, "nextId", 0);
  var V = (function(e2) {
    function t2(e3) {
      var r2;
      return l(this, t2), (r2 = a(this, o(t2).call(this, e3))).bindings = /* @__PURE__ */ Object.create(null), r2.frozen = false, r2;
    }
    return s(t2, _), f(t2, [{ key: "HasBinding", value: function(e3) {
      return !!this.bindings[e3];
    } }, { key: "CreateMutableBinding", value: function(e3, t3) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
      (0, b.default)(!this.frozen);
      var n2 = this.realm;
      return (0, b.default)(!this.bindings[e3], "shouldn't have the binding ".concat(e3)), this.bindings[e3] = n2.recordModifiedBinding({ initialized: false, mutable: true, deletable: t3, environment: this, name: e3, isGlobal: r2, mightHaveBeenCaptured: false, hasLeaked: false }), n2.intrinsics.undefined;
    } }, { key: "CreateImmutableBinding", value: function(e3, t3) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
      (0, b.default)(!this.frozen);
      var i2 = this.realm;
      (0, b.default)(!this.bindings[e3], "shouldn't have the binding ".concat(e3));
      var a2 = { initialized: false, strict: t3, deletable: false, environment: this, name: e3, isGlobal: r2, mightHaveBeenCaptured: false, hasLeaked: false };
      return this.bindings[e3] = n2 ? a2 : i2.recordModifiedBinding(a2), i2.intrinsics.undefined;
    } }, { key: "InitializeBinding", value: function(e3, t3) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n2 = this.bindings[e3];
      return (0, b.default)(n2 && true !== n2.initialized, "shouldn't have the binding ".concat(e3)), r2 ? n2.value = t3 : this.realm.recordModifiedBinding(n2, t3).value = t3, n2.initialized = true, this.realm.intrinsics.empty;
    } }, { key: "SetMutableBinding", value: function(e3, t3, r2) {
      var n2 = r2, i2 = this.realm, a2 = this.bindings[e3];
      if (!a2) {
        if (n2) throw i2.createErrorThrowCompletion(i2.intrinsics.ReferenceError, "".concat(e3, " not found"));
        return this.CreateMutableBinding(e3, true), this.InitializeBinding(e3, t3), this.realm.intrinsics.empty;
      }
      if (true === a2.strict && (n2 = true), true !== a2.initialized) throw i2.createErrorThrowCompletion(i2.intrinsics.ReferenceError, "".concat(e3, " has not yet been initialized"));
      if (a2.mutable) a2.hasLeaked ? (E.Leak.value(i2, t3), (0, b.default)(i2.generator), i2.generator.emitBindingAssignment(a2, t3)) : i2.recordModifiedBinding(a2, t3).value = t3;
      else if (n2) throw i2.createErrorThrowCompletion(i2.intrinsics.TypeError, "attempt to change immutable binding");
      return this.realm.intrinsics.empty;
    } }, { key: "GetBindingValue", value: function(e3, t3) {
      var r2 = this.realm, n2 = this.bindings[e3];
      if ((0, b.default)(n2, "expected binding"), !n2.initialized) throw r2.createErrorThrowCompletion(r2.intrinsics.ReferenceError);
      return n2.hasLeaked && n2.mutable ? (function(e4, t4) {
        var r3 = S.TypesDomain.topVal, n3 = S.ValuesDomain.topVal;
        return (0, b.default)(void 0 !== e4.generator), e4.generator.deriveAbstract(r3, n3, [], (0, A.createOperationDescriptor)("GET_BINDING", { binding: t4 }));
      })(r2, n2) : ((0, b.default)(n2.value), n2.value);
    } }, { key: "DeleteBinding", value: function(e3) {
      (0, b.default)(!this.frozen);
      return (0, b.default)(this.bindings[e3], "expected binding to exist"), !!this.bindings[e3].deletable && (this.realm.recordModifiedBinding(this.bindings[e3]).value = void 0, delete this.bindings[e3], true);
    } }, { key: "HasThisBinding", value: function() {
      return false;
    } }, { key: "HasSuperBinding", value: function() {
      return false;
    } }, { key: "WithBaseObject", value: function() {
      return this.realm.intrinsics.undefined;
    } }]), t2;
  })();
  t.DeclarativeEnvironmentRecord = V;
  var D = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return l(this, t2), (n2 = a(this, o(t2).call(this, e3))).object = r2, n2;
    }
    return s(t2, _), f(t2, [{ key: "HasBinding", value: function(e3) {
      var t3 = this.realm, r2 = this.object;
      if (!(0, w.HasProperty)(t3, r2, e3)) return false;
      if (!this.withEnvironment) return true;
      var n2 = (0, w.Get)(t3, r2, t3.intrinsics.SymbolUnscopables);
      if ((n2 instanceof y.ObjectValue || n2 instanceof y.AbstractObjectValue) && E.To.ToBooleanPartial(t3, (0, w.Get)(t3, n2, e3))) return false;
      return n2.throwIfNotConcrete(), true;
    } }, { key: "CreateMutableBinding", value: function(e3, t3) {
      var r2 = this.realm, n2 = this.object, i2 = !!t3;
      return new y.BooleanValue(r2, E.Properties.DefinePropertyOrThrow(r2, n2, e3, new P.PropertyDescriptor({ value: r2.intrinsics.undefined, writable: true, enumerable: true, configurable: i2 })));
    } }, { key: "CreateImmutableBinding", value: function(e3, t3) {
      (0, b.default)(false);
    } }, { key: "InitializeBinding", value: function(e3, t3) {
      return this.SetMutableBinding(e3, t3, false);
    } }, { key: "SetMutableBinding", value: function(e3, t3, r2) {
      var n2 = this.realm, i2 = this.object;
      return new y.BooleanValue(n2, E.Properties.Set(n2, i2, e3, t3, r2));
    } }, { key: "GetBindingValue", value: function(e3, t3) {
      var r2 = this.realm, n2 = this.object;
      if (!(0, w.HasProperty)(r2, n2, e3)) {
        if (t3) throw r2.createErrorThrowCompletion(r2.intrinsics.ReferenceError);
        return r2.intrinsics.undefined;
      }
      return (0, w.Get)(r2, n2, e3);
    } }, { key: "DeleteBinding", value: function(e3) {
      return this.object.$Delete(e3);
    } }, { key: "HasThisBinding", value: function() {
      return false;
    } }, { key: "HasSuperBinding", value: function() {
      return false;
    } }, { key: "WithBaseObject", value: function() {
      return this.withEnvironment ? this.object : this.realm.intrinsics.undefined;
    } }]), t2;
  })();
  t.ObjectEnvironmentRecord = D;
  var N = (function(e2) {
    function t2() {
      return l(this, t2), a(this, o(t2).apply(this, arguments));
    }
    return s(t2, V), f(t2, [{ key: "BindThisValue", value: function(e3) {
      var t3 = this.realm;
      if ((0, b.default)("lexical" !== this.$ThisBindingStatus, "this binding status shouldn't be lexical"), "initialized" === this.$ThisBindingStatus) throw t3.createErrorThrowCompletion(t3.intrinsics.ReferenceError);
      return this.$ThisValue = e3, this.$ThisBindingStatus = "initialized", e3;
    } }, { key: "HasThisBinding", value: function() {
      return "lexical" !== this.$ThisBindingStatus;
    } }, { key: "HasSuperBinding", value: function() {
      return "lexical" !== this.$ThisBindingStatus && void 0 !== this.$HomeObject;
    } }, { key: "GetThisBinding", value: function() {
      var e3 = this.realm;
      if ((0, b.default)("lexical" !== this.$ThisBindingStatus, "this binding status shouldn't be lexical"), "uninitialized" === this.$ThisBindingStatus) throw e3.createErrorThrowCompletion(e3.intrinsics.ReferenceError);
      return this.$ThisValue;
    } }, { key: "GetSuperBase", value: function() {
      var e3 = this.$HomeObject;
      return void 0 === e3 ? this.realm.intrinsics.undefined : ((0, b.default)(e3 instanceof y.ObjectValue, "expected object value"), e3.$GetPrototypeOf());
    } }]), t2;
  })();
  t.FunctionEnvironmentRecord = N;
  var I = (function(e2) {
    function t2() {
      return l(this, t2), a(this, o(t2).apply(this, arguments));
    }
    return s(t2, _), f(t2, [{ key: "HasBinding", value: function(e3) {
      return !!this.$DeclarativeRecord.HasBinding(e3) || this.$ObjectRecord.HasBinding(e3);
    } }, { key: "CreateMutableBinding", value: function(e3, t3) {
      var r2 = this.realm, n2 = this.$DeclarativeRecord;
      if (n2.HasBinding(e3)) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      return n2.CreateMutableBinding(e3, t3, true);
    } }, { key: "CreateImmutableBinding", value: function(e3, t3) {
      var r2 = this.realm, n2 = this.$DeclarativeRecord;
      if (n2.HasBinding(e3)) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      return n2.CreateImmutableBinding(e3, t3, true);
    } }, { key: "InitializeBinding", value: function(e3, t3) {
      var r2 = this.$DeclarativeRecord;
      return r2.HasBinding(e3) ? r2.InitializeBinding(e3, t3) : this.$ObjectRecord.InitializeBinding(e3, t3);
    } }, { key: "SetMutableBinding", value: function(e3, t3, r2) {
      var n2 = this.$DeclarativeRecord;
      return n2.HasBinding(e3) ? n2.SetMutableBinding(e3, t3, r2) : this.$ObjectRecord.SetMutableBinding(e3, t3, r2);
    } }, { key: "GetBindingValue", value: function(e3, t3) {
      var r2 = this.$DeclarativeRecord;
      return r2.HasBinding(e3) ? r2.GetBindingValue(e3, t3) : this.$ObjectRecord.GetBindingValue(e3, t3);
    } }, { key: "DeleteBinding", value: function(e3) {
      var t3 = this.realm, r2 = this.$DeclarativeRecord;
      if (r2.HasBinding(e3)) return r2.DeleteBinding(e3);
      var n2 = this.$ObjectRecord, i2 = n2.object;
      if ((0, w.HasOwnProperty)(t3, i2, e3)) {
        var a2 = n2.DeleteBinding(e3);
        if (a2) {
          var o2 = this.$VarNames;
          o2.indexOf(e3) >= 0 && o2.splice(o2.indexOf(e3), 1);
        }
        return a2;
      }
      return true;
    } }, { key: "HasThisBinding", value: function() {
      return true;
    } }, { key: "HasSuperBinding", value: function() {
      return true;
    } }, { key: "WithBaseObject", value: function() {
      return this.realm.intrinsics.undefined;
    } }, { key: "GetThisBinding", value: function() {
      return (0, b.default)(this.$GlobalThisValue), this.$GlobalThisValue;
    } }, { key: "HasVarDeclaration", value: function(e3) {
      return this.$VarNames.indexOf(e3) >= 0;
    } }, { key: "HasLexicalDeclaration", value: function(e3) {
      return this.$DeclarativeRecord.HasBinding(e3);
    } }, { key: "HasRestrictedGlobalProperty", value: function(e3) {
      var t3 = this.$ObjectRecord.object, r2 = t3.$GetOwnProperty(e3);
      return !!r2 && (E.Properties.ThrowIfMightHaveBeenDeleted(r2), !(r2 = r2.throwIfNotConcrete(t3.$Realm)).configurable);
    } }, { key: "CanDeclareGlobalVar", value: function(e3) {
      var t3 = this.realm, r2 = this.$ObjectRecord.object;
      return !!(0, w.HasOwnProperty)(t3, r2, e3) || (0, w.IsExtensible)(t3, r2);
    } }, { key: "CanDeclareGlobalFunction", value: function(e3) {
      var t3 = this.realm, r2 = this.$ObjectRecord.object, n2 = r2.$GetOwnProperty(e3);
      return n2 ? (E.Properties.ThrowIfMightHaveBeenDeleted(n2), !!(n2 = n2.throwIfNotConcrete(r2.$Realm)).configurable || !!((0, w.IsDataDescriptor)(t3, n2) && n2.writable && n2.enumerable)) : (0, w.IsExtensible)(t3, r2);
    } }, { key: "CreateGlobalVarBinding", value: function(e3, t3) {
      var r2 = this.realm, n2 = this.$ObjectRecord, i2 = n2.object, a2 = (0, w.HasOwnProperty)(r2, i2, e3), o2 = (0, w.IsExtensible)(r2, i2);
      !a2 && o2 && (n2.CreateMutableBinding(e3, t3), n2.InitializeBinding(e3, this.realm.intrinsics.undefined));
      var s2 = this.$VarNames;
      s2.indexOf(e3) < 0 && s2.push(e3);
    } }, { key: "CreateGlobalFunctionBinding", value: function(e3, t3, r2) {
      var n2, i2 = this.$ObjectRecord.object, a2 = i2.$GetOwnProperty(e3);
      a2 && (a2 = a2.throwIfNotConcrete(i2.$Realm)), !a2 || a2.configurable ? n2 = new P.PropertyDescriptor({ value: t3, writable: true, enumerable: true, configurable: r2 }) : (E.Properties.ThrowIfMightHaveBeenDeleted(a2), n2 = new P.PropertyDescriptor({ value: t3 })), E.Properties.DefinePropertyOrThrow(this.realm, i2, e3, n2), E.Properties.Set(this.realm, i2, e3, t3, false);
      var o2 = this.$VarNames;
      o2.indexOf(e3) < 0 && o2.push(e3);
    } }]), t2;
  })();
  t.GlobalEnvironmentRecord = I;
  var k = 0, j = (function() {
    function e2(t2) {
      l(this, e2), (0, b.default)(t2, "expected realm"), this.realm = t2, this.destroyed = false, this._uid = k++;
    }
    return f(e2, [{ key: "destroy", value: function() {
      this.destroyed = true, this.environmentRecord instanceof V && (this.environmentRecord.frozen = true);
    } }, { key: "assignToGlobal", value: function(e3, t2) {
      var r2 = this.evaluate(e3, false);
      E.Properties.PutValue(this.realm, r2, t2);
    } }, { key: "evaluateCompletionDeref", value: function(e3, t2, r2) {
      var n2 = this.evaluateCompletion(e3, t2, r2);
      return n2 instanceof R && (n2 = E.Environment.GetValue(this.realm, n2)), n2;
    } }, { key: "evaluateCompletion", value: function(e3, t2, r2) {
      try {
        return this.evaluate(e3, t2, r2);
      } catch (e4) {
        if (e4 instanceof d.AbruptCompletion) return e4;
        if (e4 instanceof Error) throw e4;
        throw new h.FatalError(e4);
      }
    } }, { key: "evaluateAbstractCompletion", value: function(e3, t2, r2) {
      try {
        return this.evaluateAbstract(e3, t2, r2);
      } catch (e4) {
        if (e4 instanceof d.Completion) return e4;
        if (e4 instanceof Error) throw e4;
        if (e4 instanceof Object) throw new h.FatalError(e4.constructor.name + ": " + e4);
        throw new h.FatalError(e4);
      }
    } }, { key: "concatenateAndParse", value: function(e3) {
      var t2 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "script", n2 = [], i2 = {}, a2 = [], o2 = true, s2 = false, u2 = void 0;
      try {
        for (var l2, c2 = function() {
          var e4 = l2.value;
          try {
            var o3 = t2.realm.statistics.parsing.measure(function() {
              return (0, m.default)(t2.realm, e4.fileContents, e4.filePath, r2);
            }), s3 = e4.sourceMapContents;
            s3 && s3.length > 0 && t2.realm.statistics.fixupSourceLocations.measure(function() {
              return t2.fixupSourceLocations(o3, s3);
            }), t2.realm.statistics.fixupFilenames.measure(function() {
              return t2.fixupFilenames(o3);
            }), n2 = n2.concat(o3.program.body), i2[e4.filePath] = e4.fileContents, a2 = a2.concat(o3.program.directives);
          } catch (r3) {
            if (r3 instanceof d.ThrowCompletion) {
              var u3 = r3.value;
              if (u3 instanceof y.ObjectValue) {
                var c3 = u3._SafeGetDataPropertyValue("message");
                if (c3 instanceof y.StringValue) {
                  c3.value = "Syntax error: ".concat(c3.value), r3.location.source = e4.filePath, r3.location.start = { line: r3.location.line, column: r3.location.column }, r3.location.end = { line: r3.location.line, column: r3.location.column };
                  var f3 = new h.CompilerDiagnostic(c3.value, r3.location, "PP1004", "FatalError");
                  throw t2.realm.handleError(f3), new h.FatalError(c3.value);
                }
              }
            }
            throw r3;
          }
        }, f2 = e3[Symbol.iterator](); !(o2 = (l2 = f2.next()).done); o2 = true) c2();
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return [p.file(p.program(n2, a2)), i2];
    } }, { key: "executeSources", value: function(e3) {
      var t2, r2, i2 = this, a2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "script", o2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, s2 = new v.ExecutionContext();
      s2.lexicalEnvironment = this, s2.variableEnvironment = this, s2.realm = this.realm, this.realm.pushContext(s2);
      try {
        var u2, l2 = n(this.concatenateAndParse(e3, a2), 2);
        u2 = l2[0], r2 = l2[1], o2 && o2(u2), t2 = this.realm.statistics.evaluation.measure(function() {
          return i2.evaluateCompletion(u2, false);
        });
      } finally {
        this.realm.popContext(s2), this.realm.onDestroyScope(s2.lexicalEnvironment), this.destroyed || this.realm.onDestroyScope(this), (0, b.default)(0 === this.realm.activeLexicalEnvironments.size, "expected 0 active lexical environments, got ".concat(this.realm.activeLexicalEnvironments.size));
      }
      return t2 instanceof d.AbruptCompletion ? [t2, r2] : [E.Environment.GetValue(this.realm, t2), r2];
    } }, { key: "execute", value: function(e3, t2) {
      var r2, n2, i2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "", a2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "script", o2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0, s2 = new v.ExecutionContext();
      s2.lexicalEnvironment = this, s2.variableEnvironment = this, s2.realm = this.realm, this.realm.pushContext(s2);
      try {
        try {
          r2 = (0, m.default)(this.realm, e3, t2, a2);
        } catch (e4) {
          if (e4 instanceof d.ThrowCompletion) return e4;
          throw e4;
        }
        o2 && o2(r2), i2.length > 0 && this.fixupSourceLocations(r2, i2), this.fixupFilenames(r2), n2 = this.evaluateCompletion(r2, false);
      } finally {
        this.realm.popContext(s2), s2.lexicalEnvironment !== this && this.realm.onDestroyScope(s2.lexicalEnvironment), (0, b.default)(1 === this.realm.activeLexicalEnvironments.size, "expected 1 active lexical environment, got ".concat(this.realm.activeLexicalEnvironments.size));
      }
      return n2 instanceof d.AbruptCompletion ? n2 : E.Environment.GetValue(this.realm, n2);
    } }, { key: "fixupSourceLocations", value: function(e3, t2) {
      (0, b.default)(e3.loc);
      var r2 = e3.loc.source;
      (0, b.default)(void 0 !== r2);
      var n2 = /* @__PURE__ */ new Map(), i2 = new C.SourceMapConsumer(t2);
      function a2(e4) {
        var t3 = n2.get(e4);
        return void 0 === t3 && n2.set(e4, t3 = { originalPosition: i2.originalPositionFor(e4), newLine: e4.line, newColumn: e4.column, rewritten: false }), t3;
      }
      function o2(e4, t3, r3) {
        if (!t3.rewritten) {
          var n3 = t3.originalPosition;
          if (null == n3.source) {
            (0, b.default)(null != r3.originalPosition.source);
            var i3 = t3.newLine - r3.newLine;
            e4.line = Math.max(1, r3.originalPosition.line + i3);
            var a3 = t3.newColumn - r3.newColumn;
            e4.column = Math.max(0, r3.originalPosition.column + a3);
          } else (0, b.default)("number" == typeof n3.line), e4.line = n3.line, (0, b.default)("number" == typeof n3.column), e4.column = n3.column;
          t3.rewritten = true;
        }
      }
      function s2(e4) {
        if (null != e4 && void 0 !== e4.source && e4.source === r2) {
          var t3 = e4.start, n3 = e4.end, i3 = a2(t3), s3 = a2(n3), u3 = i3.originalPosition, l2 = s3.originalPosition;
          (0, b.default)(i3.newLine <= s3.newLine), (0, b.default)(i3.newLine !== s3.newLine || i3.newColumn <= s3.newColumn);
          var c2 = u3.source || l2.source;
          c2 && (o2(t3, i3, s3), o2(n3, s3, i3), (0, b.default)(e4.source !== c2), e4.source = c2);
        }
      }
      function u2(e4) {
        if (e4) {
          var t3 = true, r3 = false, n3 = void 0;
          try {
            for (var i3, a3 = e4[Symbol.iterator](); !(t3 = (i3 = a3.next()).done); t3 = true) {
              s2(i3.value.loc);
            }
          } catch (e5) {
            r3 = true, n3 = e5;
          } finally {
            try {
              t3 || null == a3.return || a3.return();
            } finally {
              if (r3) throw n3;
            }
          }
        }
      }
      (0, g.default)(e3, function(e4) {
        return s2(e4.loc), u2(e4.leadingComments), u2(e4.innerComments), u2(e4.trailingComments), false;
      });
    } }, { key: "fixupFilenames", value: function(e3) {
      function t2(e4) {
        if (e4) {
          var t3 = true, r2 = false, n2 = void 0;
          try {
            for (var i2, a2 = e4[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
              var o2 = i2.value, s2 = o2.loc;
              s2 && s2.source ? s2.filename = s2.source : o2.loc = null;
            }
          } catch (e5) {
            r2 = true, n2 = e5;
          } finally {
            try {
              t3 || null == a2.return || a2.return();
            } finally {
              if (r2) throw n2;
            }
          }
        }
      }
      (0, g.default)(e3, function(e4) {
        var r2 = e4.loc;
        return r2 && r2.source ? r2.filename = r2.source : e4.loc = null, t2(e4.leadingComments), t2(e4.innerComments), t2(e4.trailingComments), false;
      });
    } }, { key: "evaluate", value: function(e3, t2, r2) {
      this.realm.debuggerInstance && this.realm.debuggerInstance.checkForActions(e3), this.realm.debugReproManager && void 0 !== e3.loc && null !== e3.loc && e3.loc.source && this.realm.debugReproManager.addSourceFile(e3.loc.source);
      var n2 = this.evaluateAbstract(e3, t2, r2);
      return (0, b.default)(n2 instanceof y.Value || n2 instanceof R, e3.type), n2;
    } }, { key: "evaluateAbstract", value: function(e3, t2, r2) {
      this.realm.currentLocation = e3.loc, this.realm.testTimeout();
      var n2 = this.realm.evaluators[e3.type];
      if (n2) return this.realm.statistics.evaluatedNodes++, n2(e3, t2, this, this.realm, r2);
      throw new TypeError("Unsupported node type ".concat(e3.type));
    } }, { key: "evaluateDeref", value: function(e3, t2, r2) {
      var n2 = this.evaluate(e3, t2, r2);
      return n2 instanceof R && (n2 = E.Environment.GetValue(this.realm, n2)), n2;
    } }]), e2;
  })();
  function F(e2) {
    var t2 = e2.getType();
    return t2 === y.Value || t2 === T.default || t2 === y.BooleanValue || t2 === y.StringValue || t2 === y.SymbolValue || t2 === y.NumberValue || t2 === y.IntegralValue;
  }
  t.LexicalEnvironment = j;
  var R = function e2(t2, r2, n2, i2) {
    l(this, e2), (0, b.default)(t2 instanceof y.AbstractObjectValue || void 0 === t2 || t2 instanceof y.ObjectValue || t2 instanceof _ || F(t2)), this.base = t2, this.referencedName = r2, (0, b.default)(!(r2 instanceof y.AbstractValue) || !(r2.mightNotBeString() && r2.mightNotBeNumber() && !r2.isSimpleObject()) || r2.$Realm.isInPureScope()), this.strict = n2, this.thisValue = i2, (0, b.default)(void 0 === i2 || !(t2 instanceof _));
  };
  t.Reference = R;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.IsConcatSpreadable = function(e2, t2) {
    var r2 = t2;
    if (!r2.mightBeObject()) return false;
    r2 = r2.throwIfNotObject();
    var n2 = (0, i.Get)(e2, r2, e2.intrinsics.SymbolIsConcatSpreadable);
    return n2.mightBeUndefined() ? (n2.throwIfNotConcrete(), p(e2, r2)) : o.To.ToBooleanPartial(e2, n2);
  }, t.IsGenericDescriptor = function(e2, t2) {
    return (function(e3, t3) {
      return !!t3 && !c(e3, t3) && !f(e3, t3);
    })(e2, t2) && t2 instanceof l.PropertyDescriptor;
  }, t.IsAccessorDescriptor = c, t.IsDataDescriptor = f, t.OrdinaryIsExtensible = function(e2, t2) {
    return t2.getExtensible();
  }, t.IsExtensible = function(e2, t2) {
    return t2.$IsExtensible();
  }, t.IsCallable = function e2(t2, r2) {
    var n2 = r2;
    if (!n2.mightBeObject()) return false;
    if ((0, u.HasCompatibleType)(n2, a.FunctionValue)) return true;
    if (n2.isSimpleObject()) return false;
    if (n2 instanceof a.AbstractObjectValue && !n2.values.isTop()) {
      var i2, o2 = true, s2 = false, l2 = void 0;
      try {
        for (var c2, f2 = n2.values.getElements()[Symbol.iterator](); !(o2 = (c2 = f2.next()).done); o2 = true) {
          var p2 = c2.value, d2 = e2(t2, p2);
          void 0 === i2 ? i2 = d2 : i2 !== d2 && n2.throwIfNotConcreteObject();
        }
      } catch (e3) {
        s2 = true, l2 = e3;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw l2;
        }
      }
      if (void 0 !== i2) return i2;
    }
    n2 = n2.throwIfNotConcreteObject();
    if (n2.$Call) return true;
    return false;
  }, t.IsConstructor = function(e2, t2) {
    var r2 = t2;
    return !!r2.mightBeObject() && !!(r2 = r2.throwIfNotConcreteObject()).$Construct;
  }, t.IsInteger = function(e2, t2) {
    return (0, s.default)("number" == typeof t2, "Type(argument) is not number"), !isNaN(t2) && t2 !== 1 / 0 && t2 !== -1 / 0 && Math.floor(Math.abs(t2)) === Math.abs(t2);
  }, t.IsPropertyKey = function(e2, t2) {
    if ("string" == typeof t2) return true;
    if (t2 instanceof a.StringValue) return true;
    if (t2 instanceof a.SymbolValue) return true;
    if (t2 instanceof a.AbstractValue) throw a.AbstractValue.reportIntrospectionError(t2), new n.FatalError();
    return false;
  }, t.IsArray = p, t.IsInTailPosition = function(e2, t2) {
    return false;
  }, t.IsRegExp = function(e2, t2) {
    var r2 = t2;
    if (!r2.mightBeObject()) return false;
    r2 = r2.throwIfNotObject();
    var n2 = (0, i.Get)(e2, r2, e2.intrinsics.SymbolMatch);
    return void 0 !== n2 ? true === o.To.ToBooleanPartial(e2, n2) : void 0 !== r2.$RegExpMatcher;
  }, t.IsIdentifierRef = function(e2, t2) {
    switch (t2.type) {
      case "Identifier":
        return true;
      case "MemberExpression":
        return false;
      default:
        throw Error("Unexpected AST form : " + t2.type);
    }
  }, t.IsFunctionDefinition = d, t.IsAnonymousFunctionDefinition = function(e2, t2) {
    return !!d(e2, t2) && true !== (0, u.HasName)(e2, t2);
  }, t.IsArrayIndex = function(e2, t2) {
    var r2;
    if ("string" == typeof t2) r2 = t2;
    else {
      if (!(t2 instanceof a.StringValue)) return false;
      r2 = t2.value;
    }
    var n2 = o.To.ToUint32(e2, new a.StringValue(e2, r2));
    return n2 !== Math.pow(2, 32) - 1 && o.To.ToString(e2, new a.NumberValue(e2, n2)) === r2;
  }, t.IsPromise = function(e2, t2) {
    var r2 = t2;
    return !!r2.mightBeObject() && void 0 !== (r2 = r2.throwIfNotConcreteObject()).$PromiseState;
  }, t.IsDetachedBuffer = function(e2, t2) {
    return (0, s.default)(t2 instanceof a.ObjectValue && "$ArrayBufferData" in t2), null === t2.$ArrayBufferData;
  }, t.IsIntrospectionError = function(e2, t2) {
    var r2 = t2;
    return !!r2.mightBeObject() && (r2 = r2.throwIfNotConcreteObject()).$GetPrototypeOf() === e2.intrinsics.__IntrospectionErrorPrototype;
  }, t.IsStatic = function(e2) {
    return e2.static;
  };
  var n = r(4), i = r(13), a = r(0), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(20), l = r(6);
  function c(e2, t2) {
    return (function(e3, t3) {
      return !!t3 && (void 0 !== (t3 = t3.throwIfNotConcrete(e3)).get || void 0 !== t3.set);
    })(e2, t2) && t2 instanceof l.PropertyDescriptor;
  }
  function f(e2, t2) {
    return (function(e3, t3) {
      return !!t3 && (void 0 !== (t3 = t3.throwIfNotConcrete(e3)).value || void 0 !== t3.writable);
    })(e2, t2) && t2 instanceof l.PropertyDescriptor;
  }
  function p(e2, t2) {
    if (!t2.mightBeObject()) return false;
    if (t2 instanceof a.ArrayValue || t2 === e2.intrinsics.ArrayPrototype) return true;
    if (t2 instanceof a.ProxyValue) {
      if (!t2.$ProxyHandler || t2.$ProxyHandler instanceof a.NullValue) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return p(e2, t2.$ProxyTarget);
    }
    return t2 instanceof a.AbstractValue && !t2.isSimpleObject() && t2.throwIfNotConcrete(), false;
  }
  function d(e2, t2) {
    switch (t2.type) {
      case "ThisExpression":
      case "Identifier":
      case "StringLiteral":
      case "NumericLiteral":
      case "BooleanLiteral":
      case "NullLiteral":
      case "RegExpLiteral":
      case "ArrayExpression":
      case "ObjectExpression":
      case "TemplateLiteral":
      case "ConditionalExpression":
      case "UpdateExpression":
        return false;
      case "BinaryExpression":
      case "LogicalExpression":
        return false;
      case "MemberExpression":
      case "CallExpression":
      case "NewExpression":
      case "MetaProperty":
      case "TaggedTemplateExpression":
      case "UnaryExpression":
      case "AssignmentExpression":
      case "SequenceExpression":
        return false;
      case "ArrowFunctionExpression":
      case "FunctionExpression":
      case "ClassExpression":
        return true;
      case "JSXElement":
        return false;
      default:
        throw Error("Unexpected AST form : " + t2.type);
    }
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "TypesDomain", { enumerable: true, get: function() {
    return n.default;
  } }), Object.defineProperty(t, "ValuesDomain", { enumerable: true, get: function() {
    return i.default;
  } });
  var n = a(r(643)), i = a(r(642));
  function a(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.GetFunctionRealm = d, t.OrdinaryGet = function e2(t2, r2, n2, s2, f2) {
    var d2 = r2.unknownProperty;
    if (void 0 !== d2 && void 0 !== d2.descriptor && void 0 === r2.$GetOwnProperty(n2)) {
      var h2 = d2.descriptor;
      (0, c.default)(h2 instanceof p.PropertyDescriptor, "unknown properties are only created with Set and have equal descriptors");
      var y2, m2, g = h2.value;
      if ((0, c.default)(g instanceof o.AbstractValue), n2 instanceof o.StringValue ? y2 = n2 : "string" == typeof n2 && (y2 = new o.StringValue(t2, n2)), "widened numeric property" === g.kind) return (0, c.default)(r2 instanceof o.ArrayValue && o.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r2)), m2 = n2 instanceof o.StringValue ? n2.value : n2, (0, c.default)(s2 instanceof o.ObjectValue || s2 instanceof o.AbstractObjectValue), b(t2, s2, m2);
      if (!y2) throw o.AbstractValue.reportIntrospectionError(g, "abstract computed property name"), new i.FatalError();
      return v(t2, g, y2);
    }
    (0, c.default)((0, u.IsPropertyKey)(t2, n2), "expected property key");
    var w = r2.$GetOwnProperty(n2);
    if (void 0 === w || !(w instanceof p.AbstractJoinedDescriptor)) return R();
    var E = w.joinCondition;
    var S = w.descriptor1;
    var T = w.descriptor2;
    E = t2.simplifyAndRefineAbstractCondition(E);
    if (!E.mightNotBeTrue()) return w = S, R();
    if (!E.mightNotBeFalse()) return w = w.descriptor2, R();
    (0, c.default)(E instanceof o.AbstractValue);
    var A, C, P, O, x;
    try {
      w = S;
      var _ = l.Path.withCondition(E, function() {
        return void 0 !== w ? t2.evaluateForEffects(function() {
          return R();
        }, void 0, "OrdinaryGet/1") : (0, a.construct_empty_effects)(t2);
      });
      A = _.result, C = _.generator, P = _.modifiedBindings, O = _.modifiedProperties, x = _.createdObjects;
    } catch (e3) {
      if (e3 instanceof i.InfeasiblePathError) return w = T, R();
      throw e3;
    }
    var V, D, N, I, k;
    try {
      w = T;
      var j = l.Path.withInverseCondition(E, function() {
        return void 0 !== w ? t2.evaluateForEffects(function() {
          return R();
        }, void 0, "OrdinaryGet/2") : (0, a.construct_empty_effects)(t2);
      });
      V = j.result, D = j.generator, N = j.modifiedBindings, I = j.modifiedProperties, k = j.createdObjects;
    } catch (e3) {
      if (e3 instanceof i.InfeasiblePathError) return w = S, R();
      throw e3;
    }
    var F = l.Join.joinEffects(E, new a.Effects(A, C, P, O, x), new a.Effects(V, D, N, I, k));
    t2.applyEffects(F);
    return t2.returnOrThrowCompletion(F.result);
    function R() {
      var a2 = w ? void 0 === w.value ? t2.intrinsics.undefined : w.value : t2.intrinsics.undefined;
      if ((0, c.default)(a2 instanceof o.Value), !w || a2.mightHaveBeenDeleted()) {
        var l2 = r2.$GetPrototypeOf();
        if (l2 instanceof o.NullValue) return a2;
        if (a2.mightHaveBeenDeleted() && a2 instanceof o.AbstractValue) {
          var p2 = e2(t2, l2.throwIfNotConcreteObject(), n2, a2, true);
          if (p2 instanceof o.UndefinedValue) return a2;
          var d3 = o.AbstractValue.createFromBinaryOp(t2, "!==", a2, t2.intrinsics.empty);
          return o.AbstractValue.createFromConditionalOp(t2, d3, a2, p2);
        }
        return (0, c.default)(!w || a2 instanceof o.EmptyValue), l2.$Get(n2, s2);
      }
      if ((0, u.IsDataDescriptor)(t2, w)) return a2;
      if (f2) throw (0, c.default)(a2 instanceof o.AbstractValue), o.AbstractValue.reportIntrospectionError(a2), new i.FatalError();
      (0, c.default)((0, u.IsAccessorDescriptor)(t2, w), "expected accessor descriptor");
      var h3 = w.get;
      return !h3 || h3 instanceof o.UndefinedValue ? t2.intrinsics.undefined : (0, u.Call)(t2, h3, s2);
    }
  }, t.OrdinaryGetPartial = function(e2, t2, r2, a2) {
    if (a2 instanceof o.AbstractValue && a2.getType() === o.StringValue && "length" === r2) {
      var s2 = o.AbstractValue.createFromTemplate(e2, h, o.NumberValue, [a2]);
      return o.AbstractValue.convertToTemporalIfArgsAreTemporal(e2, s2, [a2]);
    }
    if (!(r2 instanceof o.AbstractValue)) return t2.$Get(r2, a2);
    if (r2.mightNotBeString() && r2.mightNotBeNumber() && !r2.isSimpleObject()) if (e2.isInPureScope()) l.Leak.value(e2, r2);
    else {
      var u2 = new i.CompilerDiagnostic("property key might not have a well behaved toString or be a symbol", e2.currentLocation, "PP0002", "RecoverableError");
      if ("Recover" !== e2.handleError(u2)) throw new i.FatalError();
    }
    if (!t2.isSimpleObject() || t2.mightBeLeakedObject()) {
      if (e2.isInPureScope()) return l.Leak.value(e2, a2), o.AbstractValue.createTemporalFromBuildFunction(e2, o.Value, [a2, r2], (0, f.createOperationDescriptor)("OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
      var d2 = new i.CompilerDiagnostic("unknown property access might need to invoke a getter", e2.currentLocation, "PP0030", "RecoverableError");
      if ("Recover" !== e2.handleError(d2)) throw new i.FatalError();
    }
    var y2;
    if (r2 = l.To.ToStringAbstract(e2, r2), t2.isPartialObject()) {
      if ((function e3(t3) {
        if (!(t3 instanceof o.AbstractValue)) return false;
        if ("widened" === t3.kind || "widened property" === t3.kind) return true;
        var r3 = true;
        var n2 = false;
        var i2 = void 0;
        try {
          for (var a3, s3 = t3.args[Symbol.iterator](); !(r3 = (a3 = s3.next()).done); r3 = true) {
            var u3 = a3.value;
            if (e3(u3)) return true;
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r3 || null == s3.return || s3.return();
          } finally {
            if (n2) throw i2;
          }
        }
        return false;
      })(r2)) return o.AbstractValue.createTemporalFromBuildFunction(e2, o.Value, [t2, r2], (0, f.createOperationDescriptor)("OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
      y2 = o.AbstractValue.createFromType(e2, o.Value, "sentinel member expression", [t2, r2]);
    } else y2 = t2.$Prototype === e2.intrinsics.null ? e2.intrinsics.undefined : o.AbstractValue.createTemporalFromBuildFunction(e2, o.Value, [t2.$Prototype, r2], (0, f.createOperationDescriptor)("OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
    var m2 = t2.unknownProperty;
    if (void 0 !== m2) {
      var g = m2.descriptor;
      if (void 0 !== g) {
        (0, c.default)(g instanceof p.PropertyDescriptor, "unknown properties are only created with Set and have equal descriptors");
        var w = g.value;
        if ((0, c.default)(w instanceof o.AbstractValue), "widened numeric property" === w.kind) return (0, c.default)(t2 instanceof o.ArrayValue && o.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(t2)), (0, c.default)(a2 instanceof o.ObjectValue || a2 instanceof o.AbstractObjectValue), b(e2, a2, r2 instanceof o.StringValue ? r2.value : r2);
        y2 = v(e2, w, r2);
      }
    }
    var E = true, S = false, T = void 0;
    try {
      for (var A, C = t2.properties[Symbol.iterator](); !(E = (A = C.next()).done); E = true) {
        var P = n(A.value, 2), O = P[0], x = P[1], _ = x.descriptor;
        if (void 0 !== _) {
          _ = _.throwIfNotConcrete(e2), (0, c.default)(void 0 !== _.value);
          var V = _.value;
          (0, c.default)(V instanceof o.Value);
          var D = o.AbstractValue.createFromBinaryOp(e2, "===", r2, new o.StringValue(e2, O), void 0, "check for known property");
          y2 = o.AbstractValue.createFromConditionalOp(e2, D, V, y2);
        }
      }
    } catch (e3) {
      S = true, T = e3;
    } finally {
      try {
        E || null == C.return || C.return();
      } finally {
        if (S) throw T;
      }
    }
    return y2;
  }, t.GetGlobalObject = function(e2) {
    return e2.getRunningContext().realm.$GlobalObject;
  }, t.GetSubstitution = function(e2, t2, r2, n2, i2, a2) {
    (0, c.default)("string" == typeof t2, "expected matched to be a stirng");
    var o2 = t2.length;
    (0, c.default)("string" == typeof r2, "expected matched to be a stirng");
    var s2 = r2.length;
    (0, c.default)(n2 >= 0, "expected position to be a nonegative integer"), (0, c.default)(n2 <= s2, "expected position to be less than string length"), (0, c.default)(Array.isArray(i2), "expected captures to be an array"), (0, c.default)("string" == typeof a2, "expected replacement to be a stirng");
    for (var u2 = n2 + o2, l2 = i2.length, f2 = "", p2 = 0; p2 < a2.length; ++p2) {
      var d2 = a2.charAt(p2);
      if ("$" !== d2 || p2 + 1 >= a2.length) f2 += d2;
      else {
        var h2 = a2.charAt(p2 + 1);
        if ("&" === h2) f2 += t2;
        else if ("$" === h2) f2 += "$";
        else if ("`" === h2) f2 += r2.substr(0, n2);
        else if ("'" === h2) f2 += r2.substr(u2);
        else if (h2 >= "0" && h2 <= "9") {
          var v2 = h2.charCodeAt(0) - "0".charCodeAt(0);
          if (p2 + 2 < a2.length) {
            var y2 = a2.charAt(p2 + 2);
            if (y2 >= "0" && y2 <= "9") {
              var m2 = 10 * v2 + (y2.charCodeAt(0) - "0".charCodeAt(0));
              m2 <= l2 && (v2 = m2, p2 += 1);
            }
          }
          f2 += v2 > 0 && v2 <= l2 ? i2[v2 - 1] || "" : "$" + v2;
        } else f2 += "$" + h2;
        p2 += 1;
      }
    }
    return f2;
  }, t.GetMethod = function(e2, t2, r2) {
    (0, c.default)((0, u.IsPropertyKey)(e2, r2), "expected property key");
    var n2 = m(e2, t2, r2);
    if ((0, u.HasSomeCompatibleType)(n2, o.NullValue, o.UndefinedValue)) return e2.intrinsics.undefined;
    if (!(0, u.IsCallable)(e2, n2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not callable");
    return n2;
  }, t.GetPrototypeFromConstructor = function(e2, t2, r2) {
    (0, c.default)(e2.intrinsics[r2], "not a valid proto ref"), (0, c.default)(true === (0, u.IsCallable)(e2, t2), "expected constructor to be callable");
    var n2 = y(e2, t2, new o.StringValue(e2, "prototype"));
    n2 instanceof o.ObjectValue || n2 instanceof o.AbstractObjectValue || (e2 = d(e2, t2), n2 = e2.intrinsics[r2]);
    return n2;
  }, t.Get = y, t.GetV = m, t.GetThisValue = function(e2, t2) {
    if ((0, c.default)(l.Environment.IsPropertyReference(e2, t2), "expected property reference"), l.Environment.IsSuperReference(e2, t2)) return (0, c.default)(void 0 !== t2.thisValue), t2.thisValue;
    var r2 = l.Environment.GetBase(e2, t2);
    return (0, c.default)(r2 instanceof o.Value), r2;
  }, t.GetNewTarget = function(e2) {
    var t2 = l.Environment.GetThisEnvironment(e2);
    if (!("$NewTarget" in t2)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "new.target not allowed here");
    return t2.$NewTarget || e2.intrinsics.undefined;
  }, t.GetTemplateObject = function(e2, t2) {
    var r2 = t2.quasis.map(function(e3) {
      return e3.value.raw;
    });
    var n2 = e2.$TemplateMap, i2 = true, a2 = false, u2 = void 0;
    try {
      for (var c2, f2 = n2[Symbol.iterator](); !(i2 = (c2 = f2.next()).done); i2 = true) {
        var d2 = c2.value, h2 = void 0;
        if (d2.$Strings.length === r2.length) {
          h2 = true;
          for (var v2 = 0; v2 < r2.length; ++v2) if (d2.$Strings[v2] !== r2[v2]) {
            h2 = false;
            break;
          }
        } else h2 = false;
        if (h2) return d2.$Array;
      }
    } catch (e3) {
      a2 = true, u2 = e3;
    } finally {
      try {
        i2 || null == f2.return || f2.return();
      } finally {
        if (a2) throw u2;
      }
    }
    var y2 = t2.quasis.map(function(e3) {
      return e3.value.cooked;
    }), m2 = y2.length, b2 = l.Create.ArrayCreate(e2, m2), g = l.Create.ArrayCreate(e2, m2), w = 0;
    for (; w < m2; ) {
      var E = l.To.ToString(e2, new o.NumberValue(e2, w)), S = new o.StringValue(e2, y2[w]);
      b2.$DefineOwnProperty(E, new p.PropertyDescriptor({ value: S, writable: false, enumerable: true, configurable: false }));
      var T = new o.StringValue(e2, r2[w]);
      g.$DefineOwnProperty(E, new p.PropertyDescriptor({ value: T, writable: false, enumerable: true, configurable: false })), w += 1;
    }
    return (0, s.SetIntegrityLevel)(e2, g, "frozen"), b2.$DefineOwnProperty("raw", new p.PropertyDescriptor({ value: g, writable: false, enumerable: false, configurable: false })), (0, s.SetIntegrityLevel)(e2, b2, "frozen"), n2.push({ $Strings: r2, $Array: b2 }), b2;
  }, t.GetFromArrayWithWidenedNumericProperty = b;
  var i = r(4), a = r(8), o = r(0), s = (r(10), r(184)), u = r(3), l = r(2), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), f = r(9), p = r(6);
  function d(e2, t2) {
    if ((0, c.default)((0, u.IsCallable)(e2, t2), "expected callable object"), t2 instanceof o.ProxyValue) {
      if (t2.$ProxyHandler instanceof o.NullValue) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "proxy handler is null");
      return (0, c.default)(t2.$ProxyTarget instanceof o.ObjectValue), d(e2, t2.$ProxyTarget);
    }
    return t2.$Realm ? t2.$Realm : t2 instanceof o.BoundFunctionValue ? d(e2, t2.$BoundTargetFunction) : e2;
  }
  var h = "(A).length";
  function v(e2, t2, r2) {
    if ("widened property" === t2.kind) {
      var n2 = t2.args[0];
      if (r2 instanceof o.StringValue) {
        var i2 = r2.value, a2 = +i2;
        i2 === a2 + "" && (r2 = new o.NumberValue(e2, a2));
      }
      return o.AbstractValue.createTemporalFromBuildFunction(e2, t2.getType(), [n2, r2], (0, f.createOperationDescriptor)("OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
    }
    (0, c.default)(3 === t2.args.length && "conditional" === t2.kind);
    var s2 = t2.args[0];
    (0, c.default)(s2 instanceof o.AbstractValue);
    var u2 = (function(e3, t3, r3) {
      return "template for property name condition" === t3.kind ? o.AbstractValue.createFromBinaryOp(e3, "===", t3.args[0], r3) : t3;
    })(e2, s2, r2), l2 = t2.args[1];
    l2 instanceof o.AbstractValue && 3 === l2.args.length && (l2 = v(e2, l2, r2));
    var p2 = t2.args[2];
    if (p2 instanceof o.AbstractValue) if ("template for prototype member expression" === p2.kind) {
      var d2 = p2.args[0];
      p2 = o.AbstractValue.createTemporalFromBuildFunction(e2, t2.getType(), [d2, r2], (0, f.createOperationDescriptor)("OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
    } else 3 === p2.args.length && (p2 = v(e2, p2, r2));
    return o.AbstractValue.createFromConditionalOp(e2, u2, l2, p2, t2.expressionLocation);
  }
  function y(e2, t2, r2) {
    return (0, c.default)(t2 instanceof o.ObjectValue || t2 instanceof o.AbstractObjectValue, "Not an object value"), (0, c.default)((0, u.IsPropertyKey)(e2, r2), "Not a valid property key"), t2.$Get(r2, t2);
  }
  function m(e2, t2, r2) {
    return (0, c.default)((0, u.IsPropertyKey)(e2, r2), "Not a valid property key"), l.To.ToObject(e2, t2).$Get(r2, t2);
  }
  function b(e2, t2, r2) {
    var n2 = t2.$GetPrototypeOf();
    if ((0, c.default)(n2 instanceof o.ObjectValue && n2 === e2.intrinsics.ArrayPrototype), "string" == typeof r2) {
      if ("length" === r2) return o.AbstractValue.createTemporalFromBuildFunction(e2, o.NumberValue, [t2], (0, f.createOperationDescriptor)("UNKNOWN_ARRAY_LENGTH"), { skipInvariant: true, isPure: true });
      var i2 = n2.properties.get(r2);
      if (void 0 !== i2) {
        var a2 = i2.descriptor;
        if (a2 instanceof p.PropertyDescriptor && a2.value instanceof o.NativeFunctionValue) return a2.value;
      }
    }
    var s2 = "string" == typeof r2 ? new o.StringValue(e2, r2) : r2;
    return o.AbstractValue.createTemporalFromBuildFunction(e2, o.Value, [t2, s2], (0, f.createOperationDescriptor)("UNKNOWN_ARRAY_GET_PARTIAL"), { skipInvariant: true, isPure: true });
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || i(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2) {
    if (Symbol.iterator in Object(e2) || "[object Arguments]" === Object.prototype.toString.call(e2)) return Array.from(e2);
  }
  function a(e2, t2) {
    return s(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || o();
  }
  function o() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function s(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.isReactElement = function(e2) {
    if (!(e2 instanceof c.ObjectValue)) return false;
    var t2 = e2.$Realm;
    if (!t2.react.enabled) return false;
    if (t2.react.reactElements.has(e2)) return true;
    if (!e2.properties.has("type") || !e2.properties.has("props") || !e2.properties.has("$$typeof")) return false;
    var r2 = V(t2, e2, "$$typeof"), n2 = t2.$GlobalObject;
    if (V(t2, n2, "Symbol") === t2.intrinsics.undefined) {
      if (r2 instanceof c.NumberValue) return 60103 === r2.value;
    } else if (r2 instanceof c.SymbolValue) {
      var i2 = t2.globalSymbolRegistry.find(function(e3) {
        return e3.$Symbol === r2;
      }), a2 = void 0 !== i2 && "react.element" === i2.$Key;
      if (a2) return t2.react.reactElements.set(e2, { createdDuringReconcilation: false, firstRenderOnly: false }), true;
    }
    return false;
  }, t.isReactPropsObject = function(e2) {
    if (!(e2 instanceof c.ObjectValue)) return false;
    var t2 = e2.$Realm;
    if (!t2.react.enabled) return false;
    if (t2.react.reactProps.has(e2)) return true;
    return false;
  }, t.getReactSymbol = E, t.isTagName = function(e2) {
    return "JSXIdentifier" === e2.type && /^[a-z]|\-/.test(e2.name);
  }, t.isReactComponent = S, t.valueIsClassComponent = function(e2, t2) {
    if (!(t2 instanceof c.FunctionValue)) return false;
    var r2 = (0, p.Get)(e2, t2, "prototype");
    if (r2 instanceof c.ObjectValue) return v.To.ToBooleanPartial(e2, (0, p.Get)(e2, r2, "isReactComponent"));
    return false;
  }, t.valueIsKnownReactAbstraction = T, t.valueIsReactLibraryObject = function(e2, t2, r2) {
    if (e2.fbLibraries.react === t2) return true;
    if (!(r2.tryQuery(function() {
      return (0, p.Get)(e2, t2, "version");
    }, void 0) instanceof c.StringValue)) return false;
    if (!(r2.tryQuery(function() {
      return (0, p.Get)(e2, t2, "createElement");
    }, void 0) instanceof c.FunctionValue)) return false;
    if (!(r2.tryQuery(function() {
      return (0, p.Get)(e2, t2, "cloneElement");
    }, void 0) instanceof c.FunctionValue)) return false;
    if (!(r2.tryQuery(function() {
      return (0, p.Get)(e2, t2, "isValidElement");
    }, void 0) instanceof c.FunctionValue)) return false;
    if (!(r2.tryQuery(function() {
      return (0, p.Get)(e2, t2, "Component");
    }, void 0) instanceof c.FunctionValue)) return false;
    if (!(r2.tryQuery(function() {
      return (0, p.Get)(e2, t2, "Children");
    }, void 0) instanceof c.ObjectValue)) return false;
    return false;
  }, t.valueIsLegacyCreateClassComponent = function(e2, t2) {
    if (!(t2 instanceof c.FunctionValue)) return false;
    var r2 = (0, p.Get)(e2, t2, "prototype");
    if (r2 instanceof c.ObjectValue) return r2.properties.has("__reactAutoBindPairs");
    return false;
  }, t.valueIsFactoryClassComponent = function(e2, t2) {
    if (t2 instanceof c.ObjectValue && !c.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(t2)) return v.To.ToBooleanPartial(e2, (0, p.Get)(e2, t2, "render"));
    return false;
  }, t.addKeyToReactElement = function(e2, t2) {
    var r2 = V(e2, t2, "type"), n2 = V(e2, t2, "ref"), i2 = V(e2, t2, "props"), a2 = V(e2, t2, "key") || e2.intrinsics.null, o2 = A("", e2.react.usedReactElementKeys), s2 = new c.StringValue(e2, o2);
    a2 !== e2.intrinsics.null && (s2 = (0, d.computeBinary)(e2, "+", a2, s2));
    return (0, h.default)(i2 instanceof c.ObjectValue), D(e2, r2, s2, n2, i2);
  }, t.getUniqueReactElementKey = A, t.forEachArrayValue = C, t.mapArrayValue = function(e2, t2, r2) {
    var n2 = (0, p.Get)(e2, t2, "length");
    (0, h.default)(n2 instanceof c.NumberValue, "TODO: support non-numeric length on mapArrayValue");
    for (var i2 = n2.value, a2 = v.Create.ArrayCreate(e2, i2), o2 = false, s2 = 0; s2 < i2; s2++) {
      var u2 = t2.properties.get("" + s2), l2 = u2 && u2.descriptor;
      if (l2) {
        (0, h.default)(l2 instanceof g.PropertyDescriptor);
        var f2 = l2.value;
        if (f2 instanceof c.Value) {
          var d2 = r2(f2, l2);
          d2 !== f2 && (o2 = true), v.Create.CreateDataPropertyOrThrow(e2, a2, "" + s2, d2);
          continue;
        }
      }
      v.Create.CreateDataPropertyOrThrow(e2, a2, "" + s2, e2.intrinsics.undefined);
    }
    return o2 ? a2 : t2;
  }, t.convertSimpleClassComponentToFunctionalComponent = function(e2, t2, r2) {
    var n2 = t2.properties.get("prototype");
    (0, h.default)(n2), (0, h.default)(n2.descriptor instanceof g.PropertyDescriptor), n2.descriptor.configurable = true, v.Properties.DeletePropertyOrThrow(e2, t2, "prototype"), t2.$FunctionKind = "normal", t2.$Prototype = e2.intrinsics.FunctionPrototype, t2.$FormalParameters = [m.identifier("props"), m.identifier("context")], r2.transforms.push(function(e3) {
      var t3 = m.functionExpression(null, [], m.blockStatement(e3));
      (0, y.default)(m.file(m.program([m.expressionStatement(t3)])), { "Identifier|ThisExpression": function(e4) {
        var t4 = e4.node;
        if (m.isIdentifier(t4) && "this" === t4.name || m.isThisExpression(t4)) {
          var r3 = e4.parentPath, n3 = r3.node;
          if (!m.isMemberExpression(n3)) throw new b.FatalError('conversion of a simple class component to functional component failed due to "this" not being replaced');
          r3.replaceWith(n3.property);
        }
      } }, void 0, {}, void 0), y.default.cache.clear();
    });
  }, t.convertFunctionalComponentToComplexClassComponent = function(e2, t2, r2, n2) {
    (0, h.default)(r2 instanceof c.ECMAScriptSourceFunctionValue || r2 instanceof c.BoundFunctionValue);
    var i2 = /* @__PURE__ */ new Map([["defaultProps", P(void 0, "defaultProps", t2)], ["propTypes", P(void 0, "propTypes", t2)]]), o2 = /* @__PURE__ */ new Map(), s2 = true, u2 = false, l2 = void 0;
    try {
      for (var f2, p2 = t2.properties[Symbol.iterator](); !(s2 = (f2 = p2.next()).done); s2 = true) {
        var d2 = a(f2.value, 2), v2 = d2[0], y2 = d2[1];
        x.has(v2) || i2.set(v2, y2);
      }
    } catch (e3) {
      u2 = true, l2 = e3;
    } finally {
      try {
        s2 || null == p2.return || p2.return();
      } finally {
        if (u2) throw l2;
      }
    }
    var b2 = true, g2 = false, w2 = void 0;
    try {
      for (var E2, S2 = t2.symbols[Symbol.iterator](); !(b2 = (E2 = S2.next()).done); b2 = true) {
        var T2 = a(E2.value, 2), A2 = T2[0], y2 = T2[1];
        o2.set(A2, y2);
      }
    } catch (e3) {
      g2 = true, w2 = e3;
    } finally {
      try {
        b2 || null == S2.return || S2.return();
      } finally {
        if (g2) throw w2;
      }
    }
    O(e2, r2, null, t2);
    var C2 = true, _2 = false, V2 = void 0;
    try {
      for (var D2, N2 = i2[Symbol.iterator](); !(C2 = (D2 = N2.next()).done); C2 = true) {
        var I2 = a(D2.value, 2), v2 = I2[0], y2 = I2[1];
        t2.properties.set(v2, y2);
      }
    } catch (e3) {
      _2 = true, V2 = e3;
    } finally {
      try {
        C2 || null == N2.return || N2.return();
      } finally {
        if (_2) throw V2;
      }
    }
    var k = true, j = false, F = void 0;
    try {
      for (var R, M = o2[Symbol.iterator](); !(k = (R = M.next()).done); k = true) {
        var B = a(R.value, 2), A2 = B[0], y2 = B[1];
        t2.symbols.set(A2, y2);
      }
    } catch (e3) {
      j = true, F = e3;
    } finally {
      try {
        k || null == M.return || M.return();
      } finally {
        if (j) throw F;
      }
    }
    n2.transforms.push(function(e3) {
      e3.unshift(m.variableDeclaration("var", [m.variableDeclarator(m.identifier("props"), m.memberExpression(m.thisExpression(), m.identifier("props"))), m.variableDeclarator(m.identifier("context"), m.memberExpression(m.thisExpression(), m.identifier("context")))]));
    });
  }, t.normalizeFunctionalComponentParamaters = function(e2) {
    var t2 = (function(e3, t3) {
      var r3 = e3.properties.get(t3);
      return (0, h.default)(r3), r3.descriptor;
    })(e2, "length");
    (0, h.default)(t2 instanceof g.PropertyDescriptor), t2.writable = false, t2.enumerable = false, t2.configurable = true, e2.$FormalParameters = e2.$FormalParameters.map(function(e3, t3) {
      return 0 === t3 ? m.isIdentifier(e3) ? e3 : m.identifier("props") : m.isIdentifier(e3) ? e3 : m.identifier("context");
    }), 1 === e2.$FormalParameters.length && e2.$FormalParameters.push(m.identifier("context"));
    var r2 = t2.value;
    (0, h.default)(r2 instanceof c.NumberValue), r2.value = e2.$FormalParameters.length;
  }, t.createReactHintObject = function(e2, t2, r2, n2) {
    return { firstRenderValue: n2, object: e2, propertyName: t2, args: r2 };
  }, t.getComponentTypeFromRootValue = function(e2, t2) {
    var r2 = T(e2, t2);
    if (!(t2 instanceof c.ECMAScriptSourceFunctionValue || t2 instanceof c.BoundFunctionValue || r2)) return null;
    if (!r2) return (0, h.default)(t2 instanceof c.ECMAScriptSourceFunctionValue || t2 instanceof c.BoundFunctionValue), t2;
    (0, h.default)(t2 instanceof c.AbstractValue);
    var n2 = e2.react.abstractHints.get(t2);
    if ((0, h.default)(n2), "string" != typeof n2 && n2.object === e2.fbLibraries.reactRelay) switch (n2.propertyName) {
      case "createFragmentContainer":
      case "createPaginationContainer":
      case "createRefetchContainer":
        (0, h.default)(Array.isArray(n2.args));
        var i2 = n2.args[0];
        return (0, h.default)(i2 instanceof c.ECMAScriptSourceFunctionValue || i2 instanceof c.BoundFunctionValue), i2;
      default:
        (0, h.default)(false, 'unsupported known React abstraction - ReactRelay property "'.concat(n2.propertyName, '" not supported'));
    }
    (0, h.default)(false, "unsupported known React abstraction");
  }, t.flagPropsWithNoPartialKeyOrRef = _, t.hasNoPartialKeyOrRef = function e2(t2, r2) {
    if (t2.react.propsWithNoPartialKeyOrRef.has(r2)) return true;
    if (r2 instanceof c.ObjectValue && !r2.isPartialObject()) return true;
    if (r2 instanceof c.AbstractObjectValue) {
      if (r2.values.isTop()) return false;
      var n2 = r2.values.getElements(), i2 = true, a2 = false, o2 = void 0;
      try {
        for (var s2, u2 = n2[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
          var l2 = s2.value;
          (0, h.default)(l2 instanceof c.ObjectValue);
          var f2 = e2(t2, l2);
          if (!f2) return false;
        }
      } catch (e3) {
        a2 = true, o2 = e3;
      } finally {
        try {
          i2 || null == u2.return || u2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      return true;
    }
    if (r2 instanceof c.ObjectValue && r2.properties.has("key") && r2.properties.has("ref")) return true;
    return false;
  }, t.flattenChildren = function(e2, t2) {
    var r2 = v.Create.ArrayCreate(e2, 0);
    return (function e3(t3, r3, n2) {
      C(t3, r3, function(r4) {
        if (r4 instanceof c.ArrayValue && !r4.intrinsicName) e3(t3, r4, n2);
        else {
          var i2 = (0, p.Get)(t3, n2, "length");
          (0, h.default)(i2 instanceof c.NumberValue), v.Properties.Set(t3, n2, "" + i2.value, r4, true);
        }
      });
    })(e2, t2, r2), r2.makeFinal(), r2;
  }, t.getProperty = V, t.createReactEvaluatedNode = function(e2, t2) {
    return { children: [], message: "", name: t2, status: e2 };
  }, t.getComponentName = function(e2, t2) {
    if (t2 instanceof c.SymbolValue && t2 === E("react.fragment", e2)) return "React.Fragment";
    if (t2 instanceof c.SymbolValue) return "unknown symbol";
    if (S(t2)) return "ReactElement";
    if (t2 === e2.intrinsics.undefined || t2 === e2.intrinsics.null) return "no name";
    (0, h.default)(t2 instanceof c.ECMAScriptSourceFunctionValue || t2 instanceof c.BoundFunctionValue || t2 instanceof c.AbstractObjectValue || t2 instanceof c.AbstractValue || t2 instanceof c.ObjectValue);
    var r2 = t2 instanceof c.BoundFunctionValue ? "bound " : "";
    if (t2.__originalName) return r2 + t2.__originalName;
    if (void 0 !== e2.fbLibraries.reactRelay && t2 === (0, p.Get)(e2, e2.fbLibraries.reactRelay, "QueryRenderer")) return r2 + "QueryRenderer";
    if (t2 instanceof c.ECMAScriptSourceFunctionValue && void 0 !== t2.$Prototype) {
      var n2 = (0, p.Get)(e2, t2, "name");
      if (n2 instanceof c.StringValue) return r2 + n2.value;
    }
    if (t2 instanceof c.ObjectValue) {
      var i2 = V(e2, t2, "$$typeof");
      if (i2 === E("react.forward_ref", e2)) return "forwarded ref";
    }
    if (t2 instanceof c.FunctionValue) return r2 + "anonymous";
    return "unknown";
  }, t.convertConfigObjectToReactComponentTreeConfig = function(e2, t2) {
    var r2, n2 = false, i2 = false;
    if (!(t2 instanceof c.UndefinedValue)) {
      var o2 = true, s2 = false, u2 = void 0;
      try {
        for (var l2, f2 = t2.properties[Symbol.iterator](); !(o2 = (l2 = f2.next()).done); o2 = true) {
          var p2 = a(l2.value, 1), d2 = p2[0], h2 = V(e2, t2, d2);
          if (h2 instanceof c.StringValue || h2 instanceof c.NumberValue || h2 instanceof c.BooleanValue) {
            var v2 = h2.value;
            if ("boolean" == typeof v2) "firstRenderOnly" === d2 ? n2 = v2 : "isRoot" === d2 && (i2 = v2);
            else if ("string" == typeof v2) {
              try {
                JSON.parse(v2);
              } catch (t3) {
                var y2 = new b.CompilerDiagnostic("Failed to parse model for component", e2.currentLocation, "PP1008", "FatalError");
                if ("Recover" !== e2.handleError(y2)) throw new b.FatalError();
              }
              "model" === d2 && (r2 = v2);
            }
          } else {
            var m2 = new b.CompilerDiagnostic("__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments", e2.currentLocation, "PP0024", "FatalError");
            if (e2.handleError(m2), "Fail" === e2.handleError(m2)) throw new b.FatalError();
          }
        }
      } catch (e3) {
        s2 = true, u2 = e3;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
    }
    return { firstRenderOnly: n2, isRoot: i2, modelString: r2 };
  }, t.getValueFromFunctionCall = function(e2, t2, r2, n2) {
    var i2 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
    (0, h.default)(t2.$Call, "Expected function to be a FunctionValue with $Call method");
    var a2, o2 = t2.$Call, s2 = t2.$Construct;
    try {
      var l2;
      i2 ? ((0, h.default)(s2), l2 = s2(n2, t2)) : l2 = o2(r2, n2), a2 = new u.SimpleNormalCompletion(l2);
    } catch (e3) {
      if (!(e3 instanceof u.AbruptCompletion)) throw e3;
      a2 = e3;
    }
    return e2.returnOrThrowCompletion(a2);
  }, t.createNoopFunction = function(e2) {
    if (void 0 !== e2.react.noopFunction) return e2.react.noopFunction;
    var t2 = new c.ECMAScriptSourceFunctionValue(e2);
    return t2.initialize([], m.blockStatement([])), e2.react.noopFunction = t2, t2;
  }, t.doNotOptimizeComponent = function(e2, t2) {
    if (t2 instanceof c.ObjectValue) {
      var r2 = (0, p.Get)(e2, t2, "__reactCompilerDoNotOptimize");
      if (r2 instanceof c.BooleanValue) return r2.value;
    }
    return false;
  }, t.createDefaultPropsHelper = function(e2) {
    var t2 = (0, l.parseExpression)("\n    function defaultPropsHelper(props, defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n      return props;\n    }\n  ", { plugins: ["flow"] }), r2 = new c.ECMAScriptSourceFunctionValue(e2);
    return r2.initialize(t2.params, t2.body), r2;
  }, t.createInternalReactElement = D, t.cloneProps = I, t.applyObjectAssignConfigsForReactElement = function(e2, t2, r2) {
    var i2 = (0, p.Get)(e2, e2.$GlobalObject, "Object");
    (0, h.default)(i2 instanceof c.ObjectValue);
    var a2 = (0, p.Get)(e2, i2, "assign");
    (0, h.default)(a2 instanceof c.ECMAScriptFunctionValue);
    var o2 = a2.$Call;
    (0, h.default)(void 0 !== o2), o2(e2.intrinsics.undefined, [t2].concat(n(r2)));
  }, t.canExcludeReactElementObjectProperty = function(e2, t2, r2, n2) {
    var i2 = e2.react.reactElements.get(t2);
    (0, h.default)(void 0 !== i2);
    var a2 = i2.firstRenderOnly, o2 = V(e2, t2, "type") instanceof c.StringValue;
    return a2 && o2 && ((function(e3) {
      return e3.length > 2 && "o" === e3[0].toLowerCase() && "n" === e3[1].toLowerCase();
    })(r2) || n2 instanceof c.FunctionValue);
  }, t.cloneReactElement = function(e2, t2, r2) {
    var n2 = V(e2, t2, "type"), i2 = V(e2, t2, "key"), a2 = V(e2, t2, "ref"), o2 = V(e2, t2, "props");
    (0, h.default)(o2 instanceof c.ObjectValue), r2 && (o2 = I(e2, o2));
    return D(e2, n2, i2, a2, o2);
  }, t.hardModifyReactObjectPropertyBinding = function(e2, t2, r2, n2) {
    (0, h.default)(t2.mightBeFinalObject() && !t2.mightNotBeFinalObject(), "hardModifyReactObjectPropertyBinding can only be used on final objects!");
    var i2 = t2.properties.get(r2);
    void 0 === i2 && (i2 = { object: t2, descriptor: new g.PropertyDescriptor({ configurable: true, enumerable: true, value: void 0, writable: true }), key: r2 });
    var a2 = i2.descriptor;
    (0, h.default)(a2 instanceof g.PropertyDescriptor && (0, p.IsDataDescriptor)(e2, a2));
    var o2 = new g.PropertyDescriptor(a2);
    o2.value = n2;
    var s2 = Object.assign({}, i2, { descriptor: o2 });
    t2.properties.set(r2, s2);
  };
  r(8);
  var u = r(7), l = r(34), c = r(0), f = r(9), p = r(3), d = r(62), h = w(r(1)), v = r(2), y = w(r(28)), m = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), b = r(4), g = r(6);
  function w(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function E(e2, t2) {
    var r2 = t2.react.symbols.get(e2);
    if (void 0 !== r2) return r2;
    var n2 = t2.intrinsics.Symbol.properties.get("for");
    if (void 0 !== n2) {
      var i2 = n2.descriptor;
      if (void 0 !== i2) {
        (0, h.default)(i2 instanceof g.PropertyDescriptor);
        var a2 = i2.value;
        a2 instanceof c.ObjectValue && "function" == typeof a2.$Call && (r2 = a2.$Call(t2.intrinsics.Symbol, [new c.StringValue(t2, e2)]), (0, h.default)(r2 instanceof c.SymbolValue), t2.react.symbols.set(e2, r2));
      }
    }
    return (0, h.default)(r2 instanceof c.SymbolValue, 'Symbol("'.concat(e2, '") could not be found in realm')), r2;
  }
  function S(e2) {
    return e2.length > 0 && e2[0] === e2[0].toUpperCase();
  }
  function T(e2, t2) {
    return t2 instanceof c.AbstractObjectValue && e2.react.abstractHints.has(t2);
  }
  function A(e2, t2) {
    var r2;
    do {
      r2 = Math.random().toString(36).replace(/[^a-z]+/g, "").substring(0, 2);
    } while (t2.has(r2));
    return t2.add(r2), void 0 !== e2 ? "".concat(r2).concat(e2) : r2;
  }
  function C(e2, t2, r2) {
    var n2 = (0, p.Get)(e2, t2, "length");
    (0, h.default)(n2 instanceof c.NumberValue, "TODO: support non-numeric length on forEachArrayValue");
    for (var i2 = n2.value, a2 = 0; a2 < i2; a2++) {
      var o2 = t2.properties.get("" + a2), s2 = o2 && o2.descriptor;
      if (s2) {
        (0, h.default)(s2 instanceof g.PropertyDescriptor);
        var u2 = s2.value;
        u2 instanceof c.Value && r2(u2, a2);
      }
    }
  }
  function P(e2, t2, r2) {
    return { descriptor: e2, key: t2, object: r2 };
  }
  function O(e2, t2, r2, n2) {
    if (t2 instanceof c.FunctionValue) return (function(e3, t3, r3, n3) {
      var i2;
      if (t3 instanceof c.ECMAScriptSourceFunctionValue) {
        i2 = n3 || new c.ECMAScriptSourceFunctionValue(e3, t3.intrinsicName), (0, h.default)(i2 instanceof c.ECMAScriptSourceFunctionValue), Object.assign(i2, t3);
        var o2 = (function(e4, t4, r4) {
          var n4 = /* @__PURE__ */ new Map(), i3 = true, o3 = false, s3 = void 0;
          try {
            for (var u3, l3 = t4[Symbol.iterator](); !(i3 = (u3 = l3.next()).done); i3 = true) {
              var c2 = a(u3.value, 2), f2 = c2[0], p2 = c2[1].descriptor;
              n4.set(f2, P((0, g.cloneDescriptor)(p2.throwIfNotConcrete(e4)), f2, r4));
            }
          } catch (e5) {
            o3 = true, s3 = e5;
          } finally {
            try {
              i3 || null == l3.return || l3.return();
            } finally {
              if (o3) throw s3;
            }
          }
          return n4;
        })(e3, t3.properties, i2);
        i2.properties = o2;
        var s2 = (function(e4, t4, r4) {
          var n4 = /* @__PURE__ */ new Map(), i3 = true, o3 = false, s3 = void 0;
          try {
            for (var u3, l3 = t4[Symbol.iterator](); !(i3 = (u3 = l3.next()).done); i3 = true) {
              var c2 = a(u3.value, 2), f2 = c2[0], p2 = c2[1].descriptor;
              n4.set(f2, P((0, g.cloneDescriptor)(p2.throwIfNotConcrete(e4)), f2, r4));
            }
          } catch (e5) {
            o3 = true, s3 = e5;
          } finally {
            try {
              i3 || null == l3.return || l3.return();
            } finally {
              if (o3) throw s3;
            }
          }
          return n4;
        })(e3, t3.symbols, i2);
        i2.symbols = s2;
        var u2 = t3.$HomeObject;
        (0, h.default)(u2 instanceof c.ObjectValue);
        var l2 = r3 || (function(e4, t4) {
          (0, h.default)(t4 instanceof c.ObjectValue);
          var r4 = new c.ObjectValue(e4, e4.intrinsics.ObjectPrototype, t4.intrinsicName);
          Object.assign(r4, t4);
          var n4 = true, i3 = false, o3 = void 0;
          try {
            for (var s3, u3 = t4.properties[Symbol.iterator](); !(n4 = (s3 = u3.next()).done); n4 = true) {
              var l3 = a(s3.value, 1), f2 = l3[0];
              if ("constructor" !== f2) {
                var d2 = (0, p.Get)(e4, t4, f2), y2 = O(e4, d2, t4);
                v.Properties.Set(e4, r4, f2, y2, false);
              }
            }
          } catch (e5) {
            i3 = true, o3 = e5;
          } finally {
            try {
              n4 || null == u3.return || u3.return();
            } finally {
              if (i3) throw o3;
            }
          }
          var m2 = true, b2 = false, g2 = void 0;
          try {
            for (var w2, E2 = t4.symbols[Symbol.iterator](); !(m2 = (w2 = E2.next()).done); m2 = true) {
              var S2 = a(w2.value, 1), T2 = S2[0], A2 = (0, p.Get)(e4, t4, T2), C2 = O(e4, A2, t4);
              v.Properties.Set(e4, r4, T2, C2, false);
            }
          } catch (e5) {
            b2 = true, g2 = e5;
          } finally {
            try {
              m2 || null == E2.return || E2.return();
            } finally {
              if (b2) throw g2;
            }
          }
          return r4;
        })(e3, u2);
        i2.$HomeObject = l2, u2.properties.has("constructor") && v.Properties.Set(e3, l2, "constructor", i2, false), t3.properties.has("prototype") && v.Properties.Set(e3, i2, "prototype", l2, false);
      }
      return (0, h.default)(i2 instanceof c.FunctionValue, "TODO: add support to cloneValue() for more function types"), i2;
    })(e2, t2, r2, n2);
    (0, h.default)(false, "TODO: add support to cloneValue() for more value types");
  }
  var x = /* @__PURE__ */ new Set(["length", "prototype", "arguments", "name", "caller"]);
  function _(e2, t2) {
    e2.react.propsWithNoPartialKeyOrRef.add(t2);
  }
  function V(e2, t2, r2) {
    if (t2 instanceof c.AbstractObjectValue) {
      if (t2.values.isTop()) return e2.intrinsics.undefined;
      var n2 = t2.values.getElements();
      (0, h.default)(1 === n2.size, "TODO: deal with multiple elements");
      var i2 = true, a2 = false, o2 = void 0;
      try {
        for (var s2, u2 = n2[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
          var l2 = s2.value;
          (0, h.default)(l2 instanceof c.ObjectValue, "TODO: deal with object set templates"), t2 = l2;
        }
      } catch (e3) {
        a2 = true, o2 = e3;
      } finally {
        try {
          i2 || null == u2.return || u2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      (0, h.default)(t2 instanceof c.ObjectValue);
    }
    var f2;
    if (!(f2 = "string" == typeof r2 ? t2.properties.get(r2) : t2.symbols.get(r2))) return e2.intrinsics.undefined;
    var p2 = f2.descriptor;
    if (!p2) return e2.intrinsics.undefined;
    (0, h.default)(p2 instanceof g.PropertyDescriptor);
    var d2 = p2.value;
    if (void 0 === d2) throw c.AbstractValue.reportIntrospectionError(t2, "react/utils/getProperty unsupported getter/setter property"), new b.FatalError();
    return (0, h.default)(d2 instanceof c.Value, "react/utils/getProperty should not be called on internal properties"), d2;
  }
  function D(e2, t2, r2, n2, i2) {
    var a2 = v.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype);
    t2 instanceof c.AbstractValue && "conditional" === t2.kind && (0, h.default)(false, "createInternalReactElement should never encounter a conditional type"), v.Create.CreateDataPropertyOrThrow(e2, a2, "$$typeof", E("react.element", e2)), v.Create.CreateDataPropertyOrThrow(e2, a2, "type", t2), v.Create.CreateDataPropertyOrThrow(e2, a2, "key", r2), v.Create.CreateDataPropertyOrThrow(e2, a2, "ref", n2), v.Create.CreateDataPropertyOrThrow(e2, a2, "props", i2), v.Create.CreateDataPropertyOrThrow(e2, a2, "_owner", e2.intrinsics.null), a2.makeFinal();
    var o2 = e2.react.activeReconciler, s2 = void 0 !== o2, u2 = !!s2 && o2.componentTreeConfig.firstRenderOnly;
    return e2.react.reactElements.set(a2, { createdDuringReconcilation: s2, firstRenderOnly: u2 }), (0, h.default)(e2.react.reactProps.has(i2) && i2.mightBeFinalObject(), "React props object is not correctly setup"), a2;
  }
  function N(e2, t2, r2) {
    var n2 = t2.temporalAlias;
    (0, h.default)(void 0 !== n2), "conditional" === n2.kind && (0, h.default)(false, "TODO applyClonedTemporalAlias conditional");
    var a2 = e2.getTemporalOperationEntryFromDerivedValue(n2);
    a2 instanceof f.TemporalObjectAssignEntry || (0, h.default)(false, "TODO nont TemporalObjectAssignEntry"), (0, h.default)(void 0 !== a2);
    var u2 = (function(e3) {
      return s(e3) || i(e3) || o();
    })(a2.args.map(function(e3) {
      return e3 === t2 ? r2 : e3;
    })), l2 = u2[0], p2 = u2.slice(1);
    (0, h.default)(l2 instanceof c.ObjectValue || l2 instanceof c.AbstractObjectValue), c.AbstractValue.createTemporalObjectAssign(e2, l2, p2);
  }
  function I(e2, t2, r2) {
    var n2 = new c.ObjectValue(e2, e2.intrinsics.ObjectPrototype), i2 = true, o2 = false, s2 = void 0;
    try {
      for (var u2, l2 = t2.properties[Symbol.iterator](); !(i2 = (u2 = l2.next()).done); i2 = true) {
        var f2 = a(u2.value, 2), p2 = f2[0], d2 = f2[1];
        d2 && d2.descriptor && ((0, h.default)(d2.descriptor instanceof g.PropertyDescriptor), d2.descriptor.enumerable && (void 0 !== r2 && "children" === p2 ? v.Properties.Set(e2, n2, p2, r2, true) : v.Properties.Set(e2, n2, p2, V(e2, t2, p2), true)));
      }
    } catch (e3) {
      o2 = true, s2 = e3;
    } finally {
      try {
        i2 || null == l2.return || l2.return();
      } finally {
        if (o2) throw s2;
      }
    }
    return t2.isPartialObject() && n2.makePartial(), t2.isSimpleObject() && n2.makeSimple(), e2.react.propsWithNoPartialKeyOrRef.has(t2) && _(e2, n2), void 0 !== t2.temporalAlias && N(e2, t2, n2), n2.makeFinal(), e2.react.reactProps.add(n2), n2;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ArgumentListEvaluation = m, t.Invoke = function(e2, t2, r2, n2) {
    (0, h.default)((0, l.IsPropertyKey)(e2, r2), "expected property key"), n2 || (n2 = []);
    var i2 = (0, p.GetV)(e2, t2, r2);
    return E(e2, i2, t2, n2);
  }, t.EvaluateCall = function(e2, t2, r2, n2, i2) {
    var o2, s2 = d.Environment.GetValue(e2, n2);
    if (n2 instanceof a.Reference) if (d.Environment.IsPropertyReference(e2, n2)) o2 = (0, p.GetThisValue)(e2, n2);
    else {
      var u2 = d.Environment.GetBase(e2, n2);
      (0, h.default)(u2 instanceof a.EnvironmentRecord), o2 = u2.WithBaseObject();
    }
    else o2 = e2.intrinsics.undefined;
    return b(e2, t2, r2, n2, s2, o2, i2);
  }, t.PrepareForOrdinaryCall = function(e2, t2, r2) {
    (0, h.default)(void 0 === r2 || r2 instanceof u.ObjectValue, "expected undefined or object value for new target");
    var n2 = e2.getRunningContext(), i2 = e2.createExecutionContext();
    i2.setFunction(t2), i2.setCaller(e2.getRunningContext());
    var a2 = e2;
    i2.realm = a2, i2.ScriptOrModule = t2.$ScriptOrModule;
    var o2 = d.Environment.NewFunctionEnvironment(e2, t2, r2);
    i2.lexicalEnvironment = o2, i2.variableEnvironment = o2, n2.suspend();
    try {
      e2.pushContext(i2);
    } catch (t3) {
      throw e2.onDestroyScope(o2), t3;
    }
    return i2;
  }, t.OrdinaryCallBindThis = function(e2, t2, r2, n2) {
    var i2 = t2.$ThisMode;
    if ("lexical" === i2) return e2.intrinsics.undefined;
    var o2, s2 = t2.$Realm, c2 = r2.lexicalEnvironment;
    if ("strict" === i2) o2 = n2;
    else if ((0, l.HasSomeCompatibleType)(n2, u.NullValue, u.UndefinedValue)) {
      var f2 = e2.$GlobalEnv, p2 = f2.environmentRecord;
      (0, h.default)(p2 instanceof a.GlobalEnvironmentRecord), o2 = p2.$GlobalThisValue;
    } else o2 = d.To.ToObject(s2, n2);
    return (0, h.default)(void 0 !== c2), c2.environmentRecord.BindThisValue(o2);
  }, t.OrdinaryCallEvaluateBody = function(e2, t2, r2) {
    if (t2 instanceof u.NativeFunctionValue) return (function(e3, t3, r3) {
      var i3 = e3.getRunningContext().lexicalEnvironment, s3 = i3.environmentRecord.GetThisBinding(), l3 = function(e4, n2) {
        try {
          (0, h.default)(e4 instanceof u.AbstractObjectValue || e4 instanceof u.ObjectValue || e4 instanceof u.NullValue || e4 instanceof u.UndefinedValue || (0, a.mightBecomeAnObject)(e4));
          var s4 = t3.callCallback(e4, r3, i3.environmentRecord.$NewTarget);
          return n2 ? s4.value : s4;
        } catch (e5) {
          if (e5 instanceof f.AbruptCompletion) return n2 ? e5.value : e5;
          throw e5 instanceof Error ? e5 : new o.FatalError(e5);
        }
      };
      if (s3 instanceof u.AbstractObjectValue && "conditional" === s3.kind) {
        var c2 = n(s3.args, 3), p3 = c2[0], d2 = c2[1], v3 = c2[2];
        return (0, h.default)(p3 instanceof u.AbstractValue), (function(t4) {
          return new f.ReturnCompletion(t4, e3.currentLocation);
        })(e3.evaluateWithAbstractConditional(p3, function() {
          return e3.evaluateForEffects(function() {
            return l3(d2, true);
          }, null, "callNativeFunctionValue consequent");
        }, function() {
          return e3.evaluateForEffects(function() {
            return l3(v3, true);
          }, null, "callNativeFunctionValue alternate");
        }));
      }
      var y2 = l3(s3, false);
      return y2 instanceof f.AbruptCompletion ? y2 : void 0;
    })(e2, t2, r2);
    (0, h.default)(t2 instanceof u.ECMAScriptSourceFunctionValue);
    var i2 = t2;
    if ("generator" === i2.$FunctionKind) {
      d.Functions.FunctionDeclarationInstantiation(e2, i2, r2);
      var s2 = d.Create.OrdinaryCreateFromConstructor(e2, i2, "GeneratorPrototype", { $GeneratorState: void 0, $GeneratorContext: void 0 }), l2 = i2.$ECMAScriptCode;
      return (0, h.default)(void 0 !== l2), (0, c.GeneratorStart)(e2, s2, l2), new f.ReturnCompletion(s2, e2.currentLocation);
    }
    var p2 = function() {
      d.Functions.FunctionDeclarationInstantiation(e2, i2, r2);
      var t3 = i2.$ECMAScriptCode;
      (0, h.default)(void 0 !== t3);
      var n2 = e2.getRunningContext();
      return v2(function() {
        var e3 = n2.lexicalEnvironment.evaluateCompletionDeref(t3, i2.$Strict);
        if (e3 instanceof f.AbruptCompletion || e3 instanceof f.JoinedNormalAndAbruptCompletions) return e3;
      });
    }, v2 = function(t3) {
      var r3, n2 = e2.savedCompletion;
      e2.savedCompletion = void 0;
      try {
        r3 = t3();
      } catch (e3) {
        throw (0, h.default)(!(e3 instanceof f.AbruptCompletion)), e3;
      }
      if (r3 = d.Functions.incorporateSavedCompletion(e2, r3), e2.savedCompletion = n2, void 0 !== r3) {
        if (r3 instanceof f.ThrowCompletion || r3 instanceof f.ReturnCompletion) return r3;
        (0, h.default)(r3 instanceof f.JoinedAbruptCompletions || r3 instanceof f.JoinedNormalAndAbruptCompletions);
        f.Completion.makeAllNormalCompletionsResultInUndefined(r3), r3 = f.Completion.normalizeSelectedCompletions(function(e3) {
          return e3 instanceof f.ReturnCompletion;
        }, r3), (0, h.default)(r3.containsSelectedCompletion(function(e3) {
          return e3 instanceof f.NormalCompletion;
        }));
        var i3 = d.Join.joinValuesOfSelectedCompletions(function(e3) {
          return e3 instanceof f.NormalCompletion;
        }, r3);
        return r3.containsSelectedCompletion(function(e3) {
          return e3 instanceof f.ThrowCompletion;
        }) && (e2.composeWithSavedCompletion(r3), i3 instanceof u.AbstractValue && (i3 = e2.simplifyAndRefineAbstractValue(i3))), new f.ReturnCompletion(i3);
      }
    };
    return !e2.useAbstractInterpretation || e2.pathConditions.isEmpty(), p2();
  }, t.EvaluateDirectCall = b, t.EvaluateDirectCallWithArgList = g, t.PrepareForTailCall = w, t.Call = E;
  var a = r(10), o = r(4), s = (r(8), y(r(193))), u = r(0), l = r(3), c = r(185), f = r(7), p = r(13), d = r(2), h = y(r(1)), v = r(9);
  function y(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function m(e2, t2, r2, n2) {
    if (Array.isArray(n2)) {
      var a2 = [], o2 = true, s2 = false, u2 = void 0;
      try {
        for (var c2, f2 = n2[Symbol.iterator](); !(o2 = (c2 = f2.next()).done); o2 = true) {
          var v2 = c2.value;
          if ("SpreadElement" === v2.type) for (var y2 = v2, m2 = a2, b2 = r2.evaluate(y2.argument, t2), g2 = d.Environment.GetValue(e2, b2), w2 = (0, l.GetIterator)(e2, g2); ; ) {
            var E2 = (0, l.IteratorStep)(e2, w2);
            if (!E2) break;
            var S = (0, l.IteratorValue)(e2, E2);
            m2.push(S);
          }
          else {
            var T = r2.evaluate(v2, t2), A = d.Environment.GetValue(e2, T);
            a2.push(A);
          }
        }
      } catch (e3) {
        s2 = true, u2 = e3;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return a2;
    }
    var C = n2;
    if (0 === C.expressions.length) {
      var P = C;
      return [(0, p.GetTemplateObject)(e2, P)];
    }
    var O = C, x = (0, p.GetTemplateObject)(e2, O), _ = r2.evaluate(C.expressions[0], t2), V = d.Environment.GetValue(e2, _), D = C.expressions.slice(1, C.expressions.length).map(function(n3) {
      return d.Environment.GetValue(e2, r2.evaluate(n3, t2));
    });
    return (0, h.default)(D.constructor === Array, "restSub is a List"), [x, V].concat(i(D));
  }
  function b(e2, t2, r2, n2, i2, a2, o2, s2) {
    return g(e2, t2, r2, n2, i2, a2, m(e2, t2, r2, o2), s2);
  }
  function g(e2, t2, r2, n2, i2, a2, o2, c2) {
    if (i2 instanceof u.AbstractObjectValue && s.default.isTypeCompatibleWith(i2.getType(), u.FunctionValue)) return u.AbstractValue.createTemporalFromBuildFunction(e2, i2.functionResultType || s.default, [i2].concat(o2), (0, v.createOperationDescriptor)("DIRECT_CALL_WITH_ARG_LIST"));
    if (!((i2 = i2.throwIfNotConcrete()) instanceof u.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an object");
    if (!(0, l.IsCallable)(e2, i2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not callable");
    true === c2 && w(e2);
    var f2 = E(e2, i2, a2, o2);
    return (0, h.default)(f2 instanceof s.default, "expected language value type"), f2;
  }
  function w(e2) {
    var t2 = e2.getRunningContext();
    t2.suspend(), e2.onDestroyScope(t2.lexicalEnvironment), e2.popContext(t2);
  }
  function E(e2, t2, r2, n2) {
    if (n2 = n2 || [], false === (0, l.IsCallable)(e2, t2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not callable");
    if (t2 instanceof u.AbstractValue && s.default.isTypeCompatibleWith(t2.getType(), u.FunctionValue)) {
      d.Leak.value(e2, r2);
      var i2 = true, a2 = false, o2 = void 0;
      try {
        for (var c2, f2 = n2[Symbol.iterator](); !(i2 = (c2 = f2.next()).done); i2 = true) {
          var p2 = c2.value;
          d.Leak.value(e2, p2);
        }
      } catch (e3) {
        a2 = true, o2 = e3;
      } finally {
        try {
          i2 || null == f2.return || f2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      if (r2 === e2.intrinsics.undefined) {
        var y2 = [t2].concat(n2);
        return u.AbstractValue.createTemporalFromBuildFunction(e2, s.default, y2, (0, v.createOperationDescriptor)("CALL_ABSTRACT_FUNC"));
      }
      var m2 = [t2, r2].concat(n2);
      return u.AbstractValue.createTemporalFromBuildFunction(e2, s.default, m2, (0, v.createOperationDescriptor)("CALL_ABSTRACT_FUNC_THIS"));
    }
    return (0, h.default)(t2 instanceof u.ObjectValue), (0, h.default)(t2.$Call, "no call method on this value"), t2.$Call(r2, n2);
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.SplitMatch = function(e2, t2, r2, n2) {
    (0, f.default)("string" == typeof n2, "expected a string");
    var i2 = n2.length, a2 = t2.length;
    if (r2 + i2 > a2) return false;
    for (var o2 = 0; o2 < i2; o2++) if (t2[r2 + o2] !== n2[o2]) return false;
    return r2 + i2;
  }, t.RequireObjectCoercible = function(e2, t2, r2) {
    if (!t2.mightNotBeNull() || !t2.mightNotBeUndefined()) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "null or undefined");
    if (t2 instanceof i.AbstractValue && (t2.mightBeNull() || t2.mightBeUndefined())) {
      if (e2.isInPureScope()) return t2;
      if (r2) {
        var a2 = new n.CompilerDiagnostic("member expression object ".concat(i.AbstractValue.describe(t2), " is unknown"), r2, "PP0012", "FatalError");
        throw e2.handleError(a2), new n.FatalError();
      }
      t2.throwIfNotConcrete();
    }
    return t2;
  }, t.HasSameType = d, t.AbstractRelationalComparison = function(e2, t2, r2, n2, a2) {
    var o2, s2;
    n2 ? (o2 = c.To.ToPrimitiveOrAbstract(e2, t2, "number"), s2 = c.To.ToPrimitiveOrAbstract(e2, r2, "number")) : (s2 = c.To.ToPrimitiveOrAbstract(e2, r2, "number"), o2 = c.To.ToPrimitiveOrAbstract(e2, t2, "number"));
    if (o2 instanceof i.AbstractValue || s2 instanceof i.AbstractValue) {
      var u2;
      return u2 = n2 ? i.AbstractValue.createFromBinaryOp(e2, a2, o2, s2) : i.AbstractValue.createFromBinaryOp(e2, a2, s2, o2), (0, f.default)(u2 instanceof i.BooleanValue || u2 instanceof i.UndefinedValue || u2 instanceof i.AbstractValue), u2;
    }
    if (o2 instanceof i.StringValue && s2 instanceof i.StringValue) {
      if (o2.value.startsWith(s2.value)) return e2.intrinsics.false;
      if (s2.value.startsWith(o2.value)) return e2.intrinsics.true;
      for (var l2 = 0; o2.value.charCodeAt(l2) === s2.value.charCodeAt(l2); ) l2 += 1;
      var p2 = o2.value.charCodeAt(l2), d2 = s2.value.charCodeAt(l2);
      return p2 < d2 ? e2.intrinsics.true : e2.intrinsics.false;
    }
    var h2 = c.To.ToNumber(e2, o2), v2 = c.To.ToNumber(e2, s2);
    return isNaN(h2) ? e2.intrinsics.undefined : isNaN(v2) ? e2.intrinsics.undefined : Object.is(h2, v2) ? e2.intrinsics.false : Object.is(h2, 0) && Object.is(v2, -0) ? e2.intrinsics.false : Object.is(h2, -0) && Object.is(v2, 0) ? e2.intrinsics.false : h2 < v2 ? e2.intrinsics.true : e2.intrinsics.false;
  }, t.AbstractEqualityComparison = function e2(t2, r2, n2, a2) {
    if (d(r2, n2)) {
      var o2 = h(t2, r2, n2);
      return new i.BooleanValue(t2, "==" === a2 ? o2 : !o2);
    }
    if (r2 instanceof i.NullValue && n2 instanceof i.UndefinedValue) return new i.BooleanValue(t2, "==" === a2);
    if (r2 instanceof i.UndefinedValue && n2 instanceof i.NullValue) return new i.BooleanValue(t2, "==" === a2);
    if (r2 instanceof i.NumberValue && n2 instanceof i.StringValue) return e2(t2, r2, new i.NumberValue(t2, c.To.ToNumber(t2, n2)), a2);
    if (r2 instanceof i.StringValue && n2 instanceof i.NumberValue) return e2(t2, new i.NumberValue(t2, c.To.ToNumber(t2, r2)), n2, a2);
    if (r2 instanceof i.BooleanValue) return e2(t2, new i.NumberValue(t2, c.To.ToNumber(t2, r2)), n2, a2);
    if (n2 instanceof i.BooleanValue) return e2(t2, r2, new i.NumberValue(t2, c.To.ToNumber(t2, n2)), a2);
    if ((r2 instanceof i.StringValue || r2 instanceof i.NumberValue || r2 instanceof i.SymbolValue) && n2 instanceof i.ObjectValue) {
      var s2 = c.To.ToPrimitiveOrAbstract(t2, n2);
      if (s2 instanceof i.AbstractValue) {
        var u2 = i.AbstractValue.createFromBinaryOp(t2, "==", r2, s2);
        return (0, f.default)(u2 instanceof i.BooleanValue || u2 instanceof i.AbstractValue), u2;
      }
      return e2(t2, r2, s2, a2);
    }
    if (r2 instanceof i.ObjectValue && (n2 instanceof i.StringValue || n2 instanceof i.NumberValue || n2 instanceof i.SymbolValue)) {
      var l2 = c.To.ToPrimitiveOrAbstract(t2, r2);
      if (l2 instanceof i.AbstractValue) {
        var p2 = i.AbstractValue.createFromBinaryOp(t2, "==", l2, n2);
        return (0, f.default)(p2 instanceof i.BooleanValue || p2 instanceof i.AbstractValue), p2;
      }
      return e2(t2, l2, n2, a2);
    }
    return new i.BooleanValue(t2, "==" !== a2);
  }, t.StrictEqualityComparison = h, t.StrictEqualityComparisonPartial = function(e2, t2, r2) {
    return h(e2, t2.throwIfNotConcrete(), r2.throwIfNotConcrete());
  }, t.SameValueZero = v, t.SameValueZeroPartial = function(e2, t2, r2) {
    return v(e2, t2.throwIfNotConcrete(), r2.throwIfNotConcrete());
  }, t.SameValue = y, t.SameValuePartial = m, t.SameValueNonNumber = b, t.SamePropertyKey = function(e2, t2, r2) {
    if ("string" == typeof t2 && "string" == typeof r2) return t2 === r2;
    if (t2 instanceof i.StringValue && r2 instanceof i.StringValue) return t2.value === r2.value;
    if (t2 instanceof i.SymbolValue && r2 instanceof i.SymbolValue) return t2 === r2;
    return false;
  }, t.Add = function(e2, t2, r2) {
    var n2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
    if (isNaN(t2) || isNaN(r2)) return e2.intrinsics.NaN;
    var a2 = t2, o2 = r2;
    n2 && (o2 = -o2);
    return i.IntegralValue.createFromNumberValue(e2, a2 + o2);
  }, t.InstanceofOperator = g, t.OrdinaryHasInstance = w, t.Type = function(e2, t2) {
    if (t2 instanceof i.UndefinedValue) return "Undefined";
    if (t2 instanceof i.NullValue) return "Null";
    if ((0, l.HasCompatibleType)(t2, i.BooleanValue)) return "Boolean";
    if ((0, l.HasCompatibleType)(t2, i.StringValue)) return "String";
    if ((0, l.HasCompatibleType)(t2, i.SymbolValue)) return "Symbol";
    if ((0, l.HasCompatibleType)(t2, i.IntegralValue)) return "Number";
    if ((0, l.HasCompatibleType)(t2, i.NumberValue)) return "Number";
    if (t2.mightNotBeObject()) throw (0, f.default)(t2 instanceof i.AbstractValue), i.AbstractValue.reportIntrospectionError(t2), new n.FatalError();
    return "Object";
  }, t.SymbolDescriptiveString = function(e2, t2) {
    (0, f.default)(t2 instanceof i.SymbolValue, "expected symbol");
    var r2 = t2.$Description;
    r2 = r2 ? r2.throwIfNotConcreteString().value : "";
    return (0, f.default)("string" == typeof r2, "expected string"), "Symbol(".concat(r2, ")");
  }, t.UpdateEmpty = function(e2, t2, r2) {
    (t2 instanceof s.ReturnCompletion || t2 instanceof s.ThrowCompletion) && (0, f.default)(t2.value, "expected completion record to have a value");
    return t2 instanceof i.EmptyValue ? r2 : t2 instanceof i.Value || t2.value && !(t2.value instanceof i.EmptyValue) ? t2 : (t2.value = r2, t2);
  }, t.URIUnescaped = t.URIMark = t.DecimalDigit = t.URIAlpha = t.URIReserved = void 0;
  var n = r(4), i = r(0), a = r(15), o = r(11), s = r(7), u = r(13), l = r(20), c = r(2), f = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  t.URIReserved = ";/?:@&=+$,";
  var p = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
  t.URIAlpha = p;
  t.DecimalDigit = "0123456789";
  t.URIMark = "-_.!~*'()";
  function d(e2, t2) {
    var r2 = e2.getType(), n2 = t2.getType();
    return r2 === n2 || (r2 === i.IntegralValue || r2 === i.NumberValue) && (n2 === i.IntegralValue || n2 === i.NumberValue);
  }
  function h(e2, t2, r2) {
    return !!d(t2, r2) && (t2 instanceof i.NumberValue && r2 instanceof i.NumberValue ? !isNaN(t2.value) && (!isNaN(r2.value) && t2.value === r2.value) : b(e2, t2, r2));
  }
  function v(e2, t2, r2) {
    return !!d(t2, r2) && (t2 instanceof i.NumberValue ? ((0, f.default)(r2 instanceof i.NumberValue), !(!isNaN(t2.value) || !isNaN(r2.value)) || (!(!Object.is(t2.value, 0) || !Object.is(r2.value, -0)) || (!(!Object.is(t2.value, -0) || !Object.is(r2.value, 0)) || t2.value === r2.value))) : b(e2, t2, r2));
  }
  function y(e2, t2, r2) {
    return !!d(t2, r2) && (t2 instanceof i.NumberValue && r2 instanceof i.NumberValue ? !(!isNaN(t2.value) || !isNaN(r2.value)) || (!Object.is(t2.value, 0) || !Object.is(r2.value, -0)) && ((!Object.is(t2.value, -0) || !Object.is(r2.value, 0)) && t2.value === r2.value) : b(e2, t2, r2));
  }
  function m(e2, t2, r2) {
    return y(e2, t2.throwIfNotConcrete(), r2.throwIfNotConcrete());
  }
  function b(e2, t2, r2) {
    return (0, f.default)(!(t2 instanceof i.NumberValue), "numbers not allowed"), (0, f.default)(t2.getType() === r2.getType(), "must be same type"), t2 instanceof i.UndefinedValue || (t2 instanceof i.NullValue || (t2 instanceof i.StringValue && r2 instanceof i.StringValue ? t2.value === r2.value : t2 instanceof i.BooleanValue && r2 instanceof i.BooleanValue ? t2.value === r2.value : (i.SymbolValue, t2 === r2)));
  }
  function g(e2, t2, r2) {
    if (!r2.mightBeObject()) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Expecting a function in instanceof check");
    var n2 = (0, u.GetMethod)(e2, r2, e2.intrinsics.SymbolHasInstance);
    if (!(n2 instanceof i.UndefinedValue)) return c.To.ToBooleanPartial(e2, (0, a.Call)(e2, n2, r2, [t2]));
    if (false === (0, o.IsCallable)(e2, r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Expecting a function in instanceof check");
    return w(e2, r2, t2);
  }
  function w(e2, t2, r2) {
    if (false === (0, o.IsCallable)(e2, t2)) return false;
    if ((0, f.default)(t2 instanceof i.ObjectValue), t2 instanceof i.BoundFunctionValue) return g(e2, r2, t2.$BoundTargetFunction);
    if (!((r2 = r2.throwIfNotConcrete()) instanceof i.ObjectValue)) return false;
    var n2 = (0, u.Get)(e2, t2, "prototype").throwIfNotConcrete();
    if (!(n2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(P) is not Object");
    for (; ; ) {
      if ((r2 = r2.$GetPrototypeOf()) instanceof i.NullValue) return false;
      if (true === m(e2, n2, r2)) return true;
    }
    return false;
  }
  t.URIUnescaped = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_.!~*'()";
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.isArrayExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ArrayExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isAssignmentExpression = function(e2, t2) {
    if (!e2) return false;
    if ("AssignmentExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBinaryExpression = function(e2, t2) {
    if (!e2) return false;
    if ("BinaryExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isInterpreterDirective = function(e2, t2) {
    if (!e2) return false;
    if ("InterpreterDirective" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDirective = function(e2, t2) {
    if (!e2) return false;
    if ("Directive" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDirectiveLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("DirectiveLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBlockStatement = function(e2, t2) {
    if (!e2) return false;
    if ("BlockStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBreakStatement = function(e2, t2) {
    if (!e2) return false;
    if ("BreakStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isCallExpression = function(e2, t2) {
    if (!e2) return false;
    if ("CallExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isCatchClause = function(e2, t2) {
    if (!e2) return false;
    if ("CatchClause" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isConditionalExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ConditionalExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isContinueStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ContinueStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDebuggerStatement = function(e2, t2) {
    if (!e2) return false;
    if ("DebuggerStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDoWhileStatement = function(e2, t2) {
    if (!e2) return false;
    if ("DoWhileStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isEmptyStatement = function(e2, t2) {
    if (!e2) return false;
    if ("EmptyStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExpressionStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ExpressionStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFile = function(e2, t2) {
    if (!e2) return false;
    if ("File" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isForInStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ForInStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isForStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ForStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFunctionDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("FunctionDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFunctionExpression = function(e2, t2) {
    if (!e2) return false;
    if ("FunctionExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isIdentifier = function(e2, t2) {
    if (!e2) return false;
    if ("Identifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isIfStatement = function(e2, t2) {
    if (!e2) return false;
    if ("IfStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isLabeledStatement = function(e2, t2) {
    if (!e2) return false;
    if ("LabeledStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isStringLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("StringLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNumericLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("NumericLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNullLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("NullLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBooleanLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("BooleanLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isRegExpLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("RegExpLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isLogicalExpression = function(e2, t2) {
    if (!e2) return false;
    if ("LogicalExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isMemberExpression = function(e2, t2) {
    if (!e2) return false;
    if ("MemberExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNewExpression = function(e2, t2) {
    if (!e2) return false;
    if ("NewExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isProgram = function(e2, t2) {
    if (!e2) return false;
    if ("Program" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectMethod = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectMethod" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectProperty = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isRestElement = function(e2, t2) {
    if (!e2) return false;
    if ("RestElement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isReturnStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ReturnStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isSequenceExpression = function(e2, t2) {
    if (!e2) return false;
    if ("SequenceExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isSwitchCase = function(e2, t2) {
    if (!e2) return false;
    if ("SwitchCase" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isSwitchStatement = function(e2, t2) {
    if (!e2) return false;
    if ("SwitchStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isThisExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ThisExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isThrowStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ThrowStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTryStatement = function(e2, t2) {
    if (!e2) return false;
    if ("TryStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isUnaryExpression = function(e2, t2) {
    if (!e2) return false;
    if ("UnaryExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isUpdateExpression = function(e2, t2) {
    if (!e2) return false;
    if ("UpdateExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isVariableDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("VariableDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isVariableDeclarator = function(e2, t2) {
    if (!e2) return false;
    if ("VariableDeclarator" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isWhileStatement = function(e2, t2) {
    if (!e2) return false;
    if ("WhileStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isWithStatement = function(e2, t2) {
    if (!e2) return false;
    if ("WithStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isAssignmentPattern = function(e2, t2) {
    if (!e2) return false;
    if ("AssignmentPattern" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isArrayPattern = function(e2, t2) {
    if (!e2) return false;
    if ("ArrayPattern" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isArrowFunctionExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ArrowFunctionExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassBody = function(e2, t2) {
    if (!e2) return false;
    if ("ClassBody" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("ClassDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ClassExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportAllDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("ExportAllDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportDefaultDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("ExportDefaultDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportNamedDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("ExportNamedDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportSpecifier = function(e2, t2) {
    if (!e2) return false;
    if ("ExportSpecifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isForOfStatement = function(e2, t2) {
    if (!e2) return false;
    if ("ForOfStatement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isImportDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("ImportDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isImportDefaultSpecifier = function(e2, t2) {
    if (!e2) return false;
    if ("ImportDefaultSpecifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isImportNamespaceSpecifier = function(e2, t2) {
    if (!e2) return false;
    if ("ImportNamespaceSpecifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isImportSpecifier = function(e2, t2) {
    if (!e2) return false;
    if ("ImportSpecifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isMetaProperty = function(e2, t2) {
    if (!e2) return false;
    if ("MetaProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassMethod = function(e2, t2) {
    if (!e2) return false;
    if ("ClassMethod" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectPattern = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectPattern" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isSpreadElement = function(e2, t2) {
    if (!e2) return false;
    if ("SpreadElement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isSuper = function(e2, t2) {
    if (!e2) return false;
    if ("Super" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTaggedTemplateExpression = function(e2, t2) {
    if (!e2) return false;
    if ("TaggedTemplateExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTemplateElement = function(e2, t2) {
    if (!e2) return false;
    if ("TemplateElement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTemplateLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("TemplateLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isYieldExpression = function(e2, t2) {
    if (!e2) return false;
    if ("YieldExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isAnyTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("AnyTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isArrayTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("ArrayTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBooleanTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("BooleanTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBooleanLiteralTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("BooleanLiteralTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNullLiteralTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("NullLiteralTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassImplements = function(e2, t2) {
    if (!e2) return false;
    if ("ClassImplements" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareClass = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareClass" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareFunction = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareFunction" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareInterface = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareInterface" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareModule = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareModule" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareModuleExports = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareModuleExports" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareTypeAlias = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareTypeAlias" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareOpaqueType = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareOpaqueType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareVariable = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareVariable" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareExportDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareExportDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclareExportAllDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("DeclareExportAllDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclaredPredicate = function(e2, t2) {
    if (!e2) return false;
    if ("DeclaredPredicate" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExistsTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("ExistsTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFunctionTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("FunctionTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFunctionTypeParam = function(e2, t2) {
    if (!e2) return false;
    if ("FunctionTypeParam" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isGenericTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("GenericTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isInferredPredicate = function(e2, t2) {
    if (!e2) return false;
    if ("InferredPredicate" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isInterfaceExtends = function(e2, t2) {
    if (!e2) return false;
    if ("InterfaceExtends" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isInterfaceDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("InterfaceDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isInterfaceTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("InterfaceTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isIntersectionTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("IntersectionTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isMixedTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("MixedTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isEmptyTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("EmptyTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNullableTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("NullableTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNumberLiteralTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("NumberLiteralTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNumberTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("NumberTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectTypeInternalSlot = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectTypeInternalSlot" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectTypeCallProperty = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectTypeCallProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectTypeIndexer = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectTypeIndexer" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectTypeProperty = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectTypeProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectTypeSpreadProperty = function(e2, t2) {
    if (!e2) return false;
    if ("ObjectTypeSpreadProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isOpaqueType = function(e2, t2) {
    if (!e2) return false;
    if ("OpaqueType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isQualifiedTypeIdentifier = function(e2, t2) {
    if (!e2) return false;
    if ("QualifiedTypeIdentifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isStringLiteralTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("StringLiteralTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isStringTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("StringTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isThisTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("ThisTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTupleTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("TupleTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeofTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("TypeofTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeAlias = function(e2, t2) {
    if (!e2) return false;
    if ("TypeAlias" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("TypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeCastExpression = function(e2, t2) {
    if (!e2) return false;
    if ("TypeCastExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeParameter = function(e2, t2) {
    if (!e2) return false;
    if ("TypeParameter" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeParameterDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TypeParameterDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTypeParameterInstantiation = function(e2, t2) {
    if (!e2) return false;
    if ("TypeParameterInstantiation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isUnionTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("UnionTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isVariance = function(e2, t2) {
    if (!e2) return false;
    if ("Variance" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isVoidTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("VoidTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXAttribute = function(e2, t2) {
    if (!e2) return false;
    if ("JSXAttribute" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXClosingElement = function(e2, t2) {
    if (!e2) return false;
    if ("JSXClosingElement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXElement = function(e2, t2) {
    if (!e2) return false;
    if ("JSXElement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXEmptyExpression = function(e2, t2) {
    if (!e2) return false;
    if ("JSXEmptyExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXExpressionContainer = function(e2, t2) {
    if (!e2) return false;
    if ("JSXExpressionContainer" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXSpreadChild = function(e2, t2) {
    if (!e2) return false;
    if ("JSXSpreadChild" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXIdentifier = function(e2, t2) {
    if (!e2) return false;
    if ("JSXIdentifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXMemberExpression = function(e2, t2) {
    if (!e2) return false;
    if ("JSXMemberExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXNamespacedName = function(e2, t2) {
    if (!e2) return false;
    if ("JSXNamespacedName" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXOpeningElement = function(e2, t2) {
    if (!e2) return false;
    if ("JSXOpeningElement" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXSpreadAttribute = function(e2, t2) {
    if (!e2) return false;
    if ("JSXSpreadAttribute" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXText = function(e2, t2) {
    if (!e2) return false;
    if ("JSXText" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXFragment = function(e2, t2) {
    if (!e2) return false;
    if ("JSXFragment" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXOpeningFragment = function(e2, t2) {
    if (!e2) return false;
    if ("JSXOpeningFragment" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSXClosingFragment = function(e2, t2) {
    if (!e2) return false;
    if ("JSXClosingFragment" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNoop = function(e2, t2) {
    if (!e2) return false;
    if ("Noop" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isParenthesizedExpression = function(e2, t2) {
    if (!e2) return false;
    if ("ParenthesizedExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isAwaitExpression = function(e2, t2) {
    if (!e2) return false;
    if ("AwaitExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBindExpression = function(e2, t2) {
    if (!e2) return false;
    if ("BindExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassProperty = function(e2, t2) {
    if (!e2) return false;
    if ("ClassProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isOptionalMemberExpression = function(e2, t2) {
    if (!e2) return false;
    if ("OptionalMemberExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isOptionalCallExpression = function(e2, t2) {
    if (!e2) return false;
    if ("OptionalCallExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClassPrivateProperty = function(e2, t2) {
    if (!e2) return false;
    if ("ClassPrivateProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isImport = function(e2, t2) {
    if (!e2) return false;
    if ("Import" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDecorator = function(e2, t2) {
    if (!e2) return false;
    if ("Decorator" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDoExpression = function(e2, t2) {
    if (!e2) return false;
    if ("DoExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportDefaultSpecifier = function(e2, t2) {
    if (!e2) return false;
    if ("ExportDefaultSpecifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportNamespaceSpecifier = function(e2, t2) {
    if (!e2) return false;
    if ("ExportNamespaceSpecifier" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isPrivateName = function(e2, t2) {
    if (!e2) return false;
    if ("PrivateName" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBigIntLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("BigIntLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSParameterProperty = function(e2, t2) {
    if (!e2) return false;
    if ("TSParameterProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSDeclareFunction = function(e2, t2) {
    if (!e2) return false;
    if ("TSDeclareFunction" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSDeclareMethod = function(e2, t2) {
    if (!e2) return false;
    if ("TSDeclareMethod" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSQualifiedName = function(e2, t2) {
    if (!e2) return false;
    if ("TSQualifiedName" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSCallSignatureDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSCallSignatureDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSConstructSignatureDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSConstructSignatureDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSPropertySignature = function(e2, t2) {
    if (!e2) return false;
    if ("TSPropertySignature" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSMethodSignature = function(e2, t2) {
    if (!e2) return false;
    if ("TSMethodSignature" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSIndexSignature = function(e2, t2) {
    if (!e2) return false;
    if ("TSIndexSignature" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSAnyKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSAnyKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSNumberKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSNumberKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSObjectKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSObjectKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSBooleanKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSBooleanKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSStringKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSStringKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSSymbolKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSSymbolKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSVoidKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSVoidKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSUndefinedKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSUndefinedKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSNullKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSNullKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSNeverKeyword = function(e2, t2) {
    if (!e2) return false;
    if ("TSNeverKeyword" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSThisType = function(e2, t2) {
    if (!e2) return false;
    if ("TSThisType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSFunctionType = function(e2, t2) {
    if (!e2) return false;
    if ("TSFunctionType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSConstructorType = function(e2, t2) {
    if (!e2) return false;
    if ("TSConstructorType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeReference = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeReference" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypePredicate = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypePredicate" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeQuery = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeQuery" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeLiteral = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSArrayType = function(e2, t2) {
    if (!e2) return false;
    if ("TSArrayType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTupleType = function(e2, t2) {
    if (!e2) return false;
    if ("TSTupleType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSUnionType = function(e2, t2) {
    if (!e2) return false;
    if ("TSUnionType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSIntersectionType = function(e2, t2) {
    if (!e2) return false;
    if ("TSIntersectionType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSConditionalType = function(e2, t2) {
    if (!e2) return false;
    if ("TSConditionalType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSInferType = function(e2, t2) {
    if (!e2) return false;
    if ("TSInferType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSParenthesizedType = function(e2, t2) {
    if (!e2) return false;
    if ("TSParenthesizedType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeOperator = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeOperator" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSIndexedAccessType = function(e2, t2) {
    if (!e2) return false;
    if ("TSIndexedAccessType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSMappedType = function(e2, t2) {
    if (!e2) return false;
    if ("TSMappedType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSLiteralType = function(e2, t2) {
    if (!e2) return false;
    if ("TSLiteralType" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSExpressionWithTypeArguments = function(e2, t2) {
    if (!e2) return false;
    if ("TSExpressionWithTypeArguments" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSInterfaceDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSInterfaceDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSInterfaceBody = function(e2, t2) {
    if (!e2) return false;
    if ("TSInterfaceBody" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeAliasDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeAliasDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSAsExpression = function(e2, t2) {
    if (!e2) return false;
    if ("TSAsExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeAssertion = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeAssertion" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSEnumDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSEnumDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSEnumMember = function(e2, t2) {
    if (!e2) return false;
    if ("TSEnumMember" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSModuleDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSModuleDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSModuleBlock = function(e2, t2) {
    if (!e2) return false;
    if ("TSModuleBlock" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSImportEqualsDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSImportEqualsDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSExternalModuleReference = function(e2, t2) {
    if (!e2) return false;
    if ("TSExternalModuleReference" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSNonNullExpression = function(e2, t2) {
    if (!e2) return false;
    if ("TSNonNullExpression" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSExportAssignment = function(e2, t2) {
    if (!e2) return false;
    if ("TSExportAssignment" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSNamespaceExportDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSNamespaceExportDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeAnnotation = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeAnnotation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeParameterInstantiation = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeParameterInstantiation" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeParameterDeclaration = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeParameterDeclaration" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeParameter = function(e2, t2) {
    if (!e2) return false;
    if ("TSTypeParameter" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExpression = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Expression" === r2 || "ArrayExpression" === r2 || "AssignmentExpression" === r2 || "BinaryExpression" === r2 || "CallExpression" === r2 || "ConditionalExpression" === r2 || "FunctionExpression" === r2 || "Identifier" === r2 || "StringLiteral" === r2 || "NumericLiteral" === r2 || "NullLiteral" === r2 || "BooleanLiteral" === r2 || "RegExpLiteral" === r2 || "LogicalExpression" === r2 || "MemberExpression" === r2 || "NewExpression" === r2 || "ObjectExpression" === r2 || "SequenceExpression" === r2 || "ThisExpression" === r2 || "UnaryExpression" === r2 || "UpdateExpression" === r2 || "ArrowFunctionExpression" === r2 || "ClassExpression" === r2 || "MetaProperty" === r2 || "Super" === r2 || "TaggedTemplateExpression" === r2 || "TemplateLiteral" === r2 || "YieldExpression" === r2 || "TypeCastExpression" === r2 || "JSXElement" === r2 || "JSXFragment" === r2 || "ParenthesizedExpression" === r2 || "AwaitExpression" === r2 || "BindExpression" === r2 || "OptionalMemberExpression" === r2 || "OptionalCallExpression" === r2 || "Import" === r2 || "DoExpression" === r2 || "BigIntLiteral" === r2 || "TSAsExpression" === r2 || "TSTypeAssertion" === r2 || "TSNonNullExpression" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBinary = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Binary" === r2 || "BinaryExpression" === r2 || "LogicalExpression" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isScopable = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Scopable" === r2 || "BlockStatement" === r2 || "CatchClause" === r2 || "DoWhileStatement" === r2 || "ForInStatement" === r2 || "ForStatement" === r2 || "FunctionDeclaration" === r2 || "FunctionExpression" === r2 || "Program" === r2 || "ObjectMethod" === r2 || "SwitchStatement" === r2 || "WhileStatement" === r2 || "ArrowFunctionExpression" === r2 || "ClassDeclaration" === r2 || "ClassExpression" === r2 || "ForOfStatement" === r2 || "ClassMethod" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBlockParent = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("BlockParent" === r2 || "BlockStatement" === r2 || "CatchClause" === r2 || "DoWhileStatement" === r2 || "ForInStatement" === r2 || "ForStatement" === r2 || "FunctionDeclaration" === r2 || "FunctionExpression" === r2 || "Program" === r2 || "ObjectMethod" === r2 || "SwitchStatement" === r2 || "WhileStatement" === r2 || "ArrowFunctionExpression" === r2 || "ForOfStatement" === r2 || "ClassMethod" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isBlock = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Block" === r2 || "BlockStatement" === r2 || "Program" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isStatement = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Statement" === r2 || "BlockStatement" === r2 || "BreakStatement" === r2 || "ContinueStatement" === r2 || "DebuggerStatement" === r2 || "DoWhileStatement" === r2 || "EmptyStatement" === r2 || "ExpressionStatement" === r2 || "ForInStatement" === r2 || "ForStatement" === r2 || "FunctionDeclaration" === r2 || "IfStatement" === r2 || "LabeledStatement" === r2 || "ReturnStatement" === r2 || "SwitchStatement" === r2 || "ThrowStatement" === r2 || "TryStatement" === r2 || "VariableDeclaration" === r2 || "WhileStatement" === r2 || "WithStatement" === r2 || "ClassDeclaration" === r2 || "ExportAllDeclaration" === r2 || "ExportDefaultDeclaration" === r2 || "ExportNamedDeclaration" === r2 || "ForOfStatement" === r2 || "ImportDeclaration" === r2 || "DeclareClass" === r2 || "DeclareFunction" === r2 || "DeclareInterface" === r2 || "DeclareModule" === r2 || "DeclareModuleExports" === r2 || "DeclareTypeAlias" === r2 || "DeclareOpaqueType" === r2 || "DeclareVariable" === r2 || "DeclareExportDeclaration" === r2 || "DeclareExportAllDeclaration" === r2 || "InterfaceDeclaration" === r2 || "OpaqueType" === r2 || "TypeAlias" === r2 || "TSDeclareFunction" === r2 || "TSInterfaceDeclaration" === r2 || "TSTypeAliasDeclaration" === r2 || "TSEnumDeclaration" === r2 || "TSModuleDeclaration" === r2 || "TSImportEqualsDeclaration" === r2 || "TSExportAssignment" === r2 || "TSNamespaceExportDeclaration" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTerminatorless = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Terminatorless" === r2 || "BreakStatement" === r2 || "ContinueStatement" === r2 || "ReturnStatement" === r2 || "ThrowStatement" === r2 || "YieldExpression" === r2 || "AwaitExpression" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isCompletionStatement = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("CompletionStatement" === r2 || "BreakStatement" === r2 || "ContinueStatement" === r2 || "ReturnStatement" === r2 || "ThrowStatement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isConditional = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Conditional" === r2 || "ConditionalExpression" === r2 || "IfStatement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isLoop = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Loop" === r2 || "DoWhileStatement" === r2 || "ForInStatement" === r2 || "ForStatement" === r2 || "WhileStatement" === r2 || "ForOfStatement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isWhile = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("While" === r2 || "DoWhileStatement" === r2 || "WhileStatement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExpressionWrapper = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("ExpressionWrapper" === r2 || "ExpressionStatement" === r2 || "TypeCastExpression" === r2 || "ParenthesizedExpression" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFor = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("For" === r2 || "ForInStatement" === r2 || "ForStatement" === r2 || "ForOfStatement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isForXStatement = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("ForXStatement" === r2 || "ForInStatement" === r2 || "ForOfStatement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFunction = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Function" === r2 || "FunctionDeclaration" === r2 || "FunctionExpression" === r2 || "ObjectMethod" === r2 || "ArrowFunctionExpression" === r2 || "ClassMethod" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFunctionParent = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("FunctionParent" === r2 || "FunctionDeclaration" === r2 || "FunctionExpression" === r2 || "ObjectMethod" === r2 || "ArrowFunctionExpression" === r2 || "ClassMethod" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isPureish = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Pureish" === r2 || "FunctionDeclaration" === r2 || "FunctionExpression" === r2 || "StringLiteral" === r2 || "NumericLiteral" === r2 || "NullLiteral" === r2 || "BooleanLiteral" === r2 || "ArrowFunctionExpression" === r2 || "ClassDeclaration" === r2 || "ClassExpression" === r2 || "BigIntLiteral" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isDeclaration = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Declaration" === r2 || "FunctionDeclaration" === r2 || "VariableDeclaration" === r2 || "ClassDeclaration" === r2 || "ExportAllDeclaration" === r2 || "ExportDefaultDeclaration" === r2 || "ExportNamedDeclaration" === r2 || "ImportDeclaration" === r2 || "DeclareClass" === r2 || "DeclareFunction" === r2 || "DeclareInterface" === r2 || "DeclareModule" === r2 || "DeclareModuleExports" === r2 || "DeclareTypeAlias" === r2 || "DeclareOpaqueType" === r2 || "DeclareVariable" === r2 || "DeclareExportDeclaration" === r2 || "DeclareExportAllDeclaration" === r2 || "InterfaceDeclaration" === r2 || "OpaqueType" === r2 || "TypeAlias" === r2 || "TSDeclareFunction" === r2 || "TSInterfaceDeclaration" === r2 || "TSTypeAliasDeclaration" === r2 || "TSEnumDeclaration" === r2 || "TSModuleDeclaration" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isPatternLike = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("PatternLike" === r2 || "Identifier" === r2 || "RestElement" === r2 || "AssignmentPattern" === r2 || "ArrayPattern" === r2 || "ObjectPattern" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isLVal = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("LVal" === r2 || "Identifier" === r2 || "MemberExpression" === r2 || "RestElement" === r2 || "AssignmentPattern" === r2 || "ArrayPattern" === r2 || "ObjectPattern" === r2 || "TSParameterProperty" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSEntityName = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("TSEntityName" === r2 || "Identifier" === r2 || "TSQualifiedName" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isLiteral = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Literal" === r2 || "StringLiteral" === r2 || "NumericLiteral" === r2 || "NullLiteral" === r2 || "BooleanLiteral" === r2 || "RegExpLiteral" === r2 || "TemplateLiteral" === r2 || "BigIntLiteral" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isImmutable = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Immutable" === r2 || "StringLiteral" === r2 || "NumericLiteral" === r2 || "NullLiteral" === r2 || "BooleanLiteral" === r2 || "JSXAttribute" === r2 || "JSXClosingElement" === r2 || "JSXElement" === r2 || "JSXExpressionContainer" === r2 || "JSXSpreadChild" === r2 || "JSXOpeningElement" === r2 || "JSXText" === r2 || "JSXFragment" === r2 || "JSXOpeningFragment" === r2 || "JSXClosingFragment" === r2 || "BigIntLiteral" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isUserWhitespacable = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("UserWhitespacable" === r2 || "ObjectMethod" === r2 || "ObjectProperty" === r2 || "ObjectTypeInternalSlot" === r2 || "ObjectTypeCallProperty" === r2 || "ObjectTypeIndexer" === r2 || "ObjectTypeProperty" === r2 || "ObjectTypeSpreadProperty" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isMethod = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Method" === r2 || "ObjectMethod" === r2 || "ClassMethod" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isObjectMember = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("ObjectMember" === r2 || "ObjectMethod" === r2 || "ObjectProperty" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isProperty = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Property" === r2 || "ObjectProperty" === r2 || "ClassProperty" === r2 || "ClassPrivateProperty" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isUnaryLike = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("UnaryLike" === r2 || "UnaryExpression" === r2 || "SpreadElement" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isPattern = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Pattern" === r2 || "AssignmentPattern" === r2 || "ArrayPattern" === r2 || "ObjectPattern" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isClass = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Class" === r2 || "ClassDeclaration" === r2 || "ClassExpression" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isModuleDeclaration = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("ModuleDeclaration" === r2 || "ExportAllDeclaration" === r2 || "ExportDefaultDeclaration" === r2 || "ExportNamedDeclaration" === r2 || "ImportDeclaration" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isExportDeclaration = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("ExportDeclaration" === r2 || "ExportAllDeclaration" === r2 || "ExportDefaultDeclaration" === r2 || "ExportNamedDeclaration" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isModuleSpecifier = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("ModuleSpecifier" === r2 || "ExportSpecifier" === r2 || "ImportDefaultSpecifier" === r2 || "ImportNamespaceSpecifier" === r2 || "ImportSpecifier" === r2 || "ExportDefaultSpecifier" === r2 || "ExportNamespaceSpecifier" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFlow = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Flow" === r2 || "AnyTypeAnnotation" === r2 || "ArrayTypeAnnotation" === r2 || "BooleanTypeAnnotation" === r2 || "BooleanLiteralTypeAnnotation" === r2 || "NullLiteralTypeAnnotation" === r2 || "ClassImplements" === r2 || "DeclareClass" === r2 || "DeclareFunction" === r2 || "DeclareInterface" === r2 || "DeclareModule" === r2 || "DeclareModuleExports" === r2 || "DeclareTypeAlias" === r2 || "DeclareOpaqueType" === r2 || "DeclareVariable" === r2 || "DeclareExportDeclaration" === r2 || "DeclareExportAllDeclaration" === r2 || "DeclaredPredicate" === r2 || "ExistsTypeAnnotation" === r2 || "FunctionTypeAnnotation" === r2 || "FunctionTypeParam" === r2 || "GenericTypeAnnotation" === r2 || "InferredPredicate" === r2 || "InterfaceExtends" === r2 || "InterfaceDeclaration" === r2 || "InterfaceTypeAnnotation" === r2 || "IntersectionTypeAnnotation" === r2 || "MixedTypeAnnotation" === r2 || "EmptyTypeAnnotation" === r2 || "NullableTypeAnnotation" === r2 || "NumberLiteralTypeAnnotation" === r2 || "NumberTypeAnnotation" === r2 || "ObjectTypeAnnotation" === r2 || "ObjectTypeInternalSlot" === r2 || "ObjectTypeCallProperty" === r2 || "ObjectTypeIndexer" === r2 || "ObjectTypeProperty" === r2 || "ObjectTypeSpreadProperty" === r2 || "OpaqueType" === r2 || "QualifiedTypeIdentifier" === r2 || "StringLiteralTypeAnnotation" === r2 || "StringTypeAnnotation" === r2 || "ThisTypeAnnotation" === r2 || "TupleTypeAnnotation" === r2 || "TypeofTypeAnnotation" === r2 || "TypeAlias" === r2 || "TypeAnnotation" === r2 || "TypeCastExpression" === r2 || "TypeParameter" === r2 || "TypeParameterDeclaration" === r2 || "TypeParameterInstantiation" === r2 || "UnionTypeAnnotation" === r2 || "Variance" === r2 || "VoidTypeAnnotation" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFlowType = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("FlowType" === r2 || "AnyTypeAnnotation" === r2 || "ArrayTypeAnnotation" === r2 || "BooleanTypeAnnotation" === r2 || "BooleanLiteralTypeAnnotation" === r2 || "NullLiteralTypeAnnotation" === r2 || "ExistsTypeAnnotation" === r2 || "FunctionTypeAnnotation" === r2 || "GenericTypeAnnotation" === r2 || "InterfaceTypeAnnotation" === r2 || "IntersectionTypeAnnotation" === r2 || "MixedTypeAnnotation" === r2 || "EmptyTypeAnnotation" === r2 || "NullableTypeAnnotation" === r2 || "NumberLiteralTypeAnnotation" === r2 || "NumberTypeAnnotation" === r2 || "ObjectTypeAnnotation" === r2 || "StringLiteralTypeAnnotation" === r2 || "StringTypeAnnotation" === r2 || "ThisTypeAnnotation" === r2 || "TupleTypeAnnotation" === r2 || "TypeofTypeAnnotation" === r2 || "UnionTypeAnnotation" === r2 || "VoidTypeAnnotation" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFlowBaseAnnotation = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("FlowBaseAnnotation" === r2 || "AnyTypeAnnotation" === r2 || "BooleanTypeAnnotation" === r2 || "NullLiteralTypeAnnotation" === r2 || "MixedTypeAnnotation" === r2 || "EmptyTypeAnnotation" === r2 || "NumberTypeAnnotation" === r2 || "StringTypeAnnotation" === r2 || "ThisTypeAnnotation" === r2 || "VoidTypeAnnotation" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFlowDeclaration = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("FlowDeclaration" === r2 || "DeclareClass" === r2 || "DeclareFunction" === r2 || "DeclareInterface" === r2 || "DeclareModule" === r2 || "DeclareModuleExports" === r2 || "DeclareTypeAlias" === r2 || "DeclareOpaqueType" === r2 || "DeclareVariable" === r2 || "DeclareExportDeclaration" === r2 || "DeclareExportAllDeclaration" === r2 || "InterfaceDeclaration" === r2 || "OpaqueType" === r2 || "TypeAlias" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isFlowPredicate = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("FlowPredicate" === r2 || "DeclaredPredicate" === r2 || "InferredPredicate" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isJSX = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("JSX" === r2 || "JSXAttribute" === r2 || "JSXClosingElement" === r2 || "JSXElement" === r2 || "JSXEmptyExpression" === r2 || "JSXExpressionContainer" === r2 || "JSXSpreadChild" === r2 || "JSXIdentifier" === r2 || "JSXMemberExpression" === r2 || "JSXNamespacedName" === r2 || "JSXOpeningElement" === r2 || "JSXSpreadAttribute" === r2 || "JSXText" === r2 || "JSXFragment" === r2 || "JSXOpeningFragment" === r2 || "JSXClosingFragment" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isPrivate = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("Private" === r2 || "ClassPrivateProperty" === r2 || "PrivateName" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSTypeElement = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("TSTypeElement" === r2 || "TSCallSignatureDeclaration" === r2 || "TSConstructSignatureDeclaration" === r2 || "TSPropertySignature" === r2 || "TSMethodSignature" === r2 || "TSIndexSignature" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isTSType = function(e2, t2) {
    if (!e2) return false;
    var r2 = e2.type;
    if ("TSType" === r2 || "TSAnyKeyword" === r2 || "TSNumberKeyword" === r2 || "TSObjectKeyword" === r2 || "TSBooleanKeyword" === r2 || "TSStringKeyword" === r2 || "TSSymbolKeyword" === r2 || "TSVoidKeyword" === r2 || "TSUndefinedKeyword" === r2 || "TSNullKeyword" === r2 || "TSNeverKeyword" === r2 || "TSThisType" === r2 || "TSFunctionType" === r2 || "TSConstructorType" === r2 || "TSTypeReference" === r2 || "TSTypePredicate" === r2 || "TSTypeQuery" === r2 || "TSTypeLiteral" === r2 || "TSArrayType" === r2 || "TSTupleType" === r2 || "TSUnionType" === r2 || "TSIntersectionType" === r2 || "TSConditionalType" === r2 || "TSInferType" === r2 || "TSParenthesizedType" === r2 || "TSTypeOperator" === r2 || "TSIndexedAccessType" === r2 || "TSMappedType" === r2 || "TSLiteralType" === r2 || "TSExpressionWithTypeArguments" === r2) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isNumberLiteral = function(e2, t2) {
    if (console.trace("The node type NumberLiteral has been renamed to NumericLiteral"), !e2) return false;
    if ("NumberLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isRegexLiteral = function(e2, t2) {
    if (console.trace("The node type RegexLiteral has been renamed to RegExpLiteral"), !e2) return false;
    if ("RegexLiteral" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isRestProperty = function(e2, t2) {
    if (console.trace("The node type RestProperty has been renamed to RestElement"), !e2) return false;
    if ("RestProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  }, t.isSpreadProperty = function(e2, t2) {
    if (console.trace("The node type SpreadProperty has been renamed to SpreadElement"), !e2) return false;
    if ("SpreadProperty" === e2.type) return void 0 === t2 || (0, n.default)(e2, t2);
    return false;
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(132));
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return e2.webpackPolyfill || (e2.deprecate = function() {
    }, e2.paths = [], e2.children || (e2.children = []), Object.defineProperty(e2, "loaded", { enumerable: true, get: function() {
      return e2.l;
    } }), Object.defineProperty(e2, "id", { enumerable: true, get: function() {
      return e2.i;
    } }), e2.webpackPolyfill = 1), e2;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Logger = void 0;
  var i = r(8), a = r(4), o = r(3), s = r(7), u = r(0), l = r(2), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), f = r(6);
  var p = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this._hasErrors = false, this.internalDebug = r2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "tryQuery", value: function(e3, t2) {
      var r2 = this.realm, n2 = new i.ExecutionContext();
      n2.isStrict = r2.isStrict;
      var o2 = r2.$GlobalEnv;
      n2.lexicalEnvironment = o2, n2.variableEnvironment = o2, n2.realm = r2, r2.pushContext(n2);
      var u2 = r2.errorHandler;
      r2.errorHandler = function(e4) {
        return "Information" === e4.severity || "Warning" === e4.severity ? "Recover" : "Fail";
      };
      try {
        var l2, f2 = r2.evaluateForEffects(function() {
          try {
            l2 = e3();
          } catch (e4) {
            if (e4 instanceof s.Completion) l2 = t2;
            else {
              if (!(e4 instanceof a.FatalError)) throw e4;
              l2 = t2;
            }
          }
          return r2.intrinsics.undefined;
        }, void 0, "tryQuery");
        return (0, c.default)(f2.result.value === r2.intrinsics.undefined), l2;
      } finally {
        r2.errorHandler = u2, r2.popContext(n2);
      }
    } }, { key: "logCompletion", value: function(e3) {
      var t2 = this.realm, r2 = e3.value;
      if (this.internalDebug && console.error("=== ".concat(e3.constructor.name, " ===")), this.tryQuery(function() {
        return r2 instanceof u.ObjectValue && (0, o.InstanceofOperator)(t2, r2, t2.intrinsics.Error);
      }, false)) {
        var n2 = r2;
        try {
          var i2 = new a.FatalError(this.tryQuery(function() {
            return l.To.ToStringPartial(t2, (0, o.Get)(t2, n2, "message"));
          }, "(unknown message)"));
          i2.stack = this.tryQuery(function() {
            return l.To.ToStringPartial(t2, (0, o.Get)(t2, n2, "stack"));
          }, "(unknown stack)"), console.error(i2.message), console.error(i2.stack), this.internalDebug && e3 instanceof s.ThrowCompletion && console.error(e3.nativeStack);
        } catch (i3) {
          var c2 = n2.properties.get("message");
          console.error(c2 && c2.descriptor && c2.descriptor instanceof f.PropertyDescriptor && c2.descriptor.value instanceof u.StringValue ? c2.descriptor.value.value : "(no message available)"), console.error(i3.stack), n2.$ErrorData && console.error(n2.$ErrorData.contextStack);
        }
      } else {
        try {
          r2 = l.To.ToStringPartial(t2, r2);
        } catch (i3) {
          r2 = i3.message;
        }
        console.error(r2), this.internalDebug && e3 instanceof s.ThrowCompletion && console.error(e3.nativeStack);
      }
      this._hasErrors = true;
    } }, { key: "logError", value: function(e3, t2) {
      this._log(e3, t2, "RecoverableError"), this._hasErrors = true;
    } }, { key: "logWarning", value: function(e3, t2) {
      this._log(e3, t2, "Warning");
    } }, { key: "logInformation", value: function(e3) {
      this._log(this.realm.intrinsics.undefined, e3, "Information");
    } }, { key: "_log", value: function(e3, t2, r2) {
      var n2 = e3.expressionLocation;
      e3.intrinsicName && (t2 = "".concat(t2, "\nintrinsic name: ").concat(e3.intrinsicName));
      var i2 = new a.CompilerDiagnostic(t2, n2, "PP9000", r2);
      if ("Fail" === this.realm.handleError(i2)) throw new a.FatalError();
    } }, { key: "hasErrors", value: function() {
      return this._hasErrors;
    } }]), e2;
  })();
  t.Logger = p;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.HasName = function(e2, t2) {
    if ("ArrowFunctionExpression" === t2.type) return false;
    if ("FunctionExpression" === t2.type) {
      if (null === t2.id) return false;
      if (null !== t2.id) return true;
    }
    if ("ClassExpression" === t2.type) {
      if (null === t2.id) return false;
      if (null !== t2.id) return true;
    }
    throw Error("Unexpected AST node type  : " + t2.type);
  }, t.HasProperty = function(e2, t2, r2) {
    return (0, s.default)((0, i.IsPropertyKey)(e2, r2), "expected property key"), t2.$HasProperty(r2);
  }, t.HasOwnProperty = function(e2, t2, r2) {
    (0, s.default)((0, i.IsPropertyKey)(e2, r2), "not a valid property key");
    var n2 = t2.$GetOwnProperty(r2);
    return void 0 !== n2 && (o.Properties.ThrowIfMightHaveBeenDeleted(n2), true);
  }, t.OrdinaryHasProperty = function(e2, t2, r2) {
    (0, s.default)("string" == typeof r2 || (0, i.IsPropertyKey)(e2, r2), "expected property key");
    var n2 = t2.$GetOwnProperty(r2);
    if (void 0 !== n2) return o.Properties.ThrowIfMightHaveBeenDeleted(n2), true;
    var u = t2.$GetPrototypeOf();
    if (!(u instanceof a.NullValue)) return (0, s.default)(u instanceof a.ObjectValue), u.$HasProperty(r2);
    return false;
  }, t.HasCompatibleType = function(e2, t2) {
    var r2 = e2.getType();
    if (r2 === a.Value) throw (0, s.default)(e2 instanceof a.AbstractValue), a.AbstractValue.reportIntrospectionError(e2), new n.FatalError();
    return a.Value.isTypeCompatibleWith(r2, t2);
  }, t.HasSomeCompatibleType = function(e2) {
    var t2 = e2.getType();
    if (t2 === a.Value) throw (0, s.default)(e2 instanceof a.AbstractValue), a.AbstractValue.reportIntrospectionError(e2), new n.FatalError();
    for (var r2 = arguments.length, i2 = new Array(r2 > 1 ? r2 - 1 : 0), o2 = 1; o2 < r2; o2++) i2[o2 - 1] = arguments[o2];
    return i2.some(a.Value.isTypeCompatibleWith.bind(null, t2));
  };
  var n = r(4), i = r(3), a = r(0), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t) {
  e.exports = function() {
    throw new Error("define cannot be used indirect");
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.MakeConstructor = function(e2, t2, r2, i2) {
    var a2 = r2, o2 = i2;
    (0, u.default)(t2 instanceof n.ECMAScriptSourceFunctionValue, "expected function value"), (0, u.default)(void 0 !== t2.$Construct, "expected construct internal method"), (0, u.default)(t2.getExtensible(), "expected extensible object that doesn't have prototype own property"), null == a2 && (a2 = true);
    o2 || ((o2 = s.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype)).originalConstructor = t2, s.Properties.DefinePropertyOrThrow(e2, o2, "constructor", new l.PropertyDescriptor({ value: t2, writable: a2, enumerable: false, configurable: true })));
    return s.Properties.DefinePropertyOrThrow(e2, t2, "prototype", new l.PropertyDescriptor({ value: o2, writable: a2, enumerable: false, configurable: false })), e2.intrinsics.undefined;
  }, t.Construct = function(e2, t2, r2, n2) {
    var a2 = r2, o2 = n2;
    o2 || (o2 = t2);
    a2 || (a2 = []);
    return (0, u.default)((0, i.IsConstructor)(e2, t2), "expected constructor"), (0, u.default)((0, i.IsConstructor)(e2, o2), "expected constructor"), (0, u.default)(void 0 !== t2.$Construct, "no construct method on realm value"), t2.$Construct(a2, o2);
  }, t.SpeciesConstructor = function(e2, t2, r2) {
    (0, u.default)(t2 instanceof n.ObjectValue, "Type(O) is Object");
    var s2 = (0, a.Get)(e2, t2, "constructor");
    if (s2 instanceof n.UndefinedValue) return r2;
    if (s2.mightNotBeObject()) throw s2.mightBeObject() && s2.throwIfNotConcrete(), e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(C) is not an object");
    (0, u.default)(s2 instanceof n.ObjectValue || s2 instanceof n.AbstractObjectValue);
    var l2 = (0, a.Get)(e2, s2, e2.intrinsics.SymbolSpecies);
    if ((0, o.HasSomeCompatibleType)(l2, n.UndefinedValue, n.NullValue)) return r2;
    if ((0, i.IsConstructor)(e2, l2)) return (0, u.default)(l2 instanceof n.ObjectValue), l2;
    throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Throw a TypeError exception");
  }, t.MakeClassConstructor = function(e2, t2) {
    return (0, u.default)(t2 instanceof n.ECMAScriptSourceFunctionValue, "expected function value"), (0, u.default)("normal" === t2.$FunctionKind), t2.$FunctionKind = "classConstructor", e2.intrinsics.undefined;
  }, t.ConstructorMethod = function e2(t2, r2) {
    var a2;
    if (1 === r2.length) return a2 = r2[0], (0, i.IsStatic)(a2) ? t2.intrinsics.empty : "constructor" !== a2.key.name ? t2.intrinsics.empty : a2;
    var o2 = e2(t2, r2.slice(0, -1));
    return o2 instanceof n.EmptyValue ? (a2 = r2[r2.length - 1], (0, i.IsStatic)(a2) ? t2.intrinsics.empty : "constructor" !== a2.key.name ? t2.intrinsics.empty : a2) : o2;
  }, t.NonConstructorMethodDefinitions = function e2(t2, r2) {
    var n2;
    if (1 === r2.length) return n2 = r2[0], (0, i.IsStatic)(n2) || "constructor" !== n2.key.name ? [n2] : [];
    n2 = r2[r2.length - 1];
    var a2 = e2(t2, r2.slice(0, -1));
    return (0, i.IsStatic)(n2) || "constructor" !== n2.key.name ? (a2.push(n2), a2) : a2;
  };
  var n = r(0), i = r(11), a = r(13), o = r(20), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.arrayExpression = t.ArrayExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ArrayExpression"].concat(t2));
  }, t.assignmentExpression = t.AssignmentExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["AssignmentExpression"].concat(t2));
  }, t.binaryExpression = t.BinaryExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BinaryExpression"].concat(t2));
  }, t.interpreterDirective = t.InterpreterDirective = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["InterpreterDirective"].concat(t2));
  }, t.directive = t.Directive = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Directive"].concat(t2));
  }, t.directiveLiteral = t.DirectiveLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DirectiveLiteral"].concat(t2));
  }, t.blockStatement = t.BlockStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BlockStatement"].concat(t2));
  }, t.breakStatement = t.BreakStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BreakStatement"].concat(t2));
  }, t.callExpression = t.CallExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["CallExpression"].concat(t2));
  }, t.catchClause = t.CatchClause = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["CatchClause"].concat(t2));
  }, t.conditionalExpression = t.ConditionalExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ConditionalExpression"].concat(t2));
  }, t.continueStatement = t.ContinueStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ContinueStatement"].concat(t2));
  }, t.debuggerStatement = t.DebuggerStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DebuggerStatement"].concat(t2));
  }, t.doWhileStatement = t.DoWhileStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DoWhileStatement"].concat(t2));
  }, t.emptyStatement = t.EmptyStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["EmptyStatement"].concat(t2));
  }, t.expressionStatement = t.ExpressionStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExpressionStatement"].concat(t2));
  }, t.file = t.File = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["File"].concat(t2));
  }, t.forInStatement = t.ForInStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ForInStatement"].concat(t2));
  }, t.forStatement = t.ForStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ForStatement"].concat(t2));
  }, t.functionDeclaration = t.FunctionDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["FunctionDeclaration"].concat(t2));
  }, t.functionExpression = t.FunctionExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["FunctionExpression"].concat(t2));
  }, t.identifier = t.Identifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Identifier"].concat(t2));
  }, t.ifStatement = t.IfStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["IfStatement"].concat(t2));
  }, t.labeledStatement = t.LabeledStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["LabeledStatement"].concat(t2));
  }, t.stringLiteral = t.StringLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["StringLiteral"].concat(t2));
  }, t.numericLiteral = t.NumericLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NumericLiteral"].concat(t2));
  }, t.nullLiteral = t.NullLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NullLiteral"].concat(t2));
  }, t.booleanLiteral = t.BooleanLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BooleanLiteral"].concat(t2));
  }, t.regExpLiteral = t.RegExpLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["RegExpLiteral"].concat(t2));
  }, t.logicalExpression = t.LogicalExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["LogicalExpression"].concat(t2));
  }, t.memberExpression = t.MemberExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["MemberExpression"].concat(t2));
  }, t.newExpression = t.NewExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NewExpression"].concat(t2));
  }, t.program = t.Program = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Program"].concat(t2));
  }, t.objectExpression = t.ObjectExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectExpression"].concat(t2));
  }, t.objectMethod = t.ObjectMethod = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectMethod"].concat(t2));
  }, t.objectProperty = t.ObjectProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectProperty"].concat(t2));
  }, t.restElement = t.RestElement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["RestElement"].concat(t2));
  }, t.returnStatement = t.ReturnStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ReturnStatement"].concat(t2));
  }, t.sequenceExpression = t.SequenceExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["SequenceExpression"].concat(t2));
  }, t.switchCase = t.SwitchCase = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["SwitchCase"].concat(t2));
  }, t.switchStatement = t.SwitchStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["SwitchStatement"].concat(t2));
  }, t.thisExpression = t.ThisExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ThisExpression"].concat(t2));
  }, t.throwStatement = t.ThrowStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ThrowStatement"].concat(t2));
  }, t.tryStatement = t.TryStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TryStatement"].concat(t2));
  }, t.unaryExpression = t.UnaryExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["UnaryExpression"].concat(t2));
  }, t.updateExpression = t.UpdateExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["UpdateExpression"].concat(t2));
  }, t.variableDeclaration = t.VariableDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["VariableDeclaration"].concat(t2));
  }, t.variableDeclarator = t.VariableDeclarator = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["VariableDeclarator"].concat(t2));
  }, t.whileStatement = t.WhileStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["WhileStatement"].concat(t2));
  }, t.withStatement = t.WithStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["WithStatement"].concat(t2));
  }, t.assignmentPattern = t.AssignmentPattern = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["AssignmentPattern"].concat(t2));
  }, t.arrayPattern = t.ArrayPattern = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ArrayPattern"].concat(t2));
  }, t.arrowFunctionExpression = t.ArrowFunctionExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ArrowFunctionExpression"].concat(t2));
  }, t.classBody = t.ClassBody = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassBody"].concat(t2));
  }, t.classDeclaration = t.ClassDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassDeclaration"].concat(t2));
  }, t.classExpression = t.ClassExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassExpression"].concat(t2));
  }, t.exportAllDeclaration = t.ExportAllDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExportAllDeclaration"].concat(t2));
  }, t.exportDefaultDeclaration = t.ExportDefaultDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExportDefaultDeclaration"].concat(t2));
  }, t.exportNamedDeclaration = t.ExportNamedDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExportNamedDeclaration"].concat(t2));
  }, t.exportSpecifier = t.ExportSpecifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExportSpecifier"].concat(t2));
  }, t.forOfStatement = t.ForOfStatement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ForOfStatement"].concat(t2));
  }, t.importDeclaration = t.ImportDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ImportDeclaration"].concat(t2));
  }, t.importDefaultSpecifier = t.ImportDefaultSpecifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ImportDefaultSpecifier"].concat(t2));
  }, t.importNamespaceSpecifier = t.ImportNamespaceSpecifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ImportNamespaceSpecifier"].concat(t2));
  }, t.importSpecifier = t.ImportSpecifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ImportSpecifier"].concat(t2));
  }, t.metaProperty = t.MetaProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["MetaProperty"].concat(t2));
  }, t.classMethod = t.ClassMethod = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassMethod"].concat(t2));
  }, t.objectPattern = t.ObjectPattern = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectPattern"].concat(t2));
  }, t.spreadElement = t.SpreadElement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["SpreadElement"].concat(t2));
  }, t.super = t.Super = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Super"].concat(t2));
  }, t.taggedTemplateExpression = t.TaggedTemplateExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TaggedTemplateExpression"].concat(t2));
  }, t.templateElement = t.TemplateElement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TemplateElement"].concat(t2));
  }, t.templateLiteral = t.TemplateLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TemplateLiteral"].concat(t2));
  }, t.yieldExpression = t.YieldExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["YieldExpression"].concat(t2));
  }, t.anyTypeAnnotation = t.AnyTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["AnyTypeAnnotation"].concat(t2));
  }, t.arrayTypeAnnotation = t.ArrayTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ArrayTypeAnnotation"].concat(t2));
  }, t.booleanTypeAnnotation = t.BooleanTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BooleanTypeAnnotation"].concat(t2));
  }, t.booleanLiteralTypeAnnotation = t.BooleanLiteralTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BooleanLiteralTypeAnnotation"].concat(t2));
  }, t.nullLiteralTypeAnnotation = t.NullLiteralTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NullLiteralTypeAnnotation"].concat(t2));
  }, t.classImplements = t.ClassImplements = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassImplements"].concat(t2));
  }, t.declareClass = t.DeclareClass = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareClass"].concat(t2));
  }, t.declareFunction = t.DeclareFunction = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareFunction"].concat(t2));
  }, t.declareInterface = t.DeclareInterface = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareInterface"].concat(t2));
  }, t.declareModule = t.DeclareModule = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareModule"].concat(t2));
  }, t.declareModuleExports = t.DeclareModuleExports = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareModuleExports"].concat(t2));
  }, t.declareTypeAlias = t.DeclareTypeAlias = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareTypeAlias"].concat(t2));
  }, t.declareOpaqueType = t.DeclareOpaqueType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareOpaqueType"].concat(t2));
  }, t.declareVariable = t.DeclareVariable = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareVariable"].concat(t2));
  }, t.declareExportDeclaration = t.DeclareExportDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareExportDeclaration"].concat(t2));
  }, t.declareExportAllDeclaration = t.DeclareExportAllDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclareExportAllDeclaration"].concat(t2));
  }, t.declaredPredicate = t.DeclaredPredicate = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DeclaredPredicate"].concat(t2));
  }, t.existsTypeAnnotation = t.ExistsTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExistsTypeAnnotation"].concat(t2));
  }, t.functionTypeAnnotation = t.FunctionTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["FunctionTypeAnnotation"].concat(t2));
  }, t.functionTypeParam = t.FunctionTypeParam = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["FunctionTypeParam"].concat(t2));
  }, t.genericTypeAnnotation = t.GenericTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["GenericTypeAnnotation"].concat(t2));
  }, t.inferredPredicate = t.InferredPredicate = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["InferredPredicate"].concat(t2));
  }, t.interfaceExtends = t.InterfaceExtends = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["InterfaceExtends"].concat(t2));
  }, t.interfaceDeclaration = t.InterfaceDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["InterfaceDeclaration"].concat(t2));
  }, t.interfaceTypeAnnotation = t.InterfaceTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["InterfaceTypeAnnotation"].concat(t2));
  }, t.intersectionTypeAnnotation = t.IntersectionTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["IntersectionTypeAnnotation"].concat(t2));
  }, t.mixedTypeAnnotation = t.MixedTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["MixedTypeAnnotation"].concat(t2));
  }, t.emptyTypeAnnotation = t.EmptyTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["EmptyTypeAnnotation"].concat(t2));
  }, t.nullableTypeAnnotation = t.NullableTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NullableTypeAnnotation"].concat(t2));
  }, t.numberLiteralTypeAnnotation = t.NumberLiteralTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NumberLiteralTypeAnnotation"].concat(t2));
  }, t.numberTypeAnnotation = t.NumberTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["NumberTypeAnnotation"].concat(t2));
  }, t.objectTypeAnnotation = t.ObjectTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectTypeAnnotation"].concat(t2));
  }, t.objectTypeInternalSlot = t.ObjectTypeInternalSlot = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectTypeInternalSlot"].concat(t2));
  }, t.objectTypeCallProperty = t.ObjectTypeCallProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectTypeCallProperty"].concat(t2));
  }, t.objectTypeIndexer = t.ObjectTypeIndexer = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectTypeIndexer"].concat(t2));
  }, t.objectTypeProperty = t.ObjectTypeProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectTypeProperty"].concat(t2));
  }, t.objectTypeSpreadProperty = t.ObjectTypeSpreadProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ObjectTypeSpreadProperty"].concat(t2));
  }, t.opaqueType = t.OpaqueType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["OpaqueType"].concat(t2));
  }, t.qualifiedTypeIdentifier = t.QualifiedTypeIdentifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["QualifiedTypeIdentifier"].concat(t2));
  }, t.stringLiteralTypeAnnotation = t.StringLiteralTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["StringLiteralTypeAnnotation"].concat(t2));
  }, t.stringTypeAnnotation = t.StringTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["StringTypeAnnotation"].concat(t2));
  }, t.thisTypeAnnotation = t.ThisTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ThisTypeAnnotation"].concat(t2));
  }, t.tupleTypeAnnotation = t.TupleTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TupleTypeAnnotation"].concat(t2));
  }, t.typeofTypeAnnotation = t.TypeofTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeofTypeAnnotation"].concat(t2));
  }, t.typeAlias = t.TypeAlias = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeAlias"].concat(t2));
  }, t.typeAnnotation = t.TypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeAnnotation"].concat(t2));
  }, t.typeCastExpression = t.TypeCastExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeCastExpression"].concat(t2));
  }, t.typeParameter = t.TypeParameter = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeParameter"].concat(t2));
  }, t.typeParameterDeclaration = t.TypeParameterDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeParameterDeclaration"].concat(t2));
  }, t.typeParameterInstantiation = t.TypeParameterInstantiation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TypeParameterInstantiation"].concat(t2));
  }, t.unionTypeAnnotation = t.UnionTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["UnionTypeAnnotation"].concat(t2));
  }, t.variance = t.Variance = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Variance"].concat(t2));
  }, t.voidTypeAnnotation = t.VoidTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["VoidTypeAnnotation"].concat(t2));
  }, t.jSXAttribute = t.jsxAttribute = t.JSXAttribute = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXAttribute"].concat(t2));
  }, t.jSXClosingElement = t.jsxClosingElement = t.JSXClosingElement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXClosingElement"].concat(t2));
  }, t.jSXElement = t.jsxElement = t.JSXElement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXElement"].concat(t2));
  }, t.jSXEmptyExpression = t.jsxEmptyExpression = t.JSXEmptyExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXEmptyExpression"].concat(t2));
  }, t.jSXExpressionContainer = t.jsxExpressionContainer = t.JSXExpressionContainer = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXExpressionContainer"].concat(t2));
  }, t.jSXSpreadChild = t.jsxSpreadChild = t.JSXSpreadChild = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXSpreadChild"].concat(t2));
  }, t.jSXIdentifier = t.jsxIdentifier = t.JSXIdentifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXIdentifier"].concat(t2));
  }, t.jSXMemberExpression = t.jsxMemberExpression = t.JSXMemberExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXMemberExpression"].concat(t2));
  }, t.jSXNamespacedName = t.jsxNamespacedName = t.JSXNamespacedName = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXNamespacedName"].concat(t2));
  }, t.jSXOpeningElement = t.jsxOpeningElement = t.JSXOpeningElement = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXOpeningElement"].concat(t2));
  }, t.jSXSpreadAttribute = t.jsxSpreadAttribute = t.JSXSpreadAttribute = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXSpreadAttribute"].concat(t2));
  }, t.jSXText = t.jsxText = t.JSXText = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXText"].concat(t2));
  }, t.jSXFragment = t.jsxFragment = t.JSXFragment = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXFragment"].concat(t2));
  }, t.jSXOpeningFragment = t.jsxOpeningFragment = t.JSXOpeningFragment = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXOpeningFragment"].concat(t2));
  }, t.jSXClosingFragment = t.jsxClosingFragment = t.JSXClosingFragment = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["JSXClosingFragment"].concat(t2));
  }, t.noop = t.Noop = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Noop"].concat(t2));
  }, t.parenthesizedExpression = t.ParenthesizedExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ParenthesizedExpression"].concat(t2));
  }, t.awaitExpression = t.AwaitExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["AwaitExpression"].concat(t2));
  }, t.bindExpression = t.BindExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BindExpression"].concat(t2));
  }, t.classProperty = t.ClassProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassProperty"].concat(t2));
  }, t.optionalMemberExpression = t.OptionalMemberExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["OptionalMemberExpression"].concat(t2));
  }, t.optionalCallExpression = t.OptionalCallExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["OptionalCallExpression"].concat(t2));
  }, t.classPrivateProperty = t.ClassPrivateProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ClassPrivateProperty"].concat(t2));
  }, t.import = t.Import = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Import"].concat(t2));
  }, t.decorator = t.Decorator = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["Decorator"].concat(t2));
  }, t.doExpression = t.DoExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["DoExpression"].concat(t2));
  }, t.exportDefaultSpecifier = t.ExportDefaultSpecifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExportDefaultSpecifier"].concat(t2));
  }, t.exportNamespaceSpecifier = t.ExportNamespaceSpecifier = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["ExportNamespaceSpecifier"].concat(t2));
  }, t.privateName = t.PrivateName = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["PrivateName"].concat(t2));
  }, t.bigIntLiteral = t.BigIntLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["BigIntLiteral"].concat(t2));
  }, t.tSParameterProperty = t.tsParameterProperty = t.TSParameterProperty = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSParameterProperty"].concat(t2));
  }, t.tSDeclareFunction = t.tsDeclareFunction = t.TSDeclareFunction = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSDeclareFunction"].concat(t2));
  }, t.tSDeclareMethod = t.tsDeclareMethod = t.TSDeclareMethod = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSDeclareMethod"].concat(t2));
  }, t.tSQualifiedName = t.tsQualifiedName = t.TSQualifiedName = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSQualifiedName"].concat(t2));
  }, t.tSCallSignatureDeclaration = t.tsCallSignatureDeclaration = t.TSCallSignatureDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSCallSignatureDeclaration"].concat(t2));
  }, t.tSConstructSignatureDeclaration = t.tsConstructSignatureDeclaration = t.TSConstructSignatureDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSConstructSignatureDeclaration"].concat(t2));
  }, t.tSPropertySignature = t.tsPropertySignature = t.TSPropertySignature = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSPropertySignature"].concat(t2));
  }, t.tSMethodSignature = t.tsMethodSignature = t.TSMethodSignature = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSMethodSignature"].concat(t2));
  }, t.tSIndexSignature = t.tsIndexSignature = t.TSIndexSignature = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSIndexSignature"].concat(t2));
  }, t.tSAnyKeyword = t.tsAnyKeyword = t.TSAnyKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSAnyKeyword"].concat(t2));
  }, t.tSNumberKeyword = t.tsNumberKeyword = t.TSNumberKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSNumberKeyword"].concat(t2));
  }, t.tSObjectKeyword = t.tsObjectKeyword = t.TSObjectKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSObjectKeyword"].concat(t2));
  }, t.tSBooleanKeyword = t.tsBooleanKeyword = t.TSBooleanKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSBooleanKeyword"].concat(t2));
  }, t.tSStringKeyword = t.tsStringKeyword = t.TSStringKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSStringKeyword"].concat(t2));
  }, t.tSSymbolKeyword = t.tsSymbolKeyword = t.TSSymbolKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSSymbolKeyword"].concat(t2));
  }, t.tSVoidKeyword = t.tsVoidKeyword = t.TSVoidKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSVoidKeyword"].concat(t2));
  }, t.tSUndefinedKeyword = t.tsUndefinedKeyword = t.TSUndefinedKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSUndefinedKeyword"].concat(t2));
  }, t.tSNullKeyword = t.tsNullKeyword = t.TSNullKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSNullKeyword"].concat(t2));
  }, t.tSNeverKeyword = t.tsNeverKeyword = t.TSNeverKeyword = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSNeverKeyword"].concat(t2));
  }, t.tSThisType = t.tsThisType = t.TSThisType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSThisType"].concat(t2));
  }, t.tSFunctionType = t.tsFunctionType = t.TSFunctionType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSFunctionType"].concat(t2));
  }, t.tSConstructorType = t.tsConstructorType = t.TSConstructorType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSConstructorType"].concat(t2));
  }, t.tSTypeReference = t.tsTypeReference = t.TSTypeReference = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeReference"].concat(t2));
  }, t.tSTypePredicate = t.tsTypePredicate = t.TSTypePredicate = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypePredicate"].concat(t2));
  }, t.tSTypeQuery = t.tsTypeQuery = t.TSTypeQuery = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeQuery"].concat(t2));
  }, t.tSTypeLiteral = t.tsTypeLiteral = t.TSTypeLiteral = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeLiteral"].concat(t2));
  }, t.tSArrayType = t.tsArrayType = t.TSArrayType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSArrayType"].concat(t2));
  }, t.tSTupleType = t.tsTupleType = t.TSTupleType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTupleType"].concat(t2));
  }, t.tSUnionType = t.tsUnionType = t.TSUnionType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSUnionType"].concat(t2));
  }, t.tSIntersectionType = t.tsIntersectionType = t.TSIntersectionType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSIntersectionType"].concat(t2));
  }, t.tSConditionalType = t.tsConditionalType = t.TSConditionalType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSConditionalType"].concat(t2));
  }, t.tSInferType = t.tsInferType = t.TSInferType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSInferType"].concat(t2));
  }, t.tSParenthesizedType = t.tsParenthesizedType = t.TSParenthesizedType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSParenthesizedType"].concat(t2));
  }, t.tSTypeOperator = t.tsTypeOperator = t.TSTypeOperator = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeOperator"].concat(t2));
  }, t.tSIndexedAccessType = t.tsIndexedAccessType = t.TSIndexedAccessType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSIndexedAccessType"].concat(t2));
  }, t.tSMappedType = t.tsMappedType = t.TSMappedType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSMappedType"].concat(t2));
  }, t.tSLiteralType = t.tsLiteralType = t.TSLiteralType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSLiteralType"].concat(t2));
  }, t.tSExpressionWithTypeArguments = t.tsExpressionWithTypeArguments = t.TSExpressionWithTypeArguments = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSExpressionWithTypeArguments"].concat(t2));
  }, t.tSInterfaceDeclaration = t.tsInterfaceDeclaration = t.TSInterfaceDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSInterfaceDeclaration"].concat(t2));
  }, t.tSInterfaceBody = t.tsInterfaceBody = t.TSInterfaceBody = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSInterfaceBody"].concat(t2));
  }, t.tSTypeAliasDeclaration = t.tsTypeAliasDeclaration = t.TSTypeAliasDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeAliasDeclaration"].concat(t2));
  }, t.tSAsExpression = t.tsAsExpression = t.TSAsExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSAsExpression"].concat(t2));
  }, t.tSTypeAssertion = t.tsTypeAssertion = t.TSTypeAssertion = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeAssertion"].concat(t2));
  }, t.tSEnumDeclaration = t.tsEnumDeclaration = t.TSEnumDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSEnumDeclaration"].concat(t2));
  }, t.tSEnumMember = t.tsEnumMember = t.TSEnumMember = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSEnumMember"].concat(t2));
  }, t.tSModuleDeclaration = t.tsModuleDeclaration = t.TSModuleDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSModuleDeclaration"].concat(t2));
  }, t.tSModuleBlock = t.tsModuleBlock = t.TSModuleBlock = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSModuleBlock"].concat(t2));
  }, t.tSImportEqualsDeclaration = t.tsImportEqualsDeclaration = t.TSImportEqualsDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSImportEqualsDeclaration"].concat(t2));
  }, t.tSExternalModuleReference = t.tsExternalModuleReference = t.TSExternalModuleReference = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSExternalModuleReference"].concat(t2));
  }, t.tSNonNullExpression = t.tsNonNullExpression = t.TSNonNullExpression = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSNonNullExpression"].concat(t2));
  }, t.tSExportAssignment = t.tsExportAssignment = t.TSExportAssignment = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSExportAssignment"].concat(t2));
  }, t.tSNamespaceExportDeclaration = t.tsNamespaceExportDeclaration = t.TSNamespaceExportDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSNamespaceExportDeclaration"].concat(t2));
  }, t.tSTypeAnnotation = t.tsTypeAnnotation = t.TSTypeAnnotation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeAnnotation"].concat(t2));
  }, t.tSTypeParameterInstantiation = t.tsTypeParameterInstantiation = t.TSTypeParameterInstantiation = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeParameterInstantiation"].concat(t2));
  }, t.tSTypeParameterDeclaration = t.tsTypeParameterDeclaration = t.TSTypeParameterDeclaration = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeParameterDeclaration"].concat(t2));
  }, t.tSTypeParameter = t.tsTypeParameter = t.TSTypeParameter = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    return n.default.apply(void 0, ["TSTypeParameter"].concat(t2));
  }, t.numberLiteral = t.NumberLiteral = function e2() {
    console.trace("The node type NumberLiteral has been renamed to NumericLiteral");
    for (var t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++) r2[n2] = arguments[n2];
    return e2.apply(void 0, ["NumberLiteral"].concat(r2));
  }, t.regexLiteral = t.RegexLiteral = function e2() {
    console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");
    for (var t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++) r2[n2] = arguments[n2];
    return e2.apply(void 0, ["RegexLiteral"].concat(r2));
  }, t.restProperty = t.RestProperty = function e2() {
    console.trace("The node type RestProperty has been renamed to RestElement");
    for (var t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++) r2[n2] = arguments[n2];
    return e2.apply(void 0, ["RestProperty"].concat(r2));
  }, t.spreadProperty = t.SpreadProperty = function e2() {
    console.trace("The node type SpreadProperty has been renamed to SpreadElement");
    for (var t2 = arguments.length, r2 = new Array(t2), n2 = 0; n2 < t2; n2++) r2[n2] = arguments[n2];
    return e2.apply(void 0, ["SpreadProperty"].concat(r2));
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(772));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeGetter("buffer", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$TypedArrayName" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[TypedArrayName]] internal slot");
      (0, h.default)(r2.$ViewedArrayBuffer, "O has a [[ViewedArrayBuffer]]");
      var n2 = r2.$ViewedArrayBuffer;
      return n2;
    }), t2.defineNativeGetter("byteLength", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$TypedArrayName" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[TypedArrayName]] internal slot");
      (0, h.default)(r2.$ViewedArrayBuffer, "O has a [[ViewedArrayBuffer]] internal slot");
      var n2 = r2.$ViewedArrayBuffer;
      if ((0, h.default)(n2), true === (0, l.IsDetachedBuffer)(e2, n2)) return e2.intrinsics.zero;
      var i2 = r2.$ByteLength;
      return (0, h.default)("number" == typeof i2), new a.NumberValue(e2, i2);
    }), t2.defineNativeGetter("byteOffset", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$TypedArrayName" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[TypedArrayName]] internal slot");
      (0, h.default)(r2.$ViewedArrayBuffer, "O has a [[ViewedArrayBuffer]] internal slot");
      var n2 = r2.$ViewedArrayBuffer;
      if ((0, h.default)(n2), true === (0, l.IsDetachedBuffer)(e2, n2)) return e2.intrinsics.zero;
      var i2 = r2.$ByteOffset;
      return (0, h.default)("number" == typeof i2), new a.NumberValue(e2, i2);
    }), t2.defineNativeMethod("copyWithin", 2, function(t3, r2) {
      var i2 = n(r2, 3), o2 = i2[0], l2 = i2[1], f2 = i2[2], p2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, p2);
      var v = p2.throwIfNotConcreteObject().$ArrayLength;
      (0, h.default)("number" == typeof v);
      var y, m = d.To.ToInteger(e2, o2), b = m < 0 ? Math.max(v + m, 0) : Math.min(m, v), g = d.To.ToInteger(e2, l2), w = g < 0 ? Math.max(v + g, 0) : Math.min(g, v), E = !f2 || f2 instanceof a.UndefinedValue ? v : d.To.ToInteger(e2, f2.throwIfNotConcrete()), S = E < 0 ? Math.max(v + E, 0) : Math.min(E, v), T = Math.min(S - w, v - b);
      for (w < b && b < w + T ? (y = -1, w = w + T - 1, b = b + T - 1) : y = 1; T > 0; ) {
        var A = d.To.ToString(e2, new a.NumberValue(e2, w)), C = d.To.ToString(e2, new a.NumberValue(e2, b)), P = (0, u.HasProperty)(e2, p2, A);
        if (true === P) {
          var O = (0, s.Get)(e2, p2, A);
          d.Properties.Set(e2, p2, C, O, true);
        } else d.Properties.DeletePropertyOrThrow(e2, p2.throwIfNotConcreteObject(), C);
        w += y, b += y, T -= 1;
      }
      return p2;
    }), t2.defineNativeMethod("entries", 0, function(t3) {
      var r2 = t3;
      return (0, c.ValidateTypedArray)(e2, r2), (0, h.default)(r2 instanceof a.ObjectValue), d.Create.CreateArrayIterator(e2, r2, "key+value");
    }), t2.defineNativeMethod("every", 1, function(t3, r2) {
      var i2 = n(r2, 2), f2 = i2[0], p2 = i2[1], v = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, v);
      var y = v.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof y), !(0, l.IsCallable)(e2, f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var m = p2 || e2.intrinsics.undefined, b = 0; b < y; ) {
        var g = new a.StringValue(e2, b + ""), w = (0, u.HasProperty)(e2, v, g);
        if (w) {
          var E = (0, s.Get)(e2, v, g), S = d.To.ToBooleanPartial(e2, (0, o.Call)(e2, f2, m, [E, new a.NumberValue(e2, b), v]));
          if (!S) return e2.intrinsics.false;
        }
        b++;
      }
      return e2.intrinsics.true;
    }), t2.defineNativeMethod("fill", 1, function(t3, r2) {
      var i2 = n(r2, 3), o2 = i2[0], s2 = i2[1], u2 = i2[2], l2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, l2);
      var f2 = l2.throwIfNotConcreteObject().$ArrayLength;
      (0, h.default)("number" == typeof f2);
      for (var p2 = d.To.ToInteger(e2, s2 || e2.intrinsics.undefined), v = p2 < 0 ? Math.max(f2 + p2, 0) : Math.min(p2, f2), y = !u2 || u2 instanceof a.UndefinedValue ? f2 : d.To.ToInteger(e2, u2.throwIfNotConcrete()), m = y < 0 ? Math.max(f2 + y, 0) : Math.min(y, f2); v < m; ) {
        var b = new a.StringValue(e2, v + "");
        d.Properties.Set(e2, l2, b, o2, true), v++;
      }
      return l2;
    }), t2.defineNativeMethod("filter", 1, function(t3, r2) {
      var i2 = n(r2, 2), u2 = i2[0], f2 = i2[1], p2 = t3;
      (0, c.ValidateTypedArray)(e2, p2), (0, h.default)(p2 instanceof a.ObjectValue);
      var v = p2.$ArrayLength;
      if ((0, h.default)("number" == typeof v), false === (0, l.IsCallable)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsCallable(callbackfn) is false");
      for (var y = f2 || e2.intrinsics.undefined, m = [], b = 0, g = 0; b < v; ) {
        var w = d.To.ToString(e2, new a.NumberValue(e2, b)), E = (0, s.Get)(e2, p2, w), S = d.To.ToBooleanPartial(e2, (0, o.Call)(e2, u2, y, [E, new a.NumberValue(e2, b), p2]));
        true === S && (m.push(E), g += 1), b += 1;
      }
      for (var T = (0, c.TypedArraySpeciesCreate)(e2, p2, [new a.NumberValue(e2, g)]), A = 0, C = 0; C < m.length; C++) {
        var P = m[C];
        d.Properties.Set(e2, T, new a.StringValue(e2, d.To.ToString(e2, new a.NumberValue(e2, A))), P, true), A += 1;
      }
      return T;
    }), t2.defineNativeMethod("find", 1, function(t3, r2) {
      var i2 = n(r2, 2), u2 = i2[0], f2 = i2[1], p2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, p2);
      var v = p2.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof v), !(0, l.IsCallable)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var y = f2 || e2.intrinsics.undefined, m = 0; m < v; ) {
        var b = new a.StringValue(e2, m + ""), g = (0, s.Get)(e2, p2, b), w = d.To.ToBooleanPartial(e2, (0, o.Call)(e2, u2, y, [g, new a.NumberValue(e2, m), p2]));
        if (w) return g;
        m++;
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("findIndex", 1, function(t3, r2) {
      var i2 = n(r2, 2), u2 = i2[0], f2 = i2[1], p2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, p2);
      var v = p2.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof v), false === (0, l.IsCallable)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var y = f2 || e2.intrinsics.undefined, m = 0; m < v; ) {
        var b = d.To.ToString(e2, new a.NumberValue(e2, m)), g = (0, s.Get)(e2, p2, new a.StringValue(e2, b)), w = d.To.ToBooleanPartial(e2, (0, o.Call)(e2, u2, y, [g, new a.NumberValue(e2, m), p2]));
        if (true === w) return new a.NumberValue(e2, m);
        m += 1;
      }
      return new a.NumberValue(e2, -1);
    }), t2.defineNativeMethod("forEach", 1, function(t3, r2) {
      var i2 = n(r2, 2), f2 = i2[0], p2 = i2[1], v = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, v);
      var y = v.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof y), !(0, l.IsCallable)(e2, f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var m = p2 || e2.intrinsics.undefined, b = 0; b < y; ) {
        var g = new a.StringValue(e2, b + ""), w = (0, u.HasProperty)(e2, v, g);
        if (w) {
          var E = (0, s.Get)(e2, v, g);
          (0, o.Call)(e2, f2, m, [E, new a.NumberValue(e2, b), v]);
        }
        b++;
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("includes", 1, function(t3, r2) {
      var i2 = n(r2, 2), o2 = i2[0], u2 = i2[1], l2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, l2);
      var f2 = l2.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof f2), 0 === f2) return e2.intrinsics.false;
      var v, y = d.To.ToInteger(e2, u2 || e2.intrinsics.undefined);
      for (y >= 0 ? v = y : (v = f2 + y) < 0 && (v = 0); v < f2; ) {
        var m = (0, s.Get)(e2, l2, d.To.ToString(e2, new a.NumberValue(e2, v)));
        if (true === (0, p.SameValueZeroPartial)(e2, o2, m)) return e2.intrinsics.true;
        v += 1;
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("indexOf", 1, function(t3, r2) {
      var i2 = n(r2, 2), o2 = i2[0], l2 = i2[1], f2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, f2);
      var v = f2.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof v), 0 === v) return new a.NumberValue(e2, -1);
      var y, m = l2 ? d.To.ToInteger(e2, l2) : 0;
      if (m >= v) return new a.NumberValue(e2, -1);
      for (m >= 0 ? y = Object.is(m, -0) ? 0 : m : (y = v + m) < 0 && (y = 0); y < v; ) {
        var b = (0, u.HasProperty)(e2, f2, y + "");
        if (true === b) {
          var g = (0, s.Get)(e2, f2, y + ""), w = (0, p.StrictEqualityComparisonPartial)(e2, o2, g);
          if (w) return new a.NumberValue(e2, y);
        }
        y++;
      }
      return new a.NumberValue(e2, -1);
    }), t2.defineNativeMethod("join", 1, function(t3, r2) {
      var i2 = n(r2, 1), o2 = i2[0], l2 = o2, f2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, f2);
      var p2 = f2.throwIfNotConcreteObject().$ArrayLength;
      (0, h.default)("number" == typeof p2), (!l2 || l2 instanceof a.UndefinedValue) && (l2 = new a.StringValue(e2, ","));
      var v = d.To.ToStringPartial(e2, l2);
      if (0 === p2) return e2.intrinsics.emptyString;
      var y, m = (0, s.Get)(e2, f2, "0");
      y = (0, u.HasSomeCompatibleType)(m, a.UndefinedValue, a.NullValue) ? "" : d.To.ToStringPartial(e2, m);
      for (var b = 1; b < p2; ) {
        var g = y + v, w = (0, s.Get)(e2, f2, new a.StringValue(e2, b + "")), E = void 0;
        E = (0, u.HasSomeCompatibleType)(w, a.UndefinedValue, a.NullValue) ? "" : d.To.ToStringPartial(e2, w), y = g + E, b++;
      }
      return new a.StringValue(e2, y + "");
    }), t2.defineNativeMethod("keys", 0, function(t3) {
      var r2 = t3;
      return (0, c.ValidateTypedArray)(e2, r2), (0, h.default)(r2 instanceof a.ObjectValue), d.Create.CreateArrayIterator(e2, r2, "key");
    }), t2.defineNativeMethod("lastIndexOf", 1, function(t3, r2) {
      var i2 = n(r2, 2), o2 = i2[0], l2 = i2[1], f2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, f2);
      var v = f2.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof v), 0 === v) return new a.NumberValue(e2, -1);
      var y, m = l2 ? d.To.ToInteger(e2, l2) : v - 1;
      for (y = m >= 0 ? Object.is(m, -0) ? 0 : Math.min(m, v - 1) : v + m; y >= 0; ) {
        var b = (0, u.HasProperty)(e2, f2, new a.StringValue(e2, y + ""));
        if (b) {
          var g = (0, s.Get)(e2, f2, new a.StringValue(e2, y + "")), w = (0, p.StrictEqualityComparisonPartial)(e2, o2, g);
          if (w) return new a.NumberValue(e2, y);
        }
        y--;
      }
      return new a.NumberValue(e2, -1);
    }), t2.defineNativeGetter("length", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$TypedArrayName" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[TypedArrayName]] internal slot");
      (0, h.default)(r2.$ViewedArrayBuffer, "O has a [[ViewedArrayBuffer]] internal slot");
      var n2 = r2.$ViewedArrayBuffer;
      if ((0, h.default)(n2), true === (0, l.IsDetachedBuffer)(e2, n2)) return e2.intrinsics.zero;
      var i2 = r2.$ArrayLength;
      return (0, h.default)("number" == typeof i2), new a.NumberValue(e2, i2);
    }), t2.defineNativeMethod("map", 1, function(t3, r2) {
      var i2 = n(r2, 2), u2 = i2[0], f2 = i2[1], p2 = t3;
      (0, c.ValidateTypedArray)(e2, p2), (0, h.default)(p2 instanceof a.ObjectValue);
      var v = p2.$ArrayLength;
      if ((0, h.default)("number" == typeof v), false === (0, l.IsCallable)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsCallable(callbackfn) is false");
      for (var y = f2 || e2.intrinsics.undefined, m = (0, c.TypedArraySpeciesCreate)(e2, p2, [new a.NumberValue(e2, v)]), b = 0; b < v; ) {
        var g = d.To.ToString(e2, new a.NumberValue(e2, b)), w = (0, s.Get)(e2, p2, g), E = (0, o.Call)(e2, u2, y, [w, new a.NumberValue(e2, b), p2]);
        d.Properties.Set(e2, m, g, E, true), b += 1;
      }
      return m;
    }), t2.defineNativeMethod("reduce", 1, function(t3, r2) {
      var i2 = n(r2, 2), f2 = i2[0], p2 = i2[1], v = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, v);
      var y = v.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof y), !(0, l.IsCallable)(e2, f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      if (0 === y && !p2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      var m, b = 0;
      if (p2) m = p2;
      else {
        for (var g = false; false === g && b < y; ) {
          var w = new a.StringValue(e2, b + "");
          (g = (0, u.HasProperty)(e2, v, w)) && (m = (0, s.Get)(e2, v, w)), b++;
        }
        if (!g) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "kPresent is false");
        (0, h.default)(m);
      }
      for (; b < y; ) {
        var E = new a.StringValue(e2, b + ""), S = (0, u.HasProperty)(e2, v, E);
        if (S) {
          var T = (0, s.Get)(e2, v, E);
          m = (0, o.Call)(e2, f2, e2.intrinsics.undefined, [m, T, new a.NumberValue(e2, b), v]);
        }
        b++;
      }
      return m;
    }), t2.defineNativeMethod("reduceRight", 1, function(t3, r2) {
      var i2 = n(r2, 2), f2 = i2[0], p2 = i2[1], v = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, v);
      var y = v.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof y), !(0, l.IsCallable)(e2, f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      if (0 === y && !p2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      var m, b = y - 1;
      if (p2) m = p2;
      else {
        for (var g = false; !g && b >= 0; ) {
          var w = new a.StringValue(e2, b + "");
          (g = (0, u.HasProperty)(e2, v, w)) && (m = (0, s.Get)(e2, v, w)), b--;
        }
        if (!g || !m) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      }
      for (; b >= 0; ) {
        var E = new a.StringValue(e2, b + ""), S = (0, u.HasProperty)(e2, v, E);
        if (S) {
          var T = (0, s.Get)(e2, v, E);
          m = (0, o.Call)(e2, f2, e2.intrinsics.undefined, [m, T, new a.NumberValue(e2, b), v]);
        }
        b--;
      }
      return m;
    }), t2.defineNativeMethod("reverse", 0, function(t3) {
      var r2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, r2);
      var n2 = r2.throwIfNotConcreteObject().$ArrayLength;
      (0, h.default)("number" == typeof n2);
      for (var i2 = Math.floor(n2 / 2), o2 = 0; o2 !== i2; ) {
        var l2 = n2 - o2 - 1, f2 = new a.StringValue(e2, l2 + ""), p2 = new a.StringValue(e2, o2 + ""), v = (0, u.HasProperty)(e2, r2, p2), y = void 0;
        v && (y = (0, s.Get)(e2, r2, p2));
        var m = (0, u.HasProperty)(e2, r2, f2), b = void 0;
        m && (b = (0, s.Get)(e2, r2, f2)), v && m ? ((0, h.default)(y, "expected lower value to exist"), (0, h.default)(b, "expected upper value to exist"), d.Properties.Set(e2, r2, p2, b, true), d.Properties.Set(e2, r2, f2, y, true)) : !v && m ? ((0, h.default)(b, "expected upper value to exist"), d.Properties.Set(e2, r2, p2, b, true), d.Properties.DeletePropertyOrThrow(e2, r2.throwIfNotConcreteObject(), f2)) : v && !m && ((0, h.default)(y, "expected lower value to exist"), d.Properties.DeletePropertyOrThrow(e2, r2.throwIfNotConcreteObject(), p2), d.Properties.Set(e2, r2, f2, y, true)), o2++;
      }
      return r2;
    }), t2.defineNativeMethod("set", 1, function(t3, r2) {
      var i2 = n(r2, 2), o2 = i2[0], u2 = i2[1];
      if (void 0 === o2.$TypedArrayName) {
        var v = o2;
        (0, h.default)(!(o2 instanceof a.ObjectValue && o2.$TypedArrayName));
        var y = t3.throwIfNotConcrete();
        if (!(y instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(target) is not Object");
        if ("string" != typeof y.$TypedArrayName) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "target does not have a [[TypedArrayName]] internal slot");
        (0, h.default)(y.$ViewedArrayBuffer, "target has a [[ViewedArrayBuffer]] internal slot");
        var m = d.To.ToInteger(e2, u2 || e2.intrinsics.undefined);
        if (m < 0) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "targetOffset < 0");
        var b = y.$ViewedArrayBuffer;
        if ((0, h.default)(b instanceof a.ObjectValue), true === (0, l.IsDetachedBuffer)(e2, b)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(targetBuffer) is true");
        var g = y.$ArrayLength;
        (0, h.default)("number" == typeof g);
        var w = y.$TypedArrayName;
        (0, h.default)("string" == typeof w);
        var E = c.ArrayElementSize[w], S = c.ArrayElementType[w], T = y.$ByteOffset;
        (0, h.default)("number" == typeof T);
        var A = d.To.ToObject(e2, v), C = d.To.ToLength(e2, (0, s.Get)(e2, A, "length"));
        if (C + m > g) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "srcLength + targetOffset > targetLength");
        for (var P = m * E + T, O = 0, x = P + E * C; P < x; ) {
          var _ = d.To.ToString(e2, new a.NumberValue(e2, O)), V = d.To.ToNumber(e2, (0, s.Get)(e2, A, _));
          if (true === (0, l.IsDetachedBuffer)(e2, b)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(targetBuffer) is true");
          (0, f.SetValueInBuffer)(e2, b, P, S, V), O += 1, P += E;
        }
        return e2.intrinsics.undefined;
      }
      var D = o2;
      (0, h.default)(D instanceof a.ObjectValue && D.$TypedArrayName);
      var N = t3.throwIfNotConcrete();
      if (!(N instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(target) is not Object");
      if ("string" != typeof N.$TypedArrayName) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "target does not have a [[TypedArrayName]] internal slot");
      (0, h.default)(N.$ViewedArrayBuffer);
      var I = d.To.ToInteger(e2, u2 || e2.intrinsics.undefined);
      if (I < 0) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "targetOffset < 0");
      var k = N.$ViewedArrayBuffer;
      if ((0, h.default)(k instanceof a.ObjectValue), true === (0, l.IsDetachedBuffer)(e2, k)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(targetBuffer) is true");
      var j = N.$ArrayLength;
      (0, h.default)("number" == typeof j);
      var F = D.$ViewedArrayBuffer;
      if ((0, h.default)(F), true === (0, l.IsDetachedBuffer)(e2, F)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(srcBuffer) is true");
      var R = N.$TypedArrayName;
      (0, h.default)("string" == typeof R);
      var M = c.ArrayElementType[R], B = c.ArrayElementSize[R], L = N.$ByteOffset;
      (0, h.default)("number" == typeof L);
      var $ = D.$TypedArrayName;
      (0, h.default)("string" == typeof $);
      var G = c.ArrayElementType[$], z = c.ArrayElementSize[$], U = D.$ArrayLength;
      (0, h.default)("number" == typeof U);
      var W, q = D.$ByteOffset;
      if ((0, h.default)("number" == typeof q), U + I > j) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "srcLength + targetOffset > targetLength");
      true === (0, p.SameValue)(e2, F, k) ? (F = (0, f.CloneArrayBuffer)(e2, k, q, e2.intrinsics.ArrayBuffer), W = 0) : W = q;
      var H = I * B + L, K = H + B * U;
      if (G === M) for (; H < K; ) {
        var J = (0, f.GetValueFromBuffer)(e2, F, W, "Uint8");
        (0, f.SetValueInBuffer)(e2, k, H, "Uint8", J.value), W += 1, H += 1;
      }
      else for (; H < K; ) {
        var Y = (0, f.GetValueFromBuffer)(e2, F, W, G);
        (0, f.SetValueInBuffer)(e2, k, H, M, Y.value), W += z, H += B;
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("slice", 2, function(t3, r2) {
      var o2 = n(r2, 2), u2 = o2[0], p2 = o2[1], v = t3;
      (0, c.ValidateTypedArray)(e2, v), (0, h.default)(v instanceof a.ObjectValue);
      var y = v.$ArrayLength;
      (0, h.default)("number" == typeof y);
      var m = d.To.ToInteger(e2, u2), b = m < 0 ? Math.max(y + m, 0) : Math.min(m, y), g = !p2 || p2 instanceof a.UndefinedValue ? y : d.To.ToInteger(e2, p2.throwIfNotConcrete()), w = g < 0 ? Math.max(y + g, 0) : Math.min(g, y), E = Math.max(w - b, 0), S = (0, c.TypedArraySpeciesCreate)(e2, v, [new a.NumberValue(e2, E)]), T = v.$TypedArrayName;
      (0, h.default)("string" == typeof T);
      var A = c.ArrayElementType[T], C = S.$TypedArrayName;
      (0, h.default)("string" == typeof C);
      var P = c.ArrayElementType[C];
      if (A !== P) for (var O = 0; b < w; ) {
        var x = d.To.ToString(e2, new a.NumberValue(e2, b)), _ = (0, s.Get)(e2, v, x);
        d.Properties.Set(e2, S, d.To.ToString(e2, new a.NumberValue(e2, O)), _, true), b += 1, O += 1;
      }
      else if (E > 0) {
        var V = v.$ViewedArrayBuffer;
        if ((0, h.default)(V), true === (0, l.IsDetachedBuffer)(e2, V)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(srcBuffer) is true");
        var D = S.$ViewedArrayBuffer;
        (0, h.default)(D instanceof a.ObjectValue);
        var N = i.ElementSize[A], I = v.$ByteOffset;
        (0, h.default)("number" == typeof I);
        var k = S.$ByteOffset;
        (0, h.default)("number" == typeof k);
        for (var j = b * N + I, F = k + E * N; k < F; ) {
          var R = (0, f.GetValueFromBuffer)(e2, V, j, "Uint8");
          (0, f.SetValueInBuffer)(e2, D, k, "Uint8", R.value), j += 1, k += 1;
        }
      }
      return S;
    }), t2.defineNativeMethod("some", 1, function(t3, r2) {
      var i2 = n(r2, 2), f2 = i2[0], p2 = i2[1], v = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, v);
      var y = v.throwIfNotConcreteObject().$ArrayLength;
      if ((0, h.default)("number" == typeof y), !(0, l.IsCallable)(e2, f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "callback passed to Array.prototype.some isn't callable");
      for (var m = p2 || e2.intrinsics.undefined, b = 0; b < y; ) {
        var g = new a.StringValue(e2, b + ""), w = (0, u.HasProperty)(e2, v, g);
        if (w) {
          var E = (0, s.Get)(e2, v, g), S = d.To.ToBooleanPartial(e2, (0, o.Call)(e2, f2, m, [E, new a.NumberValue(e2, b), v]));
          if (S) return e2.intrinsics.true;
        }
        b++;
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("sort", 1, function(t3, r2) {
      var i2 = n(r2, 1), s2 = i2[0], u2 = d.To.ToObject(e2, t3), f2 = (0, c.ValidateTypedArray)(e2, u2), p2 = u2.throwIfNotConcreteObject().$ArrayLength;
      (0, h.default)("number" == typeof p2);
      for (var v = [], y = 0; y < p2; y++) {
        var m = (0, c.IntegerIndexedElementGet)(e2, u2.throwIfNotConcreteObject(), y);
        v[y] = m;
      }
      v.sort(function(t4, r3) {
        (0, h.default)(t4 instanceof a.NumberValue, "Unexpected type"), (0, h.default)(r3 instanceof a.NumberValue, "Unexpected type");
        var n2 = (function(t5, r4) {
          if ((0, h.default)(t5 instanceof a.NumberValue), (0, h.default)(r4 instanceof a.NumberValue), !s2.mightBeUndefined()) {
            var n3 = (0, o.Call)(e2, s2, e2.intrinsics.undefined, [t5, r4]);
            if (true === (0, l.IsDetachedBuffer)(e2, f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "array buffer has been detached");
            return n3 instanceof a.NumberValue && isNaN(n3.value) ? e2.intrinsics.zero : n3;
          }
          if (s2.throwIfNotConcrete(), isNaN(t5.value)) return isNaN(r4.value) ? e2.intrinsics.zero : new a.NumberValue(e2, 1);
          return isNaN(r4.value) ? new a.NumberValue(e2, -1) : t5.value < r4.value ? new a.NumberValue(e2, -1) : t5.value > r4.value ? new a.NumberValue(e2, 1) : Object.is(t5.value, -0) && Object.is(r4.value, 0) ? new a.NumberValue(e2, -1) : Object.is(t5.value, 0) && Object.is(r4.value, -0) ? new a.NumberValue(e2, 1) : e2.intrinsics.zero;
        })(t4, r3);
        return d.To.ToNumber(e2, n2);
      });
      for (var b = 0; b < p2; b++) (0, c.IntegerIndexedElementSet)(e2, u2.throwIfNotConcreteObject(), b, v[b]);
      return t3;
    }), t2.defineNativeMethod("subarray", 2, function(t3, r2) {
      var i2 = n(r2, 2), o2 = i2[0], s2 = i2[1], u2 = t3.throwIfNotConcrete();
      if (!(u2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$TypedArrayName" in u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[TypedArrayName]] internal slot");
      (0, h.default)(u2.$ViewedArrayBuffer, "O has a [[ViewedArrayBuffer]] internal slot");
      var l2 = u2.$ViewedArrayBuffer;
      (0, h.default)(l2);
      var f2 = u2.$ArrayLength;
      (0, h.default)("number" == typeof f2);
      var p2 = d.To.ToInteger(e2, o2), v = p2 < 0 ? Math.max(f2 + p2, 0) : Math.min(p2, f2), y = !s2 || s2 instanceof a.UndefinedValue ? f2 : d.To.ToInteger(e2, s2.throwIfNotConcrete()), m = y < 0 ? Math.max(f2 + y, 0) : Math.min(y, f2), b = Math.max(m - v, 0), g = u2.$TypedArrayName;
      (0, h.default)("string" == typeof g);
      var w = c.ArrayElementSize[g], E = u2.$ByteOffset;
      (0, h.default)("number" == typeof E);
      var S = E + v * w, T = [l2, new a.NumberValue(e2, S), new a.NumberValue(e2, b)];
      return (0, c.TypedArraySpeciesCreate)(e2, u2, T);
    }), t2.defineNativeMethod("toLocaleString", 0, function(t3) {
      var r2 = d.To.ToObject(e2, t3);
      (0, c.ValidateTypedArray)(e2, r2);
      var n2 = r2.throwIfNotConcreteObject().$ArrayLength;
      (0, h.default)("number" == typeof n2);
      if (0 === n2) return e2.intrinsics.emptyString;
      var i2, l2 = (0, s.Get)(e2, r2, "0");
      i2 = (0, u.HasSomeCompatibleType)(l2, a.UndefinedValue, a.NullValue) ? "" : d.To.ToStringPartial(e2, (0, o.Invoke)(e2, l2, "toLocaleString"));
      for (var f2 = 1; f2 < n2; ) {
        var p2 = i2 + ",", v = (0, s.Get)(e2, r2, new a.StringValue(e2, f2 + ""));
        i2 = (0, u.HasSomeCompatibleType)(v, a.UndefinedValue, a.NullValue) ? "" : d.To.ToStringPartial(e2, (0, o.Invoke)(e2, v, "toLocaleString")), i2 = p2 + i2, f2++;
      }
      return new a.StringValue(e2, i2);
    }), t2.defineNativeProperty("toString", e2.intrinsics.ArrayProto_toString), t2.defineNativeProperty("values", e2.intrinsics.TypedArrayProto_values), t2.defineNativeProperty(e2.intrinsics.SymbolIterator, e2.intrinsics.TypedArrayProto_values), t2.defineNativeGetter(e2.intrinsics.SymbolToStringTag, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) return e2.intrinsics.undefined;
      if (!("$TypedArrayName" in r2)) return e2.intrinsics.undefined;
      var n2 = r2.$TypedArrayName;
      return (0, h.default)("string" == typeof n2, "name is a String value"), new a.StringValue(e2, n2);
    });
  }, t.build = function(e2, t2, r2) {
    t2.$Prototype = e2.intrinsics.TypedArrayPrototype, t2.defineNativeConstant("BYTES_PER_ELEMENT", new a.NumberValue(e2, i.ElementSize[r2]));
  };
  var i = r(35), a = r(0), o = r(15), s = r(13), u = r(20), l = r(11), c = r(72), f = r(53), p = r(16), d = r(2), h = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new o.NativeFunctionValue(e2, "TypedArray", "TypedArray", 0, function(t3) {
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "TypedArray");
    });
    return t2.defineNativeMethod("from", 1, function(t3, r2) {
      var n2, a2 = i(r2, 3), u2 = a2[0], h2 = a2[1], y2 = a2[2], m = t3;
      if (false === (0, p.IsConstructor)(e2, m)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsConstructor(C) is false");
      if ((0, v.default)(m instanceof o.ObjectValue), void 0 === h2 || h2.mightBeUndefined()) void 0 === h2 || h2.throwIfNotConcrete(), n2 = false;
      else {
        if (false === (0, p.IsCallable)(e2, h2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsConstructor(C) is false");
        n2 = true;
      }
      var b = void 0 !== y2 ? y2 : e2.intrinsics.undefined, g = (0, l.GetMethod)(e2, u2, e2.intrinsics.SymbolIterator);
      if (!(g instanceof o.UndefinedValue)) {
        for (var w = (0, f.IterableToList)(e2, u2, g), E = w.length, S = (0, s.TypedArrayCreate)(e2, m, [new o.NumberValue(e2, E)]), T = 0; T < E; ) {
          var A = c.To.ToString(e2, new o.NumberValue(e2, T)), C = w.shift(), P = void 0;
          P = true === n2 ? (0, d.Call)(e2, h2, b, [C, new o.NumberValue(e2, T)]) : C, c.Properties.Set(e2, S, A, P, true), T += 1;
        }
        return (0, v.default)(0 === w.length, "values is not an empty List"), S;
      }
      for (var O = c.To.ToObject(e2, u2), x = c.To.ToLength(e2, (0, l.Get)(e2, O, "length")), _ = (0, s.TypedArrayCreate)(e2, m, [new o.NumberValue(e2, x)]), V = 0; V < x; ) {
        var D = c.To.ToString(e2, new o.NumberValue(e2, V)), N = (0, l.Get)(e2, O, D), I = void 0;
        I = true === n2 ? (0, d.Call)(e2, h2, b, [N, new o.NumberValue(e2, V)]) : N, c.Properties.Set(e2, _, D, I, true), V += 1;
      }
      return _;
    }), t2.defineNativeMethod("of", 0, function(t3, r2, n2) {
      var i2 = n2, a2 = t3;
      if (false === (0, p.IsConstructor)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsConstructor(C) is false");
      (0, v.default)(a2 instanceof o.ObjectValue);
      for (var u2 = (0, s.TypedArrayCreate)(e2, a2, [new o.NumberValue(e2, i2)]), l2 = 0; l2 < i2; ) {
        var f2 = r2[l2], d2 = c.To.ToString(e2, new o.NumberValue(e2, l2));
        c.Properties.Set(e2, u2, d2, f2, true), l2 += 1;
      }
      return u2;
    }), t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  }, t.build = function(e2, t2) {
    var r2 = new o.NativeFunctionValue(e2, "".concat(t2, "Array"), "".concat(t2, "Array"), 3, function(r3, i2, a2, d2) {
      if (0 === a2) {
        if (!d2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "NewTarget is undefined");
        var m = y(t2);
        return (0, s.AllocateTypedArray)(e2, m, d2, "".concat(t2, "ArrayPrototype"), 0);
      }
      if (i2[0] instanceof o.ObjectValue) {
        if ("$TypedArrayName" in i2[0]) {
          var b = i2[0].throwIfNotConcrete();
          if ((0, v.default)(b instanceof o.ObjectValue && "string" == typeof b.$TypedArrayName), !d2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "NewTarget is undefined");
          var g = y(t2), w = (0, s.AllocateTypedArray)(e2, g, d2, "".concat(t2, "ArrayPrototype")), E = b, S = E.$ViewedArrayBuffer;
          if ((0, v.default)(S), true === (0, p.IsDetachedBuffer)(e2, S)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(srcData) is true");
          g = w.$TypedArrayName, (0, v.default)("string" == typeof g);
          var T = s.ArrayElementType[g], A = E.$ArrayLength;
          (0, v.default)("number" == typeof A);
          var C = E.$TypedArrayName;
          (0, v.default)("string" == typeof C);
          var P = s.ArrayElementType[C], O = s.ArrayElementSize[C], x = E.$ByteOffset;
          (0, v.default)("number" == typeof x);
          var _, V = s.ArrayElementSize[g], D = V * A;
          if (T === P) _ = (0, h.CloneArrayBuffer)(e2, S, x);
          else {
            var N = (0, u.SpeciesConstructor)(e2, S, e2.intrinsics.ArrayBuffer);
            if (_ = (0, h.AllocateArrayBuffer)(e2, N, D), true === (0, p.IsDetachedBuffer)(e2, S)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(srcData) is true");
            for (var I = x, k = 0, j = A; j > 0; ) {
              var F = (0, h.GetValueFromBuffer)(e2, S, I, P);
              (0, h.SetValueInBuffer)(e2, _, k, T, F.value), I += O, k += V, j -= 1;
            }
          }
          return w.$ViewedArrayBuffer = _, w.$ByteLength = D, w.$ByteOffset = 0, w.$ArrayLength = A, w;
        }
        if ("$ArrayBufferData" in i2[0] || "$TypedArrayName" in i2[0]) {
          var R = i2[0].throwIfNotConcrete(), M = i2[1], B = i2[2];
          if ((0, v.default)(R instanceof o.ObjectValue && "$ArrayBufferData" in R), !d2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "NewTarget is undefined");
          var L = y(t2), $ = (0, s.AllocateTypedArray)(e2, L, d2, "".concat(t2, "ArrayPrototype"));
          L = $.$TypedArrayName, (0, v.default)(L);
          var G = s.ArrayElementSize[L], z = c.To.ToIndexPartial(e2, M);
          if (z % G != 0) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "offset modulo elementSize \u2260 0");
          if (true === (0, p.IsDetachedBuffer)(e2, R)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
          var U, W = R.$ArrayBufferByteLength;
          if ((0, v.default)("number" == typeof W), !B || B instanceof o.UndefinedValue) {
            if (W % G != 0) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "bufferByteLength modulo elementSize \u2260 0");
            if ((U = W - z) < 0) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "newByteLength < 0");
          } else {
            var q = c.To.ToIndexPartial(e2, B);
            if (z + (U = q * G) > W) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "offset+newByteLength > bufferByteLength");
          }
          return $.$ViewedArrayBuffer = R, $.$ByteLength = U, $.$ByteOffset = z, $.$ArrayLength = U / G, $;
        }
        var H = i2[0].throwIfNotConcrete();
        if ((0, v.default)(H instanceof o.ObjectValue && n(H.$TypedArrayName) && !H.$ArrayBufferData), !d2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "NewTarget is undefined");
        var K = y(t2), J = (0, s.AllocateTypedArray)(e2, K, d2, "".concat(t2, "ArrayPrototype")), Y = (0, l.GetMethod)(e2, H, e2.intrinsics.SymbolIterator);
        if (!(Y instanceof o.UndefinedValue)) {
          var X = (0, f.IterableToList)(e2, H, Y), Q = X.length;
          (0, s.AllocateTypedArrayBuffer)(e2, J, Q);
          for (var Z = 0; Z < Q; ) {
            var ee = new o.StringValue(e2, c.To.ToString(e2, new o.NumberValue(e2, Z))), te = X.shift();
            c.Properties.Set(e2, J, ee, te, true), Z += 1;
          }
          return (0, v.default)(0 === X.length), J;
        }
        var re = H, ne = c.To.ToLength(e2, (0, l.Get)(e2, re, "length"));
        (0, s.AllocateTypedArrayBuffer)(e2, J, ne);
        for (var ie = 0; ie < ne; ) {
          var ae = new o.StringValue(e2, c.To.ToString(e2, new o.NumberValue(e2, ie))), oe = (0, l.Get)(e2, re, ae);
          c.Properties.Set(e2, J, ae, oe, true), ie += 1;
        }
        return J;
      }
      var se = i2[0].throwIfNotConcrete();
      if ((0, v.default)(!(se instanceof o.ObjectValue), "Type(length) is not Object"), !d2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "NewTarget is undefined");
      var ue = c.To.ToIndexPartial(e2, se), le = y(t2);
      return (0, s.AllocateTypedArray)(e2, le, d2, "".concat(t2, "ArrayPrototype"), ue);
    });
    return r2.$Prototype = e2.intrinsics.TypedArray, r2.defineNativeConstant("BYTES_PER_ELEMENT", new o.NumberValue(e2, a.ElementSize[t2])), r2;
  };
  var a = r(35), o = r(0), s = r(72), u = r(22), l = r(13), c = r(2), f = r(43), p = r(11), d = r(15), h = r(53), v = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function y(e2) {
    switch (e2) {
      case "Float32":
        return "Float32Array";
      case "Float64":
        return "Float64Array";
      case "Int8":
        return "Int8Array";
      case "Int16":
        return "Int16Array";
      case "Int32":
        return "Int32Array";
      case "Uint8":
        return "Uint8Array";
      case "Uint16":
        return "Uint16Array";
      case "Uint32":
        return "Uint32Array";
      case "Uint8Clamped":
        return "Uint8ClampedArray";
      default:
        (0, v.default)(false);
    }
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return f("Error", e2, false);
  }, t.describeLocation = l, t.build = f;
  var i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(6);
  function l(e2, t2, r2, n2) {
    var a2, s2 = "", u2 = "", l2 = n2 || t2;
    if (l2) {
      if (e2.alreadyDescribedLocations.has(l2)) return e2.alreadyDescribedLocations.get(l2);
      e2.alreadyDescribedLocations.set(l2, void 0);
    }
    if (t2) {
      t2 instanceof i.NativeFunctionValue && (s2 = "native");
      var c2 = t2._SafeGetDataPropertyValue("name");
      c2.mightBeUndefined() ? c2.throwIfNotConcrete() : u2 = o.To.ToStringPartial(e2, c2), r2 && r2.environmentRecord.$NewTarget && (u2 = "new ".concat(u2));
    }
    if (!s2) {
      if (n2) s2 = "".concat(n2.start.line, ":").concat(n2.start.column + 1), null !== n2.source && (s2 = "".concat(n2.source, ":").concat(s2));
      else if (s2 = (n2 ? n2.source : void 0) || "unknown", !u2) return;
    }
    return a2 = u2 ? "at ".concat(u2, " (").concat(s2, ")") : "at ".concat(s2), l2 && e2.alreadyDescribedLocations.set(l2, a2), a2;
  }
  var c = 'A + (B ? ": " + B : "") + C';
  function f(e2, t2) {
    var r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], f2 = new i.NativeFunctionValue(t2, e2, e2, 1, function(r3, p, d, h) {
      var v = n(p, 1)[0], y = h || f2, m = o.Create.OrdinaryCreateFromConstructor(t2, y, "".concat(e2, "Prototype"), { $ErrorData: void 0 });
      if (m.$ErrorData = { contextStack: t2.contextStack.slice(1), locationData: void 0 }, v.mightBeUndefined()) v.throwIfNotConcrete();
      else {
        var b = v.getType() === i.StringValue ? v : o.To.ToStringValue(t2, v), g = new u.PropertyDescriptor({ value: b, writable: true, enumerable: false, configurable: true });
        o.Properties.DefinePropertyOrThrow(t2, m, "message", g);
      }
      var w = new u.PropertyDescriptor({ value: (function(e3, t3) {
        (0, s.default)(t3.$ErrorData);
        var r4 = t3.$ErrorData.contextStack;
        if (!r4) return e3.intrinsics.undefined;
        var n2 = [], u2 = o.To.ToStringPartial(e3, (0, a.Get)(e3, t3, "name")), f3 = (0, a.Get)(e3, t3, "message");
        f3.mightBeUndefined() ? f3.throwIfNotConcrete() : f3 = o.To.ToStringValue(e3, f3);
        var p2 = true, d2 = false, h2 = void 0;
        try {
          for (var v2, y2 = r4.reverse()[Symbol.iterator](); !(p2 = (v2 = y2.next()).done); p2 = true) {
            var m2 = v2.value, b2 = m2.caller;
            if (m2.loc) {
              var g2 = l(e3, b2 ? b2.function : void 0, b2 ? b2.lexicalEnvironment : void 0, m2.loc);
              void 0 !== g2 && n2.push(g2);
            }
          }
        } catch (e4) {
          d2 = true, h2 = e4;
        } finally {
          try {
            p2 || null == y2.return || y2.return();
          } finally {
            if (d2) throw h2;
          }
        }
        var w2 = "\n    ".concat(n2.join("\n    "));
        return f3 instanceof i.StringValue ? new i.StringValue(e3, "".concat(u2).concat(f3.value ? ": ".concat(f3.value) : "").concat(w2)) : i.AbstractValue.createFromTemplate(e3, c, i.StringValue, [new i.StringValue(e3, u2), f3, new i.StringValue(e3, w2)]);
      })(t2, m), enumerable: false, configurable: true, writable: true });
      return o.Properties.DefinePropertyOrThrow(t2, m, "stack", w), m;
    });
    return r2 && (f2.$Prototype = t2.intrinsics.Error), f2;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(178), a = "object" == ("undefined" == typeof self ? "undefined" : n(self)) && self && self.Object === Object && self, o = i || a || Function("return this")();
  e.exports = o;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = d, Object.defineProperty(t, "NodePath", { enumerable: true, get: function() {
    return u.default;
  } }), Object.defineProperty(t, "Scope", { enumerable: true, get: function() {
    return l.default;
  } }), Object.defineProperty(t, "Hub", { enumerable: true, get: function() {
    return c.default;
  } }), t.visitors = void 0;
  var n = p(r(617)), i = f(r(508));
  function a() {
    var e2 = p(r(113));
    return a = function() {
      return e2;
    }, e2;
  }
  function o() {
    var e2 = f(r(5));
    return o = function() {
      return e2;
    }, e2;
  }
  t.visitors = i;
  var s = f(r(78)), u = p(r(52)), l = p(r(180)), c = p(r(454));
  function f(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  function p(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function d(e2, t2, r2, n2, a2) {
    if (e2) {
      if (t2 || (t2 = {}), !t2.noScope && !r2 && "Program" !== e2.type && "File" !== e2.type) throw new Error("You must pass a scope and parentPath unless traversing a Program/File. " + "Instead of that you tried to traverse a ".concat(e2.type, " node without ") + "passing scope and parentPath.");
      i.explode(t2), d.node(e2, t2, r2, n2, a2);
    }
  }
  function h(e2, t2) {
    e2.node.type === t2.type && (t2.has = true, e2.stop());
  }
  d.visitors = i, d.verify = i.verify, d.explode = i.explode, d.cheap = function(e2, t2) {
    return o().traverseFast(e2, t2);
  }, d.node = function(e2, t2, r2, i2, a2, s2) {
    var u2 = o().VISITOR_KEYS[e2.type];
    if (u2) {
      var l2 = new n.default(r2, t2, i2, a2), c2 = true, f2 = false, p2 = void 0;
      try {
        for (var d2, h2 = u2[Symbol.iterator](); !(c2 = (d2 = h2.next()).done); c2 = true) {
          var v = d2.value;
          if ((!s2 || !s2[v]) && l2.visit(e2, v)) return;
        }
      } catch (e3) {
        f2 = true, p2 = e3;
      } finally {
        try {
          c2 || null == h2.return || h2.return();
        } finally {
          if (f2) throw p2;
        }
      }
    }
  }, d.clearNode = function(e2, t2) {
    o().removeProperties(e2, t2), s.path.delete(e2);
  }, d.removeProperties = function(e2, t2) {
    return o().traverseFast(e2, d.clearNode, t2), e2;
  }, d.hasType = function(e2, t2, r2) {
    if ((0, a().default)(r2, e2.type)) return false;
    if (e2.type === t2) return true;
    var n2 = { has: false, type: t2 };
    return d(e2, { noScope: true, blacklist: r2, enter: h }, null, n2), n2.has;
  }, d.cache = s;
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(702));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "VISITOR_KEYS", { enumerable: true, get: function() {
    return i.VISITOR_KEYS;
  } }), Object.defineProperty(t, "ALIAS_KEYS", { enumerable: true, get: function() {
    return i.ALIAS_KEYS;
  } }), Object.defineProperty(t, "FLIPPED_ALIAS_KEYS", { enumerable: true, get: function() {
    return i.FLIPPED_ALIAS_KEYS;
  } }), Object.defineProperty(t, "NODE_FIELDS", { enumerable: true, get: function() {
    return i.NODE_FIELDS;
  } }), Object.defineProperty(t, "BUILDER_KEYS", { enumerable: true, get: function() {
    return i.BUILDER_KEYS;
  } }), Object.defineProperty(t, "DEPRECATED_KEYS", { enumerable: true, get: function() {
    return i.DEPRECATED_KEYS;
  } }), t.TYPES = void 0, r(122), r(119), r(699), r(698), r(697), r(696), r(695);
  var i = r(36);
  (0, n().default)(i.VISITOR_KEYS), (0, n().default)(i.ALIAS_KEYS), (0, n().default)(i.FLIPPED_ALIAS_KEYS), (0, n().default)(i.NODE_FIELDS), (0, n().default)(i.BUILDER_KEYS), (0, n().default)(i.DEPRECATED_KEYS);
  var a = Object.keys(i.VISITOR_KEYS).concat(Object.keys(i.FLIPPED_ALIAS_KEYS)).concat(Object.keys(i.DEPRECATED_KEYS));
  t.TYPES = a;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(227), a = "object" == ("undefined" == typeof self ? "undefined" : n(self)) && self && self.Object === Object && self, o = i || a || Function("return this")();
  e.exports = o;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.getAsPropertyNameExpression = l, t.memberExpressionHelper = function(e2, t2) {
    var r2, i2;
    "string" == typeof t2 ? (r2 = l(t2), i2 = !n.isIdentifier(r2)) : n.isStringLiteral(t2) ? (r2 = l(t2.value), i2 = !n.isIdentifier(r2)) : (r2 = t2, i2 = true);
    return n.memberExpression(e2, r2, i2);
  }, t.optionalStringOfLocation = function(e2) {
    return e2 ? " at location ".concat(c(e2)) : "";
  }, t.stringOfLocation = c, t.protoExpression = t.constructorExpression = t.emptyExpression = t.nullExpression = t.voidExpression = void 0;
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
  var i = n.unaryExpression("void", n.numericLiteral(0), true);
  t.voidExpression = i;
  var a = n.nullLiteral();
  t.nullExpression = a;
  var o = n.identifier("__empty");
  t.emptyExpression = o;
  var s = n.identifier("__constructor");
  t.constructorExpression = s;
  var u = n.identifier("__proto__");
  function l(e2) {
    var t2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], r2 = Number.parseInt(e2, 10);
    if (r2 >= 0 && r2.toString() === e2) return n.numericLiteral(r2);
    if (t2) {
      var i2 = /^[\u0000-\u007f]*$/.test(e2);
      if (n.isValidIdentifier(e2) && i2) return n.identifier(e2);
    }
    return n.stringLiteral(e2);
  }
  function c(e2) {
    return "".concat(e2.source || "(unknown source file)", "[").concat(e2.start.line, ":").concat(e2.start.column, "]");
  }
  t.protoExpression = u;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.getSuggestedArrayLiteralLength = function(e2, t2) {
    (0, o.default)((0, s.IsArray)(e2, t2));
    var r2, a2 = e2.instantRender.enabled, u2 = 0, l2 = 0, c2 = true, f2 = false, p = void 0;
    try {
      for (var d, h = t2.properties.keys()[Symbol.iterator](); !(c2 = (d = h.next()).done); c2 = true) {
        var v = d.value;
        if ((0, s.IsArrayIndex)(e2, v) && Number(v) >= l2) {
          var y = l2;
          l2 = Number(v) + 1;
          var m = t2._SafeGetDataPropertyValue(v);
          if (a2 || !m.mightHaveBeenDeleted()) u2 = l2;
          else if (m instanceof i.AbstractValue && "conditional" === m.kind) {
            var b = new i.IntegralValue(e2, l2), g = n(m.args, 3), w = g[0], E = g[1], S = g[2];
            if (E instanceof i.EmptyValue && !S.mightHaveBeenDeleted()) {
              var T = void 0 === r2 ? new i.IntegralValue(e2, y) : r2;
              r2 = i.AbstractValue.createFromConditionalOp(e2, w, T, b);
            } else if (S instanceof i.EmptyValue && !E.mightHaveBeenDeleted()) {
              var A = void 0 === r2 ? new i.IntegralValue(e2, y) : r2;
              r2 = i.AbstractValue.createFromConditionalOp(e2, w, b, A);
            } else r2 = void 0;
          }
        }
      }
    } catch (e3) {
      f2 = true, p = e3;
    } finally {
      try {
        c2 || null == h.return || h.return();
      } finally {
        if (f2) throw p;
      }
    }
    if (l2 > u2 && r2 instanceof i.AbstractValue) {
      var C = t2._SafeGetDataPropertyValue("length");
      if (C.equals(r2)) return [u2, true];
    }
    return [l2, false];
  }, t.commonAncestorOf = function(e2, t2, r2) {
    if (e2 === t2) return e2;
    var n2 = e2, i2 = t2, a2 = 0, s2 = 0;
    for (; ; ) {
      var u2 = n2 && r2(n2), l2 = i2 && r2(i2);
      if (u2 === t2) return t2;
      if (l2 === e2) return e2;
      if (void 0 !== u2 && a2++, void 0 !== l2 && s2++, void 0 === u2 && void 0 === l2) break;
      n2 = u2, i2 = l2;
    }
    n2 = e2;
    for (; a2 > s2; ) (0, o.default)(void 0 !== n2), n2 = r2(n2), a2--;
    i2 = t2;
    for (; a2 < s2; ) (0, o.default)(void 0 !== i2), i2 = r2(i2), s2--;
    for (; n2 !== i2; ) (0, o.default)(void 0 !== n2), n2 = r2(n2), (0, o.default)(void 0 !== i2), i2 = r2(i2);
    return n2;
  }, t.getOrDefault = function(e2, t2, r2) {
    var n2 = e2.get(t2);
    void 0 === n2 && e2.set(t2, n2 = r2());
    return (0, o.default)(void 0 !== n2), n2;
  }, t.withDescriptorValue = function(e2, t2, r2) {
    void 0 !== t2 && ((0, o.default)(t2 instanceof c.PropertyDescriptor), void 0 !== t2.value ? r2(e2, t2.value, "value") : (void 0 !== t2.get && r2(e2, t2.get, "get"), void 0 !== t2.set && r2(e2, t2.set, "set")));
  }, t.canIgnoreClassLengthProperty = function(e2, t2, r2) {
    t2 && (t2 instanceof c.PropertyDescriptor ? void 0 === t2.value && r2.logError(e2, "Functions with length accessor properties are not supported in residual heap.") : r2.logError(e2, "Functions with length properties with different attributes are not supported in residual heap."));
    return true;
  }, t.getObjectPrototypeMetadata = function(e2, t2) {
    var r2, n2 = t2.$Prototype, s2 = false;
    t2.$IsClassPrototype && (s2 = true);
    if (n2 && n2.$IsClassPrototype) {
      (0, o.default)(n2 instanceof i.ObjectValue);
      var u2 = n2.properties.get("constructor");
      if (void 0 !== u2) {
        if (void 0 === u2.descriptor) throw new a.FatalError("TODO #1024: implement object prototype serialization with deleted constructor");
        if (!(u2.descriptor instanceof c.PropertyDescriptor)) throw new a.FatalError("TODO #1024: implement object prototype serialization with multiple constructor attributes");
        var l2 = u2.descriptor.value;
        l2 instanceof i.ECMAScriptSourceFunctionValue && (r2 = l2, s2 = true);
      }
    }
    return { skipPrototype: s2, constructor: r2 };
  }, t.createAdditionalEffects = function(e2, t2, r2, n2, i2) {
    var a2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : void 0, o2 = u.Generator.fromEffects(t2, e2, n2, i2);
    return { parentAdditionalFunction: a2, effects: t2, transforms: [], generator: o2, additionalRoots: /* @__PURE__ */ new Set() };
  }, t.handleReportedSideEffect = function(e2, t2, r2, n2) {
    if (r2 && r2.object && "__checkedBindings" === r2.object.intrinsicName) return;
    var a2 = (0, l.optionalStringOfLocation)(n2);
    if ("MODIFIED_BINDING" === t2) {
      var o2 = r2 ? '"'.concat(r2.name, '"') : "unknown";
      e2("side-effects from mutating the binding ".concat(o2).concat(a2), n2);
    } else if ("MODIFIED_PROPERTY" === t2 || "MODIFIED_GLOBAL" === t2) {
      var s2 = "", u2 = r2, c2 = u2.key;
      "string" == typeof c2 && (s2 = '"'.concat(c2, '"')), "MODIFIED_PROPERTY" === t2 ? i.ObjectValue.refuseSerializationOnPropertyBinding(u2) || e2("side-effects from mutating a property ".concat(s2).concat(a2), n2) : e2("side-effects from mutating the global object property ".concat(s2).concat(a2), n2);
    } else "EXCEPTION_THROWN" === t2 && e2("side-effects from throwing exception".concat(a2), n2);
  }, t.ClassPropertiesToIgnore = void 0;
  var i = r(0), a = r(4), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(3), u = (r(19), r(9)), l = r(31), c = r(6);
  var f = /* @__PURE__ */ new Set(["arguments", "name", "caller"]);
  t.ClassPropertiesToIgnore = f;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.AreSameResidualBinding = function(e2, t2, r2) {
    if (t2.serializedValue === r2.serializedValue) return true;
    if (t2.value && t2.value === r2.value) return true;
    if (t2.value instanceof a.ConcreteValue && r2.value instanceof a.ConcreteValue) return (0, o.SameValue)(e2, t2.value, r2.value);
    return false;
  }, t.ReactStatistics = t.BodyReference = void 0;
  r(10);
  var a = r(0), o = r(16), s = (r(8), (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)));
  var u = (function() {
    function e2(t2, r2) {
      n(this, e2), (0, s.default)(r2 >= 0), this.body = t2, this.index = r2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "isNotEarlierThan", value: function(e3) {
      return this.body === e3.body && this.index >= e3.index;
    } }]), e2;
  })();
  t.BodyReference = u;
  t.ReactStatistics = function e2() {
    n(this, e2), this.optimizedTrees = 0, this.inlinedComponents = 0, this.evaluatedRootNodes = [], this.componentsEvaluated = 0, this.optimizedNestedClosures = 0;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    var t2, r2;
    function n2(t3, r3) {
      try {
        var a2 = e2[t3](r3), o2 = a2.value, s2 = o2 instanceof function(e3) {
          this.wrapped = e3;
        };
        Promise.resolve(s2 ? o2.wrapped : o2).then(function(e3) {
          s2 ? n2("next", e3) : i2(a2.done ? "return" : "normal", e3);
        }, function(e3) {
          n2("throw", e3);
        });
      } catch (e3) {
        i2("throw", e3);
      }
    }
    function i2(e3, i3) {
      switch (e3) {
        case "return":
          t2.resolve({ value: i3, done: true });
          break;
        case "throw":
          t2.reject(i3);
          break;
        default:
          t2.resolve({ value: i3, done: false });
      }
      (t2 = t2.next) ? n2(t2.key, t2.arg) : r2 = null;
    }
    this._invoke = function(e3, i3) {
      return new Promise(function(a2, o2) {
        var s2 = { key: e3, arg: i3, resolve: a2, reject: o2, next: null };
        r2 ? r2 = r2.next = s2 : (t2 = r2 = s2, n2(e3, i3));
      });
    }, "function" != typeof e2.return && (this.return = void 0);
  }
  function i(e2, t2) {
    e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, e2.__proto__ = t2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), "function" == typeof Symbol && Symbol.asyncIterator && (n.prototype[Symbol.asyncIterator] = function() {
    return this;
  }), n.prototype.next = function(e2) {
    return this._invoke("next", e2);
  }, n.prototype.throw = function(e2) {
    return this._invoke("throw", e2);
  }, n.prototype.return = function(e2) {
    return this._invoke("return", e2);
  };
  var a = true, o = function(e2, t2) {
    void 0 === t2 && (t2 = {}), this.label = e2, this.keyword = t2.keyword, this.beforeExpr = !!t2.beforeExpr, this.startsExpr = !!t2.startsExpr, this.rightAssociative = !!t2.rightAssociative, this.isLoop = !!t2.isLoop, this.isAssign = !!t2.isAssign, this.prefix = !!t2.prefix, this.postfix = !!t2.postfix, this.binop = 0 === t2.binop ? 0 : t2.binop || null, this.updateContext = null;
  };
  function s(e2, t2) {
    return void 0 === t2 && (t2 = {}), new o(e2, Object.assign({}, t2, { keyword: e2 }));
  }
  function u(e2, t2) {
    return new o(e2, { beforeExpr: a, binop: t2 });
  }
  var l = { num: new o("num", { startsExpr: true }), bigint: new o("bigint", { startsExpr: true }), regexp: new o("regexp", { startsExpr: true }), string: new o("string", { startsExpr: true }), name: new o("name", { startsExpr: true }), eof: new o("eof"), bracketL: new o("[", { beforeExpr: a, startsExpr: true }), bracketR: new o("]"), braceL: new o("{", { beforeExpr: a, startsExpr: true }), braceBarL: new o("{|", { beforeExpr: a, startsExpr: true }), braceR: new o("}"), braceBarR: new o("|}"), parenL: new o("(", { beforeExpr: a, startsExpr: true }), parenR: new o(")"), comma: new o(",", { beforeExpr: a }), semi: new o(";", { beforeExpr: a }), colon: new o(":", { beforeExpr: a }), doubleColon: new o("::", { beforeExpr: a }), dot: new o("."), question: new o("?", { beforeExpr: a }), questionDot: new o("?."), arrow: new o("=>", { beforeExpr: a }), template: new o("template"), ellipsis: new o("...", { beforeExpr: a }), backQuote: new o("`", { startsExpr: true }), dollarBraceL: new o("${", { beforeExpr: a, startsExpr: true }), at: new o("@"), hash: new o("#"), interpreterDirective: new o("#!..."), eq: new o("=", { beforeExpr: a, isAssign: true }), assign: new o("_=", { beforeExpr: a, isAssign: true }), incDec: new o("++/--", { prefix: true, postfix: true, startsExpr: true }), bang: new o("!", { beforeExpr: a, prefix: true, startsExpr: true }), tilde: new o("~", { beforeExpr: a, prefix: true, startsExpr: true }), pipeline: new u("|>", 0), nullishCoalescing: new u("??", 1), logicalOR: new u("||", 1), logicalAND: new u("&&", 2), bitwiseOR: new u("|", 3), bitwiseXOR: new u("^", 4), bitwiseAND: new u("&", 5), equality: new u("==/!=", 6), relational: new u("</>", 7), bitShift: new u("<</>>", 8), plusMin: new o("+/-", { beforeExpr: a, binop: 9, prefix: true, startsExpr: true }), modulo: new u("%", 10), star: new u("*", 10), slash: new u("/", 10), exponent: new o("**", { beforeExpr: a, binop: 11, rightAssociative: true }) }, c = { break: new s("break"), case: new s("case", { beforeExpr: a }), catch: new s("catch"), continue: new s("continue"), debugger: new s("debugger"), default: new s("default", { beforeExpr: a }), do: new s("do", { isLoop: true, beforeExpr: a }), else: new s("else", { beforeExpr: a }), finally: new s("finally"), for: new s("for", { isLoop: true }), function: new s("function", { startsExpr: true }), if: new s("if"), return: new s("return", { beforeExpr: a }), switch: new s("switch"), throw: new s("throw", { beforeExpr: a, prefix: true, startsExpr: true }), try: new s("try"), var: new s("var"), let: new s("let"), const: new s("const"), while: new s("while", { isLoop: true }), with: new s("with"), new: new s("new", { beforeExpr: a, startsExpr: true }), this: new s("this", { startsExpr: true }), super: new s("super", { startsExpr: true }), class: new s("class"), extends: new s("extends", { beforeExpr: a }), export: new s("export"), import: new s("import", { startsExpr: true }), yield: new s("yield", { beforeExpr: a, startsExpr: true }), null: new s("null", { startsExpr: true }), true: new s("true", { startsExpr: true }), false: new s("false", { startsExpr: true }), in: new s("in", { beforeExpr: a, binop: 7 }), instanceof: new s("instanceof", { beforeExpr: a, binop: 7 }), typeof: new s("typeof", { beforeExpr: a, prefix: true, startsExpr: true }), void: new s("void", { beforeExpr: a, prefix: true, startsExpr: true }), delete: new s("delete", { beforeExpr: a, prefix: true, startsExpr: true }) };
  function f(e2) {
    return null != e2 && "Property" === e2.type && "init" === e2.kind && false === e2.method;
  }
  Object.keys(c).forEach(function(e2) {
    l["_" + e2] = c[e2];
  });
  function p(e2) {
    var t2 = e2.split(" ");
    return function(e3) {
      return t2.indexOf(e3) >= 0;
    };
  }
  var d = { 6: p("enum await"), strict: p("implements interface let package private protected public static yield"), strictBind: p("eval arguments") }, h = p("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super"), v = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEF\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7B9\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC", y = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F", m = new RegExp("[" + v + "]"), b = new RegExp("[" + v + y + "]");
  v = y = null;
  var g = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 190, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 26, 230, 43, 117, 63, 32, 0, 257, 0, 11, 39, 8, 0, 22, 0, 12, 39, 3, 3, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 68, 12, 0, 67, 12, 65, 1, 31, 6129, 15, 754, 9486, 286, 82, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541], w = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 280, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];
  function E(e2, t2) {
    for (var r2 = 65536, n2 = 0; n2 < t2.length; n2 += 2) {
      if ((r2 += t2[n2]) > e2) return false;
      if ((r2 += t2[n2 + 1]) >= e2) return true;
    }
    return false;
  }
  function S(e2) {
    return e2 < 65 ? 36 === e2 : e2 <= 90 || (e2 < 97 ? 95 === e2 : e2 <= 122 || (e2 <= 65535 ? e2 >= 170 && m.test(String.fromCharCode(e2)) : E(e2, g)));
  }
  function T(e2) {
    return e2 < 48 ? 36 === e2 : e2 < 58 || !(e2 < 65) && (e2 <= 90 || (e2 < 97 ? 95 === e2 : e2 <= 122 || (e2 <= 65535 ? e2 >= 170 && b.test(String.fromCharCode(e2)) : E(e2, g) || E(e2, w))));
  }
  var A = ["any", "bool", "boolean", "empty", "false", "mixed", "null", "number", "static", "string", "true", "typeof", "void"];
  function C(e2) {
    return "type" === e2.importKind || "typeof" === e2.importKind;
  }
  function P(e2) {
    return (e2.type === l.name || !!e2.type.keyword) && "from" !== e2.value;
  }
  var O = { const: "declare export var", let: "declare export var", type: "export type", interface: "export interface" };
  var x = /\*?\s*@((?:no)?flow)\b/, _ = { quot: '"', amp: "&", apos: "'", lt: "<", gt: ">", nbsp: "\xA0", iexcl: "\xA1", cent: "\xA2", pound: "\xA3", curren: "\xA4", yen: "\xA5", brvbar: "\xA6", sect: "\xA7", uml: "\xA8", copy: "\xA9", ordf: "\xAA", laquo: "\xAB", not: "\xAC", shy: "\xAD", reg: "\xAE", macr: "\xAF", deg: "\xB0", plusmn: "\xB1", sup2: "\xB2", sup3: "\xB3", acute: "\xB4", micro: "\xB5", para: "\xB6", middot: "\xB7", cedil: "\xB8", sup1: "\xB9", ordm: "\xBA", raquo: "\xBB", frac14: "\xBC", frac12: "\xBD", frac34: "\xBE", iquest: "\xBF", Agrave: "\xC0", Aacute: "\xC1", Acirc: "\xC2", Atilde: "\xC3", Auml: "\xC4", Aring: "\xC5", AElig: "\xC6", Ccedil: "\xC7", Egrave: "\xC8", Eacute: "\xC9", Ecirc: "\xCA", Euml: "\xCB", Igrave: "\xCC", Iacute: "\xCD", Icirc: "\xCE", Iuml: "\xCF", ETH: "\xD0", Ntilde: "\xD1", Ograve: "\xD2", Oacute: "\xD3", Ocirc: "\xD4", Otilde: "\xD5", Ouml: "\xD6", times: "\xD7", Oslash: "\xD8", Ugrave: "\xD9", Uacute: "\xDA", Ucirc: "\xDB", Uuml: "\xDC", Yacute: "\xDD", THORN: "\xDE", szlig: "\xDF", agrave: "\xE0", aacute: "\xE1", acirc: "\xE2", atilde: "\xE3", auml: "\xE4", aring: "\xE5", aelig: "\xE6", ccedil: "\xE7", egrave: "\xE8", eacute: "\xE9", ecirc: "\xEA", euml: "\xEB", igrave: "\xEC", iacute: "\xED", icirc: "\xEE", iuml: "\xEF", eth: "\xF0", ntilde: "\xF1", ograve: "\xF2", oacute: "\xF3", ocirc: "\xF4", otilde: "\xF5", ouml: "\xF6", divide: "\xF7", oslash: "\xF8", ugrave: "\xF9", uacute: "\xFA", ucirc: "\xFB", uuml: "\xFC", yacute: "\xFD", thorn: "\xFE", yuml: "\xFF", OElig: "\u0152", oelig: "\u0153", Scaron: "\u0160", scaron: "\u0161", Yuml: "\u0178", fnof: "\u0192", circ: "\u02C6", tilde: "\u02DC", Alpha: "\u0391", Beta: "\u0392", Gamma: "\u0393", Delta: "\u0394", Epsilon: "\u0395", Zeta: "\u0396", Eta: "\u0397", Theta: "\u0398", Iota: "\u0399", Kappa: "\u039A", Lambda: "\u039B", Mu: "\u039C", Nu: "\u039D", Xi: "\u039E", Omicron: "\u039F", Pi: "\u03A0", Rho: "\u03A1", Sigma: "\u03A3", Tau: "\u03A4", Upsilon: "\u03A5", Phi: "\u03A6", Chi: "\u03A7", Psi: "\u03A8", Omega: "\u03A9", alpha: "\u03B1", beta: "\u03B2", gamma: "\u03B3", delta: "\u03B4", epsilon: "\u03B5", zeta: "\u03B6", eta: "\u03B7", theta: "\u03B8", iota: "\u03B9", kappa: "\u03BA", lambda: "\u03BB", mu: "\u03BC", nu: "\u03BD", xi: "\u03BE", omicron: "\u03BF", pi: "\u03C0", rho: "\u03C1", sigmaf: "\u03C2", sigma: "\u03C3", tau: "\u03C4", upsilon: "\u03C5", phi: "\u03C6", chi: "\u03C7", psi: "\u03C8", omega: "\u03C9", thetasym: "\u03D1", upsih: "\u03D2", piv: "\u03D6", ensp: "\u2002", emsp: "\u2003", thinsp: "\u2009", zwnj: "\u200C", zwj: "\u200D", lrm: "\u200E", rlm: "\u200F", ndash: "\u2013", mdash: "\u2014", lsquo: "\u2018", rsquo: "\u2019", sbquo: "\u201A", ldquo: "\u201C", rdquo: "\u201D", bdquo: "\u201E", dagger: "\u2020", Dagger: "\u2021", bull: "\u2022", hellip: "\u2026", permil: "\u2030", prime: "\u2032", Prime: "\u2033", lsaquo: "\u2039", rsaquo: "\u203A", oline: "\u203E", frasl: "\u2044", euro: "\u20AC", image: "\u2111", weierp: "\u2118", real: "\u211C", trade: "\u2122", alefsym: "\u2135", larr: "\u2190", uarr: "\u2191", rarr: "\u2192", darr: "\u2193", harr: "\u2194", crarr: "\u21B5", lArr: "\u21D0", uArr: "\u21D1", rArr: "\u21D2", dArr: "\u21D3", hArr: "\u21D4", forall: "\u2200", part: "\u2202", exist: "\u2203", empty: "\u2205", nabla: "\u2207", isin: "\u2208", notin: "\u2209", ni: "\u220B", prod: "\u220F", sum: "\u2211", minus: "\u2212", lowast: "\u2217", radic: "\u221A", prop: "\u221D", infin: "\u221E", ang: "\u2220", and: "\u2227", or: "\u2228", cap: "\u2229", cup: "\u222A", int: "\u222B", there4: "\u2234", sim: "\u223C", cong: "\u2245", asymp: "\u2248", ne: "\u2260", equiv: "\u2261", le: "\u2264", ge: "\u2265", sub: "\u2282", sup: "\u2283", nsub: "\u2284", sube: "\u2286", supe: "\u2287", oplus: "\u2295", otimes: "\u2297", perp: "\u22A5", sdot: "\u22C5", lceil: "\u2308", rceil: "\u2309", lfloor: "\u230A", rfloor: "\u230B", lang: "\u2329", rang: "\u232A", loz: "\u25CA", spades: "\u2660", clubs: "\u2663", hearts: "\u2665", diams: "\u2666" }, V = /\r\n?|\n|\u2028|\u2029/, D = new RegExp(V.source, "g");
  function N(e2) {
    switch (e2) {
      case 10:
      case 13:
      case 8232:
      case 8233:
        return true;
      default:
        return false;
    }
  }
  function I(e2) {
    switch (e2) {
      case 9:
      case 11:
      case 12:
      case 32:
      case 160:
      case 5760:
      case 8192:
      case 8193:
      case 8194:
      case 8195:
      case 8196:
      case 8197:
      case 8198:
      case 8199:
      case 8200:
      case 8201:
      case 8202:
      case 8239:
      case 8287:
      case 12288:
      case 65279:
        return true;
      default:
        return false;
    }
  }
  var k = function(e2, t2, r2, n2) {
    this.token = e2, this.isExpr = !!t2, this.preserveSpace = !!r2, this.override = n2;
  }, j = { braceStatement: new k("{", false), braceExpression: new k("{", true), templateQuasi: new k("${", true), parenStatement: new k("(", false), parenExpression: new k("(", true), template: new k("`", true, true, function(e2) {
    return e2.readTmplToken();
  }), functionExpression: new k("function", true) };
  l.parenR.updateContext = l.braceR.updateContext = function() {
    if (1 !== this.state.context.length) {
      var e2 = this.state.context.pop();
      e2 === j.braceStatement && this.curContext() === j.functionExpression ? (this.state.context.pop(), this.state.exprAllowed = false) : e2 === j.templateQuasi ? this.state.exprAllowed = true : this.state.exprAllowed = !e2.isExpr;
    } else this.state.exprAllowed = true;
  }, l.name.updateContext = function(e2) {
    "of" !== this.state.value || this.curContext() !== j.parenStatement ? (this.state.exprAllowed = false, e2 !== l._let && e2 !== l._const && e2 !== l._var || V.test(this.input.slice(this.state.end)) && (this.state.exprAllowed = true), this.state.isIterator && (this.state.isIterator = false)) : this.state.exprAllowed = !e2.beforeExpr;
  }, l.braceL.updateContext = function(e2) {
    this.state.context.push(this.braceIsBlock(e2) ? j.braceStatement : j.braceExpression), this.state.exprAllowed = true;
  }, l.dollarBraceL.updateContext = function() {
    this.state.context.push(j.templateQuasi), this.state.exprAllowed = true;
  }, l.parenL.updateContext = function(e2) {
    var t2 = e2 === l._if || e2 === l._for || e2 === l._with || e2 === l._while;
    this.state.context.push(t2 ? j.parenStatement : j.parenExpression), this.state.exprAllowed = true;
  }, l.incDec.updateContext = function() {
  }, l._function.updateContext = function(e2) {
    this.state.exprAllowed && !this.braceIsBlock(e2) && this.state.context.push(j.functionExpression), this.state.exprAllowed = false;
  }, l.backQuote.updateContext = function() {
    this.curContext() === j.template ? this.state.context.pop() : this.state.context.push(j.template), this.state.exprAllowed = false;
  };
  var F = /^[\da-fA-F]+$/, R = /^\d+$/;
  function M(e2) {
    return !!e2 && ("JSXOpeningFragment" === e2.type || "JSXClosingFragment" === e2.type);
  }
  function B(e2) {
    if ("JSXIdentifier" === e2.type) return e2.name;
    if ("JSXNamespacedName" === e2.type) return e2.namespace.name + ":" + e2.name.name;
    if ("JSXMemberExpression" === e2.type) return B(e2.object) + "." + B(e2.property);
    throw new Error("Node had unexpected type: " + e2.type);
  }
  j.j_oTag = new k("<tag", false), j.j_cTag = new k("</tag", false), j.j_expr = new k("<tag>...</tag>", true, true), l.jsxName = new o("jsxName"), l.jsxText = new o("jsxText", { beforeExpr: true }), l.jsxTagStart = new o("jsxTagStart", { startsExpr: true }), l.jsxTagEnd = new o("jsxTagEnd"), l.jsxTagStart.updateContext = function() {
    this.state.context.push(j.j_expr), this.state.context.push(j.j_oTag), this.state.exprAllowed = false;
  }, l.jsxTagEnd.updateContext = function(e2) {
    var t2 = this.state.context.pop();
    t2 === j.j_oTag && e2 === l.slash || t2 === j.j_cTag ? (this.state.context.pop(), this.state.exprAllowed = this.curContext() === j.j_expr) : this.state.exprAllowed = true;
  };
  var L = { sourceType: "script", sourceFilename: void 0, startLine: 1, allowAwaitOutsideFunction: false, allowReturnOutsideFunction: false, allowImportExportEverywhere: false, allowSuperOutsideMethod: false, plugins: [], strictMode: null, ranges: false, tokens: false };
  var $ = function(e2, t2) {
    this.line = e2, this.column = t2;
  }, G = function(e2, t2) {
    this.start = e2, this.end = t2;
  };
  function z(e2) {
    return e2[e2.length - 1];
  }
  var U = (function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    return i(t2, e2), t2.prototype.raise = function(e3, t3, r2) {
      var n2 = void 0 === r2 ? {} : r2, i2 = n2.missingPluginNames, a2 = n2.code, o2 = (function(e4, t4) {
        var r3, n3 = 1, i3 = 0;
        for (D.lastIndex = 0; (r3 = D.exec(e4)) && r3.index < t4; ) n3++, i3 = D.lastIndex;
        return new $(n3, t4 - i3);
      })(this.input, e3);
      t3 += " (" + o2.line + ":" + o2.column + ")";
      var s2 = new SyntaxError(t3);
      throw s2.pos = e3, s2.loc = o2, i2 && (s2.missingPlugin = i2), void 0 !== a2 && (s2.code = a2), s2;
    }, t2;
  })((function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.addComment = function(e3) {
      this.filename && (e3.loc.filename = this.filename), this.state.trailingComments.push(e3), this.state.leadingComments.push(e3);
    }, r2.processComment = function(e3) {
      if (!("Program" === e3.type && e3.body.length > 0)) {
        var t3, r3, n2, i2, a2, o2 = this.state.commentStack;
        if (this.state.trailingComments.length > 0) this.state.trailingComments[0].start >= e3.end ? (n2 = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;
        else if (o2.length > 0) {
          var s2 = z(o2);
          s2.trailingComments && s2.trailingComments[0].start >= e3.end && (n2 = s2.trailingComments, delete s2.trailingComments);
        }
        for (o2.length > 0 && z(o2).start >= e3.start && (t3 = o2.pop()); o2.length > 0 && z(o2).start >= e3.start; ) r3 = o2.pop();
        if (!r3 && t3 && (r3 = t3), t3 && this.state.leadingComments.length > 0) {
          var u2 = z(this.state.leadingComments);
          if ("ObjectProperty" === t3.type) {
            if (u2.start >= e3.start && this.state.commentPreviousNode) {
              for (a2 = 0; a2 < this.state.leadingComments.length; a2++) this.state.leadingComments[a2].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(a2, 1), a2--);
              this.state.leadingComments.length > 0 && (t3.trailingComments = this.state.leadingComments, this.state.leadingComments = []);
            }
          } else if ("CallExpression" === e3.type && e3.arguments && e3.arguments.length) {
            var l2 = z(e3.arguments);
            if (l2 && u2.start >= l2.start && u2.end <= e3.end && this.state.commentPreviousNode) {
              for (a2 = 0; a2 < this.state.leadingComments.length; a2++) this.state.leadingComments[a2].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(a2, 1), a2--);
              this.state.leadingComments.length > 0 && (l2.trailingComments = this.state.leadingComments, this.state.leadingComments = []);
            }
          }
        }
        if (r3) {
          if (r3.leadingComments) {
            if (r3 !== e3 && r3.leadingComments.length > 0 && z(r3.leadingComments).end <= e3.start) e3.leadingComments = r3.leadingComments, delete r3.leadingComments;
            else for (i2 = r3.leadingComments.length - 2; i2 >= 0; --i2) if (r3.leadingComments[i2].end <= e3.start) {
              e3.leadingComments = r3.leadingComments.splice(0, i2 + 1);
              break;
            }
          }
        } else if (this.state.leadingComments.length > 0) if (z(this.state.leadingComments).end <= e3.start) {
          if (this.state.commentPreviousNode) for (a2 = 0; a2 < this.state.leadingComments.length; a2++) this.state.leadingComments[a2].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(a2, 1), a2--);
          this.state.leadingComments.length > 0 && (e3.leadingComments = this.state.leadingComments, this.state.leadingComments = []);
        } else {
          for (i2 = 0; i2 < this.state.leadingComments.length && !(this.state.leadingComments[i2].end > e3.start); i2++) ;
          var c2 = this.state.leadingComments.slice(0, i2);
          c2.length && (e3.leadingComments = c2), 0 === (n2 = this.state.leadingComments.slice(i2)).length && (n2 = null);
        }
        this.state.commentPreviousNode = e3, n2 && (n2.length && n2[0].start >= e3.start && z(n2).end <= e3.end ? e3.innerComments = n2 : e3.trailingComments = n2), o2.push(e3);
      }
    }, t2;
  })((function() {
    function e2() {
      this.sawUnambiguousESM = false;
    }
    var t2 = e2.prototype;
    return t2.isReservedWord = function(e3) {
      return "await" === e3 ? this.inModule : d[6](e3);
    }, t2.hasPlugin = function(e3) {
      return Object.hasOwnProperty.call(this.plugins, e3);
    }, t2.getPluginOption = function(e3, t3) {
      if (this.hasPlugin(e3)) return this.plugins[e3][t3];
    }, e2;
  })())), W = (function() {
    function e2() {
    }
    var t2 = e2.prototype;
    return t2.init = function(e3, t3) {
      this.strict = false !== e3.strictMode && "module" === e3.sourceType, this.input = t3, this.potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.inMethod = false, this.inFunction = false, this.inParameters = false, this.maybeInArrowParameters = false, this.inGenerator = false, this.inAsync = false, this.inPropertyName = false, this.inType = false, this.inClassProperty = false, this.noAnonFunctionType = false, this.hasFlowComment = false, this.isIterator = false, this.classLevel = 0, this.labels = [], this.decoratorStack = [[]], this.yieldInPossibleArrowParameters = null, this.tokens = [], this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.commentPreviousNode = null, this.pos = this.lineStart = 0, this.curLine = e3.startLine, this.type = l.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = [j.braceStatement], this.exprAllowed = true, this.containsEsc = this.containsOctal = false, this.octalPosition = null, this.invalidTemplateEscapePosition = null, this.exportedIdentifiers = [];
    }, t2.curPosition = function() {
      return new $(this.curLine, this.pos - this.lineStart);
    }, t2.clone = function(t3) {
      var r2 = this, n2 = new e2();
      return Object.keys(this).forEach(function(e3) {
        var i2 = r2[e3];
        t3 && "context" !== e3 || !Array.isArray(i2) || (i2 = i2.slice()), n2[e3] = i2;
      }), n2;
    }, e2;
  })(), q = function(e2) {
    return e2 >= 48 && e2 <= 57;
  }, H = { decBinOct: [46, 66, 69, 79, 95, 98, 101, 111], hex: [46, 88, 95, 120] }, K = { bin: [48, 49] };
  K.oct = K.bin.concat([50, 51, 52, 53, 54, 55]), K.dec = K.oct.concat([56, 57]), K.hex = K.dec.concat([65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);
  var J = (function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.addExtra = function(e3, t3, r3) {
      e3 && ((e3.extra = e3.extra || {})[t3] = r3);
    }, r2.isRelational = function(e3) {
      return this.match(l.relational) && this.state.value === e3;
    }, r2.isLookaheadRelational = function(e3) {
      var t3 = this.lookahead();
      return t3.type == l.relational && t3.value == e3;
    }, r2.expectRelational = function(e3) {
      this.isRelational(e3) ? this.next() : this.unexpected(null, l.relational);
    }, r2.eatRelational = function(e3) {
      return !!this.isRelational(e3) && (this.next(), true);
    }, r2.isContextual = function(e3) {
      return this.match(l.name) && this.state.value === e3 && !this.state.containsEsc;
    }, r2.isLookaheadContextual = function(e3) {
      var t3 = this.lookahead();
      return t3.type === l.name && t3.value === e3;
    }, r2.eatContextual = function(e3) {
      return this.isContextual(e3) && this.eat(l.name);
    }, r2.expectContextual = function(e3, t3) {
      this.eatContextual(e3) || this.unexpected(null, t3);
    }, r2.canInsertSemicolon = function() {
      return this.match(l.eof) || this.match(l.braceR) || this.hasPrecedingLineBreak();
    }, r2.hasPrecedingLineBreak = function() {
      return V.test(this.input.slice(this.state.lastTokEnd, this.state.start));
    }, r2.isLineTerminator = function() {
      return this.eat(l.semi) || this.canInsertSemicolon();
    }, r2.semicolon = function() {
      this.isLineTerminator() || this.unexpected(null, l.semi);
    }, r2.expect = function(e3, t3) {
      this.eat(e3) || this.unexpected(t3, e3);
    }, r2.unexpected = function(e3, t3) {
      throw void 0 === t3 && (t3 = "Unexpected token"), "string" != typeof t3 && (t3 = 'Unexpected token, expected "' + t3.label + '"'), this.raise(null != e3 ? e3 : this.state.start, t3);
    }, r2.expectPlugin = function(e3, t3) {
      if (!this.hasPlugin(e3)) throw this.raise(null != t3 ? t3 : this.state.start, "This experimental syntax requires enabling the parser plugin: '" + e3 + "'", { missingPluginNames: [e3] });
      return true;
    }, r2.expectOnePlugin = function(e3, t3) {
      var r3 = this;
      if (!e3.some(function(e4) {
        return r3.hasPlugin(e4);
      })) throw this.raise(null != t3 ? t3 : this.state.start, "This experimental syntax requires enabling one of the following parser plugin(s): '" + e3.join(", ") + "'", { missingPluginNames: e3 });
    }, t2;
  })((function(e2) {
    function t2(t3, r3) {
      var n2;
      return (n2 = e2.call(this) || this).state = new W(), n2.state.init(t3, r3), n2.isLookahead = false, n2;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.next = function() {
      this.options.tokens && !this.isLookahead && this.state.tokens.push(new function(e3) {
        this.type = e3.type, this.value = e3.value, this.start = e3.start, this.end = e3.end, this.loc = new G(e3.startLoc, e3.endLoc);
      }(this.state)), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
    }, r2.eat = function(e3) {
      return !!this.match(e3) && (this.next(), true);
    }, r2.match = function(e3) {
      return this.state.type === e3;
    }, r2.isKeyword = function(e3) {
      return h(e3);
    }, r2.lookahead = function() {
      var e3 = this.state;
      this.state = e3.clone(true), this.isLookahead = true, this.next(), this.isLookahead = false;
      var t3 = this.state;
      return this.state = e3, t3;
    }, r2.setStrict = function(e3) {
      if (this.state.strict = e3, this.match(l.num) || this.match(l.string)) {
        for (this.state.pos = this.state.start; this.state.pos < this.state.lineStart; ) this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1, --this.state.curLine;
        this.nextToken();
      }
    }, r2.curContext = function() {
      return this.state.context[this.state.context.length - 1];
    }, r2.nextToken = function() {
      var e3 = this.curContext();
      e3 && e3.preserveSpace || this.skipSpace(), this.state.containsOctal = false, this.state.octalPosition = null, this.state.start = this.state.pos, this.state.startLoc = this.state.curPosition(), this.state.pos >= this.input.length ? this.finishToken(l.eof) : e3.override ? e3.override(this) : this.readToken(this.input.codePointAt(this.state.pos));
    }, r2.readToken = function(e3) {
      S(e3) || 92 === e3 ? this.readWord() : this.getTokenFromCode(e3);
    }, r2.pushComment = function(e3, t3, r3, n2, i2, a2) {
      var o2 = { type: e3 ? "CommentBlock" : "CommentLine", value: t3, start: r3, end: n2, loc: new G(i2, a2) };
      this.isLookahead || (this.options.tokens && this.state.tokens.push(o2), this.state.comments.push(o2), this.addComment(o2));
    }, r2.skipBlockComment = function() {
      var e3, t3 = this.state.curPosition(), r3 = this.state.pos, n2 = this.input.indexOf("*/", this.state.pos += 2);
      for (-1 === n2 && this.raise(this.state.pos - 2, "Unterminated comment"), this.state.pos = n2 + 2, D.lastIndex = r3; (e3 = D.exec(this.input)) && e3.index < this.state.pos; ) ++this.state.curLine, this.state.lineStart = e3.index + e3[0].length;
      this.pushComment(true, this.input.slice(r3 + 2, n2), r3, this.state.pos, t3, this.state.curPosition());
    }, r2.skipLineComment = function(e3) {
      var t3 = this.state.pos, r3 = this.state.curPosition(), n2 = this.input.charCodeAt(this.state.pos += e3);
      if (this.state.pos < this.input.length) for (; 10 !== n2 && 13 !== n2 && 8232 !== n2 && 8233 !== n2 && ++this.state.pos < this.input.length; ) n2 = this.input.charCodeAt(this.state.pos);
      this.pushComment(false, this.input.slice(t3 + e3, this.state.pos), t3, this.state.pos, r3, this.state.curPosition());
    }, r2.skipSpace = function() {
      e: for (; this.state.pos < this.input.length; ) {
        var e3 = this.input.charCodeAt(this.state.pos);
        switch (e3) {
          case 13:
            10 === this.input.charCodeAt(this.state.pos + 1) && ++this.state.pos;
          case 10:
          case 8232:
          case 8233:
            ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
            break;
          case 47:
            switch (this.input.charCodeAt(this.state.pos + 1)) {
              case 42:
                this.skipBlockComment();
                break;
              case 47:
                this.skipLineComment(2);
                break;
              default:
                break e;
            }
            break;
          default:
            if (!I(e3)) break e;
            ++this.state.pos;
        }
      }
    }, r2.finishToken = function(e3, t3) {
      this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();
      var r3 = this.state.type;
      this.state.type = e3, this.state.value = t3, this.updateContext(r3);
    }, r2.readToken_dot = function() {
      var e3 = this.input.charCodeAt(this.state.pos + 1);
      if (e3 >= 48 && e3 <= 57) this.readNumber(true);
      else {
        var t3 = this.input.charCodeAt(this.state.pos + 2);
        46 === e3 && 46 === t3 ? (this.state.pos += 3, this.finishToken(l.ellipsis)) : (++this.state.pos, this.finishToken(l.dot));
      }
    }, r2.readToken_slash = function() {
      if (this.state.exprAllowed && !this.state.inType) return ++this.state.pos, void this.readRegexp();
      61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(l.assign, 2) : this.finishOp(l.slash, 1);
    }, r2.readToken_interpreter = function() {
      if (0 !== this.state.pos || this.state.input.length < 2) return false;
      var e3 = this.state.pos;
      this.state.pos += 1;
      var t3 = this.input.charCodeAt(this.state.pos);
      if (33 !== t3) return false;
      for (; 10 !== t3 && 13 !== t3 && 8232 !== t3 && 8233 !== t3 && ++this.state.pos < this.input.length; ) t3 = this.input.charCodeAt(this.state.pos);
      var r3 = this.input.slice(e3 + 2, this.state.pos);
      return this.finishToken(l.interpreterDirective, r3), true;
    }, r2.readToken_mult_modulo = function(e3) {
      var t3 = 42 === e3 ? l.star : l.modulo, r3 = 1, n2 = this.input.charCodeAt(this.state.pos + 1), i2 = this.state.exprAllowed;
      42 === e3 && 42 === n2 && (r3++, n2 = this.input.charCodeAt(this.state.pos + 2), t3 = l.exponent), 61 !== n2 || i2 || (r3++, t3 = l.assign), this.finishOp(t3, r3);
    }, r2.readToken_pipe_amp = function(e3) {
      var t3 = this.input.charCodeAt(this.state.pos + 1);
      if (t3 !== e3) {
        if (124 === e3) {
          if (62 === t3) return void this.finishOp(l.pipeline, 2);
          if (125 === t3 && this.hasPlugin("flow")) return void this.finishOp(l.braceBarR, 2);
        }
        61 !== t3 ? this.finishOp(124 === e3 ? l.bitwiseOR : l.bitwiseAND, 1) : this.finishOp(l.assign, 2);
      } else 61 === this.input.charCodeAt(this.state.pos + 2) ? this.finishOp(l.assign, 3) : this.finishOp(124 === e3 ? l.logicalOR : l.logicalAND, 2);
    }, r2.readToken_caret = function() {
      61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(l.assign, 2) : this.finishOp(l.bitwiseXOR, 1);
    }, r2.readToken_plus_min = function(e3) {
      var t3 = this.input.charCodeAt(this.state.pos + 1);
      if (t3 === e3) return 45 === t3 && !this.inModule && 62 === this.input.charCodeAt(this.state.pos + 2) && V.test(this.input.slice(this.state.lastTokEnd, this.state.pos)) ? (this.skipLineComment(3), this.skipSpace(), void this.nextToken()) : void this.finishOp(l.incDec, 2);
      61 === t3 ? this.finishOp(l.assign, 2) : this.finishOp(l.plusMin, 1);
    }, r2.readToken_lt_gt = function(e3) {
      var t3 = this.input.charCodeAt(this.state.pos + 1), r3 = 1;
      return t3 === e3 ? (r3 = 62 === e3 && 62 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.state.pos + r3) ? void this.finishOp(l.assign, r3 + 1) : void this.finishOp(l.bitShift, r3)) : 33 !== t3 || 60 !== e3 || this.inModule || 45 !== this.input.charCodeAt(this.state.pos + 2) || 45 !== this.input.charCodeAt(this.state.pos + 3) ? (61 === t3 && (r3 = 2), void this.finishOp(l.relational, r3)) : (this.skipLineComment(4), this.skipSpace(), void this.nextToken());
    }, r2.readToken_eq_excl = function(e3) {
      var t3 = this.input.charCodeAt(this.state.pos + 1);
      if (61 !== t3) return 61 === e3 && 62 === t3 ? (this.state.pos += 2, void this.finishToken(l.arrow)) : void this.finishOp(61 === e3 ? l.eq : l.bang, 1);
      this.finishOp(l.equality, 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2);
    }, r2.readToken_question = function() {
      var e3 = this.input.charCodeAt(this.state.pos + 1), t3 = this.input.charCodeAt(this.state.pos + 2);
      63 !== e3 || this.state.inType ? 46 !== e3 || t3 >= 48 && t3 <= 57 ? (++this.state.pos, this.finishToken(l.question)) : (this.state.pos += 2, this.finishToken(l.questionDot)) : 61 === t3 ? this.finishOp(l.assign, 3) : this.finishOp(l.nullishCoalescing, 2);
    }, r2.getTokenFromCode = function(e3) {
      switch (e3) {
        case 35:
          if (0 === this.state.pos && this.readToken_interpreter()) return;
          if ((this.hasPlugin("classPrivateProperties") || this.hasPlugin("classPrivateMethods")) && this.state.classLevel > 0) return ++this.state.pos, void this.finishToken(l.hash);
          this.raise(this.state.pos, "Unexpected character '" + String.fromCodePoint(e3) + "'");
        case 46:
          return void this.readToken_dot();
        case 40:
          return ++this.state.pos, void this.finishToken(l.parenL);
        case 41:
          return ++this.state.pos, void this.finishToken(l.parenR);
        case 59:
          return ++this.state.pos, void this.finishToken(l.semi);
        case 44:
          return ++this.state.pos, void this.finishToken(l.comma);
        case 91:
          return ++this.state.pos, void this.finishToken(l.bracketL);
        case 93:
          return ++this.state.pos, void this.finishToken(l.bracketR);
        case 123:
          return void (this.hasPlugin("flow") && 124 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(l.braceBarL, 2) : (++this.state.pos, this.finishToken(l.braceL)));
        case 125:
          return ++this.state.pos, void this.finishToken(l.braceR);
        case 58:
          return void (this.hasPlugin("functionBind") && 58 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(l.doubleColon, 2) : (++this.state.pos, this.finishToken(l.colon)));
        case 63:
          return void this.readToken_question();
        case 64:
          return ++this.state.pos, void this.finishToken(l.at);
        case 96:
          return ++this.state.pos, void this.finishToken(l.backQuote);
        case 48:
          var t3 = this.input.charCodeAt(this.state.pos + 1);
          if (120 === t3 || 88 === t3) return void this.readRadixNumber(16);
          if (111 === t3 || 79 === t3) return void this.readRadixNumber(8);
          if (98 === t3 || 66 === t3) return void this.readRadixNumber(2);
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
          return void this.readNumber(false);
        case 34:
        case 39:
          return void this.readString(e3);
        case 47:
          return void this.readToken_slash();
        case 37:
        case 42:
          return void this.readToken_mult_modulo(e3);
        case 124:
        case 38:
          return void this.readToken_pipe_amp(e3);
        case 94:
          return void this.readToken_caret();
        case 43:
        case 45:
          return void this.readToken_plus_min(e3);
        case 60:
        case 62:
          return void this.readToken_lt_gt(e3);
        case 61:
        case 33:
          return void this.readToken_eq_excl(e3);
        case 126:
          return void this.finishOp(l.tilde, 1);
      }
      this.raise(this.state.pos, "Unexpected character '" + String.fromCodePoint(e3) + "'");
    }, r2.finishOp = function(e3, t3) {
      var r3 = this.input.slice(this.state.pos, this.state.pos + t3);
      this.state.pos += t3, this.finishToken(e3, r3);
    }, r2.readRegexp = function() {
      for (var e3, t3, r3 = this.state.pos; ; ) {
        this.state.pos >= this.input.length && this.raise(r3, "Unterminated regular expression");
        var n2 = this.input.charAt(this.state.pos);
        if (V.test(n2) && this.raise(r3, "Unterminated regular expression"), e3) e3 = false;
        else {
          if ("[" === n2) t3 = true;
          else if ("]" === n2 && t3) t3 = false;
          else if ("/" === n2 && !t3) break;
          e3 = "\\" === n2;
        }
        ++this.state.pos;
      }
      var i2 = this.input.slice(r3, this.state.pos);
      ++this.state.pos;
      for (var a2 = ""; this.state.pos < this.input.length; ) {
        var o2 = this.input[this.state.pos], s2 = this.input.codePointAt(this.state.pos);
        if ("gmsiyu".indexOf(o2) > -1) a2.indexOf(o2) > -1 && this.raise(this.state.pos + 1, "Duplicate regular expression flag"), ++this.state.pos, a2 += o2;
        else {
          if (!T(s2) && 92 !== s2) break;
          this.raise(this.state.pos + 1, "Invalid regular expression flag");
        }
      }
      this.finishToken(l.regexp, { pattern: i2, flags: a2 });
    }, r2.readInt = function(e3, t3) {
      for (var r3 = this.state.pos, n2 = 16 === e3 ? H.hex : H.decBinOct, i2 = 16 === e3 ? K.hex : 10 === e3 ? K.dec : 8 === e3 ? K.oct : K.bin, a2 = 0, o2 = 0, s2 = null == t3 ? 1 / 0 : t3; o2 < s2; ++o2) {
        var u2 = this.input.charCodeAt(this.state.pos), l2 = void 0;
        if (this.hasPlugin("numericSeparator")) {
          var c2 = this.input.charCodeAt(this.state.pos - 1), f2 = this.input.charCodeAt(this.state.pos + 1);
          if (95 === u2) {
            -1 === i2.indexOf(f2) && this.raise(this.state.pos, "Invalid or unexpected token"), (n2.indexOf(c2) > -1 || n2.indexOf(f2) > -1 || Number.isNaN(f2)) && this.raise(this.state.pos, "Invalid or unexpected token"), ++this.state.pos;
            continue;
          }
        }
        if ((l2 = u2 >= 97 ? u2 - 97 + 10 : u2 >= 65 ? u2 - 65 + 10 : q(u2) ? u2 - 48 : 1 / 0) >= e3) break;
        ++this.state.pos, a2 = a2 * e3 + l2;
      }
      return this.state.pos === r3 || null != t3 && this.state.pos - r3 !== t3 ? null : a2;
    }, r2.readRadixNumber = function(e3) {
      var t3 = this.state.pos, r3 = false;
      this.state.pos += 2;
      var n2 = this.readInt(e3);
      if (null == n2 && this.raise(this.state.start + 2, "Expected number in radix " + e3), this.hasPlugin("bigInt") && 110 === this.input.charCodeAt(this.state.pos) && (++this.state.pos, r3 = true), S(this.input.codePointAt(this.state.pos)) && this.raise(this.state.pos, "Identifier directly after number"), r3) {
        var i2 = this.input.slice(t3, this.state.pos).replace(/[_n]/g, "");
        this.finishToken(l.bigint, i2);
      } else this.finishToken(l.num, n2);
    }, r2.readNumber = function(e3) {
      var t3 = this.state.pos, r3 = 48 === this.input.charCodeAt(t3), n2 = false, i2 = false;
      e3 || null !== this.readInt(10) || this.raise(t3, "Invalid number"), r3 && this.state.pos == t3 + 1 && (r3 = false);
      var a2 = this.input.charCodeAt(this.state.pos);
      46 !== a2 || r3 || (++this.state.pos, this.readInt(10), n2 = true, a2 = this.input.charCodeAt(this.state.pos)), 69 !== a2 && 101 !== a2 || r3 || (43 !== (a2 = this.input.charCodeAt(++this.state.pos)) && 45 !== a2 || ++this.state.pos, null === this.readInt(10) && this.raise(t3, "Invalid number"), n2 = true, a2 = this.input.charCodeAt(this.state.pos)), this.hasPlugin("bigInt") && 110 === a2 && ((n2 || r3) && this.raise(t3, "Invalid BigIntLiteral"), ++this.state.pos, i2 = true), S(this.input.codePointAt(this.state.pos)) && this.raise(this.state.pos, "Identifier directly after number");
      var o2, s2 = this.input.slice(t3, this.state.pos).replace(/[_n]/g, "");
      i2 ? this.finishToken(l.bigint, s2) : (n2 ? o2 = parseFloat(s2) : r3 && 1 !== s2.length ? this.state.strict ? this.raise(t3, "Invalid number") : o2 = /[89]/.test(s2) ? parseInt(s2, 10) : parseInt(s2, 8) : o2 = parseInt(s2, 10), this.finishToken(l.num, o2));
    }, r2.readCodePoint = function(e3) {
      var t3;
      if (123 === this.input.charCodeAt(this.state.pos)) {
        var r3 = ++this.state.pos;
        if (t3 = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, e3), ++this.state.pos, null === t3) --this.state.invalidTemplateEscapePosition;
        else if (t3 > 1114111) {
          if (!e3) return this.state.invalidTemplateEscapePosition = r3 - 2, null;
          this.raise(r3, "Code point out of bounds");
        }
      } else t3 = this.readHexChar(4, e3);
      return t3;
    }, r2.readString = function(e3) {
      for (var t3 = "", r3 = ++this.state.pos, n2 = this.hasPlugin("jsonStrings"); ; ) {
        this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");
        var i2 = this.input.charCodeAt(this.state.pos);
        if (i2 === e3) break;
        92 === i2 ? (t3 += this.input.slice(r3, this.state.pos), t3 += this.readEscapedChar(false), r3 = this.state.pos) : (!n2 || 8232 !== i2 && 8233 !== i2) && N(i2) ? this.raise(this.state.start, "Unterminated string constant") : ++this.state.pos;
      }
      t3 += this.input.slice(r3, this.state.pos++), this.finishToken(l.string, t3);
    }, r2.readTmplToken = function() {
      for (var e3 = "", t3 = this.state.pos, r3 = false; ; ) {
        this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated template");
        var n2 = this.input.charCodeAt(this.state.pos);
        if (96 === n2 || 36 === n2 && 123 === this.input.charCodeAt(this.state.pos + 1)) return this.state.pos === this.state.start && this.match(l.template) ? 36 === n2 ? (this.state.pos += 2, void this.finishToken(l.dollarBraceL)) : (++this.state.pos, void this.finishToken(l.backQuote)) : (e3 += this.input.slice(t3, this.state.pos), void this.finishToken(l.template, r3 ? null : e3));
        if (92 === n2) {
          e3 += this.input.slice(t3, this.state.pos);
          var i2 = this.readEscapedChar(true);
          null === i2 ? r3 = true : e3 += i2, t3 = this.state.pos;
        } else if (N(n2)) {
          switch (e3 += this.input.slice(t3, this.state.pos), ++this.state.pos, n2) {
            case 13:
              10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;
            case 10:
              e3 += "\n";
              break;
            default:
              e3 += String.fromCharCode(n2);
          }
          ++this.state.curLine, this.state.lineStart = this.state.pos, t3 = this.state.pos;
        } else ++this.state.pos;
      }
    }, r2.readEscapedChar = function(e3) {
      var t3 = !e3, r3 = this.input.charCodeAt(++this.state.pos);
      switch (++this.state.pos, r3) {
        case 110:
          return "\n";
        case 114:
          return "\r";
        case 120:
          var n2 = this.readHexChar(2, t3);
          return null === n2 ? null : String.fromCharCode(n2);
        case 117:
          var i2 = this.readCodePoint(t3);
          return null === i2 ? null : String.fromCodePoint(i2);
        case 116:
          return "	";
        case 98:
          return "\b";
        case 118:
          return "\v";
        case 102:
          return "\f";
        case 13:
          10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;
        case 10:
          return this.state.lineStart = this.state.pos, ++this.state.curLine, "";
        default:
          if (r3 >= 48 && r3 <= 55) {
            var a2 = this.state.pos - 1, o2 = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0], s2 = parseInt(o2, 8);
            if (s2 > 255 && (o2 = o2.slice(0, -1), s2 = parseInt(o2, 8)), s2 > 0) {
              if (e3) return this.state.invalidTemplateEscapePosition = a2, null;
              this.state.strict ? this.raise(a2, "Octal literal in strict mode") : this.state.containsOctal || (this.state.containsOctal = true, this.state.octalPosition = a2);
            }
            return this.state.pos += o2.length - 1, String.fromCharCode(s2);
          }
          return String.fromCharCode(r3);
      }
    }, r2.readHexChar = function(e3, t3) {
      var r3 = this.state.pos, n2 = this.readInt(16, e3);
      return null === n2 && (t3 ? this.raise(r3, "Bad character escape sequence") : (this.state.pos = r3 - 1, this.state.invalidTemplateEscapePosition = r3 - 1)), n2;
    }, r2.readWord1 = function() {
      this.state.containsEsc = false;
      for (var e3 = "", t3 = true, r3 = this.state.pos; this.state.pos < this.input.length; ) {
        var n2 = this.input.codePointAt(this.state.pos);
        if (T(n2)) this.state.pos += n2 <= 65535 ? 1 : 2;
        else if (this.state.isIterator && 64 === n2) this.state.pos += 1;
        else {
          if (92 !== n2) break;
          this.state.containsEsc = true, e3 += this.input.slice(r3, this.state.pos);
          var i2 = this.state.pos;
          117 !== this.input.charCodeAt(++this.state.pos) && this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.state.pos;
          var a2 = this.readCodePoint(true);
          (t3 ? S : T)(a2, true) || this.raise(i2, "Invalid Unicode escape"), e3 += String.fromCodePoint(a2), r3 = this.state.pos;
        }
        t3 = false;
      }
      return e3 + this.input.slice(r3, this.state.pos);
    }, r2.isIterator = function(e3) {
      return "@@iterator" === e3 || "@@asyncIterator" === e3;
    }, r2.readWord = function() {
      var e3 = this.readWord1(), t3 = l.name;
      this.isKeyword(e3) && (this.state.containsEsc && this.raise(this.state.pos, "Escape sequence in keyword " + e3), t3 = c[e3]), !this.state.isIterator || this.isIterator(e3) && this.state.inType || this.raise(this.state.pos, "Invalid identifier " + e3), this.finishToken(t3, e3);
    }, r2.braceIsBlock = function(e3) {
      if (e3 === l.colon) {
        var t3 = this.curContext();
        if (t3 === j.braceStatement || t3 === j.braceExpression) return !t3.isExpr;
      }
      return e3 === l._return ? V.test(this.input.slice(this.state.lastTokEnd, this.state.start)) : e3 === l._else || e3 === l.semi || e3 === l.eof || e3 === l.parenR || (e3 === l.braceL ? this.curContext() === j.braceStatement : e3 === l.relational || !this.state.exprAllowed);
    }, r2.updateContext = function(e3) {
      var t3, r3 = this.state.type;
      !r3.keyword || e3 !== l.dot && e3 !== l.questionDot ? (t3 = r3.updateContext) ? t3.call(this, e3) : this.state.exprAllowed = r3.beforeExpr : this.state.exprAllowed = false;
    }, t2;
  })(U)), Y = ["leadingComments", "trailingComments", "innerComments"], X = (function() {
    function e2(e3, t2, r2) {
      this.type = "", this.start = t2, this.end = 0, this.loc = new G(r2), e3 && e3.options.ranges && (this.range = [t2, 0]), e3 && e3.filename && (this.loc.filename = e3.filename);
    }
    return e2.prototype.__clone = function() {
      var t2 = this, r2 = new e2();
      return Object.keys(this).forEach(function(e3) {
        Y.indexOf(e3) < 0 && (r2[e3] = t2[e3]);
      }), r2;
    }, e2;
  })(), Q = (function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.checkPropClash = function(e3, t3) {
      if (!e3.computed && !e3.kind) {
        var r3 = e3.key;
        "__proto__" === ("Identifier" === r3.type ? r3.name : String(r3.value)) && (t3.proto && this.raise(r3.start, "Redefinition of __proto__ property"), t3.proto = true);
      }
    }, r2.getExpression = function() {
      this.nextToken();
      var e3 = this.parseExpression();
      return this.match(l.eof) || this.unexpected(), e3.comments = this.state.comments, e3;
    }, r2.parseExpression = function(e3, t3) {
      var r3 = this.state.start, n2 = this.state.startLoc, i2 = this.parseMaybeAssign(e3, t3);
      if (this.match(l.comma)) {
        var a2 = this.startNodeAt(r3, n2);
        for (a2.expressions = [i2]; this.eat(l.comma); ) a2.expressions.push(this.parseMaybeAssign(e3, t3));
        return this.toReferencedList(a2.expressions), this.finishNode(a2, "SequenceExpression");
      }
      return i2;
    }, r2.parseMaybeAssign = function(e3, t3, r3, n2) {
      var i2, a2 = this.state.start, o2 = this.state.startLoc;
      if (this.match(l._yield) && this.state.inGenerator) {
        var s2 = this.parseYield();
        return r3 && (s2 = r3.call(this, s2, a2, o2)), s2;
      }
      t3 ? i2 = false : (t3 = { start: 0 }, i2 = true), (this.match(l.parenL) || this.match(l.name) || this.match(l._yield)) && (this.state.potentialArrowAt = this.state.start);
      var u2 = this.parseMaybeConditional(e3, t3, n2);
      if (r3 && (u2 = r3.call(this, u2, a2, o2)), this.state.type.isAssign) {
        var c2, f2 = this.startNodeAt(a2, o2), p2 = this.state.value;
        if (f2.operator = p2, "??=" === p2 && (this.expectPlugin("nullishCoalescingOperator"), this.expectPlugin("logicalAssignment")), "||=" !== p2 && "&&=" !== p2 || this.expectPlugin("logicalAssignment"), f2.left = this.match(l.eq) ? this.toAssignable(u2, void 0, "assignment expression") : u2, t3.start = 0, this.checkLVal(u2, void 0, void 0, "assignment expression"), u2.extra && u2.extra.parenthesized) "ObjectPattern" === u2.type ? c2 = "`({a}) = 0` use `({a} = 0)`" : "ArrayPattern" === u2.type && (c2 = "`([a]) = 0` use `([a] = 0)`"), c2 && this.raise(u2.start, "You're trying to assign to a parenthesized expression, eg. instead of " + c2);
        return this.next(), f2.right = this.parseMaybeAssign(e3), this.finishNode(f2, "AssignmentExpression");
      }
      return i2 && t3.start && this.unexpected(t3.start), u2;
    }, r2.parseMaybeConditional = function(e3, t3, r3) {
      var n2 = this.state.start, i2 = this.state.startLoc, a2 = this.state.potentialArrowAt, o2 = this.parseExprOps(e3, t3);
      return "ArrowFunctionExpression" === o2.type && o2.start === a2 ? o2 : t3 && t3.start ? o2 : this.parseConditional(o2, e3, n2, i2, r3);
    }, r2.parseConditional = function(e3, t3, r3, n2, i2) {
      if (this.eat(l.question)) {
        var a2 = this.startNodeAt(r3, n2);
        return a2.test = e3, a2.consequent = this.parseMaybeAssign(), this.expect(l.colon), a2.alternate = this.parseMaybeAssign(t3), this.finishNode(a2, "ConditionalExpression");
      }
      return e3;
    }, r2.parseExprOps = function(e3, t3) {
      var r3 = this.state.start, n2 = this.state.startLoc, i2 = this.state.potentialArrowAt, a2 = this.parseMaybeUnary(t3);
      return "ArrowFunctionExpression" === a2.type && a2.start === i2 ? a2 : t3 && t3.start ? a2 : this.parseExprOp(a2, r3, n2, -1, e3);
    }, r2.parseExprOp = function(e3, t3, r3, n2, i2) {
      var a2 = this.state.type.binop;
      if (!(null == a2 || i2 && this.match(l._in)) && a2 > n2) {
        var o2 = this.startNodeAt(t3, r3), s2 = this.state.value;
        o2.left = e3, o2.operator = s2, "**" !== s2 || "UnaryExpression" !== e3.type || e3.extra && e3.extra.parenthesized || this.raise(e3.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");
        var u2 = this.state.type;
        u2 === l.nullishCoalescing ? this.expectPlugin("nullishCoalescingOperator") : u2 === l.pipeline && this.expectPlugin("pipelineOperator"), this.next();
        var c2 = this.state.start, f2 = this.state.startLoc;
        if (u2 === l.pipeline && this.match(l.name) && "await" === this.state.value && this.state.inAsync) throw this.raise(this.state.start, 'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal');
        return o2.right = this.parseExprOp(this.parseMaybeUnary(), c2, f2, u2.rightAssociative ? a2 - 1 : a2, i2), this.finishNode(o2, u2 === l.logicalOR || u2 === l.logicalAND || u2 === l.nullishCoalescing ? "LogicalExpression" : "BinaryExpression"), this.parseExprOp(o2, t3, r3, n2, i2);
      }
      return e3;
    }, r2.parseMaybeUnary = function(e3) {
      if (this.state.type.prefix) {
        var t3 = this.startNode(), r3 = this.match(l.incDec);
        if (t3.operator = this.state.value, t3.prefix = true, "throw" === t3.operator && this.expectPlugin("throwExpressions"), this.next(), t3.argument = this.parseMaybeUnary(), e3 && e3.start && this.unexpected(e3.start), r3) this.checkLVal(t3.argument, void 0, void 0, "prefix operation");
        else if (this.state.strict && "delete" === t3.operator) {
          var n2 = t3.argument;
          "Identifier" === n2.type ? this.raise(t3.start, "Deleting local variable in strict mode") : "MemberExpression" === n2.type && "PrivateName" === n2.property.type && this.raise(t3.start, "Deleting a private field is not allowed");
        }
        return this.finishNode(t3, r3 ? "UpdateExpression" : "UnaryExpression");
      }
      var i2 = this.state.start, a2 = this.state.startLoc, o2 = this.parseExprSubscripts(e3);
      if (e3 && e3.start) return o2;
      for (; this.state.type.postfix && !this.canInsertSemicolon(); ) {
        var s2 = this.startNodeAt(i2, a2);
        s2.operator = this.state.value, s2.prefix = false, s2.argument = o2, this.checkLVal(o2, void 0, void 0, "postfix operation"), this.next(), o2 = this.finishNode(s2, "UpdateExpression");
      }
      return o2;
    }, r2.parseExprSubscripts = function(e3) {
      var t3 = this.state.start, r3 = this.state.startLoc, n2 = this.state.potentialArrowAt, i2 = this.parseExprAtom(e3);
      return "ArrowFunctionExpression" === i2.type && i2.start === n2 ? i2 : e3 && e3.start ? i2 : this.parseSubscripts(i2, t3, r3);
    }, r2.parseSubscripts = function(e3, t3, r3, n2) {
      var i2 = { optionalChainMember: false, stop: false };
      do {
        e3 = this.parseSubscript(e3, t3, r3, n2, i2);
      } while (!i2.stop);
      return e3;
    }, r2.parseSubscript = function(e3, t3, r3, n2, i2) {
      if (!n2 && this.eat(l.doubleColon)) {
        var a2 = this.startNodeAt(t3, r3);
        return a2.object = e3, a2.callee = this.parseNoCallExpr(), i2.stop = true, this.parseSubscripts(this.finishNode(a2, "BindExpression"), t3, r3, n2);
      }
      if (this.match(l.questionDot)) {
        if (this.expectPlugin("optionalChaining"), i2.optionalChainMember = true, n2 && this.lookahead().type == l.parenL) return i2.stop = true, e3;
        this.next();
        var o2 = this.startNodeAt(t3, r3);
        if (this.eat(l.bracketL)) return o2.object = e3, o2.property = this.parseExpression(), o2.computed = true, o2.optional = true, this.expect(l.bracketR), this.finishNode(o2, "OptionalMemberExpression");
        if (this.eat(l.parenL)) {
          var s2 = this.atPossibleAsync(e3);
          return o2.callee = e3, o2.arguments = this.parseCallExpressionArguments(l.parenR, s2), o2.optional = true, this.finishNode(o2, "OptionalCallExpression");
        }
        return o2.object = e3, o2.property = this.parseIdentifier(true), o2.computed = false, o2.optional = true, this.finishNode(o2, "OptionalMemberExpression");
      }
      if (this.eat(l.dot)) {
        var u2 = this.startNodeAt(t3, r3);
        return u2.object = e3, u2.property = this.parseMaybePrivateName(), u2.computed = false, i2.optionalChainMember ? (u2.optional = false, this.finishNode(u2, "OptionalMemberExpression")) : this.finishNode(u2, "MemberExpression");
      }
      if (this.eat(l.bracketL)) {
        var c2 = this.startNodeAt(t3, r3);
        return c2.object = e3, c2.property = this.parseExpression(), c2.computed = true, this.expect(l.bracketR), i2.optionalChainMember ? (c2.optional = false, this.finishNode(c2, "OptionalMemberExpression")) : this.finishNode(c2, "MemberExpression");
      }
      if (!n2 && this.match(l.parenL)) {
        var f2 = this.atPossibleAsync(e3);
        this.next();
        var p2 = this.startNodeAt(t3, r3);
        p2.callee = e3;
        var d2 = { start: -1 };
        return p2.arguments = this.parseCallExpressionArguments(l.parenR, f2, d2), i2.optionalChainMember ? this.finishOptionalCallExpression(p2) : this.finishCallExpression(p2), f2 && this.shouldParseAsyncArrow() ? (i2.stop = true, d2.start > -1 && this.raise(d2.start, "A trailing comma is not permitted after the rest element"), this.parseAsyncArrowFromCallExpression(this.startNodeAt(t3, r3), p2)) : (this.toReferencedList(p2.arguments), p2);
      }
      return this.match(l.backQuote) ? this.parseTaggedTemplateExpression(t3, r3, e3, i2) : (i2.stop = true, e3);
    }, r2.parseTaggedTemplateExpression = function(e3, t3, r3, n2, i2) {
      var a2 = this.startNodeAt(e3, t3);
      return a2.tag = r3, a2.quasi = this.parseTemplate(true), i2 && (a2.typeParameters = i2), n2.optionalChainMember && this.raise(e3, "Tagged Template Literals are not allowed in optionalChain"), this.finishNode(a2, "TaggedTemplateExpression");
    }, r2.atPossibleAsync = function(e3) {
      return !this.state.containsEsc && this.state.potentialArrowAt === e3.start && "Identifier" === e3.type && "async" === e3.name && !this.canInsertSemicolon();
    }, r2.finishCallExpression = function(e3) {
      if ("Import" === e3.callee.type) {
        1 !== e3.arguments.length && this.raise(e3.start, "import() requires exactly one argument");
        var t3 = e3.arguments[0];
        t3 && "SpreadElement" === t3.type && this.raise(t3.start, "... is not allowed in import()");
      }
      return this.finishNode(e3, "CallExpression");
    }, r2.finishOptionalCallExpression = function(e3) {
      if ("Import" === e3.callee.type) {
        1 !== e3.arguments.length && this.raise(e3.start, "import() requires exactly one argument");
        var t3 = e3.arguments[0];
        t3 && "SpreadElement" === t3.type && this.raise(t3.start, "... is not allowed in import()");
      }
      return this.finishNode(e3, "OptionalCallExpression");
    }, r2.parseCallExpressionArguments = function(e3, t3, r3) {
      for (var n2, i2 = [], a2 = true; !this.eat(e3); ) {
        if (a2) a2 = false;
        else if (this.expect(l.comma), this.eat(e3)) break;
        this.match(l.parenL) && !n2 && (n2 = this.state.start), i2.push(this.parseExprListItem(false, t3 ? { start: 0 } : void 0, t3 ? { start: 0 } : void 0, t3 ? r3 : void 0));
      }
      return t3 && n2 && this.shouldParseAsyncArrow() && this.unexpected(), i2;
    }, r2.shouldParseAsyncArrow = function() {
      return this.match(l.arrow);
    }, r2.parseAsyncArrowFromCallExpression = function(e3, t3) {
      var r3 = this.state.yieldInPossibleArrowParameters;
      return this.state.yieldInPossibleArrowParameters = null, this.expect(l.arrow), this.parseArrowExpression(e3, t3.arguments, true), this.state.yieldInPossibleArrowParameters = r3, e3;
    }, r2.parseNoCallExpr = function() {
      var e3 = this.state.start, t3 = this.state.startLoc;
      return this.parseSubscripts(this.parseExprAtom(), e3, t3, true);
    }, r2.parseExprAtom = function(e3) {
      var t3, r3 = this.state.potentialArrowAt === this.state.start;
      switch (this.state.type) {
        case l._super:
          return this.state.inMethod || this.state.inClassProperty || this.options.allowSuperOutsideMethod || this.raise(this.state.start, "super is only allowed in object methods and classes"), t3 = this.startNode(), this.next(), this.match(l.parenL) || this.match(l.bracketL) || this.match(l.dot) || this.unexpected(), this.match(l.parenL) && "constructor" !== this.state.inMethod && !this.options.allowSuperOutsideMethod && this.raise(t3.start, "super() is only valid inside a class constructor. Make sure the method name is spelled exactly as 'constructor'."), this.finishNode(t3, "Super");
        case l._import:
          return this.lookahead().type === l.dot ? this.parseImportMetaProperty() : (this.expectPlugin("dynamicImport"), t3 = this.startNode(), this.next(), this.match(l.parenL) || this.unexpected(null, l.parenL), this.finishNode(t3, "Import"));
        case l._this:
          return t3 = this.startNode(), this.next(), this.finishNode(t3, "ThisExpression");
        case l._yield:
          this.state.inGenerator && this.unexpected();
        case l.name:
          t3 = this.startNode();
          var n2 = "await" === this.state.value && (this.state.inAsync || !this.state.inFunction && this.options.allowAwaitOutsideFunction), i2 = this.state.containsEsc, a2 = this.shouldAllowYieldIdentifier(), o2 = this.parseIdentifier(n2 || a2);
          if ("await" === o2.name) {
            if (this.state.inAsync || this.inModule || !this.state.inFunction && this.options.allowAwaitOutsideFunction) return this.parseAwait(t3);
          } else {
            if (!i2 && "async" === o2.name && this.match(l._function) && !this.canInsertSemicolon()) return this.next(), this.parseFunction(t3, false, false, true);
            if (r3 && "async" === o2.name && this.match(l.name)) {
              var s2 = this.state.yieldInPossibleArrowParameters;
              this.state.yieldInPossibleArrowParameters = null;
              var u2 = [this.parseIdentifier()];
              return this.expect(l.arrow), this.parseArrowExpression(t3, u2, true), this.state.yieldInPossibleArrowParameters = s2, t3;
            }
          }
          if (r3 && !this.canInsertSemicolon() && this.eat(l.arrow)) {
            var c2 = this.state.yieldInPossibleArrowParameters;
            return this.state.yieldInPossibleArrowParameters = null, this.parseArrowExpression(t3, [o2]), this.state.yieldInPossibleArrowParameters = c2, t3;
          }
          return o2;
        case l._do:
          this.expectPlugin("doExpressions");
          var f2 = this.startNode();
          this.next();
          var p2 = this.state.inFunction, d2 = this.state.labels;
          return this.state.labels = [], this.state.inFunction = false, f2.body = this.parseBlock(false), this.state.inFunction = p2, this.state.labels = d2, this.finishNode(f2, "DoExpression");
        case l.regexp:
          var h2 = this.state.value;
          return (t3 = this.parseLiteral(h2.value, "RegExpLiteral")).pattern = h2.pattern, t3.flags = h2.flags, t3;
        case l.num:
          return this.parseLiteral(this.state.value, "NumericLiteral");
        case l.bigint:
          return this.parseLiteral(this.state.value, "BigIntLiteral");
        case l.string:
          return this.parseLiteral(this.state.value, "StringLiteral");
        case l._null:
          return t3 = this.startNode(), this.next(), this.finishNode(t3, "NullLiteral");
        case l._true:
        case l._false:
          return this.parseBooleanLiteral();
        case l.parenL:
          return this.parseParenAndDistinguishExpression(r3);
        case l.bracketL:
          return t3 = this.startNode(), this.next(), t3.elements = this.parseExprList(l.bracketR, true, e3), this.toReferencedList(t3.elements), this.finishNode(t3, "ArrayExpression");
        case l.braceL:
          return this.parseObj(false, e3);
        case l._function:
          return this.parseFunctionExpression();
        case l.at:
          this.parseDecorators();
        case l._class:
          return t3 = this.startNode(), this.takeDecorators(t3), this.parseClass(t3, false);
        case l._new:
          return this.parseNew();
        case l.backQuote:
          return this.parseTemplate(false);
        case l.doubleColon:
          t3 = this.startNode(), this.next(), t3.object = null;
          var v2 = t3.callee = this.parseNoCallExpr();
          if ("MemberExpression" === v2.type) return this.finishNode(t3, "BindExpression");
          throw this.raise(v2.start, "Binding should be performed on object property.");
        default:
          throw this.unexpected();
      }
    }, r2.parseBooleanLiteral = function() {
      var e3 = this.startNode();
      return e3.value = this.match(l._true), this.next(), this.finishNode(e3, "BooleanLiteral");
    }, r2.parseMaybePrivateName = function() {
      if (this.match(l.hash)) {
        this.expectOnePlugin(["classPrivateProperties", "classPrivateMethods"]);
        var e3 = this.startNode();
        return this.next(), e3.id = this.parseIdentifier(true), this.finishNode(e3, "PrivateName");
      }
      return this.parseIdentifier(true);
    }, r2.parseFunctionExpression = function() {
      var e3 = this.startNode(), t3 = this.parseIdentifier(true);
      return this.state.inGenerator && this.eat(l.dot) ? this.parseMetaProperty(e3, t3, "sent") : this.parseFunction(e3, false);
    }, r2.parseMetaProperty = function(e3, t3, r3) {
      e3.meta = t3, "function" === t3.name && "sent" === r3 && (this.isContextual(r3) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected());
      var n2 = this.state.containsEsc;
      return e3.property = this.parseIdentifier(true), (e3.property.name !== r3 || n2) && this.raise(e3.property.start, "The only valid meta property for " + t3.name + " is " + t3.name + "." + r3), this.finishNode(e3, "MetaProperty");
    }, r2.parseImportMetaProperty = function() {
      var e3 = this.startNode(), t3 = this.parseIdentifier(true);
      return this.expect(l.dot), "import" === t3.name && (this.isContextual("meta") ? this.expectPlugin("importMeta") : this.hasPlugin("importMeta") || this.raise(t3.start, "Dynamic imports require a parameter: import('a.js')")), this.inModule || this.raise(t3.start, `import.meta may appear only with 'sourceType: "module"'`, { code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" }), this.sawUnambiguousESM = true, this.parseMetaProperty(e3, t3, "meta");
    }, r2.parseLiteral = function(e3, t3, r3, n2) {
      r3 = r3 || this.state.start, n2 = n2 || this.state.startLoc;
      var i2 = this.startNodeAt(r3, n2);
      return this.addExtra(i2, "rawValue", e3), this.addExtra(i2, "raw", this.input.slice(r3, this.state.end)), i2.value = e3, this.next(), this.finishNode(i2, t3);
    }, r2.parseParenExpression = function() {
      this.expect(l.parenL);
      var e3 = this.parseExpression();
      return this.expect(l.parenR), e3;
    }, r2.parseParenAndDistinguishExpression = function(e3) {
      var t3, r3 = this.state.start, n2 = this.state.startLoc;
      this.expect(l.parenL);
      var i2 = this.state.maybeInArrowParameters, a2 = this.state.yieldInPossibleArrowParameters;
      this.state.maybeInArrowParameters = true, this.state.yieldInPossibleArrowParameters = null;
      for (var o2, s2, u2 = this.state.start, c2 = this.state.startLoc, f2 = [], p2 = { start: 0 }, d2 = { start: 0 }, h2 = true; !this.match(l.parenR); ) {
        if (h2) h2 = false;
        else if (this.expect(l.comma, d2.start || null), this.match(l.parenR)) {
          s2 = this.state.start;
          break;
        }
        if (this.match(l.ellipsis)) {
          var v2 = this.state.start, y2 = this.state.startLoc;
          o2 = this.state.start, f2.push(this.parseParenItem(this.parseRest(), v2, y2)), this.match(l.comma) && this.lookahead().type === l.parenR && this.raise(this.state.start, "A trailing comma is not permitted after the rest element");
          break;
        }
        f2.push(this.parseMaybeAssign(false, p2, this.parseParenItem, d2));
      }
      var m2 = this.state.start, b2 = this.state.startLoc;
      this.expect(l.parenR), this.state.maybeInArrowParameters = i2;
      var g2 = this.startNodeAt(r3, n2);
      if (e3 && this.shouldParseArrow() && (g2 = this.parseArrow(g2))) {
        for (var w2 = 0; w2 < f2.length; w2++) {
          var E2 = f2[w2];
          E2.extra && E2.extra.parenthesized && this.unexpected(E2.extra.parenStart);
        }
        return this.parseArrowExpression(g2, f2), this.state.yieldInPossibleArrowParameters = a2, g2;
      }
      return this.state.yieldInPossibleArrowParameters = a2, f2.length || this.unexpected(this.state.lastTokStart), s2 && this.unexpected(s2), o2 && this.unexpected(o2), p2.start && this.unexpected(p2.start), d2.start && this.unexpected(d2.start), f2.length > 1 ? ((t3 = this.startNodeAt(u2, c2)).expressions = f2, this.toReferencedList(t3.expressions), this.finishNodeAt(t3, "SequenceExpression", m2, b2)) : t3 = f2[0], this.addExtra(t3, "parenthesized", true), this.addExtra(t3, "parenStart", r3), t3;
    }, r2.shouldParseArrow = function() {
      return !this.canInsertSemicolon();
    }, r2.parseArrow = function(e3) {
      if (this.eat(l.arrow)) return e3;
    }, r2.parseParenItem = function(e3, t3, r3) {
      return e3;
    }, r2.parseNew = function() {
      var e3 = this.startNode(), t3 = this.parseIdentifier(true);
      if (this.eat(l.dot)) {
        var r3 = this.parseMetaProperty(e3, t3, "target");
        if (!this.state.inFunction && !this.state.inClassProperty) {
          var n2 = "new.target can only be used in functions";
          this.hasPlugin("classProperties") && (n2 += " or class properties"), this.raise(r3.start, n2);
        }
        return r3;
      }
      return e3.callee = this.parseNoCallExpr(), "OptionalMemberExpression" !== e3.callee.type && "OptionalCallExpression" !== e3.callee.type || this.raise(this.state.lastTokEnd, "constructors in/after an Optional Chain are not allowed"), this.eat(l.questionDot) && this.raise(this.state.start, "constructors in/after an Optional Chain are not allowed"), this.parseNewArguments(e3), this.finishNode(e3, "NewExpression");
    }, r2.parseNewArguments = function(e3) {
      if (this.eat(l.parenL)) {
        var t3 = this.parseExprList(l.parenR);
        this.toReferencedList(t3), e3.arguments = t3;
      } else e3.arguments = [];
    }, r2.parseTemplateElement = function(e3) {
      var t3 = this.startNode();
      return null === this.state.value && (e3 ? this.state.invalidTemplateEscapePosition = null : this.raise(this.state.invalidTemplateEscapePosition || 0, "Invalid escape sequence in template")), t3.value = { raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"), cooked: this.state.value }, this.next(), t3.tail = this.match(l.backQuote), this.finishNode(t3, "TemplateElement");
    }, r2.parseTemplate = function(e3) {
      var t3 = this.startNode();
      this.next(), t3.expressions = [];
      var r3 = this.parseTemplateElement(e3);
      for (t3.quasis = [r3]; !r3.tail; ) this.expect(l.dollarBraceL), t3.expressions.push(this.parseExpression()), this.expect(l.braceR), t3.quasis.push(r3 = this.parseTemplateElement(e3));
      return this.next(), this.finishNode(t3, "TemplateLiteral");
    }, r2.parseObj = function(e3, t3) {
      var r3 = [], n2 = /* @__PURE__ */ Object.create(null), i2 = true, a2 = this.startNode();
      a2.properties = [], this.next();
      for (var o2 = null; !this.eat(l.braceR); ) {
        if (i2) i2 = false;
        else if (this.expect(l.comma), this.eat(l.braceR)) break;
        if (this.match(l.at)) if (this.hasPlugin("decorators")) this.raise(this.state.start, "Stage 2 decorators disallow object literal property decorators");
        else for (; this.match(l.at); ) r3.push(this.parseDecorator());
        var s2 = this.startNode(), u2 = false, c2 = false, f2 = void 0, p2 = void 0;
        if (r3.length && (s2.decorators = r3, r3 = []), this.match(l.ellipsis)) {
          if (this.expectPlugin("objectRestSpread"), s2 = this.parseSpread(e3 ? { start: 0 } : void 0), e3 && this.toAssignable(s2, true, "object pattern"), a2.properties.push(s2), !e3) continue;
          var d2 = this.state.start;
          if (null !== o2) this.unexpected(o2, "Cannot have multiple rest elements when destructuring");
          else {
            if (this.eat(l.braceR)) break;
            if (!this.match(l.comma) || this.lookahead().type !== l.braceR) {
              o2 = d2;
              continue;
            }
            this.unexpected(d2, "A trailing comma is not permitted after the rest element");
          }
        }
        s2.method = false, (e3 || t3) && (f2 = this.state.start, p2 = this.state.startLoc), e3 || (u2 = this.eat(l.star));
        var h2 = this.state.containsEsc;
        if (!e3 && this.isContextual("async")) {
          u2 && this.unexpected();
          var v2 = this.parseIdentifier();
          this.match(l.colon) || this.match(l.parenL) || this.match(l.braceR) || this.match(l.eq) || this.match(l.comma) ? (s2.key = v2, s2.computed = false) : (c2 = true, this.match(l.star) && (this.expectPlugin("asyncGenerators"), this.next(), u2 = true), this.parsePropertyName(s2));
        } else this.parsePropertyName(s2);
        this.parseObjPropValue(s2, f2, p2, u2, c2, e3, t3, h2), this.checkPropClash(s2, n2), s2.shorthand && this.addExtra(s2, "shorthand", true), a2.properties.push(s2);
      }
      return null !== o2 && this.unexpected(o2, "The rest element has to be the last element when destructuring"), r3.length && this.raise(this.state.start, "You have trailing decorators with no property"), this.finishNode(a2, e3 ? "ObjectPattern" : "ObjectExpression");
    }, r2.isGetterOrSetterMethod = function(e3, t3) {
      return !t3 && !e3.computed && "Identifier" === e3.key.type && ("get" === e3.key.name || "set" === e3.key.name) && (this.match(l.string) || this.match(l.num) || this.match(l.bracketL) || this.match(l.name) || !!this.state.type.keyword);
    }, r2.checkGetterSetterParams = function(e3) {
      var t3 = "get" === e3.kind ? 0 : 1, r3 = e3.start;
      e3.params.length !== t3 && ("get" === e3.kind ? this.raise(r3, "getter must not have any formal parameters") : this.raise(r3, "setter must have exactly one formal parameter")), "set" === e3.kind && "RestElement" === e3.params[0].type && this.raise(r3, "setter function argument must not be a rest parameter");
    }, r2.parseObjectMethod = function(e3, t3, r3, n2, i2) {
      return r3 || t3 || this.match(l.parenL) ? (n2 && this.unexpected(), e3.kind = "method", e3.method = true, this.parseMethod(e3, t3, r3, false, "ObjectMethod")) : !i2 && this.isGetterOrSetterMethod(e3, n2) ? ((t3 || r3) && this.unexpected(), e3.kind = e3.key.name, this.parsePropertyName(e3), this.parseMethod(e3, false, false, false, "ObjectMethod"), this.checkGetterSetterParams(e3), e3) : void 0;
    }, r2.parseObjectProperty = function(e3, t3, r3, n2, i2) {
      return e3.shorthand = false, this.eat(l.colon) ? (e3.value = n2 ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, i2), this.finishNode(e3, "ObjectProperty")) : e3.computed || "Identifier" !== e3.key.type ? void 0 : (this.checkReservedWord(e3.key.name, e3.key.start, true, true), n2 ? e3.value = this.parseMaybeDefault(t3, r3, e3.key.__clone()) : this.match(l.eq) && i2 ? (i2.start || (i2.start = this.state.start), e3.value = this.parseMaybeDefault(t3, r3, e3.key.__clone())) : e3.value = e3.key.__clone(), e3.shorthand = true, this.finishNode(e3, "ObjectProperty"));
    }, r2.parseObjPropValue = function(e3, t3, r3, n2, i2, a2, o2, s2) {
      var u2 = this.parseObjectMethod(e3, n2, i2, a2, s2) || this.parseObjectProperty(e3, t3, r3, a2, o2);
      return u2 || this.unexpected(), u2;
    }, r2.parsePropertyName = function(e3) {
      if (this.eat(l.bracketL)) e3.computed = true, e3.key = this.parseMaybeAssign(), this.expect(l.bracketR);
      else {
        var t3 = this.state.inPropertyName;
        this.state.inPropertyName = true, e3.key = this.match(l.num) || this.match(l.string) ? this.parseExprAtom() : this.parseMaybePrivateName(), "PrivateName" !== e3.key.type && (e3.computed = false), this.state.inPropertyName = t3;
      }
      return e3.key;
    }, r2.initFunction = function(e3, t3) {
      e3.id = null, e3.generator = false, e3.async = !!t3;
    }, r2.parseMethod = function(e3, t3, r3, n2, i2) {
      var a2 = this.state.inFunction, o2 = this.state.inMethod, s2 = this.state.inGenerator;
      this.state.inFunction = true, this.state.inMethod = e3.kind || true, this.state.inGenerator = t3, this.initFunction(e3, r3), e3.generator = !!t3;
      var u2 = n2;
      return this.parseFunctionParams(e3, u2), this.parseFunctionBodyAndFinish(e3, i2), this.state.inFunction = a2, this.state.inMethod = o2, this.state.inGenerator = s2, e3;
    }, r2.parseArrowExpression = function(e3, t3, r3) {
      this.state.yieldInPossibleArrowParameters && this.raise(this.state.yieldInPossibleArrowParameters.start, "yield is not allowed in the parameters of an arrow function inside a generator");
      var n2 = this.state.inFunction;
      this.state.inFunction = true, this.initFunction(e3, r3), t3 && this.setArrowFunctionParameters(e3, t3);
      var i2 = this.state.inGenerator, a2 = this.state.maybeInArrowParameters;
      return this.state.inGenerator = false, this.state.maybeInArrowParameters = false, this.parseFunctionBody(e3, true), this.state.inGenerator = i2, this.state.inFunction = n2, this.state.maybeInArrowParameters = a2, this.finishNode(e3, "ArrowFunctionExpression");
    }, r2.setArrowFunctionParameters = function(e3, t3) {
      e3.params = this.toAssignableList(t3, true, "arrow function parameters");
    }, r2.isStrictBody = function(e3) {
      if ("BlockStatement" === e3.body.type && e3.body.directives.length) for (var t3 = 0, r3 = e3.body.directives; t3 < r3.length; t3++) {
        if ("use strict" === r3[t3].value.value) return true;
      }
      return false;
    }, r2.parseFunctionBodyAndFinish = function(e3, t3, r3) {
      this.parseFunctionBody(e3, r3), this.finishNode(e3, t3);
    }, r2.parseFunctionBody = function(e3, t3) {
      var r3 = t3 && !this.match(l.braceL), n2 = this.state.inParameters, i2 = this.state.inAsync;
      if (this.state.inParameters = false, this.state.inAsync = e3.async, r3) e3.body = this.parseMaybeAssign();
      else {
        var a2 = this.state.inGenerator, o2 = this.state.inFunction, s2 = this.state.labels;
        this.state.inGenerator = e3.generator, this.state.inFunction = true, this.state.labels = [], e3.body = this.parseBlock(true), this.state.inFunction = o2, this.state.inGenerator = a2, this.state.labels = s2;
      }
      this.state.inAsync = i2, this.checkFunctionNameAndParams(e3, t3), this.state.inParameters = n2;
    }, r2.checkFunctionNameAndParams = function(e3, t3) {
      var r3 = this.isStrictBody(e3), n2 = this.state.strict || r3 || t3, i2 = this.state.strict;
      if (r3 && (this.state.strict = r3), n2) {
        var a2 = /* @__PURE__ */ Object.create(null);
        e3.id && this.checkLVal(e3.id, true, void 0, "function name");
        for (var o2 = 0, s2 = e3.params; o2 < s2.length; o2++) {
          var u2 = s2[o2];
          r3 && "Identifier" !== u2.type && this.raise(u2.start, "Non-simple parameter in strict mode"), this.checkLVal(u2, true, a2, "function parameter list");
        }
      }
      this.state.strict = i2;
    }, r2.parseExprList = function(e3, t3, r3) {
      for (var n2 = [], i2 = true; !this.eat(e3); ) {
        if (i2) i2 = false;
        else if (this.expect(l.comma), this.eat(e3)) break;
        n2.push(this.parseExprListItem(t3, r3));
      }
      return n2;
    }, r2.parseExprListItem = function(e3, t3, r3, n2) {
      var i2;
      if (e3 && this.match(l.comma)) i2 = null;
      else if (this.match(l.ellipsis)) {
        var a2 = this.state.start, o2 = this.state.startLoc;
        i2 = this.parseParenItem(this.parseSpread(t3, r3), a2, o2), n2 && this.match(l.comma) && (n2.start = this.state.start);
      } else i2 = this.parseMaybeAssign(false, t3, this.parseParenItem, r3);
      return i2;
    }, r2.parseIdentifier = function(e3) {
      var t3 = this.startNode(), r3 = this.parseIdentifierName(t3.start, e3);
      return t3.name = r3, t3.loc.identifierName = r3, this.finishNode(t3, "Identifier");
    }, r2.parseIdentifierName = function(e3, t3) {
      var r3;
      if (t3 || this.checkReservedWord(this.state.value, this.state.start, !!this.state.type.keyword, false), this.match(l.name)) r3 = this.state.value;
      else {
        if (!this.state.type.keyword) throw this.unexpected();
        r3 = this.state.type.keyword;
      }
      return !t3 && "await" === r3 && this.state.inAsync && this.raise(e3, "invalid use of await inside of an async function"), this.next(), r3;
    }, r2.checkReservedWord = function(e3, t3, r3, n2) {
      this.state.strict && (d.strict(e3) || n2 && d.strictBind(e3)) && this.raise(t3, e3 + " is a reserved word in strict mode"), this.state.inGenerator && "yield" === e3 && this.raise(t3, "yield is a reserved word inside generator functions"), this.state.inClassProperty && "arguments" === e3 && this.raise(t3, "'arguments' is not allowed in class field initializer"), (this.isReservedWord(e3) || r3 && this.isKeyword(e3)) && this.raise(t3, e3 + " is a reserved word");
    }, r2.parseAwait = function(e3) {
      return this.state.inAsync || !this.state.inFunction && this.options.allowAwaitOutsideFunction || this.unexpected(), this.match(l.star) && this.raise(e3.start, "await* has been removed from the async functions proposal. Use Promise.all() instead."), e3.argument = this.parseMaybeUnary(), this.finishNode(e3, "AwaitExpression");
    }, r2.parseYield = function() {
      var e3 = this.startNode();
      return this.state.inParameters && this.raise(e3.start, "yield is not allowed in generator parameters"), this.state.maybeInArrowParameters && !this.state.yieldInPossibleArrowParameters && (this.state.yieldInPossibleArrowParameters = e3), this.next(), this.match(l.semi) || this.canInsertSemicolon() || !this.match(l.star) && !this.state.type.startsExpr ? (e3.delegate = false, e3.argument = null) : (e3.delegate = this.eat(l.star), e3.argument = this.parseMaybeAssign()), this.finishNode(e3, "YieldExpression");
    }, t2;
  })((function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.toAssignable = function(e3, t3, r3) {
      if (e3) switch (e3.type) {
        case "Identifier":
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
          break;
        case "ObjectExpression":
          e3.type = "ObjectPattern";
          for (var n2 = 0; n2 < e3.properties.length; n2++) {
            var i2 = e3.properties[n2], a2 = n2 === e3.properties.length - 1;
            this.toAssignableObjectExpressionProp(i2, t3, a2);
          }
          break;
        case "ObjectProperty":
          this.toAssignable(e3.value, t3, r3);
          break;
        case "SpreadElement":
          this.checkToRestConversion(e3), e3.type = "RestElement";
          var o2 = e3.argument;
          this.toAssignable(o2, t3, r3);
          break;
        case "ArrayExpression":
          e3.type = "ArrayPattern", this.toAssignableList(e3.elements, t3, r3);
          break;
        case "AssignmentExpression":
          "=" === e3.operator ? (e3.type = "AssignmentPattern", delete e3.operator) : this.raise(e3.left.end, "Only '=' operator can be used for specifying default value.");
          break;
        case "MemberExpression":
          if (!t3) break;
        default:
          var s2 = "Invalid left-hand side" + (r3 ? " in " + r3 : "expression");
          this.raise(e3.start, s2);
      }
      return e3;
    }, r2.toAssignableObjectExpressionProp = function(e3, t3, r3) {
      if ("ObjectMethod" === e3.type) {
        var n2 = "get" === e3.kind || "set" === e3.kind ? "Object pattern can't contain getter or setter" : "Object pattern can't contain methods";
        this.raise(e3.key.start, n2);
      } else "SpreadElement" !== e3.type || r3 ? this.toAssignable(e3, t3, "object destructuring pattern") : this.raise(e3.start, "The rest element has to be the last element when destructuring");
    }, r2.toAssignableList = function(e3, t3, r3) {
      var n2 = e3.length;
      if (n2) {
        var i2 = e3[n2 - 1];
        if (i2 && "RestElement" === i2.type) --n2;
        else if (i2 && "SpreadElement" === i2.type) {
          i2.type = "RestElement";
          var a2 = i2.argument;
          this.toAssignable(a2, t3, r3), -1 === ["Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern"].indexOf(a2.type) && this.unexpected(a2.start), --n2;
        }
      }
      for (var o2 = 0; o2 < n2; o2++) {
        var s2 = e3[o2];
        s2 && "SpreadElement" === s2.type && this.raise(s2.start, "The rest element has to be the last element when destructuring"), s2 && this.toAssignable(s2, t3, r3);
      }
      return e3;
    }, r2.toReferencedList = function(e3) {
      return e3;
    }, r2.parseSpread = function(e3, t3) {
      var r3 = this.startNode();
      return this.next(), r3.argument = this.parseMaybeAssign(false, e3, void 0, t3), this.finishNode(r3, "SpreadElement");
    }, r2.parseRest = function() {
      var e3 = this.startNode();
      return this.next(), e3.argument = this.parseBindingAtom(), this.finishNode(e3, "RestElement");
    }, r2.shouldAllowYieldIdentifier = function() {
      return this.match(l._yield) && !this.state.strict && !this.state.inGenerator;
    }, r2.parseBindingIdentifier = function() {
      return this.parseIdentifier(this.shouldAllowYieldIdentifier());
    }, r2.parseBindingAtom = function() {
      switch (this.state.type) {
        case l._yield:
        case l.name:
          return this.parseBindingIdentifier();
        case l.bracketL:
          var e3 = this.startNode();
          return this.next(), e3.elements = this.parseBindingList(l.bracketR, true), this.finishNode(e3, "ArrayPattern");
        case l.braceL:
          return this.parseObj(true);
        default:
          throw this.unexpected();
      }
    }, r2.parseBindingList = function(e3, t3, r3) {
      for (var n2 = [], i2 = true; !this.eat(e3); ) if (i2 ? i2 = false : this.expect(l.comma), t3 && this.match(l.comma)) n2.push(null);
      else {
        if (this.eat(e3)) break;
        if (this.match(l.ellipsis)) {
          n2.push(this.parseAssignableListItemTypes(this.parseRest())), this.expect(e3);
          break;
        }
        var a2 = [];
        for (this.match(l.at) && this.hasPlugin("decorators") && this.raise(this.state.start, "Stage 2 decorators cannot be used to decorate parameters"); this.match(l.at); ) a2.push(this.parseDecorator());
        n2.push(this.parseAssignableListItem(r3, a2));
      }
      return n2;
    }, r2.parseAssignableListItem = function(e3, t3) {
      var r3 = this.parseMaybeDefault();
      this.parseAssignableListItemTypes(r3);
      var n2 = this.parseMaybeDefault(r3.start, r3.loc.start, r3);
      return t3.length && (r3.decorators = t3), n2;
    }, r2.parseAssignableListItemTypes = function(e3) {
      return e3;
    }, r2.parseMaybeDefault = function(e3, t3, r3) {
      if (t3 = t3 || this.state.startLoc, e3 = e3 || this.state.start, r3 = r3 || this.parseBindingAtom(), !this.eat(l.eq)) return r3;
      var n2 = this.startNodeAt(e3, t3);
      return n2.left = r3, n2.right = this.parseMaybeAssign(), this.finishNode(n2, "AssignmentPattern");
    }, r2.checkLVal = function(e3, t3, r3, n2) {
      switch (e3.type) {
        case "Identifier":
          if (this.checkReservedWord(e3.name, e3.start, false, true), r3) {
            var i2 = "_" + e3.name;
            r3[i2] ? this.raise(e3.start, "Argument name clash in strict mode") : r3[i2] = true;
          }
          break;
        case "MemberExpression":
          t3 && this.raise(e3.start, "Binding member expression");
          break;
        case "ObjectPattern":
          for (var a2 = 0, o2 = e3.properties; a2 < o2.length; a2++) {
            var s2 = o2[a2];
            "ObjectProperty" === s2.type && (s2 = s2.value), this.checkLVal(s2, t3, r3, "object destructuring pattern");
          }
          break;
        case "ArrayPattern":
          for (var u2 = 0, l2 = e3.elements; u2 < l2.length; u2++) {
            var c2 = l2[u2];
            c2 && this.checkLVal(c2, t3, r3, "array destructuring pattern");
          }
          break;
        case "AssignmentPattern":
          this.checkLVal(e3.left, t3, r3, "assignment pattern");
          break;
        case "RestElement":
          this.checkLVal(e3.argument, t3, r3, "rest element");
          break;
        default:
          var f2 = (t3 ? "Binding invalid" : "Invalid") + " left-hand side" + (n2 ? " in " + n2 : "expression");
          this.raise(e3.start, f2);
      }
    }, r2.checkToRestConversion = function(e3) {
      -1 === ["Identifier", "MemberExpression"].indexOf(e3.argument.type) && this.raise(e3.argument.start, "Invalid rest operator's argument");
    }, t2;
  })((function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.startNode = function() {
      return new X(this, this.state.start, this.state.startLoc);
    }, r2.startNodeAt = function(e3, t3) {
      return new X(this, e3, t3);
    }, r2.startNodeAtNode = function(e3) {
      return this.startNodeAt(e3.start, e3.loc.start);
    }, r2.finishNode = function(e3, t3) {
      return this.finishNodeAt(e3, t3, this.state.lastTokEnd, this.state.lastTokEndLoc);
    }, r2.finishNodeAt = function(e3, t3, r3, n2) {
      return e3.type = t3, e3.end = r3, e3.loc.end = n2, this.options.ranges && (e3.range[1] = r3), this.processComment(e3), e3;
    }, r2.resetStartLocationFromNode = function(e3, t3) {
      e3.start = t3.start, e3.loc.start = t3.loc.start, this.options.ranges && (e3.range[0] = t3.range[0]);
    }, t2;
  })(J))), Z = [], ee = { kind: "loop" }, te = { kind: "switch" }, re = (function(e2) {
    function t2(t3, r2) {
      var n2;
      return t3 = (function(e3) {
        var t4 = {};
        for (var r3 in L) t4[r3] = e3 && null != e3[r3] ? e3[r3] : L[r3];
        return t4;
      })(t3), (n2 = e2.call(this, t3, r2) || this).options = t3, n2.inModule = "module" === n2.options.sourceType, n2.input = r2, n2.plugins = (function(e3) {
        for (var t4 = /* @__PURE__ */ Object.create(null), r3 = 0; r3 < e3.length; r3++) {
          var n3 = e3[r3], i2 = Array.isArray(n3) ? n3 : [n3, {}], a2 = i2[0], o2 = i2[1], s2 = void 0 === o2 ? {} : o2;
          t4[a2] || (t4[a2] = s2 || {});
        }
        return t4;
      })(n2.options.plugins), n2.filename = t3.sourceFilename, n2;
    }
    return i(t2, e2), t2.prototype.parse = function() {
      var e3 = this.startNode(), t3 = this.startNode();
      return this.nextToken(), this.parseTopLevel(e3, t3);
    }, t2;
  })((function(e2) {
    function t2() {
      return e2.apply(this, arguments) || this;
    }
    i(t2, e2);
    var r2 = t2.prototype;
    return r2.parseTopLevel = function(e3, t3) {
      return t3.sourceType = this.options.sourceType, t3.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(t3, true, true, l.eof), e3.program = this.finishNode(t3, "Program"), e3.comments = this.state.comments, this.options.tokens && (e3.tokens = this.state.tokens), this.finishNode(e3, "File");
    }, r2.stmtToDirective = function(e3) {
      var t3 = e3.expression, r3 = this.startNodeAt(t3.start, t3.loc.start), n2 = this.startNodeAt(e3.start, e3.loc.start), i2 = this.input.slice(t3.start, t3.end), a2 = r3.value = i2.slice(1, -1);
      return this.addExtra(r3, "raw", i2), this.addExtra(r3, "rawValue", a2), n2.value = this.finishNodeAt(r3, "DirectiveLiteral", t3.end, t3.loc.end), this.finishNodeAt(n2, "Directive", e3.end, e3.loc.end);
    }, r2.parseInterpreterDirective = function() {
      if (!this.match(l.interpreterDirective)) return null;
      var e3 = this.startNode();
      return e3.value = this.state.value, this.next(), this.finishNode(e3, "InterpreterDirective");
    }, r2.parseStatement = function(e3, t3) {
      return this.match(l.at) && this.parseDecorators(true), this.parseStatementContent(e3, t3);
    }, r2.parseStatementContent = function(e3, t3) {
      var r3 = this.state.type, n2 = this.startNode();
      switch (r3) {
        case l._break:
        case l._continue:
          return this.parseBreakContinueStatement(n2, r3.keyword);
        case l._debugger:
          return this.parseDebuggerStatement(n2);
        case l._do:
          return this.parseDoStatement(n2);
        case l._for:
          return this.parseForStatement(n2);
        case l._function:
          if (this.lookahead().type === l.dot) break;
          return e3 || this.unexpected(), this.parseFunctionStatement(n2);
        case l._class:
          return e3 || this.unexpected(), this.parseClass(n2, true);
        case l._if:
          return this.parseIfStatement(n2);
        case l._return:
          return this.parseReturnStatement(n2);
        case l._switch:
          return this.parseSwitchStatement(n2);
        case l._throw:
          return this.parseThrowStatement(n2);
        case l._try:
          return this.parseTryStatement(n2);
        case l._let:
        case l._const:
          e3 || this.unexpected();
        case l._var:
          return this.parseVarStatement(n2, r3);
        case l._while:
          return this.parseWhileStatement(n2);
        case l._with:
          return this.parseWithStatement(n2);
        case l.braceL:
          return this.parseBlock();
        case l.semi:
          return this.parseEmptyStatement(n2);
        case l._export:
        case l._import:
          var i2, a2 = this.lookahead();
          if (a2.type === l.parenL || a2.type === l.dot) break;
          return this.options.allowImportExportEverywhere || t3 || this.raise(this.state.start, "'import' and 'export' may only appear at the top level"), this.next(), r3 == l._import ? "ImportDeclaration" !== (i2 = this.parseImport(n2)).type || i2.importKind && "value" !== i2.importKind || (this.sawUnambiguousESM = true) : ("ExportNamedDeclaration" !== (i2 = this.parseExport(n2)).type || i2.exportKind && "value" !== i2.exportKind) && ("ExportAllDeclaration" !== i2.type || i2.exportKind && "value" !== i2.exportKind) && "ExportDefaultDeclaration" !== i2.type || (this.sawUnambiguousESM = true), this.assertModuleNodeAllowed(n2), i2;
        case l.name:
          if (this.isContextual("async")) {
            var o2 = this.state.clone();
            if (this.next(), this.match(l._function) && !this.canInsertSemicolon()) return this.expect(l._function), this.parseFunction(n2, true, false, true);
            this.state = o2;
          }
      }
      var s2 = this.state.value, u2 = this.parseExpression();
      return r3 === l.name && "Identifier" === u2.type && this.eat(l.colon) ? this.parseLabeledStatement(n2, s2, u2) : this.parseExpressionStatement(n2, u2);
    }, r2.assertModuleNodeAllowed = function(e3) {
      this.options.allowImportExportEverywhere || this.inModule || this.raise(e3.start, `'import' and 'export' may appear only with 'sourceType: "module"'`, { code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" });
    }, r2.takeDecorators = function(e3) {
      var t3 = this.state.decoratorStack[this.state.decoratorStack.length - 1];
      t3.length && (e3.decorators = t3, this.resetStartLocationFromNode(e3, t3[0]), this.state.decoratorStack[this.state.decoratorStack.length - 1] = []);
    }, r2.canHaveLeadingDecorator = function() {
      return this.match(l._class);
    }, r2.parseDecorators = function(e3) {
      for (var t3 = this.state.decoratorStack[this.state.decoratorStack.length - 1]; this.match(l.at); ) {
        var r3 = this.parseDecorator();
        t3.push(r3);
      }
      this.match(l._export) ? (e3 || this.unexpected(), this.hasPlugin("decorators") && !this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, "Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.")) : this.canHaveLeadingDecorator() || this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
    }, r2.parseDecorator = function() {
      this.expectOnePlugin(["decorators-legacy", "decorators"]);
      var e3 = this.startNode();
      if (this.next(), this.hasPlugin("decorators")) {
        this.state.decoratorStack.push([]);
        var t3, r3 = this.state.start, n2 = this.state.startLoc;
        if (this.eat(l.parenL)) t3 = this.parseExpression(), this.expect(l.parenR);
        else for (t3 = this.parseIdentifier(false); this.eat(l.dot); ) {
          var i2 = this.startNodeAt(r3, n2);
          i2.object = t3, i2.property = this.parseIdentifier(true), i2.computed = false, t3 = this.finishNode(i2, "MemberExpression");
        }
        if (this.eat(l.parenL)) {
          var a2 = this.startNodeAt(r3, n2);
          a2.callee = t3, a2.arguments = this.parseCallExpressionArguments(l.parenR, false), this.toReferencedList(a2.arguments), t3 = this.finishNode(a2, "CallExpression");
        }
        e3.expression = t3, this.state.decoratorStack.pop();
      } else e3.expression = this.parseMaybeAssign();
      return this.finishNode(e3, "Decorator");
    }, r2.parseBreakContinueStatement = function(e3, t3) {
      var r3, n2 = "break" === t3;
      for (this.next(), this.isLineTerminator() ? e3.label = null : this.match(l.name) ? (e3.label = this.parseIdentifier(), this.semicolon()) : this.unexpected(), r3 = 0; r3 < this.state.labels.length; ++r3) {
        var i2 = this.state.labels[r3];
        if (null == e3.label || i2.name === e3.label.name) {
          if (null != i2.kind && (n2 || "loop" === i2.kind)) break;
          if (e3.label && n2) break;
        }
      }
      return r3 === this.state.labels.length && this.raise(e3.start, "Unsyntactic " + t3), this.finishNode(e3, n2 ? "BreakStatement" : "ContinueStatement");
    }, r2.parseDebuggerStatement = function(e3) {
      return this.next(), this.semicolon(), this.finishNode(e3, "DebuggerStatement");
    }, r2.parseDoStatement = function(e3) {
      return this.next(), this.state.labels.push(ee), e3.body = this.parseStatement(false), this.state.labels.pop(), this.expect(l._while), e3.test = this.parseParenExpression(), this.eat(l.semi), this.finishNode(e3, "DoWhileStatement");
    }, r2.parseForStatement = function(e3) {
      this.next(), this.state.labels.push(ee);
      var t3 = false;
      if (this.state.inAsync && this.isContextual("await") && (this.expectPlugin("asyncGenerators"), t3 = true, this.next()), this.expect(l.parenL), this.match(l.semi)) return t3 && this.unexpected(), this.parseFor(e3, null);
      if (this.match(l._var) || this.match(l._let) || this.match(l._const)) {
        var r3 = this.startNode(), n2 = this.state.type;
        if (this.next(), this.parseVar(r3, true, n2), this.finishNode(r3, "VariableDeclaration"), (this.match(l._in) || this.isContextual("of")) && 1 === r3.declarations.length) {
          var i2 = r3.declarations[0], a2 = n2 === l._var && i2.init && "ObjectPattern" != i2.id.type && "ArrayPattern" != i2.id.type && !this.isContextual("of");
          if (this.state.strict && a2) this.raise(this.state.start, "for-in initializer in strict mode");
          else if (a2 || !i2.init) return this.parseForIn(e3, r3, t3);
        }
        return t3 && this.unexpected(), this.parseFor(e3, r3);
      }
      var o2 = { start: 0 }, s2 = this.parseExpression(true, o2);
      if (this.match(l._in) || this.isContextual("of")) {
        var u2 = this.isContextual("of") ? "for-of statement" : "for-in statement";
        return this.toAssignable(s2, void 0, u2), this.checkLVal(s2, void 0, void 0, u2), this.parseForIn(e3, s2, t3);
      }
      return o2.start && this.unexpected(o2.start), t3 && this.unexpected(), this.parseFor(e3, s2);
    }, r2.parseFunctionStatement = function(e3) {
      return this.next(), this.parseFunction(e3, true);
    }, r2.parseIfStatement = function(e3) {
      return this.next(), e3.test = this.parseParenExpression(), e3.consequent = this.parseStatement(false), e3.alternate = this.eat(l._else) ? this.parseStatement(false) : null, this.finishNode(e3, "IfStatement");
    }, r2.parseReturnStatement = function(e3) {
      return this.state.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.state.start, "'return' outside of function"), this.next(), this.isLineTerminator() ? e3.argument = null : (e3.argument = this.parseExpression(), this.semicolon()), this.finishNode(e3, "ReturnStatement");
    }, r2.parseSwitchStatement = function(e3) {
      this.next(), e3.discriminant = this.parseParenExpression();
      var t3, r3, n2 = e3.cases = [];
      for (this.expect(l.braceL), this.state.labels.push(te); !this.match(l.braceR); ) if (this.match(l._case) || this.match(l._default)) {
        var i2 = this.match(l._case);
        t3 && this.finishNode(t3, "SwitchCase"), n2.push(t3 = this.startNode()), t3.consequent = [], this.next(), i2 ? t3.test = this.parseExpression() : (r3 && this.raise(this.state.lastTokStart, "Multiple default clauses"), r3 = true, t3.test = null), this.expect(l.colon);
      } else t3 ? t3.consequent.push(this.parseStatement(true)) : this.unexpected();
      return t3 && this.finishNode(t3, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(e3, "SwitchStatement");
    }, r2.parseThrowStatement = function(e3) {
      return this.next(), V.test(this.input.slice(this.state.lastTokEnd, this.state.start)) && this.raise(this.state.lastTokEnd, "Illegal newline after throw"), e3.argument = this.parseExpression(), this.semicolon(), this.finishNode(e3, "ThrowStatement");
    }, r2.parseTryStatement = function(e3) {
      if (this.next(), e3.block = this.parseBlock(), e3.handler = null, this.match(l._catch)) {
        var t3 = this.startNode();
        if (this.next(), this.match(l.parenL)) {
          this.expect(l.parenL), t3.param = this.parseBindingAtom();
          var r3 = /* @__PURE__ */ Object.create(null);
          this.checkLVal(t3.param, true, r3, "catch clause"), this.expect(l.parenR);
        } else this.expectPlugin("optionalCatchBinding"), t3.param = null;
        t3.body = this.parseBlock(), e3.handler = this.finishNode(t3, "CatchClause");
      }
      return e3.guardedHandlers = Z, e3.finalizer = this.eat(l._finally) ? this.parseBlock() : null, e3.handler || e3.finalizer || this.raise(e3.start, "Missing catch or finally clause"), this.finishNode(e3, "TryStatement");
    }, r2.parseVarStatement = function(e3, t3) {
      return this.next(), this.parseVar(e3, false, t3), this.semicolon(), this.finishNode(e3, "VariableDeclaration");
    }, r2.parseWhileStatement = function(e3) {
      return this.next(), e3.test = this.parseParenExpression(), this.state.labels.push(ee), e3.body = this.parseStatement(false), this.state.labels.pop(), this.finishNode(e3, "WhileStatement");
    }, r2.parseWithStatement = function(e3) {
      return this.state.strict && this.raise(this.state.start, "'with' in strict mode"), this.next(), e3.object = this.parseParenExpression(), e3.body = this.parseStatement(false), this.finishNode(e3, "WithStatement");
    }, r2.parseEmptyStatement = function(e3) {
      return this.next(), this.finishNode(e3, "EmptyStatement");
    }, r2.parseLabeledStatement = function(e3, t3, r3) {
      for (var n2 = 0, i2 = this.state.labels; n2 < i2.length; n2++) {
        i2[n2].name === t3 && this.raise(r3.start, "Label '" + t3 + "' is already declared");
      }
      for (var a2 = this.state.type.isLoop ? "loop" : this.match(l._switch) ? "switch" : null, o2 = this.state.labels.length - 1; o2 >= 0; o2--) {
        var s2 = this.state.labels[o2];
        if (s2.statementStart !== e3.start) break;
        s2.statementStart = this.state.start, s2.kind = a2;
      }
      return this.state.labels.push({ name: t3, kind: a2, statementStart: this.state.start }), e3.body = this.parseStatement(true), ("ClassDeclaration" == e3.body.type || "VariableDeclaration" == e3.body.type && "var" !== e3.body.kind || "FunctionDeclaration" == e3.body.type && (this.state.strict || e3.body.generator || e3.body.async)) && this.raise(e3.body.start, "Invalid labeled declaration"), this.state.labels.pop(), e3.label = r3, this.finishNode(e3, "LabeledStatement");
    }, r2.parseExpressionStatement = function(e3, t3) {
      return e3.expression = t3, this.semicolon(), this.finishNode(e3, "ExpressionStatement");
    }, r2.parseBlock = function(e3) {
      var t3 = this.startNode();
      return this.expect(l.braceL), this.parseBlockBody(t3, e3, false, l.braceR), this.finishNode(t3, "BlockStatement");
    }, r2.isValidDirective = function(e3) {
      return "ExpressionStatement" === e3.type && "StringLiteral" === e3.expression.type && !e3.expression.extra.parenthesized;
    }, r2.parseBlockBody = function(e3, t3, r3, n2) {
      var i2 = e3.body = [], a2 = e3.directives = [];
      this.parseBlockOrModuleBlockBody(i2, t3 ? a2 : void 0, r3, n2);
    }, r2.parseBlockOrModuleBlockBody = function(e3, t3, r3, n2) {
      for (var i2, a2, o2 = false; !this.eat(n2); ) {
        o2 || !this.state.containsOctal || a2 || (a2 = this.state.octalPosition);
        var s2 = this.parseStatement(true, r3);
        if (t3 && !o2 && this.isValidDirective(s2)) {
          var u2 = this.stmtToDirective(s2);
          t3.push(u2), void 0 === i2 && "use strict" === u2.value.value && (i2 = this.state.strict, this.setStrict(true), a2 && this.raise(a2, "Octal literal in strict mode"));
        } else o2 = true, e3.push(s2);
      }
      false === i2 && this.setStrict(false);
    }, r2.parseFor = function(e3, t3) {
      return e3.init = t3, this.expect(l.semi), e3.test = this.match(l.semi) ? null : this.parseExpression(), this.expect(l.semi), e3.update = this.match(l.parenR) ? null : this.parseExpression(), this.expect(l.parenR), e3.body = this.parseStatement(false), this.state.labels.pop(), this.finishNode(e3, "ForStatement");
    }, r2.parseForIn = function(e3, t3, r3) {
      var n2 = this.match(l._in) ? "ForInStatement" : "ForOfStatement";
      return r3 ? this.eatContextual("of") : this.next(), "ForOfStatement" === n2 && (e3.await = !!r3), e3.left = t3, e3.right = this.parseExpression(), this.expect(l.parenR), e3.body = this.parseStatement(false), this.state.labels.pop(), this.finishNode(e3, n2);
    }, r2.parseVar = function(e3, t3, r3) {
      var n2 = e3.declarations = [];
      for (e3.kind = r3.keyword; ; ) {
        var i2 = this.startNode();
        if (this.parseVarHead(i2), this.eat(l.eq) ? i2.init = this.parseMaybeAssign(t3) : (r3 !== l._const || this.match(l._in) || this.isContextual("of") ? "Identifier" === i2.id.type || t3 && (this.match(l._in) || this.isContextual("of")) || this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value") : this.hasPlugin("typescript") || this.unexpected(), i2.init = null), n2.push(this.finishNode(i2, "VariableDeclarator")), !this.eat(l.comma)) break;
      }
      return e3;
    }, r2.parseVarHead = function(e3) {
      e3.id = this.parseBindingAtom(), this.checkLVal(e3.id, true, void 0, "variable declaration");
    }, r2.parseFunction = function(e3, t3, r3, n2, i2) {
      var a2 = this.state.inFunction, o2 = this.state.inMethod, s2 = this.state.inGenerator, u2 = this.state.inClassProperty;
      return this.state.inFunction = true, this.state.inMethod = false, this.state.inClassProperty = false, this.initFunction(e3, n2), this.match(l.star) && (e3.async && this.expectPlugin("asyncGenerators"), e3.generator = true, this.next()), !t3 || i2 || this.match(l.name) || this.match(l._yield) || this.unexpected(), t3 || (this.state.inGenerator = e3.generator), (this.match(l.name) || this.match(l._yield)) && (e3.id = this.parseBindingIdentifier()), t3 && (this.state.inGenerator = e3.generator), this.parseFunctionParams(e3), this.parseFunctionBodyAndFinish(e3, t3 ? "FunctionDeclaration" : "FunctionExpression", r3), this.state.inFunction = a2, this.state.inMethod = o2, this.state.inGenerator = s2, this.state.inClassProperty = u2, e3;
    }, r2.parseFunctionParams = function(e3, t3) {
      var r3 = this.state.inParameters;
      this.state.inParameters = true, this.expect(l.parenL), e3.params = this.parseBindingList(l.parenR, false, t3), this.state.inParameters = r3;
    }, r2.parseClass = function(e3, t3, r3) {
      return this.next(), this.takeDecorators(e3), this.parseClassId(e3, t3, r3), this.parseClassSuper(e3), this.parseClassBody(e3), this.finishNode(e3, t3 ? "ClassDeclaration" : "ClassExpression");
    }, r2.isClassProperty = function() {
      return this.match(l.eq) || this.match(l.semi) || this.match(l.braceR);
    }, r2.isClassMethod = function() {
      return this.match(l.parenL);
    }, r2.isNonstaticConstructor = function(e3) {
      return !(e3.computed || e3.static || "constructor" !== e3.key.name && "constructor" !== e3.key.value);
    }, r2.parseClassBody = function(e3) {
      var t3 = this.state.strict;
      this.state.strict = true, this.state.classLevel++;
      var r3 = { hadConstructor: false }, n2 = [], i2 = this.startNode();
      for (i2.body = [], this.expect(l.braceL); !this.eat(l.braceR); ) if (this.eat(l.semi)) n2.length > 0 && this.raise(this.state.lastTokEnd, "Decorators must not be followed by a semicolon");
      else if (this.match(l.at)) n2.push(this.parseDecorator());
      else {
        var a2 = this.startNode();
        n2.length && (a2.decorators = n2, this.resetStartLocationFromNode(a2, n2[0]), n2 = []), this.parseClassMember(i2, a2, r3), "constructor" === a2.kind && a2.decorators && a2.decorators.length > 0 && this.raise(a2.start, "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?");
      }
      n2.length && this.raise(this.state.start, "You have trailing decorators with no method"), e3.body = this.finishNode(i2, "ClassBody"), this.state.classLevel--, this.state.strict = t3;
    }, r2.parseClassMember = function(e3, t3, r3) {
      var n2 = false, i2 = this.state.containsEsc;
      if (this.match(l.name) && "static" === this.state.value) {
        var a2 = this.parseIdentifier(true);
        if (this.isClassMethod()) {
          var o2 = t3;
          return o2.kind = "method", o2.computed = false, o2.key = a2, o2.static = false, void this.pushClassMethod(e3, o2, false, false, false);
        }
        if (this.isClassProperty()) {
          var s2 = t3;
          return s2.computed = false, s2.key = a2, s2.static = false, void e3.body.push(this.parseClassProperty(s2));
        }
        if (i2) throw this.unexpected();
        n2 = true;
      }
      this.parseClassMemberWithIsStatic(e3, t3, r3, n2);
    }, r2.parseClassMemberWithIsStatic = function(e3, t3, r3, n2) {
      var i2 = t3, a2 = t3, o2 = t3, s2 = t3, u2 = i2, c2 = i2;
      if (t3.static = n2, this.eat(l.star)) return u2.kind = "method", this.parseClassPropertyName(u2), "PrivateName" === u2.key.type ? void this.pushClassPrivateMethod(e3, a2, true, false) : (this.isNonstaticConstructor(i2) && this.raise(i2.key.start, "Constructor can't be a generator"), void this.pushClassMethod(e3, i2, true, false, false));
      var f2 = this.parseClassPropertyName(t3), p2 = "PrivateName" === f2.type, d2 = "Identifier" === f2.type;
      if (this.parsePostMemberNameModifiers(c2), this.isClassMethod()) {
        if (u2.kind = "method", p2) return void this.pushClassPrivateMethod(e3, a2, false, false);
        var h2 = this.isNonstaticConstructor(i2);
        h2 && (i2.kind = "constructor", i2.decorators && this.raise(i2.start, "You can't attach decorators to a class constructor"), r3.hadConstructor && !this.hasPlugin("typescript") && this.raise(f2.start, "Duplicate constructor in the same class"), r3.hadConstructor = true), this.pushClassMethod(e3, i2, false, false, h2);
      } else if (this.isClassProperty()) p2 ? this.pushClassPrivateProperty(e3, s2) : this.pushClassProperty(e3, o2);
      else if (d2 && "async" === f2.name && !this.isLineTerminator()) {
        var v2 = this.match(l.star);
        v2 && (this.expectPlugin("asyncGenerators"), this.next()), u2.kind = "method", this.parseClassPropertyName(u2), "PrivateName" === u2.key.type ? this.pushClassPrivateMethod(e3, a2, v2, true) : (this.isNonstaticConstructor(i2) && this.raise(i2.key.start, "Constructor can't be an async function"), this.pushClassMethod(e3, i2, v2, true, false));
      } else !d2 || "get" !== f2.name && "set" !== f2.name || this.isLineTerminator() && this.match(l.star) ? this.isLineTerminator() ? p2 ? this.pushClassPrivateProperty(e3, s2) : this.pushClassProperty(e3, o2) : this.unexpected() : (u2.kind = f2.name, this.parseClassPropertyName(i2), "PrivateName" === u2.key.type ? this.pushClassPrivateMethod(e3, a2, false, false) : (this.isNonstaticConstructor(i2) && this.raise(i2.key.start, "Constructor can't have get/set modifier"), this.pushClassMethod(e3, i2, false, false, false)), this.checkGetterSetterParams(i2));
    }, r2.parseClassPropertyName = function(e3) {
      var t3 = this.parsePropertyName(e3);
      return e3.computed || !e3.static || "prototype" !== t3.name && "prototype" !== t3.value || this.raise(t3.start, "Classes may not have static property named prototype"), "PrivateName" === t3.type && "constructor" === t3.id.name && this.raise(t3.start, "Classes may not have a private field named '#constructor'"), t3;
    }, r2.pushClassProperty = function(e3, t3) {
      this.isNonstaticConstructor(t3) && this.raise(t3.key.start, "Classes may not have a non-static field named 'constructor'"), e3.body.push(this.parseClassProperty(t3));
    }, r2.pushClassPrivateProperty = function(e3, t3) {
      this.expectPlugin("classPrivateProperties", t3.key.start), e3.body.push(this.parseClassPrivateProperty(t3));
    }, r2.pushClassMethod = function(e3, t3, r3, n2, i2) {
      e3.body.push(this.parseMethod(t3, r3, n2, i2, "ClassMethod"));
    }, r2.pushClassPrivateMethod = function(e3, t3, r3, n2) {
      this.expectPlugin("classPrivateMethods", t3.key.start), e3.body.push(this.parseMethod(t3, r3, n2, false, "ClassPrivateMethod"));
    }, r2.parsePostMemberNameModifiers = function(e3) {
    }, r2.parseAccessModifier = function() {
    }, r2.parseClassPrivateProperty = function(e3) {
      var t3 = this.state.inMethod;
      return this.state.inMethod = false, this.state.inClassProperty = true, e3.value = this.eat(l.eq) ? this.parseMaybeAssign() : null, this.semicolon(), this.state.inClassProperty = false, this.state.inMethod = t3, this.finishNode(e3, "ClassPrivateProperty");
    }, r2.parseClassProperty = function(e3) {
      e3.typeAnnotation || this.expectPlugin("classProperties");
      var t3 = this.state.inMethod;
      return this.state.inMethod = false, this.state.inClassProperty = true, this.match(l.eq) ? (this.expectPlugin("classProperties"), this.next(), e3.value = this.parseMaybeAssign()) : e3.value = null, this.semicolon(), this.state.inClassProperty = false, this.state.inMethod = t3, this.finishNode(e3, "ClassProperty");
    }, r2.parseClassId = function(e3, t3, r3) {
      this.match(l.name) ? e3.id = this.parseIdentifier() : r3 || !t3 ? e3.id = null : this.unexpected(null, "A class name is required");
    }, r2.parseClassSuper = function(e3) {
      e3.superClass = this.eat(l._extends) ? this.parseExprSubscripts() : null;
    }, r2.parseExport = function(e3) {
      if (this.shouldParseExportStar()) {
        if (this.parseExportStar(e3), "ExportAllDeclaration" === e3.type) return e3;
      } else if (this.isExportDefaultSpecifier()) {
        this.expectPlugin("exportDefaultFrom");
        var t3 = this.startNode();
        t3.exported = this.parseIdentifier(true);
        var r3 = [this.finishNode(t3, "ExportDefaultSpecifier")];
        if (e3.specifiers = r3, this.match(l.comma) && this.lookahead().type === l.star) {
          this.expect(l.comma);
          var n2 = this.startNode();
          this.expect(l.star), this.expectContextual("as"), n2.exported = this.parseIdentifier(), r3.push(this.finishNode(n2, "ExportNamespaceSpecifier"));
        } else this.parseExportSpecifiersMaybe(e3);
        this.parseExportFrom(e3, true);
      } else {
        if (this.eat(l._default)) return e3.declaration = this.parseExportDefaultExpression(), this.checkExport(e3, true, true), this.finishNode(e3, "ExportDefaultDeclaration");
        if (this.shouldParseExportDeclaration()) {
          if (this.isContextual("async")) {
            var i2 = this.lookahead();
            i2.type !== l._function && this.unexpected(i2.start, 'Unexpected token, expected "function"');
          }
          e3.specifiers = [], e3.source = null, e3.declaration = this.parseExportDeclaration(e3);
        } else e3.declaration = null, e3.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(e3);
      }
      return this.checkExport(e3, true), this.finishNode(e3, "ExportNamedDeclaration");
    }, r2.parseExportDefaultExpression = function() {
      var e3 = this.startNode();
      if (this.eat(l._function)) return this.parseFunction(e3, true, false, false, true);
      if (this.isContextual("async") && this.lookahead().type === l._function) return this.eatContextual("async"), this.eat(l._function), this.parseFunction(e3, true, false, true, true);
      if (this.match(l._class)) return this.parseClass(e3, true, true);
      if (this.match(l.at)) return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") && this.unexpected(this.state.start, "Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax"), this.parseDecorators(false), this.parseClass(e3, true, true);
      if (this.match(l._let) || this.match(l._const) || this.match(l._var)) return this.raise(this.state.start, "Only expressions, functions or classes are allowed as the `default` export.");
      var t3 = this.parseMaybeAssign();
      return this.semicolon(), t3;
    }, r2.parseExportDeclaration = function(e3) {
      return this.parseStatement(true);
    }, r2.isExportDefaultSpecifier = function() {
      if (this.match(l.name)) return "async" !== this.state.value;
      if (!this.match(l._default)) return false;
      var e3 = this.lookahead();
      return e3.type === l.comma || e3.type === l.name && "from" === e3.value;
    }, r2.parseExportSpecifiersMaybe = function(e3) {
      this.eat(l.comma) && (e3.specifiers = e3.specifiers.concat(this.parseExportSpecifiers()));
    }, r2.parseExportFrom = function(e3, t3) {
      this.eatContextual("from") ? (e3.source = this.match(l.string) ? this.parseExprAtom() : this.unexpected(), this.checkExport(e3)) : t3 ? this.unexpected() : e3.source = null, this.semicolon();
    }, r2.shouldParseExportStar = function() {
      return this.match(l.star);
    }, r2.parseExportStar = function(e3) {
      this.expect(l.star), this.isContextual("as") ? this.parseExportNamespace(e3) : (this.parseExportFrom(e3, true), this.finishNode(e3, "ExportAllDeclaration"));
    }, r2.parseExportNamespace = function(e3) {
      this.expectPlugin("exportNamespaceFrom");
      var t3 = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);
      this.next(), t3.exported = this.parseIdentifier(true), e3.specifiers = [this.finishNode(t3, "ExportNamespaceSpecifier")], this.parseExportSpecifiersMaybe(e3), this.parseExportFrom(e3, true);
    }, r2.shouldParseExportDeclaration = function() {
      if (this.match(l.at) && (this.expectOnePlugin(["decorators", "decorators-legacy"]), this.hasPlugin("decorators"))) {
        if (!this.getPluginOption("decorators", "decoratorsBeforeExport")) return true;
        this.unexpected(this.state.start, "Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax");
      }
      return "var" === this.state.type.keyword || "const" === this.state.type.keyword || "let" === this.state.type.keyword || "function" === this.state.type.keyword || "class" === this.state.type.keyword || this.isContextual("async");
    }, r2.checkExport = function(e3, t3, r3) {
      if (t3) {
        if (r3) this.checkDuplicateExports(e3, "default");
        else if (e3.specifiers && e3.specifiers.length) for (var n2 = 0, i2 = e3.specifiers; n2 < i2.length; n2++) {
          var a2 = i2[n2];
          this.checkDuplicateExports(a2, a2.exported.name);
        }
        else if (e3.declaration) {
          if ("FunctionDeclaration" === e3.declaration.type || "ClassDeclaration" === e3.declaration.type) {
            var o2 = e3.declaration.id;
            if (!o2) throw new Error("Assertion failure");
            this.checkDuplicateExports(e3, o2.name);
          } else if ("VariableDeclaration" === e3.declaration.type) for (var s2 = 0, u2 = e3.declaration.declarations; s2 < u2.length; s2++) {
            var l2 = u2[s2];
            this.checkDeclaration(l2.id);
          }
        }
      }
      if (this.state.decoratorStack[this.state.decoratorStack.length - 1].length) {
        var c2 = e3.declaration && ("ClassDeclaration" === e3.declaration.type || "ClassExpression" === e3.declaration.type);
        if (!e3.declaration || !c2) throw this.raise(e3.start, "You can only use decorators on an export when exporting a class");
        this.takeDecorators(e3.declaration);
      }
    }, r2.checkDeclaration = function(e3) {
      if ("ObjectPattern" === e3.type) for (var t3 = 0, r3 = e3.properties; t3 < r3.length; t3++) {
        var n2 = r3[t3];
        this.checkDeclaration(n2);
      }
      else if ("ArrayPattern" === e3.type) for (var i2 = 0, a2 = e3.elements; i2 < a2.length; i2++) {
        var o2 = a2[i2];
        o2 && this.checkDeclaration(o2);
      }
      else "ObjectProperty" === e3.type ? this.checkDeclaration(e3.value) : "RestElement" === e3.type ? this.checkDeclaration(e3.argument) : "Identifier" === e3.type && this.checkDuplicateExports(e3, e3.name);
    }, r2.checkDuplicateExports = function(e3, t3) {
      this.state.exportedIdentifiers.indexOf(t3) > -1 && this.raiseDuplicateExportError(e3, t3), this.state.exportedIdentifiers.push(t3);
    }, r2.raiseDuplicateExportError = function(e3, t3) {
      throw this.raise(e3.start, "default" === t3 ? "Only one default export allowed per module." : "`" + t3 + "` has already been exported. Exported identifiers must be unique.");
    }, r2.parseExportSpecifiers = function() {
      var e3, t3 = [], r3 = true;
      for (this.expect(l.braceL); !this.eat(l.braceR); ) {
        if (r3) r3 = false;
        else if (this.expect(l.comma), this.eat(l.braceR)) break;
        var n2 = this.match(l._default);
        n2 && !e3 && (e3 = true);
        var i2 = this.startNode();
        i2.local = this.parseIdentifier(n2), i2.exported = this.eatContextual("as") ? this.parseIdentifier(true) : i2.local.__clone(), t3.push(this.finishNode(i2, "ExportSpecifier"));
      }
      return e3 && !this.isContextual("from") && this.unexpected(), t3;
    }, r2.parseImport = function(e3) {
      return this.match(l.string) ? (e3.specifiers = [], e3.source = this.parseExprAtom()) : (e3.specifiers = [], this.parseImportSpecifiers(e3), this.expectContextual("from"), e3.source = this.match(l.string) ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(e3, "ImportDeclaration");
    }, r2.shouldParseDefaultImport = function(e3) {
      return this.match(l.name);
    }, r2.parseImportSpecifierLocal = function(e3, t3, r3, n2) {
      t3.local = this.parseIdentifier(), this.checkLVal(t3.local, true, void 0, n2), e3.specifiers.push(this.finishNode(t3, r3));
    }, r2.parseImportSpecifiers = function(e3) {
      var t3 = true;
      if (!this.shouldParseDefaultImport(e3) || (this.parseImportSpecifierLocal(e3, this.startNode(), "ImportDefaultSpecifier", "default import specifier"), this.eat(l.comma))) {
        if (this.match(l.star)) {
          var r3 = this.startNode();
          return this.next(), this.expectContextual("as"), void this.parseImportSpecifierLocal(e3, r3, "ImportNamespaceSpecifier", "import namespace specifier");
        }
        for (this.expect(l.braceL); !this.eat(l.braceR); ) {
          if (t3) t3 = false;
          else if (this.eat(l.colon) && this.unexpected(null, "ES2015 named imports do not destructure. Use another statement for destructuring after the import."), this.expect(l.comma), this.eat(l.braceR)) break;
          this.parseImportSpecifier(e3);
        }
      }
    }, r2.parseImportSpecifier = function(e3) {
      var t3 = this.startNode();
      t3.imported = this.parseIdentifier(true), this.eatContextual("as") ? t3.local = this.parseIdentifier() : (this.checkReservedWord(t3.imported.name, t3.start, true, true), t3.local = t3.imported.__clone()), this.checkLVal(t3.local, true, void 0, "import specifier"), e3.specifiers.push(this.finishNode(t3, "ImportSpecifier"));
    }, t2;
  })(Q));
  function ne(e2) {
    if (null == e2) throw new Error("Unexpected " + e2 + " value.");
    return e2;
  }
  function ie(e2) {
    if (!e2) throw new Error("Assert fail");
  }
  function ae(e2, t2) {
    return e2.some(function(e3) {
      return Array.isArray(e3) ? e3[0] === t2 : e3 === t2;
    });
  }
  function oe(e2, t2, r2) {
    var n2 = e2.find(function(e3) {
      return Array.isArray(e3) ? e3[0] === t2 : e3 === t2;
    });
    return n2 && Array.isArray(n2) ? n2[1][r2] : null;
  }
  var se = ["minimal"];
  var ue = ["estree", "jsx", "flow", "typescript"], le = { estree: function(e2) {
    return (function(e3) {
      function t2() {
        return e3.apply(this, arguments) || this;
      }
      i(t2, e3);
      var r2 = t2.prototype;
      return r2.estreeParseRegExpLiteral = function(e4) {
        var t3 = e4.pattern, r3 = e4.flags, n2 = null;
        try {
          n2 = new RegExp(t3, r3);
        } catch (e5) {
        }
        var i2 = this.estreeParseLiteral(n2);
        return i2.regex = { pattern: t3, flags: r3 }, i2;
      }, r2.estreeParseLiteral = function(e4) {
        return this.parseLiteral(e4, "Literal");
      }, r2.directiveToStmt = function(e4) {
        var t3 = e4.value, r3 = this.startNodeAt(e4.start, e4.loc.start), n2 = this.startNodeAt(t3.start, t3.loc.start);
        return n2.value = t3.value, n2.raw = t3.extra.raw, r3.expression = this.finishNodeAt(n2, "Literal", t3.end, t3.loc.end), r3.directive = t3.extra.raw.slice(1, -1), this.finishNodeAt(r3, "ExpressionStatement", e4.end, e4.loc.end);
      }, r2.initFunction = function(t3, r3) {
        e3.prototype.initFunction.call(this, t3, r3), t3.expression = false;
      }, r2.checkDeclaration = function(t3) {
        f(t3) ? this.checkDeclaration(t3.value) : e3.prototype.checkDeclaration.call(this, t3);
      }, r2.checkGetterSetterParams = function(e4) {
        var t3 = e4, r3 = "get" === t3.kind ? 0 : 1, n2 = t3.start;
        t3.value.params.length !== r3 && ("get" === t3.kind ? this.raise(n2, "getter must not have any formal parameters") : this.raise(n2, "setter must have exactly one formal parameter")), "set" === t3.kind && "RestElement" === t3.value.params[0].type && this.raise(n2, "setter function argument must not be a rest parameter");
      }, r2.checkLVal = function(t3, r3, n2, i2) {
        var a2 = this;
        switch (t3.type) {
          case "ObjectPattern":
            t3.properties.forEach(function(e4) {
              a2.checkLVal("Property" === e4.type ? e4.value : e4, r3, n2, "object destructuring pattern");
            });
            break;
          default:
            e3.prototype.checkLVal.call(this, t3, r3, n2, i2);
        }
      }, r2.checkPropClash = function(e4, t3) {
        if (!e4.computed && f(e4)) {
          var r3 = e4.key;
          "__proto__" === ("Identifier" === r3.type ? r3.name : String(r3.value)) && (t3.proto && this.raise(r3.start, "Redefinition of __proto__ property"), t3.proto = true);
        }
      }, r2.isStrictBody = function(e4) {
        if ("BlockStatement" === e4.body.type && e4.body.body.length > 0) for (var t3 = 0, r3 = e4.body.body; t3 < r3.length; t3++) {
          var n2 = r3[t3];
          if ("ExpressionStatement" !== n2.type || "Literal" !== n2.expression.type) break;
          if ("use strict" === n2.expression.value) return true;
        }
        return false;
      }, r2.isValidDirective = function(e4) {
        return !("ExpressionStatement" !== e4.type || "Literal" !== e4.expression.type || "string" != typeof e4.expression.value || e4.expression.extra && e4.expression.extra.parenthesized);
      }, r2.stmtToDirective = function(t3) {
        var r3 = e3.prototype.stmtToDirective.call(this, t3), n2 = t3.expression.value;
        return r3.value.value = n2, r3;
      }, r2.parseBlockBody = function(t3, r3, n2, i2) {
        var a2 = this;
        e3.prototype.parseBlockBody.call(this, t3, r3, n2, i2);
        var o2 = t3.directives.map(function(e4) {
          return a2.directiveToStmt(e4);
        });
        t3.body = o2.concat(t3.body), delete t3.directives;
      }, r2.pushClassMethod = function(e4, t3, r3, n2, i2) {
        this.parseMethod(t3, r3, n2, i2, "MethodDefinition"), t3.typeParameters && (t3.value.typeParameters = t3.typeParameters, delete t3.typeParameters), e4.body.push(t3);
      }, r2.parseExprAtom = function(t3) {
        switch (this.state.type) {
          case l.regexp:
            return this.estreeParseRegExpLiteral(this.state.value);
          case l.num:
          case l.string:
            return this.estreeParseLiteral(this.state.value);
          case l._null:
            return this.estreeParseLiteral(null);
          case l._true:
            return this.estreeParseLiteral(true);
          case l._false:
            return this.estreeParseLiteral(false);
          default:
            return e3.prototype.parseExprAtom.call(this, t3);
        }
      }, r2.parseLiteral = function(t3, r3, n2, i2) {
        var a2 = e3.prototype.parseLiteral.call(this, t3, r3, n2, i2);
        return a2.raw = a2.extra.raw, delete a2.extra, a2;
      }, r2.parseFunctionBody = function(t3, r3) {
        e3.prototype.parseFunctionBody.call(this, t3, r3), t3.expression = "BlockStatement" !== t3.body.type;
      }, r2.parseMethod = function(t3, r3, n2, i2, a2) {
        var o2 = this.startNode();
        return o2.kind = t3.kind, delete (o2 = e3.prototype.parseMethod.call(this, o2, r3, n2, i2, "FunctionExpression")).kind, t3.value = o2, this.finishNode(t3, a2);
      }, r2.parseObjectMethod = function(t3, r3, n2, i2, a2) {
        var o2 = e3.prototype.parseObjectMethod.call(this, t3, r3, n2, i2, a2);
        return o2 && (o2.type = "Property", "method" === o2.kind && (o2.kind = "init"), o2.shorthand = false), o2;
      }, r2.parseObjectProperty = function(t3, r3, n2, i2, a2) {
        var o2 = e3.prototype.parseObjectProperty.call(this, t3, r3, n2, i2, a2);
        return o2 && (o2.kind = "init", o2.type = "Property"), o2;
      }, r2.toAssignable = function(t3, r3, n2) {
        return f(t3) ? (this.toAssignable(t3.value, r3, n2), t3) : e3.prototype.toAssignable.call(this, t3, r3, n2);
      }, r2.toAssignableObjectExpressionProp = function(t3, r3, n2) {
        "get" === t3.kind || "set" === t3.kind ? this.raise(t3.key.start, "Object pattern can't contain getter or setter") : t3.method ? this.raise(t3.key.start, "Object pattern can't contain methods") : e3.prototype.toAssignableObjectExpressionProp.call(this, t3, r3, n2);
      }, t2;
    })(e2);
  }, jsx: function(e2) {
    return (function(e3) {
      function t2() {
        return e3.apply(this, arguments) || this;
      }
      i(t2, e3);
      var r2 = t2.prototype;
      return r2.jsxReadToken = function() {
        for (var e4 = "", t3 = this.state.pos; ; ) {
          this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated JSX contents");
          var r3 = this.input.charCodeAt(this.state.pos);
          switch (r3) {
            case 60:
            case 123:
              return this.state.pos === this.state.start ? 60 === r3 && this.state.exprAllowed ? (++this.state.pos, this.finishToken(l.jsxTagStart)) : this.getTokenFromCode(r3) : (e4 += this.input.slice(t3, this.state.pos), this.finishToken(l.jsxText, e4));
            case 38:
              e4 += this.input.slice(t3, this.state.pos), e4 += this.jsxReadEntity(), t3 = this.state.pos;
              break;
            default:
              N(r3) ? (e4 += this.input.slice(t3, this.state.pos), e4 += this.jsxReadNewLine(true), t3 = this.state.pos) : ++this.state.pos;
          }
        }
      }, r2.jsxReadNewLine = function(e4) {
        var t3, r3 = this.input.charCodeAt(this.state.pos);
        return ++this.state.pos, 13 === r3 && 10 === this.input.charCodeAt(this.state.pos) ? (++this.state.pos, t3 = e4 ? "\n" : "\r\n") : t3 = String.fromCharCode(r3), ++this.state.curLine, this.state.lineStart = this.state.pos, t3;
      }, r2.jsxReadString = function(e4) {
        for (var t3 = "", r3 = ++this.state.pos; ; ) {
          this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");
          var n2 = this.input.charCodeAt(this.state.pos);
          if (n2 === e4) break;
          38 === n2 ? (t3 += this.input.slice(r3, this.state.pos), t3 += this.jsxReadEntity(), r3 = this.state.pos) : N(n2) ? (t3 += this.input.slice(r3, this.state.pos), t3 += this.jsxReadNewLine(false), r3 = this.state.pos) : ++this.state.pos;
        }
        return t3 += this.input.slice(r3, this.state.pos++), this.finishToken(l.string, t3);
      }, r2.jsxReadEntity = function() {
        for (var e4, t3 = "", r3 = 0, n2 = this.input[this.state.pos], i2 = ++this.state.pos; this.state.pos < this.input.length && r3++ < 10; ) {
          if (";" === (n2 = this.input[this.state.pos++])) {
            "#" === t3[0] ? "x" === t3[1] ? (t3 = t3.substr(2), F.test(t3) && (e4 = String.fromCodePoint(parseInt(t3, 16)))) : (t3 = t3.substr(1), R.test(t3) && (e4 = String.fromCodePoint(parseInt(t3, 10)))) : e4 = _[t3];
            break;
          }
          t3 += n2;
        }
        return e4 || (this.state.pos = i2, "&");
      }, r2.jsxReadWord = function() {
        var e4, t3 = this.state.pos;
        do {
          e4 = this.input.charCodeAt(++this.state.pos);
        } while (T(e4) || 45 === e4);
        return this.finishToken(l.jsxName, this.input.slice(t3, this.state.pos));
      }, r2.jsxParseIdentifier = function() {
        var e4 = this.startNode();
        return this.match(l.jsxName) ? e4.name = this.state.value : this.state.type.keyword ? e4.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(e4, "JSXIdentifier");
      }, r2.jsxParseNamespacedName = function() {
        var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.jsxParseIdentifier();
        if (!this.eat(l.colon)) return r3;
        var n2 = this.startNodeAt(e4, t3);
        return n2.namespace = r3, n2.name = this.jsxParseIdentifier(), this.finishNode(n2, "JSXNamespacedName");
      }, r2.jsxParseElementName = function() {
        for (var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.jsxParseNamespacedName(); this.eat(l.dot); ) {
          var n2 = this.startNodeAt(e4, t3);
          n2.object = r3, n2.property = this.jsxParseIdentifier(), r3 = this.finishNode(n2, "JSXMemberExpression");
        }
        return r3;
      }, r2.jsxParseAttributeValue = function() {
        var e4;
        switch (this.state.type) {
          case l.braceL:
            if ("JSXEmptyExpression" === (e4 = this.jsxParseExpressionContainer()).expression.type) throw this.raise(e4.start, "JSX attributes must only be assigned a non-empty expression");
            return e4;
          case l.jsxTagStart:
          case l.string:
            return this.parseExprAtom();
          default:
            throw this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");
        }
      }, r2.jsxParseEmptyExpression = function() {
        var e4 = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);
        return this.finishNodeAt(e4, "JSXEmptyExpression", this.state.start, this.state.startLoc);
      }, r2.jsxParseSpreadChild = function() {
        var e4 = this.startNode();
        return this.expect(l.braceL), this.expect(l.ellipsis), e4.expression = this.parseExpression(), this.expect(l.braceR), this.finishNode(e4, "JSXSpreadChild");
      }, r2.jsxParseExpressionContainer = function() {
        var e4 = this.startNode();
        return this.next(), this.match(l.braceR) ? e4.expression = this.jsxParseEmptyExpression() : e4.expression = this.parseExpression(), this.expect(l.braceR), this.finishNode(e4, "JSXExpressionContainer");
      }, r2.jsxParseAttribute = function() {
        var e4 = this.startNode();
        return this.eat(l.braceL) ? (this.expect(l.ellipsis), e4.argument = this.parseMaybeAssign(), this.expect(l.braceR), this.finishNode(e4, "JSXSpreadAttribute")) : (e4.name = this.jsxParseNamespacedName(), e4.value = this.eat(l.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(e4, "JSXAttribute"));
      }, r2.jsxParseOpeningElementAt = function(e4, t3) {
        var r3 = this.startNodeAt(e4, t3);
        return this.match(l.jsxTagEnd) ? (this.expect(l.jsxTagEnd), this.finishNode(r3, "JSXOpeningFragment")) : (r3.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(r3));
      }, r2.jsxParseOpeningElementAfterName = function(e4) {
        for (var t3 = []; !this.match(l.slash) && !this.match(l.jsxTagEnd); ) t3.push(this.jsxParseAttribute());
        return e4.attributes = t3, e4.selfClosing = this.eat(l.slash), this.expect(l.jsxTagEnd), this.finishNode(e4, "JSXOpeningElement");
      }, r2.jsxParseClosingElementAt = function(e4, t3) {
        var r3 = this.startNodeAt(e4, t3);
        return this.match(l.jsxTagEnd) ? (this.expect(l.jsxTagEnd), this.finishNode(r3, "JSXClosingFragment")) : (r3.name = this.jsxParseElementName(), this.expect(l.jsxTagEnd), this.finishNode(r3, "JSXClosingElement"));
      }, r2.jsxParseElementAt = function(e4, t3) {
        var r3 = this.startNodeAt(e4, t3), n2 = [], i2 = this.jsxParseOpeningElementAt(e4, t3), a2 = null;
        if (!i2.selfClosing) {
          e: for (; ; ) switch (this.state.type) {
            case l.jsxTagStart:
              if (e4 = this.state.start, t3 = this.state.startLoc, this.next(), this.eat(l.slash)) {
                a2 = this.jsxParseClosingElementAt(e4, t3);
                break e;
              }
              n2.push(this.jsxParseElementAt(e4, t3));
              break;
            case l.jsxText:
              n2.push(this.parseExprAtom());
              break;
            case l.braceL:
              this.lookahead().type === l.ellipsis ? n2.push(this.jsxParseSpreadChild()) : n2.push(this.jsxParseExpressionContainer());
              break;
            default:
              throw this.unexpected();
          }
          M(i2) && !M(a2) ? this.raise(a2.start, "Expected corresponding JSX closing tag for <>") : !M(i2) && M(a2) ? this.raise(a2.start, "Expected corresponding JSX closing tag for <" + B(i2.name) + ">") : M(i2) || M(a2) || B(a2.name) !== B(i2.name) && this.raise(a2.start, "Expected corresponding JSX closing tag for <" + B(i2.name) + ">");
        }
        return M(i2) ? (r3.openingFragment = i2, r3.closingFragment = a2) : (r3.openingElement = i2, r3.closingElement = a2), r3.children = n2, this.match(l.relational) && "<" === this.state.value && this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"), M(i2) ? this.finishNode(r3, "JSXFragment") : this.finishNode(r3, "JSXElement");
      }, r2.jsxParseElement = function() {
        var e4 = this.state.start, t3 = this.state.startLoc;
        return this.next(), this.jsxParseElementAt(e4, t3);
      }, r2.parseExprAtom = function(t3) {
        return this.match(l.jsxText) ? this.parseLiteral(this.state.value, "JSXText") : this.match(l.jsxTagStart) ? this.jsxParseElement() : e3.prototype.parseExprAtom.call(this, t3);
      }, r2.readToken = function(t3) {
        if (this.state.inPropertyName) return e3.prototype.readToken.call(this, t3);
        var r3 = this.curContext();
        if (r3 === j.j_expr) return this.jsxReadToken();
        if (r3 === j.j_oTag || r3 === j.j_cTag) {
          if (S(t3)) return this.jsxReadWord();
          if (62 === t3) return ++this.state.pos, this.finishToken(l.jsxTagEnd);
          if ((34 === t3 || 39 === t3) && r3 === j.j_oTag) return this.jsxReadString(t3);
        }
        return 60 === t3 && this.state.exprAllowed ? (++this.state.pos, this.finishToken(l.jsxTagStart)) : e3.prototype.readToken.call(this, t3);
      }, r2.updateContext = function(t3) {
        if (this.match(l.braceL)) {
          var r3 = this.curContext();
          r3 === j.j_oTag ? this.state.context.push(j.braceExpression) : r3 === j.j_expr ? this.state.context.push(j.templateQuasi) : e3.prototype.updateContext.call(this, t3), this.state.exprAllowed = true;
        } else {
          if (!this.match(l.slash) || t3 !== l.jsxTagStart) return e3.prototype.updateContext.call(this, t3);
          this.state.context.length -= 2, this.state.context.push(j.j_cTag), this.state.exprAllowed = false;
        }
      }, t2;
    })(e2);
  }, flow: function(e2) {
    return (function(e3) {
      function t2(t3, r3) {
        var n2;
        return (n2 = e3.call(this, t3, r3) || this).flowPragma = void 0, n2;
      }
      i(t2, e3);
      var r2 = t2.prototype;
      return r2.shouldParseTypes = function() {
        return this.getPluginOption("flow", "all") || "flow" === this.flowPragma;
      }, r2.addComment = function(t3) {
        if (void 0 === this.flowPragma) {
          var r3 = x.exec(t3.value);
          if (r3) if ("flow" === r3[1]) this.flowPragma = "flow";
          else {
            if ("noflow" !== r3[1]) throw new Error("Unexpected flow pragma");
            this.flowPragma = "noflow";
          }
          else this.flowPragma = null;
        }
        return e3.prototype.addComment.call(this, t3);
      }, r2.flowParseTypeInitialiser = function(e4) {
        var t3 = this.state.inType;
        this.state.inType = true, this.expect(e4 || l.colon);
        var r3 = this.flowParseType();
        return this.state.inType = t3, r3;
      }, r2.flowParsePredicate = function() {
        var e4 = this.startNode(), t3 = this.state.startLoc, r3 = this.state.start;
        this.expect(l.modulo);
        var n2 = this.state.startLoc;
        return this.expectContextual("checks"), t3.line === n2.line && t3.column === n2.column - 1 || this.raise(r3, "Spaces between \xB4%\xB4 and \xB4checks\xB4 are not allowed here."), this.eat(l.parenL) ? (e4.value = this.parseExpression(), this.expect(l.parenR), this.finishNode(e4, "DeclaredPredicate")) : this.finishNode(e4, "InferredPredicate");
      }, r2.flowParseTypeAndPredicateInitialiser = function() {
        var e4 = this.state.inType;
        this.state.inType = true, this.expect(l.colon);
        var t3 = null, r3 = null;
        return this.match(l.modulo) ? (this.state.inType = e4, r3 = this.flowParsePredicate()) : (t3 = this.flowParseType(), this.state.inType = e4, this.match(l.modulo) && (r3 = this.flowParsePredicate())), [t3, r3];
      }, r2.flowParseDeclareClass = function(e4) {
        return this.next(), this.flowParseInterfaceish(e4, true), this.finishNode(e4, "DeclareClass");
      }, r2.flowParseDeclareFunction = function(e4) {
        this.next();
        var t3 = e4.id = this.parseIdentifier(), r3 = this.startNode(), n2 = this.startNode();
        this.isRelational("<") ? r3.typeParameters = this.flowParseTypeParameterDeclaration() : r3.typeParameters = null, this.expect(l.parenL);
        var i2 = this.flowParseFunctionTypeParams();
        r3.params = i2.params, r3.rest = i2.rest, this.expect(l.parenR);
        var a2 = this.flowParseTypeAndPredicateInitialiser();
        return r3.returnType = a2[0], e4.predicate = a2[1], n2.typeAnnotation = this.finishNode(r3, "FunctionTypeAnnotation"), t3.typeAnnotation = this.finishNode(n2, "TypeAnnotation"), this.finishNode(t3, t3.type), this.semicolon(), this.finishNode(e4, "DeclareFunction");
      }, r2.flowParseDeclare = function(e4, t3) {
        if (this.match(l._class)) return this.flowParseDeclareClass(e4);
        if (this.match(l._function)) return this.flowParseDeclareFunction(e4);
        if (this.match(l._var)) return this.flowParseDeclareVariable(e4);
        if (this.isContextual("module")) return this.lookahead().type === l.dot ? this.flowParseDeclareModuleExports(e4) : (t3 && this.unexpected(null, "`declare module` cannot be used inside another `declare module`"), this.flowParseDeclareModule(e4));
        if (this.isContextual("type")) return this.flowParseDeclareTypeAlias(e4);
        if (this.isContextual("opaque")) return this.flowParseDeclareOpaqueType(e4);
        if (this.isContextual("interface")) return this.flowParseDeclareInterface(e4);
        if (this.match(l._export)) return this.flowParseDeclareExportDeclaration(e4, t3);
        throw this.unexpected();
      }, r2.flowParseDeclareVariable = function(e4) {
        return this.next(), e4.id = this.flowParseTypeAnnotatableIdentifier(true), this.semicolon(), this.finishNode(e4, "DeclareVariable");
      }, r2.flowParseDeclareModule = function(e4) {
        var t3 = this;
        this.next(), this.match(l.string) ? e4.id = this.parseExprAtom() : e4.id = this.parseIdentifier();
        var r3 = e4.body = this.startNode(), n2 = r3.body = [];
        for (this.expect(l.braceL); !this.match(l.braceR); ) {
          var i2 = this.startNode();
          if (this.match(l._import)) {
            var a2 = this.lookahead();
            "type" !== a2.value && "typeof" !== a2.value && this.unexpected(null, "Imports within a `declare module` body must always be `import type` or `import typeof`"), this.next(), this.parseImport(i2);
          } else this.expectContextual("declare", "Only declares and type imports are allowed inside declare module"), i2 = this.flowParseDeclare(i2, true);
          n2.push(i2);
        }
        this.expect(l.braceR), this.finishNode(r3, "BlockStatement");
        var o2 = null, s2 = false, u2 = "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module";
        return n2.forEach(function(e5) {
          !(function(e6) {
            return "DeclareExportAllDeclaration" === e6.type || "DeclareExportDeclaration" === e6.type && (!e6.declaration || "TypeAlias" !== e6.declaration.type && "InterfaceDeclaration" !== e6.declaration.type);
          })(e5) ? "DeclareModuleExports" === e5.type && (s2 && t3.unexpected(e5.start, "Duplicate `declare module.exports` statement"), "ES" === o2 && t3.unexpected(e5.start, u2), o2 = "CommonJS", s2 = true) : ("CommonJS" === o2 && t3.unexpected(e5.start, u2), o2 = "ES");
        }), e4.kind = o2 || "CommonJS", this.finishNode(e4, "DeclareModule");
      }, r2.flowParseDeclareExportDeclaration = function(e4, t3) {
        if (this.expect(l._export), this.eat(l._default)) return this.match(l._function) || this.match(l._class) ? e4.declaration = this.flowParseDeclare(this.startNode()) : (e4.declaration = this.flowParseType(), this.semicolon()), e4.default = true, this.finishNode(e4, "DeclareExportDeclaration");
        if (this.match(l._const) || this.match(l._let) || (this.isContextual("type") || this.isContextual("interface")) && !t3) {
          var r3 = this.state.value, n2 = O[r3];
          this.unexpected(this.state.start, "`declare export " + r3 + "` is not supported. Use `" + n2 + "` instead");
        }
        if (this.match(l._var) || this.match(l._function) || this.match(l._class) || this.isContextual("opaque")) return e4.declaration = this.flowParseDeclare(this.startNode()), e4.default = false, this.finishNode(e4, "DeclareExportDeclaration");
        if (this.match(l.star) || this.match(l.braceL) || this.isContextual("interface") || this.isContextual("type") || this.isContextual("opaque")) return "ExportNamedDeclaration" === (e4 = this.parseExport(e4)).type && (e4.type = "ExportDeclaration", e4.default = false, delete e4.exportKind), e4.type = "Declare" + e4.type, e4;
        throw this.unexpected();
      }, r2.flowParseDeclareModuleExports = function(e4) {
        return this.expectContextual("module"), this.expect(l.dot), this.expectContextual("exports"), e4.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(e4, "DeclareModuleExports");
      }, r2.flowParseDeclareTypeAlias = function(e4) {
        return this.next(), this.flowParseTypeAlias(e4), this.finishNode(e4, "DeclareTypeAlias");
      }, r2.flowParseDeclareOpaqueType = function(e4) {
        return this.next(), this.flowParseOpaqueType(e4, true), this.finishNode(e4, "DeclareOpaqueType");
      }, r2.flowParseDeclareInterface = function(e4) {
        return this.next(), this.flowParseInterfaceish(e4), this.finishNode(e4, "DeclareInterface");
      }, r2.flowParseInterfaceish = function(e4, t3) {
        if (void 0 === t3 && (t3 = false), e4.id = this.flowParseRestrictedIdentifier(!t3), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterDeclaration() : e4.typeParameters = null, e4.extends = [], e4.implements = [], e4.mixins = [], this.eat(l._extends)) do {
          e4.extends.push(this.flowParseInterfaceExtends());
        } while (!t3 && this.eat(l.comma));
        if (this.isContextual("mixins")) {
          this.next();
          do {
            e4.mixins.push(this.flowParseInterfaceExtends());
          } while (this.eat(l.comma));
        }
        if (this.isContextual("implements")) {
          this.next();
          do {
            e4.implements.push(this.flowParseInterfaceExtends());
          } while (this.eat(l.comma));
        }
        e4.body = this.flowParseObjectType(t3, false, false, t3);
      }, r2.flowParseInterfaceExtends = function() {
        var e4 = this.startNode();
        return e4.id = this.flowParseQualifiedTypeIdentifier(), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterInstantiation() : e4.typeParameters = null, this.finishNode(e4, "InterfaceExtends");
      }, r2.flowParseInterface = function(e4) {
        return this.flowParseInterfaceish(e4), this.finishNode(e4, "InterfaceDeclaration");
      }, r2.checkReservedType = function(e4, t3) {
        A.indexOf(e4) > -1 && this.raise(t3, "Cannot overwrite primitive type " + e4);
      }, r2.flowParseRestrictedIdentifier = function(e4) {
        return this.checkReservedType(this.state.value, this.state.start), this.parseIdentifier(e4);
      }, r2.flowParseTypeAlias = function(e4) {
        return e4.id = this.flowParseRestrictedIdentifier(), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterDeclaration() : e4.typeParameters = null, e4.right = this.flowParseTypeInitialiser(l.eq), this.semicolon(), this.finishNode(e4, "TypeAlias");
      }, r2.flowParseOpaqueType = function(e4, t3) {
        return this.expectContextual("type"), e4.id = this.flowParseRestrictedIdentifier(true), this.isRelational("<") ? e4.typeParameters = this.flowParseTypeParameterDeclaration() : e4.typeParameters = null, e4.supertype = null, this.match(l.colon) && (e4.supertype = this.flowParseTypeInitialiser(l.colon)), e4.impltype = null, t3 || (e4.impltype = this.flowParseTypeInitialiser(l.eq)), this.semicolon(), this.finishNode(e4, "OpaqueType");
      }, r2.flowParseTypeParameter = function(e4, t3) {
        if (void 0 === e4 && (e4 = true), void 0 === t3 && (t3 = false), !e4 && t3) throw new Error("Cannot disallow a default value (`allowDefault`) while also requiring it (`requireDefault`).");
        var r3 = this.state.start, n2 = this.startNode(), i2 = this.flowParseVariance(), a2 = this.flowParseTypeAnnotatableIdentifier();
        return n2.name = a2.name, n2.variance = i2, n2.bound = a2.typeAnnotation, this.match(l.eq) ? e4 ? (this.eat(l.eq), n2.default = this.flowParseType()) : this.unexpected() : t3 && this.unexpected(r3, "Type parameter declaration needs a default, since a preceding type parameter declaration has a default."), this.finishNode(n2, "TypeParameter");
      }, r2.flowParseTypeParameterDeclaration = function(e4) {
        void 0 === e4 && (e4 = true);
        var t3 = this.state.inType, r3 = this.startNode();
        r3.params = [], this.state.inType = true, this.isRelational("<") || this.match(l.jsxTagStart) ? this.next() : this.unexpected();
        var n2 = false;
        do {
          var i2 = this.flowParseTypeParameter(e4, n2);
          r3.params.push(i2), i2.default && (n2 = true), this.isRelational(">") || this.expect(l.comma);
        } while (!this.isRelational(">"));
        return this.expectRelational(">"), this.state.inType = t3, this.finishNode(r3, "TypeParameterDeclaration");
      }, r2.flowParseTypeParameterInstantiation = function() {
        var e4 = this.startNode(), t3 = this.state.inType;
        for (e4.params = [], this.state.inType = true, this.expectRelational("<"); !this.isRelational(">"); ) e4.params.push(this.flowParseType()), this.isRelational(">") || this.expect(l.comma);
        return this.expectRelational(">"), this.state.inType = t3, this.finishNode(e4, "TypeParameterInstantiation");
      }, r2.flowParseInterfaceType = function() {
        var e4 = this.startNode();
        if (this.expectContextual("interface"), e4.extends = [], this.eat(l._extends)) do {
          e4.extends.push(this.flowParseInterfaceExtends());
        } while (this.eat(l.comma));
        return e4.body = this.flowParseObjectType(false, false, false, false), this.finishNode(e4, "InterfaceTypeAnnotation");
      }, r2.flowParseObjectPropertyKey = function() {
        return this.match(l.num) || this.match(l.string) ? this.parseExprAtom() : this.parseIdentifier(true);
      }, r2.flowParseObjectTypeIndexer = function(e4, t3, r3) {
        return e4.static = t3, this.lookahead().type === l.colon ? (e4.id = this.flowParseObjectPropertyKey(), e4.key = this.flowParseTypeInitialiser()) : (e4.id = null, e4.key = this.flowParseType()), this.expect(l.bracketR), e4.value = this.flowParseTypeInitialiser(), e4.variance = r3, this.finishNode(e4, "ObjectTypeIndexer");
      }, r2.flowParseObjectTypeInternalSlot = function(e4, t3) {
        return e4.static = t3, e4.id = this.flowParseObjectPropertyKey(), this.expect(l.bracketR), this.expect(l.bracketR), this.isRelational("<") || this.match(l.parenL) ? (e4.method = true, e4.optional = false, e4.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e4.start, e4.loc.start))) : (e4.method = false, this.eat(l.question) && (e4.optional = true), e4.value = this.flowParseTypeInitialiser()), this.finishNode(e4, "ObjectTypeInternalSlot");
      }, r2.flowParseObjectTypeMethodish = function(e4) {
        for (e4.params = [], e4.rest = null, e4.typeParameters = null, this.isRelational("<") && (e4.typeParameters = this.flowParseTypeParameterDeclaration(false)), this.expect(l.parenL); !this.match(l.parenR) && !this.match(l.ellipsis); ) e4.params.push(this.flowParseFunctionTypeParam()), this.match(l.parenR) || this.expect(l.comma);
        return this.eat(l.ellipsis) && (e4.rest = this.flowParseFunctionTypeParam()), this.expect(l.parenR), e4.returnType = this.flowParseTypeInitialiser(), this.finishNode(e4, "FunctionTypeAnnotation");
      }, r2.flowParseObjectTypeCallProperty = function(e4, t3) {
        var r3 = this.startNode();
        return e4.static = t3, e4.value = this.flowParseObjectTypeMethodish(r3), this.finishNode(e4, "ObjectTypeCallProperty");
      }, r2.flowParseObjectType = function(e4, t3, r3, n2) {
        var i2 = this.state.inType;
        this.state.inType = true;
        var a2, o2, s2 = this.startNode();
        for (s2.callProperties = [], s2.properties = [], s2.indexers = [], s2.internalSlots = [], t3 && this.match(l.braceBarL) ? (this.expect(l.braceBarL), a2 = l.braceBarR, o2 = true) : (this.expect(l.braceL), a2 = l.braceR, o2 = false), s2.exact = o2; !this.match(a2); ) {
          var u2 = false, c2 = null, f2 = this.startNode();
          if (n2 && this.isContextual("proto")) {
            var p2 = this.lookahead();
            p2.type !== l.colon && p2.type !== l.question && (this.next(), c2 = this.state.start, e4 = false);
          }
          if (e4 && this.isContextual("static")) {
            var d2 = this.lookahead();
            d2.type !== l.colon && d2.type !== l.question && (this.next(), u2 = true);
          }
          var h2 = this.flowParseVariance();
          if (this.eat(l.bracketL)) null != c2 && this.unexpected(c2), this.eat(l.bracketL) ? (h2 && this.unexpected(h2.start), s2.internalSlots.push(this.flowParseObjectTypeInternalSlot(f2, u2))) : s2.indexers.push(this.flowParseObjectTypeIndexer(f2, u2, h2));
          else if (this.match(l.parenL) || this.isRelational("<")) null != c2 && this.unexpected(c2), h2 && this.unexpected(h2.start), s2.callProperties.push(this.flowParseObjectTypeCallProperty(f2, u2));
          else {
            var v2 = "init";
            if (this.isContextual("get") || this.isContextual("set")) {
              var y2 = this.lookahead();
              y2.type !== l.name && y2.type !== l.string && y2.type !== l.num || (v2 = this.state.value, this.next());
            }
            s2.properties.push(this.flowParseObjectTypeProperty(f2, u2, c2, h2, v2, r3));
          }
          this.flowObjectTypeSemicolon();
        }
        this.expect(a2);
        var m2 = this.finishNode(s2, "ObjectTypeAnnotation");
        return this.state.inType = i2, m2;
      }, r2.flowParseObjectTypeProperty = function(e4, t3, r3, n2, i2, a2) {
        if (this.match(l.ellipsis)) return a2 || this.unexpected(null, "Spread operator cannot appear in class or interface definitions"), null != r3 && this.unexpected(r3), n2 && this.unexpected(n2.start, "Spread properties cannot have variance"), this.expect(l.ellipsis), e4.argument = this.flowParseType(), this.finishNode(e4, "ObjectTypeSpreadProperty");
        e4.key = this.flowParseObjectPropertyKey(), e4.static = t3, e4.proto = null != r3, e4.kind = i2;
        var o2 = false;
        return this.isRelational("<") || this.match(l.parenL) ? (e4.method = true, null != r3 && this.unexpected(r3), n2 && this.unexpected(n2.start), e4.value = this.flowParseObjectTypeMethodish(this.startNodeAt(e4.start, e4.loc.start)), "get" !== i2 && "set" !== i2 || this.flowCheckGetterSetterParams(e4)) : ("init" !== i2 && this.unexpected(), e4.method = false, this.eat(l.question) && (o2 = true), e4.value = this.flowParseTypeInitialiser(), e4.variance = n2), e4.optional = o2, this.finishNode(e4, "ObjectTypeProperty");
      }, r2.flowCheckGetterSetterParams = function(e4) {
        var t3 = "get" === e4.kind ? 0 : 1, r3 = e4.start;
        e4.value.params.length + (e4.value.rest ? 1 : 0) !== t3 && ("get" === e4.kind ? this.raise(r3, "getter must not have any formal parameters") : this.raise(r3, "setter must have exactly one formal parameter")), "set" === e4.kind && e4.value.rest && this.raise(r3, "setter function argument must not be a rest parameter");
      }, r2.flowObjectTypeSemicolon = function() {
        this.eat(l.semi) || this.eat(l.comma) || this.match(l.braceR) || this.match(l.braceBarR) || this.unexpected();
      }, r2.flowParseQualifiedTypeIdentifier = function(e4, t3, r3) {
        e4 = e4 || this.state.start, t3 = t3 || this.state.startLoc;
        for (var n2 = r3 || this.parseIdentifier(); this.eat(l.dot); ) {
          var i2 = this.startNodeAt(e4, t3);
          i2.qualification = n2, i2.id = this.parseIdentifier(), n2 = this.finishNode(i2, "QualifiedTypeIdentifier");
        }
        return n2;
      }, r2.flowParseGenericType = function(e4, t3, r3) {
        var n2 = this.startNodeAt(e4, t3);
        return n2.typeParameters = null, n2.id = this.flowParseQualifiedTypeIdentifier(e4, t3, r3), this.isRelational("<") && (n2.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(n2, "GenericTypeAnnotation");
      }, r2.flowParseTypeofType = function() {
        var e4 = this.startNode();
        return this.expect(l._typeof), e4.argument = this.flowParsePrimaryType(), this.finishNode(e4, "TypeofTypeAnnotation");
      }, r2.flowParseTupleType = function() {
        var e4 = this.startNode();
        for (e4.types = [], this.expect(l.bracketL); this.state.pos < this.input.length && !this.match(l.bracketR) && (e4.types.push(this.flowParseType()), !this.match(l.bracketR)); ) this.expect(l.comma);
        return this.expect(l.bracketR), this.finishNode(e4, "TupleTypeAnnotation");
      }, r2.flowParseFunctionTypeParam = function() {
        var e4 = null, t3 = false, r3 = null, n2 = this.startNode(), i2 = this.lookahead();
        return i2.type === l.colon || i2.type === l.question ? (e4 = this.parseIdentifier(), this.eat(l.question) && (t3 = true), r3 = this.flowParseTypeInitialiser()) : r3 = this.flowParseType(), n2.name = e4, n2.optional = t3, n2.typeAnnotation = r3, this.finishNode(n2, "FunctionTypeParam");
      }, r2.reinterpretTypeAsFunctionTypeParam = function(e4) {
        var t3 = this.startNodeAt(e4.start, e4.loc.start);
        return t3.name = null, t3.optional = false, t3.typeAnnotation = e4, this.finishNode(t3, "FunctionTypeParam");
      }, r2.flowParseFunctionTypeParams = function(e4) {
        void 0 === e4 && (e4 = []);
        for (var t3 = null; !this.match(l.parenR) && !this.match(l.ellipsis); ) e4.push(this.flowParseFunctionTypeParam()), this.match(l.parenR) || this.expect(l.comma);
        return this.eat(l.ellipsis) && (t3 = this.flowParseFunctionTypeParam()), { params: e4, rest: t3 };
      }, r2.flowIdentToTypeAnnotation = function(e4, t3, r3, n2) {
        switch (n2.name) {
          case "any":
            return this.finishNode(r3, "AnyTypeAnnotation");
          case "void":
            return this.finishNode(r3, "VoidTypeAnnotation");
          case "bool":
          case "boolean":
            return this.finishNode(r3, "BooleanTypeAnnotation");
          case "mixed":
            return this.finishNode(r3, "MixedTypeAnnotation");
          case "empty":
            return this.finishNode(r3, "EmptyTypeAnnotation");
          case "number":
            return this.finishNode(r3, "NumberTypeAnnotation");
          case "string":
            return this.finishNode(r3, "StringTypeAnnotation");
          default:
            return this.flowParseGenericType(e4, t3, n2);
        }
      }, r2.flowParsePrimaryType = function() {
        var e4, t3, r3 = this.state.start, n2 = this.state.startLoc, i2 = this.startNode(), a2 = false, o2 = this.state.noAnonFunctionType;
        switch (this.state.type) {
          case l.name:
            return this.isContextual("interface") ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(r3, n2, i2, this.parseIdentifier());
          case l.braceL:
            return this.flowParseObjectType(false, false, true, false);
          case l.braceBarL:
            return this.flowParseObjectType(false, true, true, false);
          case l.bracketL:
            return this.flowParseTupleType();
          case l.relational:
            if ("<" === this.state.value) return i2.typeParameters = this.flowParseTypeParameterDeclaration(false), this.expect(l.parenL), e4 = this.flowParseFunctionTypeParams(), i2.params = e4.params, i2.rest = e4.rest, this.expect(l.parenR), this.expect(l.arrow), i2.returnType = this.flowParseType(), this.finishNode(i2, "FunctionTypeAnnotation");
            break;
          case l.parenL:
            if (this.next(), !this.match(l.parenR) && !this.match(l.ellipsis)) if (this.match(l.name)) {
              var s2 = this.lookahead().type;
              a2 = s2 !== l.question && s2 !== l.colon;
            } else a2 = true;
            if (a2) {
              if (this.state.noAnonFunctionType = false, t3 = this.flowParseType(), this.state.noAnonFunctionType = o2, this.state.noAnonFunctionType || !(this.match(l.comma) || this.match(l.parenR) && this.lookahead().type === l.arrow)) return this.expect(l.parenR), t3;
              this.eat(l.comma);
            }
            return e4 = t3 ? this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(t3)]) : this.flowParseFunctionTypeParams(), i2.params = e4.params, i2.rest = e4.rest, this.expect(l.parenR), this.expect(l.arrow), i2.returnType = this.flowParseType(), i2.typeParameters = null, this.finishNode(i2, "FunctionTypeAnnotation");
          case l.string:
            return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");
          case l._true:
          case l._false:
            return i2.value = this.match(l._true), this.next(), this.finishNode(i2, "BooleanLiteralTypeAnnotation");
          case l.plusMin:
            if ("-" === this.state.value) return this.next(), this.match(l.num) || this.unexpected(null, 'Unexpected token, expected "number"'), this.parseLiteral(-this.state.value, "NumberLiteralTypeAnnotation", i2.start, i2.loc.start);
            this.unexpected();
          case l.num:
            return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");
          case l._null:
            return this.next(), this.finishNode(i2, "NullLiteralTypeAnnotation");
          case l._this:
            return this.next(), this.finishNode(i2, "ThisTypeAnnotation");
          case l.star:
            return this.next(), this.finishNode(i2, "ExistsTypeAnnotation");
          default:
            if ("typeof" === this.state.type.keyword) return this.flowParseTypeofType();
        }
        throw this.unexpected();
      }, r2.flowParsePostfixType = function() {
        for (var e4 = this.state.start, t3 = this.state.startLoc, r3 = this.flowParsePrimaryType(); !this.canInsertSemicolon() && this.match(l.bracketL); ) {
          var n2 = this.startNodeAt(e4, t3);
          n2.elementType = r3, this.expect(l.bracketL), this.expect(l.bracketR), r3 = this.finishNode(n2, "ArrayTypeAnnotation");
        }
        return r3;
      }, r2.flowParsePrefixType = function() {
        var e4 = this.startNode();
        return this.eat(l.question) ? (e4.typeAnnotation = this.flowParsePrefixType(), this.finishNode(e4, "NullableTypeAnnotation")) : this.flowParsePostfixType();
      }, r2.flowParseAnonFunctionWithoutParens = function() {
        var e4 = this.flowParsePrefixType();
        if (!this.state.noAnonFunctionType && this.eat(l.arrow)) {
          var t3 = this.startNodeAt(e4.start, e4.loc.start);
          return t3.params = [this.reinterpretTypeAsFunctionTypeParam(e4)], t3.rest = null, t3.returnType = this.flowParseType(), t3.typeParameters = null, this.finishNode(t3, "FunctionTypeAnnotation");
        }
        return e4;
      }, r2.flowParseIntersectionType = function() {
        var e4 = this.startNode();
        this.eat(l.bitwiseAND);
        var t3 = this.flowParseAnonFunctionWithoutParens();
        for (e4.types = [t3]; this.eat(l.bitwiseAND); ) e4.types.push(this.flowParseAnonFunctionWithoutParens());
        return 1 === e4.types.length ? t3 : this.finishNode(e4, "IntersectionTypeAnnotation");
      }, r2.flowParseUnionType = function() {
        var e4 = this.startNode();
        this.eat(l.bitwiseOR);
        var t3 = this.flowParseIntersectionType();
        for (e4.types = [t3]; this.eat(l.bitwiseOR); ) e4.types.push(this.flowParseIntersectionType());
        return 1 === e4.types.length ? t3 : this.finishNode(e4, "UnionTypeAnnotation");
      }, r2.flowParseType = function() {
        var e4 = this.state.inType;
        this.state.inType = true;
        var t3 = this.flowParseUnionType();
        return this.state.inType = e4, this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType, t3;
      }, r2.flowParseTypeAnnotation = function() {
        var e4 = this.startNode();
        return e4.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(e4, "TypeAnnotation");
      }, r2.flowParseTypeAnnotatableIdentifier = function(e4) {
        var t3 = e4 ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();
        return this.match(l.colon) && (t3.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(t3, t3.type)), t3;
      }, r2.typeCastToParameter = function(e4) {
        return e4.expression.typeAnnotation = e4.typeAnnotation, this.finishNodeAt(e4.expression, e4.expression.type, e4.typeAnnotation.end, e4.typeAnnotation.loc.end);
      }, r2.flowParseVariance = function() {
        var e4 = null;
        return this.match(l.plusMin) && (e4 = this.startNode(), "+" === this.state.value ? e4.kind = "plus" : e4.kind = "minus", this.next(), this.finishNode(e4, "Variance")), e4;
      }, r2.parseFunctionBody = function(t3, r3) {
        var n2 = this;
        return r3 ? this.forwardNoArrowParamsConversionAt(t3, function() {
          return e3.prototype.parseFunctionBody.call(n2, t3, true);
        }) : e3.prototype.parseFunctionBody.call(this, t3, false);
      }, r2.parseFunctionBodyAndFinish = function(t3, r3, n2) {
        if (!n2 && this.match(l.colon)) {
          var i2 = this.startNode(), a2 = this.flowParseTypeAndPredicateInitialiser();
          i2.typeAnnotation = a2[0], t3.predicate = a2[1], t3.returnType = i2.typeAnnotation ? this.finishNode(i2, "TypeAnnotation") : null;
        }
        e3.prototype.parseFunctionBodyAndFinish.call(this, t3, r3, n2);
      }, r2.parseStatement = function(t3, r3) {
        if (this.state.strict && this.match(l.name) && "interface" === this.state.value) {
          var n2 = this.startNode();
          return this.next(), this.flowParseInterface(n2);
        }
        var i2 = e3.prototype.parseStatement.call(this, t3, r3);
        return void 0 !== this.flowPragma || this.isValidDirective(i2) || (this.flowPragma = null), i2;
      }, r2.parseExpressionStatement = function(t3, r3) {
        if ("Identifier" === r3.type) {
          if ("declare" === r3.name) {
            if (this.match(l._class) || this.match(l.name) || this.match(l._function) || this.match(l._var) || this.match(l._export)) return this.flowParseDeclare(t3);
          } else if (this.match(l.name)) {
            if ("interface" === r3.name) return this.flowParseInterface(t3);
            if ("type" === r3.name) return this.flowParseTypeAlias(t3);
            if ("opaque" === r3.name) return this.flowParseOpaqueType(t3, false);
          }
        }
        return e3.prototype.parseExpressionStatement.call(this, t3, r3);
      }, r2.shouldParseExportDeclaration = function() {
        return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || e3.prototype.shouldParseExportDeclaration.call(this);
      }, r2.isExportDefaultSpecifier = function() {
        return (!this.match(l.name) || "type" !== this.state.value && "interface" !== this.state.value && "opaque" != this.state.value) && e3.prototype.isExportDefaultSpecifier.call(this);
      }, r2.parseConditional = function(t3, r3, n2, i2, a2) {
        var o2 = this;
        if (!this.match(l.question)) return t3;
        if (a2) {
          var s2 = this.state.clone();
          try {
            return e3.prototype.parseConditional.call(this, t3, r3, n2, i2);
          } catch (e4) {
            if (e4 instanceof SyntaxError) return this.state = s2, a2.start = e4.pos || this.state.start, t3;
            throw e4;
          }
        }
        this.expect(l.question);
        var u2 = this.state.clone(), c2 = this.state.noArrowAt, f2 = this.startNodeAt(n2, i2), p2 = this.tryParseConditionalConsequent(), d2 = p2.consequent, h2 = p2.failed, v2 = this.getArrowLikeExpressions(d2), y2 = v2[0], m2 = v2[1];
        if (h2 || m2.length > 0) {
          var b2 = c2.concat();
          if (m2.length > 0) {
            this.state = u2, this.state.noArrowAt = b2;
            for (var g2 = 0; g2 < m2.length; g2++) b2.push(m2[g2].start);
            var w2 = this.tryParseConditionalConsequent();
            d2 = w2.consequent, h2 = w2.failed;
            var E2 = this.getArrowLikeExpressions(d2);
            y2 = E2[0], m2 = E2[1];
          }
          if (h2 && y2.length > 1 && this.raise(u2.start, "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate."), h2 && 1 === y2.length) {
            this.state = u2, this.state.noArrowAt = b2.concat(y2[0].start);
            var S2 = this.tryParseConditionalConsequent();
            d2 = S2.consequent, h2 = S2.failed;
          }
          this.getArrowLikeExpressions(d2, true);
        }
        return this.state.noArrowAt = c2, this.expect(l.colon), f2.test = t3, f2.consequent = d2, f2.alternate = this.forwardNoArrowParamsConversionAt(f2, function() {
          return o2.parseMaybeAssign(r3, void 0, void 0, void 0);
        }), this.finishNode(f2, "ConditionalExpression");
      }, r2.tryParseConditionalConsequent = function() {
        this.state.noArrowParamsConversionAt.push(this.state.start);
        var e4 = this.parseMaybeAssign(), t3 = !this.match(l.colon);
        return this.state.noArrowParamsConversionAt.pop(), { consequent: e4, failed: t3 };
      }, r2.getArrowLikeExpressions = function(t3, r3) {
        for (var n2 = this, i2 = [t3], a2 = []; 0 !== i2.length; ) {
          var o2 = i2.pop();
          "ArrowFunctionExpression" === o2.type ? (o2.typeParameters || !o2.returnType ? (this.toAssignableList(o2.params, true, "arrow function parameters"), e3.prototype.checkFunctionNameAndParams.call(this, o2, true)) : a2.push(o2), i2.push(o2.body)) : "ConditionalExpression" === o2.type && (i2.push(o2.consequent), i2.push(o2.alternate));
        }
        if (r3) {
          for (var s2 = 0; s2 < a2.length; s2++) this.toAssignableList(t3.params, true, "arrow function parameters");
          return [a2, []];
        }
        return (function(e4, t4) {
          for (var r4 = [], n3 = [], i3 = 0; i3 < e4.length; i3++) (t4(e4[i3], i3, e4) ? r4 : n3).push(e4[i3]);
          return [r4, n3];
        })(a2, function(e4) {
          try {
            return n2.toAssignableList(e4.params, true, "arrow function parameters"), true;
          } catch (e5) {
            return false;
          }
        });
      }, r2.forwardNoArrowParamsConversionAt = function(e4, t3) {
        var r3;
        return -1 !== this.state.noArrowParamsConversionAt.indexOf(e4.start) ? (this.state.noArrowParamsConversionAt.push(this.state.start), r3 = t3(), this.state.noArrowParamsConversionAt.pop()) : r3 = t3(), r3;
      }, r2.parseParenItem = function(t3, r3, n2) {
        if (t3 = e3.prototype.parseParenItem.call(this, t3, r3, n2), this.eat(l.question) && (t3.optional = true), this.match(l.colon)) {
          var i2 = this.startNodeAt(r3, n2);
          return i2.expression = t3, i2.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(i2, "TypeCastExpression");
        }
        return t3;
      }, r2.assertModuleNodeAllowed = function(t3) {
        "ImportDeclaration" === t3.type && ("type" === t3.importKind || "typeof" === t3.importKind) || "ExportNamedDeclaration" === t3.type && "type" === t3.exportKind || "ExportAllDeclaration" === t3.type && "type" === t3.exportKind || e3.prototype.assertModuleNodeAllowed.call(this, t3);
      }, r2.parseExport = function(t3) {
        return "ExportNamedDeclaration" !== (t3 = e3.prototype.parseExport.call(this, t3)).type && "ExportAllDeclaration" !== t3.type || (t3.exportKind = t3.exportKind || "value"), t3;
      }, r2.parseExportDeclaration = function(t3) {
        if (this.isContextual("type")) {
          t3.exportKind = "type";
          var r3 = this.startNode();
          return this.next(), this.match(l.braceL) ? (t3.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(t3), null) : this.flowParseTypeAlias(r3);
        }
        if (this.isContextual("opaque")) {
          t3.exportKind = "type";
          var n2 = this.startNode();
          return this.next(), this.flowParseOpaqueType(n2, false);
        }
        if (this.isContextual("interface")) {
          t3.exportKind = "type";
          var i2 = this.startNode();
          return this.next(), this.flowParseInterface(i2);
        }
        return e3.prototype.parseExportDeclaration.call(this, t3);
      }, r2.shouldParseExportStar = function() {
        return e3.prototype.shouldParseExportStar.call(this) || this.isContextual("type") && this.lookahead().type === l.star;
      }, r2.parseExportStar = function(t3) {
        return this.eatContextual("type") && (t3.exportKind = "type"), e3.prototype.parseExportStar.call(this, t3);
      }, r2.parseExportNamespace = function(t3) {
        return "type" === t3.exportKind && this.unexpected(), e3.prototype.parseExportNamespace.call(this, t3);
      }, r2.parseClassId = function(t3, r3, n2) {
        e3.prototype.parseClassId.call(this, t3, r3, n2), this.isRelational("<") && (t3.typeParameters = this.flowParseTypeParameterDeclaration());
      }, r2.isKeyword = function(t3) {
        return (!this.state.inType || "void" !== t3) && e3.prototype.isKeyword.call(this, t3);
      }, r2.readToken = function(t3) {
        var r3 = this.input.charCodeAt(this.state.pos + 1);
        return !this.state.inType || 62 !== t3 && 60 !== t3 ? /* @__PURE__ */ (function(e4, t4) {
          return 64 === e4 && 64 === t4;
        })(t3, r3) ? (this.state.isIterator = true, e3.prototype.readWord.call(this)) : e3.prototype.readToken.call(this, t3) : this.finishOp(l.relational, 1);
      }, r2.toAssignable = function(t3, r3, n2) {
        return "TypeCastExpression" === t3.type ? e3.prototype.toAssignable.call(this, this.typeCastToParameter(t3), r3, n2) : e3.prototype.toAssignable.call(this, t3, r3, n2);
      }, r2.toAssignableList = function(t3, r3, n2) {
        for (var i2 = 0; i2 < t3.length; i2++) {
          var a2 = t3[i2];
          a2 && "TypeCastExpression" === a2.type && (t3[i2] = this.typeCastToParameter(a2));
        }
        return e3.prototype.toAssignableList.call(this, t3, r3, n2);
      }, r2.toReferencedList = function(e4) {
        for (var t3 = 0; t3 < e4.length; t3++) {
          var r3 = e4[t3];
          r3 && r3._exprListItem && "TypeCastExpression" === r3.type && this.raise(r3.start, "Unexpected type cast");
        }
        return e4;
      }, r2.parseExprListItem = function(t3, r3, n2) {
        var i2 = this.startNode(), a2 = e3.prototype.parseExprListItem.call(this, t3, r3, n2);
        return this.match(l.colon) ? (i2._exprListItem = true, i2.expression = a2, i2.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(i2, "TypeCastExpression")) : a2;
      }, r2.checkLVal = function(t3, r3, n2, i2) {
        if ("TypeCastExpression" !== t3.type) return e3.prototype.checkLVal.call(this, t3, r3, n2, i2);
      }, r2.parseClassProperty = function(t3) {
        return this.match(l.colon) && (t3.typeAnnotation = this.flowParseTypeAnnotation()), e3.prototype.parseClassProperty.call(this, t3);
      }, r2.parseClassPrivateProperty = function(t3) {
        return this.match(l.colon) && (t3.typeAnnotation = this.flowParseTypeAnnotation()), e3.prototype.parseClassPrivateProperty.call(this, t3);
      }, r2.isClassMethod = function() {
        return this.isRelational("<") || e3.prototype.isClassMethod.call(this);
      }, r2.isClassProperty = function() {
        return this.match(l.colon) || e3.prototype.isClassProperty.call(this);
      }, r2.isNonstaticConstructor = function(t3) {
        return !this.match(l.colon) && e3.prototype.isNonstaticConstructor.call(this, t3);
      }, r2.pushClassMethod = function(t3, r3, n2, i2, a2) {
        r3.variance && this.unexpected(r3.variance.start), delete r3.variance, this.isRelational("<") && (r3.typeParameters = this.flowParseTypeParameterDeclaration(false)), e3.prototype.pushClassMethod.call(this, t3, r3, n2, i2, a2);
      }, r2.pushClassPrivateMethod = function(t3, r3, n2, i2) {
        r3.variance && this.unexpected(r3.variance.start), delete r3.variance, this.isRelational("<") && (r3.typeParameters = this.flowParseTypeParameterDeclaration()), e3.prototype.pushClassPrivateMethod.call(this, t3, r3, n2, i2);
      }, r2.parseClassSuper = function(t3) {
        if (e3.prototype.parseClassSuper.call(this, t3), t3.superClass && this.isRelational("<") && (t3.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {
          this.next();
          var r3 = t3.implements = [];
          do {
            var n2 = this.startNode();
            n2.id = this.flowParseRestrictedIdentifier(true), this.isRelational("<") ? n2.typeParameters = this.flowParseTypeParameterInstantiation() : n2.typeParameters = null, r3.push(this.finishNode(n2, "ClassImplements"));
          } while (this.eat(l.comma));
        }
      }, r2.parsePropertyName = function(t3) {
        var r3 = this.flowParseVariance(), n2 = e3.prototype.parsePropertyName.call(this, t3);
        return t3.variance = r3, n2;
      }, r2.parseObjPropValue = function(t3, r3, n2, i2, a2, o2, s2, u2) {
        var c2;
        t3.variance && this.unexpected(t3.variance.start), delete t3.variance, this.isRelational("<") && (c2 = this.flowParseTypeParameterDeclaration(false), this.match(l.parenL) || this.unexpected()), e3.prototype.parseObjPropValue.call(this, t3, r3, n2, i2, a2, o2, s2, u2), c2 && ((t3.value || t3).typeParameters = c2);
      }, r2.parseAssignableListItemTypes = function(e4) {
        if (this.eat(l.question)) {
          if ("Identifier" !== e4.type) throw this.raise(e4.start, "A binding pattern parameter cannot be optional in an implementation signature.");
          e4.optional = true;
        }
        return this.match(l.colon) && (e4.typeAnnotation = this.flowParseTypeAnnotation()), this.finishNode(e4, e4.type), e4;
      }, r2.parseMaybeDefault = function(t3, r3, n2) {
        var i2 = e3.prototype.parseMaybeDefault.call(this, t3, r3, n2);
        return "AssignmentPattern" === i2.type && i2.typeAnnotation && i2.right.start < i2.typeAnnotation.start && this.raise(i2.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"), i2;
      }, r2.shouldParseDefaultImport = function(t3) {
        return C(t3) ? P(this.state) : e3.prototype.shouldParseDefaultImport.call(this, t3);
      }, r2.parseImportSpecifierLocal = function(e4, t3, r3, n2) {
        t3.local = C(e4) ? this.flowParseRestrictedIdentifier(true) : this.parseIdentifier(), this.checkLVal(t3.local, true, void 0, n2), e4.specifiers.push(this.finishNode(t3, r3));
      }, r2.parseImportSpecifiers = function(t3) {
        t3.importKind = "value";
        var r3 = null;
        if (this.match(l._typeof) ? r3 = "typeof" : this.isContextual("type") && (r3 = "type"), r3) {
          var n2 = this.lookahead();
          "type" === r3 && n2.type === l.star && this.unexpected(n2.start), (P(n2) || n2.type === l.braceL || n2.type === l.star) && (this.next(), t3.importKind = r3);
        }
        e3.prototype.parseImportSpecifiers.call(this, t3);
      }, r2.parseImportSpecifier = function(e4) {
        var t3 = this.startNode(), r3 = this.state.start, n2 = this.parseIdentifier(true), i2 = null;
        "type" === n2.name ? i2 = "type" : "typeof" === n2.name && (i2 = "typeof");
        var a2 = false;
        if (this.isContextual("as") && !this.isLookaheadContextual("as")) {
          var o2 = this.parseIdentifier(true);
          null === i2 || this.match(l.name) || this.state.type.keyword ? (t3.imported = n2, t3.importKind = null, t3.local = this.parseIdentifier()) : (t3.imported = o2, t3.importKind = i2, t3.local = o2.__clone());
        } else null !== i2 && (this.match(l.name) || this.state.type.keyword) ? (t3.imported = this.parseIdentifier(true), t3.importKind = i2, this.eatContextual("as") ? t3.local = this.parseIdentifier() : (a2 = true, t3.local = t3.imported.__clone())) : (a2 = true, t3.imported = n2, t3.importKind = null, t3.local = t3.imported.__clone());
        var s2 = C(e4), u2 = C(t3);
        s2 && u2 && this.raise(r3, "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements"), (s2 || u2) && this.checkReservedType(t3.local.name, t3.local.start), !a2 || s2 || u2 || this.checkReservedWord(t3.local.name, t3.start, true, true), this.checkLVal(t3.local, true, void 0, "import specifier"), e4.specifiers.push(this.finishNode(t3, "ImportSpecifier"));
      }, r2.parseFunctionParams = function(t3) {
        var r3 = t3.kind;
        "get" !== r3 && "set" !== r3 && this.isRelational("<") && (t3.typeParameters = this.flowParseTypeParameterDeclaration(false)), e3.prototype.parseFunctionParams.call(this, t3);
      }, r2.parseVarHead = function(t3) {
        e3.prototype.parseVarHead.call(this, t3), this.match(l.colon) && (t3.id.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(t3.id, t3.id.type));
      }, r2.parseAsyncArrowFromCallExpression = function(t3, r3) {
        if (this.match(l.colon)) {
          var n2 = this.state.noAnonFunctionType;
          this.state.noAnonFunctionType = true, t3.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = n2;
        }
        return e3.prototype.parseAsyncArrowFromCallExpression.call(this, t3, r3);
      }, r2.shouldParseAsyncArrow = function() {
        return this.match(l.colon) || e3.prototype.shouldParseAsyncArrow.call(this);
      }, r2.parseMaybeAssign = function(t3, r3, n2, i2) {
        var a2 = this, o2 = null;
        if (l.jsxTagStart && this.match(l.jsxTagStart)) {
          var s2 = this.state.clone();
          try {
            return e3.prototype.parseMaybeAssign.call(this, t3, r3, n2, i2);
          } catch (e4) {
            if (!(e4 instanceof SyntaxError)) throw e4;
            this.state = s2, this.state.context.length -= 2, o2 = e4;
          }
        }
        if (null != o2 || this.isRelational("<")) {
          var u2, c2;
          try {
            c2 = this.flowParseTypeParameterDeclaration(), (u2 = this.forwardNoArrowParamsConversionAt(c2, function() {
              return e3.prototype.parseMaybeAssign.call(a2, t3, r3, n2, i2);
            })).typeParameters = c2, this.resetStartLocationFromNode(u2, c2);
          } catch (e4) {
            throw o2 || e4;
          }
          if ("ArrowFunctionExpression" === u2.type) return u2;
          if (null != o2) throw o2;
          this.raise(c2.start, "Expected an arrow function after this type parameter declaration");
        }
        return e3.prototype.parseMaybeAssign.call(this, t3, r3, n2, i2);
      }, r2.parseArrow = function(t3) {
        if (this.match(l.colon)) {
          var r3 = this.state.clone();
          try {
            var n2 = this.state.noAnonFunctionType;
            this.state.noAnonFunctionType = true;
            var i2 = this.startNode(), a2 = this.flowParseTypeAndPredicateInitialiser();
            i2.typeAnnotation = a2[0], t3.predicate = a2[1], this.state.noAnonFunctionType = n2, this.canInsertSemicolon() && this.unexpected(), this.match(l.arrow) || this.unexpected(), t3.returnType = i2.typeAnnotation ? this.finishNode(i2, "TypeAnnotation") : null;
          } catch (e4) {
            if (!(e4 instanceof SyntaxError)) throw e4;
            this.state = r3;
          }
        }
        return e3.prototype.parseArrow.call(this, t3);
      }, r2.shouldParseArrow = function() {
        return this.match(l.colon) || e3.prototype.shouldParseArrow.call(this);
      }, r2.setArrowFunctionParameters = function(t3, r3) {
        -1 !== this.state.noArrowParamsConversionAt.indexOf(t3.start) ? t3.params = r3 : e3.prototype.setArrowFunctionParameters.call(this, t3, r3);
      }, r2.checkFunctionNameAndParams = function(t3, r3) {
        if (!r3 || -1 === this.state.noArrowParamsConversionAt.indexOf(t3.start)) return e3.prototype.checkFunctionNameAndParams.call(this, t3, r3);
      }, r2.parseParenAndDistinguishExpression = function(t3) {
        return e3.prototype.parseParenAndDistinguishExpression.call(this, t3 && -1 === this.state.noArrowAt.indexOf(this.state.start));
      }, r2.parseSubscripts = function(t3, r3, n2, i2) {
        if ("Identifier" === t3.type && "async" === t3.name && -1 !== this.state.noArrowAt.indexOf(r3)) {
          this.next();
          var a2 = this.startNodeAt(r3, n2);
          a2.callee = t3, a2.arguments = this.parseCallExpressionArguments(l.parenR, false), t3 = this.finishNode(a2, "CallExpression");
        } else if ("Identifier" === t3.type && "async" === t3.name && this.isRelational("<")) {
          var o2, s2 = this.state.clone();
          try {
            var u2 = this.parseAsyncArrowWithTypeParameters(r3, n2);
            if (u2) return u2;
          } catch (e4) {
            o2 = e4;
          }
          this.state = s2;
          try {
            return e3.prototype.parseSubscripts.call(this, t3, r3, n2, i2);
          } catch (e4) {
            throw o2 || e4;
          }
        }
        return e3.prototype.parseSubscripts.call(this, t3, r3, n2, i2);
      }, r2.parseSubscript = function(t3, r3, n2, i2, a2) {
        if (this.match(l.questionDot) && this.isLookaheadRelational("<")) {
          if (this.expectPlugin("optionalChaining"), a2.optionalChainMember = true, i2) return a2.stop = true, t3;
          this.next();
          var o2 = this.startNodeAt(r3, n2);
          return o2.callee = t3, o2.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(l.parenL), o2.arguments = this.parseCallExpressionArguments(l.parenR, false), o2.optional = true, this.finishNode(o2, "OptionalCallExpression");
        }
        if (!i2 && this.shouldParseTypes() && this.isRelational("<")) {
          var s2 = this.startNodeAt(r3, n2);
          s2.callee = t3;
          var u2 = this.state.clone();
          try {
            return s2.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(l.parenL), s2.arguments = this.parseCallExpressionArguments(l.parenR, false), a2.optionalChainMember ? (s2.optional = false, this.finishNode(s2, "OptionalCallExpression")) : this.finishNode(s2, "CallExpression");
          } catch (e4) {
            if (!(e4 instanceof SyntaxError)) throw e4;
            this.state = u2;
          }
        }
        return e3.prototype.parseSubscript.call(this, t3, r3, n2, i2, a2);
      }, r2.parseNewArguments = function(t3) {
        var r3 = null;
        if (this.shouldParseTypes() && this.isRelational("<")) {
          var n2 = this.state.clone();
          try {
            r3 = this.flowParseTypeParameterInstantiation();
          } catch (e4) {
            if (!(e4 instanceof SyntaxError)) throw e4;
            this.state = n2;
          }
        }
        t3.typeArguments = r3, e3.prototype.parseNewArguments.call(this, t3);
      }, r2.parseAsyncArrowWithTypeParameters = function(e4, t3) {
        var r3 = this.startNodeAt(e4, t3);
        if (this.parseFunctionParams(r3), this.parseArrow(r3)) return this.parseArrowExpression(r3, void 0, true);
      }, r2.readToken_mult_modulo = function(t3) {
        var r3 = this.input.charCodeAt(this.state.pos + 1);
        if (42 === t3 && 47 === r3 && this.state.hasFlowComment) return this.state.hasFlowComment = false, this.state.pos += 2, void this.nextToken();
        e3.prototype.readToken_mult_modulo.call(this, t3);
      }, r2.skipBlockComment = function() {
        return this.hasPlugin("flow") && this.hasPlugin("flowComments") && this.skipFlowComment() ? (this.hasFlowCommentCompletion(), this.state.pos += this.skipFlowComment(), void (this.state.hasFlowComment = true)) : this.hasPlugin("flow") && this.state.hasFlowComment ? (-1 === (t3 = this.input.indexOf("*-/", this.state.pos += 2)) && this.raise(this.state.pos - 2, "Unterminated comment"), void (this.state.pos = t3 + 3)) : void e3.prototype.skipBlockComment.call(this);
        var t3;
      }, r2.skipFlowComment = function() {
        var e4 = this.input.charCodeAt(this.state.pos + 2), t3 = this.input.charCodeAt(this.state.pos + 3);
        return 58 === e4 && 58 === t3 ? 4 : "flow-include" === this.input.slice(this.state.pos + 2, 14) ? 14 : 58 === e4 && 58 !== t3 && 2;
      }, r2.hasFlowCommentCompletion = function() {
        -1 === this.input.indexOf("*/", this.state.pos) && this.raise(this.state.pos, "Unterminated comment");
      }, t2;
    })(e2);
  }, typescript: function(e2) {
    return (function(e3) {
      function t2() {
        return e3.apply(this, arguments) || this;
      }
      i(t2, e3);
      var r2 = t2.prototype;
      return r2.tsIsIdentifier = function() {
        return this.match(l.name);
      }, r2.tsNextTokenCanFollowModifier = function() {
        return this.next(), !(this.hasPrecedingLineBreak() || this.match(l.parenL) || this.match(l.parenR) || this.match(l.colon) || this.match(l.eq) || this.match(l.question));
      }, r2.tsParseModifier = function(e4) {
        if (this.match(l.name)) {
          var t3 = this.state.value;
          return -1 !== e4.indexOf(t3) && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)) ? t3 : void 0;
        }
      }, r2.tsIsListTerminator = function(e4) {
        switch (e4) {
          case "EnumMembers":
          case "TypeMembers":
            return this.match(l.braceR);
          case "HeritageClauseElement":
            return this.match(l.braceL);
          case "TupleElementTypes":
            return this.match(l.bracketR);
          case "TypeParametersOrArguments":
            return this.isRelational(">");
        }
        throw new Error("Unreachable");
      }, r2.tsParseList = function(e4, t3) {
        for (var r3 = []; !this.tsIsListTerminator(e4); ) r3.push(t3());
        return r3;
      }, r2.tsParseDelimitedList = function(e4, t3) {
        return ne(this.tsParseDelimitedListWorker(e4, t3, true));
      }, r2.tsTryParseDelimitedList = function(e4, t3) {
        return this.tsParseDelimitedListWorker(e4, t3, false);
      }, r2.tsParseDelimitedListWorker = function(e4, t3, r3) {
        for (var n2 = []; !this.tsIsListTerminator(e4); ) {
          var i2 = t3();
          if (null == i2) return;
          if (n2.push(i2), !this.eat(l.comma)) {
            if (this.tsIsListTerminator(e4)) break;
            return void (r3 && this.expect(l.comma));
          }
        }
        return n2;
      }, r2.tsParseBracketedList = function(e4, t3, r3, n2) {
        n2 || (r3 ? this.expect(l.bracketL) : this.expectRelational("<"));
        var i2 = this.tsParseDelimitedList(e4, t3);
        return r3 ? this.expect(l.bracketR) : this.expectRelational(">"), i2;
      }, r2.tsParseEntityName = function(e4) {
        for (var t3 = this.parseIdentifier(); this.eat(l.dot); ) {
          var r3 = this.startNodeAtNode(t3);
          r3.left = t3, r3.right = this.parseIdentifier(e4), t3 = this.finishNode(r3, "TSQualifiedName");
        }
        return t3;
      }, r2.tsParseTypeReference = function() {
        var e4 = this.startNode();
        return e4.typeName = this.tsParseEntityName(false), !this.hasPrecedingLineBreak() && this.isRelational("<") && (e4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e4, "TSTypeReference");
      }, r2.tsParseThisTypePredicate = function(e4) {
        this.next();
        var t3 = this.startNode();
        return t3.parameterName = e4, t3.typeAnnotation = this.tsParseTypeAnnotation(false), this.finishNode(t3, "TSTypePredicate");
      }, r2.tsParseThisTypeNode = function() {
        var e4 = this.startNode();
        return this.next(), this.finishNode(e4, "TSThisType");
      }, r2.tsParseTypeQuery = function() {
        var e4 = this.startNode();
        return this.expect(l._typeof), e4.exprName = this.tsParseEntityName(true), this.finishNode(e4, "TSTypeQuery");
      }, r2.tsParseTypeParameter = function() {
        var e4 = this.startNode();
        return e4.name = this.parseIdentifierName(e4.start), e4.constraint = this.tsEatThenParseType(l._extends), e4.default = this.tsEatThenParseType(l.eq), this.finishNode(e4, "TSTypeParameter");
      }, r2.tsTryParseTypeParameters = function() {
        if (this.isRelational("<")) return this.tsParseTypeParameters();
      }, r2.tsParseTypeParameters = function() {
        var e4 = this.startNode();
        return this.isRelational("<") || this.match(l.jsxTagStart) ? this.next() : this.unexpected(), e4.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this), false, true), this.finishNode(e4, "TSTypeParameterDeclaration");
      }, r2.tsFillSignature = function(e4, t3) {
        var r3 = e4 === l.arrow;
        t3.typeParameters = this.tsTryParseTypeParameters(), this.expect(l.parenL), t3.parameters = this.tsParseBindingListForSignature(), r3 ? t3.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(e4) : this.match(e4) && (t3.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(e4));
      }, r2.tsParseBindingListForSignature = function() {
        var e4 = this;
        return this.parseBindingList(l.parenR).map(function(t3) {
          if ("Identifier" !== t3.type && "RestElement" !== t3.type) throw e4.unexpected(t3.start, "Name in a signature must be an Identifier.");
          return t3;
        });
      }, r2.tsParseTypeMemberSemicolon = function() {
        this.eat(l.comma) || this.semicolon();
      }, r2.tsParseSignatureMember = function(e4) {
        var t3 = this.startNode();
        return "TSConstructSignatureDeclaration" === e4 && this.expect(l._new), this.tsFillSignature(l.colon, t3), this.tsParseTypeMemberSemicolon(), this.finishNode(t3, e4);
      }, r2.tsIsUnambiguouslyIndexSignature = function() {
        return this.next(), this.eat(l.name) && this.match(l.colon);
      }, r2.tsTryParseIndexSignature = function(e4) {
        if (this.match(l.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))) {
          this.expect(l.bracketL);
          var t3 = this.parseIdentifier();
          this.expect(l.colon), t3.typeAnnotation = this.tsParseTypeAnnotation(false), this.expect(l.bracketR), e4.parameters = [t3];
          var r3 = this.tsTryParseTypeAnnotation();
          return r3 && (e4.typeAnnotation = r3), this.tsParseTypeMemberSemicolon(), this.finishNode(e4, "TSIndexSignature");
        }
      }, r2.tsParsePropertyOrMethodSignature = function(e4, t3) {
        this.parsePropertyName(e4), this.eat(l.question) && (e4.optional = true);
        var r3 = e4;
        if (t3 || !this.match(l.parenL) && !this.isRelational("<")) {
          var n2 = r3;
          t3 && (n2.readonly = true);
          var i2 = this.tsTryParseTypeAnnotation();
          return i2 && (n2.typeAnnotation = i2), this.tsParseTypeMemberSemicolon(), this.finishNode(n2, "TSPropertySignature");
        }
        var a2 = r3;
        return this.tsFillSignature(l.colon, a2), this.tsParseTypeMemberSemicolon(), this.finishNode(a2, "TSMethodSignature");
      }, r2.tsParseTypeMember = function() {
        if (this.match(l.parenL) || this.isRelational("<")) return this.tsParseSignatureMember("TSCallSignatureDeclaration");
        if (this.match(l._new) && this.tsLookAhead(this.tsIsStartOfConstructSignature.bind(this))) return this.tsParseSignatureMember("TSConstructSignatureDeclaration");
        var e4 = this.startNode(), t3 = !!this.tsParseModifier(["readonly"]), r3 = this.tsTryParseIndexSignature(e4);
        return r3 ? (t3 && (e4.readonly = true), r3) : this.tsParsePropertyOrMethodSignature(e4, t3);
      }, r2.tsIsStartOfConstructSignature = function() {
        return this.next(), this.match(l.parenL) || this.isRelational("<");
      }, r2.tsParseTypeLiteral = function() {
        var e4 = this.startNode();
        return e4.members = this.tsParseObjectTypeMembers(), this.finishNode(e4, "TSTypeLiteral");
      }, r2.tsParseObjectTypeMembers = function() {
        this.expect(l.braceL);
        var e4 = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));
        return this.expect(l.braceR), e4;
      }, r2.tsIsStartOfMappedType = function() {
        return this.next(), this.eat(l.plusMin) ? this.isContextual("readonly") : (this.isContextual("readonly") && this.next(), !!this.match(l.bracketL) && (this.next(), !!this.tsIsIdentifier() && (this.next(), this.match(l._in))));
      }, r2.tsParseMappedTypeParameter = function() {
        var e4 = this.startNode();
        return e4.name = this.parseIdentifierName(e4.start), e4.constraint = this.tsExpectThenParseType(l._in), this.finishNode(e4, "TSTypeParameter");
      }, r2.tsParseMappedType = function() {
        var e4 = this.startNode();
        return this.expect(l.braceL), this.match(l.plusMin) ? (e4.readonly = this.state.value, this.next(), this.expectContextual("readonly")) : this.eatContextual("readonly") && (e4.readonly = true), this.expect(l.bracketL), e4.typeParameter = this.tsParseMappedTypeParameter(), this.expect(l.bracketR), this.match(l.plusMin) ? (e4.optional = this.state.value, this.next(), this.expect(l.question)) : this.eat(l.question) && (e4.optional = true), e4.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(l.braceR), this.finishNode(e4, "TSMappedType");
      }, r2.tsParseTupleType = function() {
        var e4 = this.startNode();
        return e4.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseType.bind(this), true, false), this.finishNode(e4, "TSTupleType");
      }, r2.tsParseParenthesizedType = function() {
        var e4 = this.startNode();
        return this.expect(l.parenL), e4.typeAnnotation = this.tsParseType(), this.expect(l.parenR), this.finishNode(e4, "TSParenthesizedType");
      }, r2.tsParseFunctionOrConstructorType = function(e4) {
        var t3 = this.startNode();
        return "TSConstructorType" === e4 && this.expect(l._new), this.tsFillSignature(l.arrow, t3), this.finishNode(t3, e4);
      }, r2.tsParseLiteralTypeNode = function() {
        var e4 = this, t3 = this.startNode();
        return t3.literal = (function() {
          switch (e4.state.type) {
            case l.num:
              return e4.parseLiteral(e4.state.value, "NumericLiteral");
            case l.string:
              return e4.parseLiteral(e4.state.value, "StringLiteral");
            case l._true:
            case l._false:
              return e4.parseBooleanLiteral();
            default:
              throw e4.unexpected();
          }
        })(), this.finishNode(t3, "TSLiteralType");
      }, r2.tsParseNonArrayType = function() {
        switch (this.state.type) {
          case l.name:
          case l._void:
          case l._null:
            var e4 = this.match(l._void) ? "TSVoidKeyword" : this.match(l._null) ? "TSNullKeyword" : (function(e5) {
              switch (e5) {
                case "any":
                  return "TSAnyKeyword";
                case "boolean":
                  return "TSBooleanKeyword";
                case "never":
                  return "TSNeverKeyword";
                case "number":
                  return "TSNumberKeyword";
                case "object":
                  return "TSObjectKeyword";
                case "string":
                  return "TSStringKeyword";
                case "symbol":
                  return "TSSymbolKeyword";
                case "undefined":
                  return "TSUndefinedKeyword";
                default:
                  return;
              }
            })(this.state.value);
            if (void 0 !== e4 && this.lookahead().type !== l.dot) {
              var t3 = this.startNode();
              return this.next(), this.finishNode(t3, e4);
            }
            return this.tsParseTypeReference();
          case l.string:
          case l.num:
          case l._true:
          case l._false:
            return this.tsParseLiteralTypeNode();
          case l.plusMin:
            if ("-" === this.state.value) {
              var r3 = this.startNode();
              if (this.next(), !this.match(l.num)) throw this.unexpected();
              return r3.literal = this.parseLiteral(-this.state.value, "NumericLiteral", r3.start, r3.loc.start), this.finishNode(r3, "TSLiteralType");
            }
            break;
          case l._this:
            var n2 = this.tsParseThisTypeNode();
            return this.isContextual("is") && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(n2) : n2;
          case l._typeof:
            return this.tsParseTypeQuery();
          case l.braceL:
            return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();
          case l.bracketL:
            return this.tsParseTupleType();
          case l.parenL:
            return this.tsParseParenthesizedType();
        }
        throw this.unexpected();
      }, r2.tsParseArrayTypeOrHigher = function() {
        for (var e4 = this.tsParseNonArrayType(); !this.hasPrecedingLineBreak() && this.eat(l.bracketL); ) if (this.match(l.bracketR)) {
          var t3 = this.startNodeAtNode(e4);
          t3.elementType = e4, this.expect(l.bracketR), e4 = this.finishNode(t3, "TSArrayType");
        } else {
          var r3 = this.startNodeAtNode(e4);
          r3.objectType = e4, r3.indexType = this.tsParseType(), this.expect(l.bracketR), e4 = this.finishNode(r3, "TSIndexedAccessType");
        }
        return e4;
      }, r2.tsParseTypeOperator = function(e4) {
        var t3 = this.startNode();
        return this.expectContextual(e4), t3.operator = e4, t3.typeAnnotation = this.tsParseTypeOperatorOrHigher(), this.finishNode(t3, "TSTypeOperator");
      }, r2.tsParseInferType = function() {
        var e4 = this.startNode();
        this.expectContextual("infer");
        var t3 = this.startNode();
        return t3.name = this.parseIdentifierName(t3.start), e4.typeParameter = this.finishNode(t3, "TSTypeParameter"), this.finishNode(e4, "TSInferType");
      }, r2.tsParseTypeOperatorOrHigher = function() {
        var e4 = this, t3 = ["keyof", "unique"].find(function(t4) {
          return e4.isContextual(t4);
        });
        return t3 ? this.tsParseTypeOperator(t3) : this.isContextual("infer") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();
      }, r2.tsParseUnionOrIntersectionType = function(e4, t3, r3) {
        this.eat(r3);
        var n2 = t3();
        if (this.match(r3)) {
          for (var i2 = [n2]; this.eat(r3); ) i2.push(t3());
          var a2 = this.startNodeAtNode(n2);
          a2.types = i2, n2 = this.finishNode(a2, e4);
        }
        return n2;
      }, r2.tsParseIntersectionTypeOrHigher = function() {
        return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), l.bitwiseAND);
      }, r2.tsParseUnionTypeOrHigher = function() {
        return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), l.bitwiseOR);
      }, r2.tsIsStartOfFunctionType = function() {
        return !!this.isRelational("<") || this.match(l.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
      }, r2.tsSkipParameterStart = function() {
        return !(!this.match(l.name) && !this.match(l._this) || (this.next(), 0));
      }, r2.tsIsUnambiguouslyStartOfFunctionType = function() {
        if (this.next(), this.match(l.parenR) || this.match(l.ellipsis)) return true;
        if (this.tsSkipParameterStart()) {
          if (this.match(l.colon) || this.match(l.comma) || this.match(l.question) || this.match(l.eq)) return true;
          if (this.match(l.parenR) && (this.next(), this.match(l.arrow))) return true;
        }
        return false;
      }, r2.tsParseTypeOrTypePredicateAnnotation = function(e4) {
        var t3 = this;
        return this.tsInType(function() {
          var r3 = t3.startNode();
          t3.expect(e4);
          var n2 = t3.tsIsIdentifier() && t3.tsTryParse(t3.tsParseTypePredicatePrefix.bind(t3));
          if (!n2) return t3.tsParseTypeAnnotation(false, r3);
          var i2 = t3.tsParseTypeAnnotation(false), a2 = t3.startNodeAtNode(n2);
          return a2.parameterName = n2, a2.typeAnnotation = i2, r3.typeAnnotation = t3.finishNode(a2, "TSTypePredicate"), t3.finishNode(r3, "TSTypeAnnotation");
        });
      }, r2.tsTryParseTypeOrTypePredicateAnnotation = function() {
        return this.match(l.colon) ? this.tsParseTypeOrTypePredicateAnnotation(l.colon) : void 0;
      }, r2.tsTryParseTypeAnnotation = function() {
        return this.match(l.colon) ? this.tsParseTypeAnnotation() : void 0;
      }, r2.tsTryParseType = function() {
        return this.tsEatThenParseType(l.colon);
      }, r2.tsParseTypePredicatePrefix = function() {
        var e4 = this.parseIdentifier();
        if (this.isContextual("is") && !this.hasPrecedingLineBreak()) return this.next(), e4;
      }, r2.tsParseTypeAnnotation = function(e4, t3) {
        var r3 = this;
        return void 0 === e4 && (e4 = true), void 0 === t3 && (t3 = this.startNode()), this.tsInType(function() {
          e4 && r3.expect(l.colon), t3.typeAnnotation = r3.tsParseType();
        }), this.finishNode(t3, "TSTypeAnnotation");
      }, r2.tsParseType = function() {
        ie(this.state.inType);
        var e4 = this.tsParseNonConditionalType();
        if (this.hasPrecedingLineBreak() || !this.eat(l._extends)) return e4;
        var t3 = this.startNodeAtNode(e4);
        return t3.checkType = e4, t3.extendsType = this.tsParseNonConditionalType(), this.expect(l.question), t3.trueType = this.tsParseType(), this.expect(l.colon), t3.falseType = this.tsParseType(), this.finishNode(t3, "TSConditionalType");
      }, r2.tsParseNonConditionalType = function() {
        return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(l._new) ? this.tsParseFunctionOrConstructorType("TSConstructorType") : this.tsParseUnionTypeOrHigher();
      }, r2.tsParseTypeAssertion = function() {
        var e4 = this, t3 = this.startNode();
        return t3.typeAnnotation = this.tsInType(function() {
          return e4.tsParseType();
        }), this.expectRelational(">"), t3.expression = this.parseMaybeUnary(), this.finishNode(t3, "TSTypeAssertion");
      }, r2.tsParseHeritageClause = function() {
        return this.tsParseDelimitedList("HeritageClauseElement", this.tsParseExpressionWithTypeArguments.bind(this));
      }, r2.tsParseExpressionWithTypeArguments = function() {
        var e4 = this.startNode();
        return e4.expression = this.tsParseEntityName(false), this.isRelational("<") && (e4.typeParameters = this.tsParseTypeArguments()), this.finishNode(e4, "TSExpressionWithTypeArguments");
      }, r2.tsParseInterfaceDeclaration = function(e4) {
        e4.id = this.parseIdentifier(), e4.typeParameters = this.tsTryParseTypeParameters(), this.eat(l._extends) && (e4.extends = this.tsParseHeritageClause());
        var t3 = this.startNode();
        return t3.body = this.tsParseObjectTypeMembers(), e4.body = this.finishNode(t3, "TSInterfaceBody"), this.finishNode(e4, "TSInterfaceDeclaration");
      }, r2.tsParseTypeAliasDeclaration = function(e4) {
        return e4.id = this.parseIdentifier(), e4.typeParameters = this.tsTryParseTypeParameters(), e4.typeAnnotation = this.tsExpectThenParseType(l.eq), this.semicolon(), this.finishNode(e4, "TSTypeAliasDeclaration");
      }, r2.tsInNoContext = function(e4) {
        var t3 = this.state.context;
        this.state.context = [t3[0]];
        try {
          return e4();
        } finally {
          this.state.context = t3;
        }
      }, r2.tsInType = function(e4) {
        var t3 = this.state.inType;
        this.state.inType = true;
        try {
          return e4();
        } finally {
          this.state.inType = t3;
        }
      }, r2.tsEatThenParseType = function(e4) {
        return this.match(e4) ? this.tsNextThenParseType() : void 0;
      }, r2.tsExpectThenParseType = function(e4) {
        var t3 = this;
        return this.tsDoThenParseType(function() {
          return t3.expect(e4);
        });
      }, r2.tsNextThenParseType = function() {
        var e4 = this;
        return this.tsDoThenParseType(function() {
          return e4.next();
        });
      }, r2.tsDoThenParseType = function(e4) {
        var t3 = this;
        return this.tsInType(function() {
          return e4(), t3.tsParseType();
        });
      }, r2.tsParseEnumMember = function() {
        var e4 = this.startNode();
        return e4.id = this.match(l.string) ? this.parseLiteral(this.state.value, "StringLiteral") : this.parseIdentifier(true), this.eat(l.eq) && (e4.initializer = this.parseMaybeAssign()), this.finishNode(e4, "TSEnumMember");
      }, r2.tsParseEnumDeclaration = function(e4, t3) {
        return t3 && (e4.const = true), e4.id = this.parseIdentifier(), this.expect(l.braceL), e4.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(l.braceR), this.finishNode(e4, "TSEnumDeclaration");
      }, r2.tsParseModuleBlock = function() {
        var e4 = this.startNode();
        return this.expect(l.braceL), this.parseBlockOrModuleBlockBody(e4.body = [], void 0, true, l.braceR), this.finishNode(e4, "TSModuleBlock");
      }, r2.tsParseModuleOrNamespaceDeclaration = function(e4) {
        if (e4.id = this.parseIdentifier(), this.eat(l.dot)) {
          var t3 = this.startNode();
          this.tsParseModuleOrNamespaceDeclaration(t3), e4.body = t3;
        } else e4.body = this.tsParseModuleBlock();
        return this.finishNode(e4, "TSModuleDeclaration");
      }, r2.tsParseAmbientExternalModuleDeclaration = function(e4) {
        return this.isContextual("global") ? (e4.global = true, e4.id = this.parseIdentifier()) : this.match(l.string) ? e4.id = this.parseExprAtom() : this.unexpected(), this.match(l.braceL) ? e4.body = this.tsParseModuleBlock() : this.semicolon(), this.finishNode(e4, "TSModuleDeclaration");
      }, r2.tsParseImportEqualsDeclaration = function(e4, t3) {
        return e4.isExport = t3 || false, e4.id = this.parseIdentifier(), this.expect(l.eq), e4.moduleReference = this.tsParseModuleReference(), this.semicolon(), this.finishNode(e4, "TSImportEqualsDeclaration");
      }, r2.tsIsExternalModuleReference = function() {
        return this.isContextual("require") && this.lookahead().type === l.parenL;
      }, r2.tsParseModuleReference = function() {
        return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);
      }, r2.tsParseExternalModuleReference = function() {
        var e4 = this.startNode();
        if (this.expectContextual("require"), this.expect(l.parenL), !this.match(l.string)) throw this.unexpected();
        return e4.expression = this.parseLiteral(this.state.value, "StringLiteral"), this.expect(l.parenR), this.finishNode(e4, "TSExternalModuleReference");
      }, r2.tsLookAhead = function(e4) {
        var t3 = this.state.clone(), r3 = e4();
        return this.state = t3, r3;
      }, r2.tsTryParseAndCatch = function(e4) {
        var t3 = this.state.clone();
        try {
          return e4();
        } catch (e5) {
          if (e5 instanceof SyntaxError) return void (this.state = t3);
          throw e5;
        }
      }, r2.tsTryParse = function(e4) {
        var t3 = this.state.clone(), r3 = e4();
        return void 0 !== r3 && false !== r3 ? r3 : void (this.state = t3);
      }, r2.nodeWithSamePosition = function(e4, t3) {
        var r3 = this.startNodeAtNode(e4);
        return r3.type = t3, r3.end = e4.end, r3.loc.end = e4.loc.end, e4.leadingComments && (r3.leadingComments = e4.leadingComments), e4.trailingComments && (r3.trailingComments = e4.trailingComments), e4.innerComments && (r3.innerComments = e4.innerComments), r3;
      }, r2.tsTryParseDeclare = function(e4) {
        switch (this.state.type) {
          case l._function:
            return this.next(), this.parseFunction(e4, true);
          case l._class:
            return this.parseClass(e4, true, false);
          case l._const:
            if (this.match(l._const) && this.isLookaheadContextual("enum")) return this.expect(l._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(e4, true);
          case l._var:
          case l._let:
            return this.parseVarStatement(e4, this.state.type);
          case l.name:
            var t3 = this.state.value;
            return "global" === t3 ? this.tsParseAmbientExternalModuleDeclaration(e4) : this.tsParseDeclaration(e4, t3, true);
        }
      }, r2.tsTryParseExportDeclaration = function() {
        return this.tsParseDeclaration(this.startNode(), this.state.value, true);
      }, r2.tsParseExpressionStatement = function(e4, t3) {
        switch (t3.name) {
          case "declare":
            var r3 = this.tsTryParseDeclare(e4);
            if (r3) return r3.declare = true, r3;
            break;
          case "global":
            if (this.match(l.braceL)) {
              var n2 = e4;
              return n2.global = true, n2.id = t3, n2.body = this.tsParseModuleBlock(), this.finishNode(n2, "TSModuleDeclaration");
            }
            break;
          default:
            return this.tsParseDeclaration(e4, t3.name, false);
        }
      }, r2.tsParseDeclaration = function(e4, t3, r3) {
        switch (t3) {
          case "abstract":
            if (r3 || this.match(l._class)) {
              var n2 = e4;
              return n2.abstract = true, r3 && this.next(), this.parseClass(n2, true, false);
            }
            break;
          case "enum":
            if (r3 || this.match(l.name)) return r3 && this.next(), this.tsParseEnumDeclaration(e4, false);
            break;
          case "interface":
            if (r3 || this.match(l.name)) return r3 && this.next(), this.tsParseInterfaceDeclaration(e4);
            break;
          case "module":
            if (r3 && this.next(), this.match(l.string)) return this.tsParseAmbientExternalModuleDeclaration(e4);
            if (r3 || this.match(l.name)) return this.tsParseModuleOrNamespaceDeclaration(e4);
            break;
          case "namespace":
            if (r3 || this.match(l.name)) return r3 && this.next(), this.tsParseModuleOrNamespaceDeclaration(e4);
            break;
          case "type":
            if (r3 || this.match(l.name)) return r3 && this.next(), this.tsParseTypeAliasDeclaration(e4);
        }
      }, r2.tsTryParseGenericAsyncArrowFunction = function(t3, r3) {
        var n2 = this, i2 = this.tsTryParseAndCatch(function() {
          var i3 = n2.startNodeAt(t3, r3);
          return i3.typeParameters = n2.tsParseTypeParameters(), e3.prototype.parseFunctionParams.call(n2, i3), i3.returnType = n2.tsTryParseTypeOrTypePredicateAnnotation(), n2.expect(l.arrow), i3;
        });
        if (i2) return i2.id = null, i2.generator = false, i2.expression = true, i2.async = true, this.parseFunctionBody(i2, true), this.finishNode(i2, "ArrowFunctionExpression");
      }, r2.tsParseTypeArguments = function() {
        var e4 = this, t3 = this.startNode();
        return t3.params = this.tsInType(function() {
          return e4.tsInNoContext(function() {
            return e4.expectRelational("<"), e4.tsParseDelimitedList("TypeParametersOrArguments", e4.tsParseType.bind(e4));
          });
        }), this.state.exprAllowed = false, this.expectRelational(">"), this.finishNode(t3, "TSTypeParameterInstantiation");
      }, r2.tsIsDeclarationStart = function() {
        if (this.match(l.name)) switch (this.state.value) {
          case "abstract":
          case "declare":
          case "enum":
          case "interface":
          case "module":
          case "namespace":
          case "type":
            return true;
        }
        return false;
      }, r2.isExportDefaultSpecifier = function() {
        return !this.tsIsDeclarationStart() && e3.prototype.isExportDefaultSpecifier.call(this);
      }, r2.parseAssignableListItem = function(e4, t3) {
        var r3, n2 = false;
        e4 && (r3 = this.parseAccessModifier(), n2 = !!this.tsParseModifier(["readonly"]));
        var i2 = this.parseMaybeDefault();
        this.parseAssignableListItemTypes(i2);
        var a2 = this.parseMaybeDefault(i2.start, i2.loc.start, i2);
        if (r3 || n2) {
          var o2 = this.startNodeAtNode(a2);
          if (t3.length && (o2.decorators = t3), r3 && (o2.accessibility = r3), n2 && (o2.readonly = n2), "Identifier" !== a2.type && "AssignmentPattern" !== a2.type) throw this.raise(o2.start, "A parameter property may not be declared using a binding pattern.");
          return o2.parameter = a2, this.finishNode(o2, "TSParameterProperty");
        }
        return t3.length && (i2.decorators = t3), a2;
      }, r2.parseFunctionBodyAndFinish = function(t3, r3, n2) {
        !n2 && this.match(l.colon) && (t3.returnType = this.tsParseTypeOrTypePredicateAnnotation(l.colon));
        var i2 = "FunctionDeclaration" === r3 ? "TSDeclareFunction" : "ClassMethod" === r3 ? "TSDeclareMethod" : void 0;
        i2 && !this.match(l.braceL) && this.isLineTerminator() ? this.finishNode(t3, i2) : e3.prototype.parseFunctionBodyAndFinish.call(this, t3, r3, n2);
      }, r2.parseSubscript = function(t3, r3, n2, i2, a2) {
        var o2 = this;
        if (!this.hasPrecedingLineBreak() && this.match(l.bang)) {
          this.state.exprAllowed = false, this.next();
          var s2 = this.startNodeAt(r3, n2);
          return s2.expression = t3, this.finishNode(s2, "TSNonNullExpression");
        }
        var u2 = this.tsTryParseAndCatch(function() {
          if (o2.isRelational("<")) {
            if (!i2 && o2.atPossibleAsync(t3)) {
              var e4 = o2.tsTryParseGenericAsyncArrowFunction(r3, n2);
              if (e4) return e4;
            }
            var s3 = o2.startNodeAt(r3, n2);
            s3.callee = t3;
            var u3 = o2.tsParseTypeArguments();
            if (u3) {
              if (!i2 && o2.eat(l.parenL)) return s3.arguments = o2.parseCallExpressionArguments(l.parenR, false), s3.typeParameters = u3, o2.finishCallExpression(s3);
              if (o2.match(l.backQuote)) return o2.parseTaggedTemplateExpression(r3, n2, t3, a2, u3);
            }
          }
          o2.unexpected();
        });
        return u2 || e3.prototype.parseSubscript.call(this, t3, r3, n2, i2, a2);
      }, r2.parseNewArguments = function(t3) {
        var r3 = this;
        if (this.isRelational("<")) {
          var n2 = this.tsTryParseAndCatch(function() {
            var e4 = r3.tsParseTypeArguments();
            return r3.match(l.parenL) || r3.unexpected(), e4;
          });
          n2 && (t3.typeParameters = n2);
        }
        e3.prototype.parseNewArguments.call(this, t3);
      }, r2.parseExprOp = function(t3, r3, n2, i2, a2) {
        if (ne(l._in.binop) > i2 && !this.hasPrecedingLineBreak() && this.isContextual("as")) {
          var o2 = this.startNodeAt(r3, n2);
          return o2.expression = t3, o2.typeAnnotation = this.tsNextThenParseType(), this.finishNode(o2, "TSAsExpression"), this.parseExprOp(o2, r3, n2, i2, a2);
        }
        return e3.prototype.parseExprOp.call(this, t3, r3, n2, i2, a2);
      }, r2.checkReservedWord = function(e4, t3, r3, n2) {
      }, r2.checkDuplicateExports = function() {
      }, r2.parseImport = function(t3) {
        return this.match(l.name) && this.lookahead().type === l.eq ? this.tsParseImportEqualsDeclaration(t3) : e3.prototype.parseImport.call(this, t3);
      }, r2.parseExport = function(t3) {
        if (this.match(l._import)) return this.expect(l._import), this.tsParseImportEqualsDeclaration(t3, true);
        if (this.eat(l.eq)) {
          var r3 = t3;
          return r3.expression = this.parseExpression(), this.semicolon(), this.finishNode(r3, "TSExportAssignment");
        }
        if (this.eatContextual("as")) {
          var n2 = t3;
          return this.expectContextual("namespace"), n2.id = this.parseIdentifier(), this.semicolon(), this.finishNode(n2, "TSNamespaceExportDeclaration");
        }
        return e3.prototype.parseExport.call(this, t3);
      }, r2.isAbstractClass = function() {
        return this.isContextual("abstract") && this.lookahead().type === l._class;
      }, r2.parseExportDefaultExpression = function() {
        if (this.isAbstractClass()) {
          var t3 = this.startNode();
          return this.next(), this.parseClass(t3, true, true), t3.abstract = true, t3;
        }
        if ("interface" === this.state.value) {
          var r3 = this.tsParseDeclaration(this.startNode(), this.state.value, true);
          if (r3) return r3;
        }
        return e3.prototype.parseExportDefaultExpression.call(this);
      }, r2.parseStatementContent = function(t3, r3) {
        if (this.state.type === l._const) {
          var n2 = this.lookahead();
          if (n2.type === l.name && "enum" === n2.value) {
            var i2 = this.startNode();
            return this.expect(l._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(i2, true);
          }
        }
        return e3.prototype.parseStatementContent.call(this, t3, r3);
      }, r2.parseAccessModifier = function() {
        return this.tsParseModifier(["public", "protected", "private"]);
      }, r2.parseClassMember = function(t3, r3, n2) {
        var i2 = this.parseAccessModifier();
        i2 && (r3.accessibility = i2), e3.prototype.parseClassMember.call(this, t3, r3, n2);
      }, r2.parseClassMemberWithIsStatic = function(t3, r3, n2, i2) {
        var a2 = r3, o2 = r3, s2 = r3, u2 = false, l2 = false;
        switch (this.tsParseModifier(["abstract", "readonly"])) {
          case "readonly":
            l2 = true, u2 = !!this.tsParseModifier(["abstract"]);
            break;
          case "abstract":
            u2 = true, l2 = !!this.tsParseModifier(["readonly"]);
        }
        if (u2 && (a2.abstract = true), l2 && (s2.readonly = true), !u2 && !i2 && !a2.accessibility) {
          var c2 = this.tsTryParseIndexSignature(r3);
          if (c2) return void t3.body.push(c2);
        }
        if (l2) return a2.static = i2, this.parseClassPropertyName(o2), this.parsePostMemberNameModifiers(a2), void this.pushClassProperty(t3, o2);
        e3.prototype.parseClassMemberWithIsStatic.call(this, t3, r3, n2, i2);
      }, r2.parsePostMemberNameModifiers = function(e4) {
        this.eat(l.question) && (e4.optional = true);
      }, r2.parseExpressionStatement = function(t3, r3) {
        return ("Identifier" === r3.type ? this.tsParseExpressionStatement(t3, r3) : void 0) || e3.prototype.parseExpressionStatement.call(this, t3, r3);
      }, r2.shouldParseExportDeclaration = function() {
        return !!this.tsIsDeclarationStart() || e3.prototype.shouldParseExportDeclaration.call(this);
      }, r2.parseConditional = function(t3, r3, n2, i2, a2) {
        if (!a2 || !this.match(l.question)) return e3.prototype.parseConditional.call(this, t3, r3, n2, i2, a2);
        var o2 = this.state.clone();
        try {
          return e3.prototype.parseConditional.call(this, t3, r3, n2, i2);
        } catch (e4) {
          if (!(e4 instanceof SyntaxError)) throw e4;
          return this.state = o2, a2.start = e4.pos || this.state.start, t3;
        }
      }, r2.parseParenItem = function(t3, r3, n2) {
        if (t3 = e3.prototype.parseParenItem.call(this, t3, r3, n2), this.eat(l.question) && (t3.optional = true), this.match(l.colon)) {
          var i2 = this.startNodeAt(r3, n2);
          return i2.expression = t3, i2.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(i2, "TSTypeCastExpression");
        }
        return t3;
      }, r2.parseExportDeclaration = function(t3) {
        var r3, n2 = this.eatContextual("declare");
        return this.match(l.name) && (r3 = this.tsTryParseExportDeclaration()), r3 || (r3 = e3.prototype.parseExportDeclaration.call(this, t3)), r3 && n2 && (r3.declare = true), r3;
      }, r2.parseClassId = function(t3, r3, n2) {
        if (r3 && !n2 || !this.isContextual("implements")) {
          e3.prototype.parseClassId.apply(this, arguments);
          var i2 = this.tsTryParseTypeParameters();
          i2 && (t3.typeParameters = i2);
        }
      }, r2.parseClassProperty = function(t3) {
        !t3.optional && this.eat(l.bang) && (t3.definite = true);
        var r3 = this.tsTryParseTypeAnnotation();
        return r3 && (t3.typeAnnotation = r3), e3.prototype.parseClassProperty.call(this, t3);
      }, r2.pushClassMethod = function(t3, r3, n2, i2, a2) {
        var o2 = this.tsTryParseTypeParameters();
        o2 && (r3.typeParameters = o2), e3.prototype.pushClassMethod.call(this, t3, r3, n2, i2, a2);
      }, r2.pushClassPrivateMethod = function(t3, r3, n2, i2) {
        var a2 = this.tsTryParseTypeParameters();
        a2 && (r3.typeParameters = a2), e3.prototype.pushClassPrivateMethod.call(this, t3, r3, n2, i2);
      }, r2.parseClassSuper = function(t3) {
        e3.prototype.parseClassSuper.call(this, t3), t3.superClass && this.isRelational("<") && (t3.superTypeParameters = this.tsParseTypeArguments()), this.eatContextual("implements") && (t3.implements = this.tsParseHeritageClause());
      }, r2.parseObjPropValue = function(t3) {
        var r3;
        if (this.isRelational("<")) throw new Error("TODO");
        for (var n2 = arguments.length, i2 = new Array(n2 > 1 ? n2 - 1 : 0), a2 = 1; a2 < n2; a2++) i2[a2 - 1] = arguments[a2];
        (r3 = e3.prototype.parseObjPropValue).call.apply(r3, [this, t3].concat(i2));
      }, r2.parseFunctionParams = function(t3, r3) {
        var n2 = this.tsTryParseTypeParameters();
        n2 && (t3.typeParameters = n2), e3.prototype.parseFunctionParams.call(this, t3, r3);
      }, r2.parseVarHead = function(t3) {
        e3.prototype.parseVarHead.call(this, t3), "Identifier" === t3.id.type && this.eat(l.bang) && (t3.definite = true);
        var r3 = this.tsTryParseTypeAnnotation();
        r3 && (t3.id.typeAnnotation = r3, this.finishNode(t3.id, t3.id.type));
      }, r2.parseAsyncArrowFromCallExpression = function(t3, r3) {
        return this.match(l.colon) && (t3.returnType = this.tsParseTypeAnnotation()), e3.prototype.parseAsyncArrowFromCallExpression.call(this, t3, r3);
      }, r2.parseMaybeAssign = function() {
        for (var t3, r3, n2, i2, a2 = arguments.length, o2 = new Array(a2), s2 = 0; s2 < a2; s2++) o2[s2] = arguments[s2];
        if (this.match(l.jsxTagStart)) {
          ie(this.curContext() === j.j_oTag), ie(this.state.context[this.state.context.length - 2] === j.j_expr);
          var u2 = this.state.clone();
          try {
            var c2;
            return (c2 = e3.prototype.parseMaybeAssign).call.apply(c2, [this].concat(o2));
          } catch (e4) {
            if (!(e4 instanceof SyntaxError)) throw e4;
            this.state = u2, ie(this.curContext() === j.j_oTag), this.state.context.pop(), ie(this.curContext() === j.j_expr), this.state.context.pop(), t3 = e4;
          }
        }
        if (void 0 === t3 && !this.isRelational("<")) return (r3 = e3.prototype.parseMaybeAssign).call.apply(r3, [this].concat(o2));
        var f2 = this.state.clone();
        try {
          var p2;
          i2 = this.tsParseTypeParameters(), "ArrowFunctionExpression" !== (n2 = (p2 = e3.prototype.parseMaybeAssign).call.apply(p2, [this].concat(o2))).type && this.unexpected();
        } catch (r4) {
          var d2;
          if (!(r4 instanceof SyntaxError)) throw r4;
          if (t3) throw t3;
          return ie(!this.hasPlugin("jsx")), this.state = f2, (d2 = e3.prototype.parseMaybeAssign).call.apply(d2, [this].concat(o2));
        }
        return i2 && 0 !== i2.params.length && this.resetStartLocationFromNode(n2, i2.params[0]), n2.typeParameters = i2, n2;
      }, r2.parseMaybeUnary = function(t3) {
        return !this.hasPlugin("jsx") && this.eatRelational("<") ? this.tsParseTypeAssertion() : e3.prototype.parseMaybeUnary.call(this, t3);
      }, r2.parseArrow = function(t3) {
        if (this.match(l.colon)) {
          var r3 = this.state.clone();
          try {
            var n2 = this.tsParseTypeOrTypePredicateAnnotation(l.colon);
            this.canInsertSemicolon() && this.unexpected(), this.match(l.arrow) || this.unexpected(), t3.returnType = n2;
          } catch (e4) {
            if (!(e4 instanceof SyntaxError)) throw e4;
            this.state = r3;
          }
        }
        return e3.prototype.parseArrow.call(this, t3);
      }, r2.parseAssignableListItemTypes = function(e4) {
        if (this.eat(l.question)) {
          if ("Identifier" !== e4.type) throw this.raise(e4.start, "A binding pattern parameter cannot be optional in an implementation signature.");
          e4.optional = true;
        }
        var t3 = this.tsTryParseTypeAnnotation();
        return t3 && (e4.typeAnnotation = t3), this.finishNode(e4, e4.type);
      }, r2.toAssignable = function(t3, r3, n2) {
        switch (t3.type) {
          case "TSTypeCastExpression":
            return e3.prototype.toAssignable.call(this, this.typeCastToParameter(t3), r3, n2);
          case "TSParameterProperty":
            return e3.prototype.toAssignable.call(this, t3, r3, n2);
          case "TSAsExpression":
          case "TSNonNullExpression":
          case "TSTypeAssertion":
            return t3.expression = this.toAssignable(t3.expression, r3, n2), t3;
          default:
            return e3.prototype.toAssignable.call(this, t3, r3, n2);
        }
      }, r2.checkLVal = function(t3, r3, n2, i2) {
        switch (t3.type) {
          case "TSTypeCastExpression":
            return;
          case "TSParameterProperty":
            return void this.checkLVal(t3.parameter, r3, n2, "parameter property");
          case "TSAsExpression":
          case "TSNonNullExpression":
          case "TSTypeAssertion":
            return void this.checkLVal(t3.expression, r3, n2, i2);
          default:
            return void e3.prototype.checkLVal.call(this, t3, r3, n2, i2);
        }
      }, r2.parseBindingAtom = function() {
        switch (this.state.type) {
          case l._this:
            return this.parseIdentifier(true);
          default:
            return e3.prototype.parseBindingAtom.call(this);
        }
      }, r2.isClassMethod = function() {
        return this.isRelational("<") || e3.prototype.isClassMethod.call(this);
      }, r2.isClassProperty = function() {
        return this.match(l.bang) || this.match(l.colon) || e3.prototype.isClassProperty.call(this);
      }, r2.parseMaybeDefault = function() {
        for (var t3, r3 = arguments.length, n2 = new Array(r3), i2 = 0; i2 < r3; i2++) n2[i2] = arguments[i2];
        var a2 = (t3 = e3.prototype.parseMaybeDefault).call.apply(t3, [this].concat(n2));
        return "AssignmentPattern" === a2.type && a2.typeAnnotation && a2.right.start < a2.typeAnnotation.start && this.raise(a2.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"), a2;
      }, r2.readToken = function(t3) {
        return !this.state.inType || 62 !== t3 && 60 !== t3 ? e3.prototype.readToken.call(this, t3) : this.finishOp(l.relational, 1);
      }, r2.toAssignableList = function(t3, r3, n2) {
        for (var i2 = 0; i2 < t3.length; i2++) {
          var a2 = t3[i2];
          a2 && "TSTypeCastExpression" === a2.type && (t3[i2] = this.typeCastToParameter(a2));
        }
        return e3.prototype.toAssignableList.call(this, t3, r3, n2);
      }, r2.typeCastToParameter = function(e4) {
        return e4.expression.typeAnnotation = e4.typeAnnotation, this.finishNodeAt(e4.expression, e4.expression.type, e4.typeAnnotation.end, e4.typeAnnotation.loc.end);
      }, r2.toReferencedList = function(e4) {
        for (var t3 = 0; t3 < e4.length; t3++) {
          var r3 = e4[t3];
          r3 && r3._exprListItem && "TsTypeCastExpression" === r3.type && this.raise(r3.start, "Did not expect a type annotation here.");
        }
        return e4;
      }, r2.shouldParseArrow = function() {
        return this.match(l.colon) || e3.prototype.shouldParseArrow.call(this);
      }, r2.shouldParseAsyncArrow = function() {
        return this.match(l.colon) || e3.prototype.shouldParseAsyncArrow.call(this);
      }, r2.canHaveLeadingDecorator = function() {
        return e3.prototype.canHaveLeadingDecorator.call(this) || this.isAbstractClass();
      }, r2.jsxParseOpeningElementAfterName = function(t3) {
        var r3 = this, n2 = this.tsTryParseAndCatch(function() {
          return r3.tsParseTypeArguments();
        });
        return n2 && (t3.typeParameters = n2), e3.prototype.jsxParseOpeningElementAfterName.call(this, t3);
      }, t2;
    })(e2);
  } };
  function ce(e2, t2) {
    var r2 = re;
    return e2 && e2.plugins && (!(function(e3) {
      if (ae(e3, "decorators")) {
        if (ae(e3, "decorators-legacy")) throw new Error("Cannot use the decorators and decorators-legacy plugin together");
        var t3 = oe(e3, "decorators", "decoratorsBeforeExport");
        if (null == t3) throw new Error("The 'decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean.");
        if ("boolean" != typeof t3) throw new Error("'decoratorsBeforeExport' must be a boolean.");
      }
      if (ae(e3, "flow") && ae(e3, "typescript")) throw new Error("Cannot combine flow and typescript plugins.");
      if (ae(e3, "pipelineOperator") && !se.includes(oe(e3, "pipelineOperator", "proposal"))) throw new Error("'pipelineOperator' requires 'proposal' option whose value should be one of: " + se.join(", "));
    })(e2.plugins), r2 = (function(e3) {
      var t3 = ue.filter(function(t4) {
        return ae(e3, t4);
      }), r3 = t3.join("/"), n2 = fe[r3];
      if (!n2) {
        n2 = re;
        for (var i2 = 0; i2 < t3.length; i2++) {
          var a2 = t3[i2];
          n2 = le[a2](n2);
        }
        fe[r3] = n2;
      }
      return n2;
    })(e2.plugins)), new r2(e2, t2);
  }
  var fe = {};
  t.parse = function(e2, t2) {
    if (!t2 || "unambiguous" !== t2.sourceType) return ce(t2, e2).parse();
    t2 = Object.assign({}, t2);
    try {
      t2.sourceType = "module";
      var r2 = ce(t2, e2), n2 = r2.parse();
      return r2.sawUnambiguousESM || (n2.program.sourceType = "script"), n2;
    } catch (r3) {
      try {
        return t2.sourceType = "script", ce(t2, e2).parse();
      } catch (e3) {
      }
      throw r3;
    }
  }, t.parseExpression = function(e2, t2) {
    var r2 = ce(t2, e2);
    return r2.options.strictMode && (r2.state.strict = true), r2.getExpression();
  }, t.tokTypes = l;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2, r2) {
    return t2 && i(e2.prototype, t2), r2 && i(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.PathConditions = t.SourceFileCollection = t.ElementSize = void 0;
  r(0), r(7), r(10), r(4);
  var o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  t.ElementSize = { Float32: 4, Float64: 8, Int8: 1, Int16: 2, Int32: 4, Uint8: 1, Uint16: 2, Uint32: 4, Uint8Clamped: 1 };
  var s = (function() {
    function e2(t2) {
      n(this, e2), this._sourceFiles = t2;
    }
    return a(e2, [{ key: "toArray", value: function() {
      return (0, o.default)(void 0 !== this._sourceFiles), this._sourceFiles;
    } }, { key: "destroy", value: function() {
      this._sourceFiles = void 0;
    } }]), e2;
  })();
  t.SourceFileCollection = s;
  var u = (function() {
    function e2() {
      n(this, e2);
    }
    return a(e2, [{ key: "add", value: function(e3) {
    } }, { key: "implies", value: function(e3) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      return false;
    } }, { key: "impliesNot", value: function(e3) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      return false;
    } }, { key: "isEmpty", value: function() {
      return false;
    } }, { key: "isReadOnly", value: function() {
      return false;
    } }, { key: "getLength", value: function() {
      return 0;
    } }, { key: "getAssumedConditions", value: function() {
      return /* @__PURE__ */ new Set();
    } }, { key: "refineBaseConditons", value: function(e3) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
    } }]), e2;
  })();
  t.PathConditions = u;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2) {
    return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.validate = d, t.typeIs = h, t.validateType = function(e2) {
    return d(h(e2));
  }, t.validateOptional = function(e2) {
    return { validate: e2, optional: true };
  }, t.validateOptionalType = function(e2) {
    return { validate: h(e2), optional: true };
  }, t.arrayOf = v, t.arrayOfType = y, t.validateArrayOfType = function(e2) {
    return d(y(e2));
  }, t.assertEach = m, t.assertOneOf = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    function n2(e3, r3, n3) {
      if (t2.indexOf(n3) < 0) throw new TypeError("Property ".concat(r3, " expected value to be one of ").concat(JSON.stringify(t2), " but got ").concat(JSON.stringify(n3)));
    }
    return n2.oneOf = t2, n2;
  }, t.assertNodeType = b, t.assertNodeOrValueType = function() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    function n2(e3, r3, n3) {
      for (var i2 = false, o2 = 0; o2 < t2.length; o2++) {
        var s2 = t2[o2];
        if (p(n3) === s2 || (0, a.default)(s2, n3)) {
          i2 = true;
          break;
        }
      }
      if (!i2) throw new TypeError("Property ".concat(r3, " of ").concat(e3.type, " expected node to be of a type ").concat(JSON.stringify(t2), " ") + "but instead got ".concat(JSON.stringify(n3 && n3.type)));
    }
    return n2.oneOfNodeOrValueTypes = t2, n2;
  }, t.assertValueType = g, t.chain = w, t.default = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r2 = t2.inherits && E[t2.inherits] || {}, n2 = t2.fields || r2.fields || {}, i2 = t2.visitor || r2.visitor || [], a2 = t2.aliases || r2.aliases || [], d2 = t2.builder || r2.builder || t2.visitor || [];
    t2.deprecatedAlias && (f[t2.deprecatedAlias] = e2);
    var h2 = true, v2 = false, y2 = void 0;
    try {
      for (var m2, b2 = i2.concat(d2)[Symbol.iterator](); !(h2 = (m2 = b2.next()).done); h2 = true) {
        var w2 = m2.value;
        n2[w2] = n2[w2] || {};
      }
    } catch (e3) {
      v2 = true, y2 = e3;
    } finally {
      try {
        h2 || null == b2.return || b2.return();
      } finally {
        if (v2) throw y2;
      }
    }
    for (var S in n2) {
      var T = n2[S];
      -1 === d2.indexOf(S) && (T.optional = true), void 0 === T.default ? T.default = null : T.validate || (T.validate = g(p(T.default)));
    }
    o[e2] = t2.visitor = i2, c[e2] = t2.builder = d2, l[e2] = t2.fields = n2, s[e2] = t2.aliases = a2, a2.forEach(function(t3) {
      u[t3] = u[t3] || [], u[t3].push(e2);
    }), E[e2] = t2;
  }, t.DEPRECATED_KEYS = t.BUILDER_KEYS = t.NODE_FIELDS = t.FLIPPED_ALIAS_KEYS = t.ALIAS_KEYS = t.VISITOR_KEYS = void 0;
  var a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(121));
  var o = {};
  t.VISITOR_KEYS = o;
  var s = {};
  t.ALIAS_KEYS = s;
  var u = {};
  t.FLIPPED_ALIAS_KEYS = u;
  var l = {};
  t.NODE_FIELDS = l;
  var c = {};
  t.BUILDER_KEYS = c;
  var f = {};
  function p(e2) {
    return Array.isArray(e2) ? "array" : null === e2 ? "null" : void 0 === e2 ? "undefined" : i(e2);
  }
  function d(e2) {
    return { validate: e2 };
  }
  function h(e2) {
    return "string" == typeof e2 ? b(e2) : b.apply(void 0, n(e2));
  }
  function v(e2) {
    return w(g("array"), m(e2));
  }
  function y(e2) {
    return v(h(e2));
  }
  function m(e2) {
    function t2(t3, r2, n2) {
      if (Array.isArray(n2)) for (var i2 = 0; i2 < n2.length; i2++) e2(t3, "".concat(r2, "[").concat(i2, "]"), n2[i2]);
    }
    return t2.each = e2, t2;
  }
  function b() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    function n2(e3, r3, n3) {
      for (var i2 = false, o2 = 0; o2 < t2.length; o2++) {
        var s2 = t2[o2];
        if ((0, a.default)(s2, n3)) {
          i2 = true;
          break;
        }
      }
      if (!i2) throw new TypeError("Property ".concat(r3, " of ").concat(e3.type, " expected node to be of a type ").concat(JSON.stringify(t2), " ") + "but instead got ".concat(JSON.stringify(n3 && n3.type)));
    }
    return n2.oneOfNodeTypes = t2, n2;
  }
  function g(e2) {
    function t2(t3, r2, n2) {
      if (!(p(n2) === e2)) throw new TypeError("Property ".concat(r2, " expected type of ").concat(e2, " but got ").concat(p(n2)));
    }
    return t2.type = e2, t2;
  }
  function w() {
    for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
    function n2() {
      for (var e3 = 0; e3 < t2.length; e3++) {
        t2[e3].apply(void 0, arguments);
      }
    }
    return n2.chainOf = t2, n2;
  }
  t.DEPRECATED_KEYS = f;
  var E = {};
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    if ("BlockStatement" !== e2.type && "Program" !== e2.type) return false;
    var t2 = e2.directives;
    return !!t2 && t2.some(function(e3) {
      return "Directive" === e3.type && "DirectiveLiteral" === e3.value.type && "use strict" === e3.value.value;
    });
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2, r2) {
    return t2 && a(e2.prototype, t2), r2 && a(e2, r2), e2;
  }
  function s(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function u(e2) {
    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function l(e2, t2) {
    return (l = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Modules = t.ModuleTracer = void 0;
  var c = r(10), f = r(4), p = r(8), d = r(3), h = r(2), v = r(0), y = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), m = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), b = (r(19), r(50)), g = r(6);
  var w = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return i(this, t2), (n2 = s(this, u(t2).call(this))).modules = e3, n2.evaluateForEffectsNesting = 0, n2.requireStack = [], n2.requireSequence = [], n2.logModules = r2, n2.uninitializedModuleIdsRequiredInEvaluateForEffects = /* @__PURE__ */ new Set(), n2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && l(e3, t3);
    })(t2, p.Tracer), o(t2, [{ key: "getStatistics", value: function() {
      return this.modules.getStatistics();
    } }, { key: "log", value: function(e3) {
      this.logModules && console.log("[modules] ".concat(this.requireStack.map(function(e4) {
        return "  ";
      }).join("")).concat(e3));
    } }, { key: "beginEvaluateForEffects", value: function(e3) {
      e3 !== this && (this.log(">evaluate for effects"), this.evaluateForEffectsNesting++, this.requireStack.push(void 0));
    } }, { key: "endEvaluateForEffects", value: function(e3, t3) {
      if (e3 !== this) {
        var r2 = this.requireStack.pop();
        (0, m.default)(void 0 === r2), this.evaluateForEffectsNesting--, this.log("<evaluate for effects");
      }
    } }, { key: "_callRequireAndRecord", value: function(e3, t3) {
      if (0 === this.requireStack.length || this.requireStack[this.requireStack.length - 1] !== e3) {
        this.requireStack.push(e3);
        try {
          var r2 = t3();
          return this.modules.moduleIds.has(e3) && this.modules.recordModuleInitialized(e3, r2), r2;
        } finally {
          (0, m.default)(this.requireStack.pop() === e3);
        }
      }
    } }, { key: "_tryExtractDependencies", value: function(e3) {
      var t3 = this;
      if (void 0 === e3 || e3 instanceof v.NullValue || e3 instanceof v.UndefinedValue) return [];
      if (e3 instanceof v.ArrayValue) {
        var r2 = (function() {
          var r3 = t3.modules.realm, n2 = (0, d.Get)(r3, e3, "length");
          if (n2 instanceof v.NumberValue) {
            for (var i2 = [], a2 = t3.modules.logger, o2 = function(t4) {
              var n3 = a2.tryQuery(function() {
                return (0, d.Get)(r3, e3, "" + t4);
              }, r3.intrinsics.undefined);
              i2.push(n3);
            }, s2 = 0; s2 < n2.value; s2++) o2(s2);
            return { v: i2 };
          }
        })();
        if ("object" === n(r2)) return r2.v;
      }
    } }, { key: "detourCall", value: function(e3, t3, r2, n2, i2) {
      var a2 = this.modules.getRequireInfo();
      if (void 0 !== a2 && e3 === a2.value && 1 === r2.length) {
        var o2, s2 = r2[0];
        if (!(s2 instanceof v.NumberValue || s2 instanceof v.StringValue)) return i2();
        o2 = s2.value;
        var u2 = this._callRequireAndRecord(o2, i2);
        if (e3.$Realm.eagerlyRequireModuleDependencies) {
          var l2 = this.modules.moduleDependencies.get(o2);
          if (void 0 === l2) this.modules.logger.logError(s2, "Cannot resolve module dependencies for ".concat(o2.toString(), "."));
          else {
            var c2 = true, f2 = false, p2 = void 0;
            try {
              for (var d2, h2 = l2[Symbol.iterator](); !(c2 = (d2 = h2.next()).done); c2 = true) {
                var y2 = d2.value;
                (y2 instanceof v.NumberValue || y2 instanceof v.StringValue) && this.modules.tryInitializeModule(y2.value, "Eager initialization of module ".concat(y2.value));
              }
            } catch (e4) {
              f2 = true, p2 = e4;
            } finally {
              try {
                c2 || null == h2.return || h2.return();
              } finally {
                if (f2) throw p2;
              }
            }
          }
        }
        return u2;
      }
      if (e3 === this.modules.getDefine()) {
        var m2 = r2[1];
        if (m2 instanceof v.NumberValue || m2 instanceof v.StringValue) {
          var b2 = m2.value, g2 = r2[0];
          if (g2 instanceof v.FunctionValue) {
            var w2 = this._tryExtractDependencies(r2[2]);
            void 0 !== w2 ? (this.modules.moduleDependencies.set(b2, w2), this.modules.factoryFunctionDependencies.set(g2, w2)) : this.modules.logger.logError(r2[2], "Third argument to define function is present but not a concrete array.");
          } else this.modules.logger.logError(g2, "First argument to define function is not a function value.");
          this.modules.moduleIds.add(b2);
        } else this.modules.logger.logError(m2, "Second argument to define function is not a number or string value.");
      }
    } }]), t2;
  })();
  t.ModuleTracer = w;
  var E = (function() {
    function e2(t2, r2, n2) {
      i(this, e2), this.realm = t2, this.logger = r2, this._define = t2.intrinsics.undefined, this.factoryFunctionDependencies = /* @__PURE__ */ new Map(), this.moduleDependencies = /* @__PURE__ */ new Map(), this.moduleIds = /* @__PURE__ */ new Set(), this.initializedModules = /* @__PURE__ */ new Map(), t2.tracers.push(this.moduleTracer = new w(this, n2));
    }
    return o(e2, [{ key: "getStatistics", value: function() {
      return (0, m.default)(this.realm.statistics instanceof b.SerializerStatistics, "serialization requires SerializerStatistics"), this.realm.statistics;
    } }, { key: "resolveInitializedModules", value: function() {
      var e3 = this._getGlobalProperty("__initializedModules");
      (0, m.default)(e3 instanceof v.ObjectValue);
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = e3.properties.keys()[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value, s2 = e3.properties.get(o2);
          if ((0, m.default)(s2), s2.descriptor instanceof g.PropertyDescriptor) {
            var u2 = s2.descriptor && s2.descriptor.value;
            u2 instanceof v.Value && !u2.mightHaveBeenDeleted() && this.initializedModules.set(o2, u2);
          }
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      this.getStatistics().initializedModules = this.initializedModules.size, this.getStatistics().totalModules = this.moduleIds.size;
    } }, { key: "_getGlobalProperty", value: function(e3) {
      if (this.active) return this.realm.intrinsics.undefined;
      this.active = true;
      try {
        var t2 = this.realm;
        return this.logger.tryQuery(function() {
          return (0, d.Get)(t2, t2.$GlobalObject, e3);
        }, t2.intrinsics.undefined);
      } finally {
        this.active = false;
      }
    } }, { key: "getRequireInfo", value: function() {
      if (void 0 === this._requireInfo) for (var e3 = ["require", "__r"], t2 = 0; t2 < e3.length; t2++) {
        var r2 = e3[t2], n2 = this._getGlobalProperty(r2);
        if (n2 instanceof v.FunctionValue) {
          this._requireInfo = { value: n2, globalName: r2 };
          break;
        }
      }
      return this._requireInfo;
    } }, { key: "getDefine", value: function() {
      return this._define instanceof v.FunctionValue || (this._define = this._getGlobalProperty("__d")), this._define;
    } }, { key: "getGetModuleIdIfNodeIsRequireFunction", value: function(e3, t2) {
      var r2 = this.realm, i2 = this.logger, a2 = this;
      return function(o2, s2) {
        if (y.isIdentifier(s2.callee) && 1 === s2.arguments.length) {
          var u2 = s2.arguments[0];
          if (u2 && (y.isNumericLiteral(u2) || y.isStringLiteral(u2) || y.isMemberExpression(u2))) {
            (0, m.default)(s2.callee);
            var l2, f2 = s2.callee.name, p2 = function(e4) {
              return (void 0 === l2 || l2 === e4) && (l2 = e4, true);
            }, b2 = function(t3) {
              if (!y.isMemberExpression(u2)) return u2.value;
              if (void 0 !== t3) {
                var r3 = u2;
                if (y.isIdentifier(r3.object)) {
                  var n2 = o2.getBinding(r3.object.name);
                  if (n2 && e3[4] === n2.path.node && y.isNumericLiteral(r3.property)) {
                    var i3 = r3.property.value;
                    if (Number.isInteger(i3) && i3 >= 0 && i3 < t3.length) {
                      var a3 = t3[i3];
                      if (a3 instanceof v.NumberValue || a3 instanceof v.StringValue) return a3.value;
                    }
                  }
                }
              }
            }, g2 = true, w2 = false, E2 = void 0;
            try {
              for (var S, T = function() {
                var t3 = S.value, n2 = o2.getBinding(f2);
                if (n2) {
                  var s3 = a2.factoryFunctionDependencies.get(t3);
                  if (void 0 !== s3 && e3[1] === n2.path.node) {
                    (0, m.default)("param" === n2.kind);
                    var l3 = b2(s3);
                    return void 0 === l3 || p2(l3) ? "continue" : { v: void 0 };
                  }
                  return { v: void 0 };
                }
                if (!y.isNumericLiteral(u2) && !y.isStringLiteral(u2)) return { v: void 0 };
                var v2 = i2.tryQuery(function() {
                  return h.Environment.ResolveBinding(r2, f2, true, t3.$Environment);
                }, void 0);
                if (void 0 === v2) return { v: void 0 };
                if (h.Environment.IsUnresolvableReference(r2, v2)) return { v: void 0 };
                var g3 = v2.base, w3 = v2.referencedName;
                if ("string" != typeof w3) return { v: void 0 };
                var E3 = void 0;
                if (v2.base instanceof c.GlobalEnvironmentRecord) E3 = i2.tryQuery(function() {
                  return (0, d.Get)(r2, r2.$GlobalObject, f2);
                }, r2.intrinsics.undefined);
                else {
                  (0, m.default)(g3 instanceof c.DeclarativeEnvironmentRecord);
                  var T2 = g3.bindings[w3];
                  if (!T2.initialized) return { v: void 0 };
                  E3 = T2.value;
                }
                var A2 = a2.getRequireInfo();
                if (void 0 === A2 || E3 !== A2.value) return { v: void 0 };
                var C2 = b2();
                return (0, m.default)(void 0 !== C2), p2(C2) ? void 0 : { v: void 0 };
              }, A = t2[Symbol.iterator](); !(g2 = (S = A.next()).done); g2 = true) {
                var C = T();
                switch (C) {
                  case "continue":
                    continue;
                  default:
                    if ("object" === n(C)) return C.v;
                }
              }
            } catch (e4) {
              w2 = true, E2 = e4;
            } finally {
              try {
                g2 || null == A.return || A.return();
              } finally {
                if (w2) throw E2;
              }
            }
            return l2;
          }
        }
      };
    } }, { key: "recordModuleInitialized", value: function(e3, t2) {
      this.realm.assignToGlobal(y.memberExpression(y.memberExpression(y.identifier("global"), y.identifier("__initializedModules")), y.identifier("" + e3)), t2);
    } }, { key: "tryInitializeModule", value: function(e3, t2) {
      var r2 = this.realm, n2 = this.getRequireInfo();
      if (void 0 !== n2) return (function(e4, t3) {
        var r3 = e4.errorHandler;
        e4.errorHandler = function t4(n3) {
          n3.severity = "Warning", e4.errorHandler = r3;
          try {
            return e4.handleError(n3);
          } finally {
            e4.errorHandler = t4;
          }
        };
        try {
          return t3();
        } finally {
          e4.errorHandler = r3;
        }
      })(r2, function() {
        try {
          var i2 = y.callExpression(y.identifier(n2.globalName), [y.valueToNode(e3)]), a2 = r2.evaluateNodeForEffectsInGlobalEnv(i2);
          return r2.applyEffects(a2, t2), a2;
        } catch (e4) {
          if (e4 instanceof f.FatalError) return;
          throw e4;
        }
      });
    } }, { key: "initializeMoreModules", value: function() {
      var e3 = 0, t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this.moduleIds[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value;
          if (!this.initializedModules.has(o2)) {
            var s2 = this.tryInitializeModule(o2, "Speculative initialization of module ".concat(o2));
            if (void 0 !== s2) {
              var u2 = s2.result;
              u2 instanceof v.Value && (e3++, this.initializedModules.set(o2, u2));
            }
          }
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      e3 > 0 && console.log("=== speculatively initialized ".concat(e3, " additional modules"));
    } }]), e2;
  })();
  t.Modules = E;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2, r2) {
    if (!t2) return;
    var i = n.VISITOR_KEYS[t2.type];
    if (!i) return;
    var a = r2(t2);
    if (a) return;
    var o = true;
    var s = false;
    var u = void 0;
    try {
      for (var l, c = i[Symbol.iterator](); !(o = (l = c.next()).done); o = true) {
        var f = l.value, p = t2[f];
        if (Array.isArray(p)) {
          var d = true, h = false, v = void 0;
          try {
            for (var y, m = p[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
              var b = y.value;
              e2(b, r2);
            }
          } catch (e3) {
            h = true, v = e3;
          } finally {
            try {
              d || null == m.return || m.return();
            } finally {
              if (h) throw v;
            }
          }
        } else e2(p, r2);
      }
    } catch (e3) {
      s = true, u = e3;
    } finally {
      try {
        o || null == c.return || c.return();
      } finally {
        if (s) throw u;
      }
    }
  };
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
}, function(e, t, r) {
  "use strict";
  var n = r(581), i = r(578);
  e.exports = function(e2, t2) {
    var r2 = i(e2, t2);
    return n(r2) ? r2 : void 0;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    return null != e2 && "object" == n(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    var t2 = n(e2);
    return null != e2 && ("object" == t2 || "function" == t2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.GetIterator = l, t.IteratorStep = c, t.IteratorValue = f, t.IteratorComplete = p, t.IteratorNext = d, t.CreateListIterator = function(e2, t2) {
    var r2 = u.Create.ObjectCreate(e2, e2.intrinsics.IteratorPrototype, { $IteratorNext: void 0, $IteratedList: void 0, $ListIteratorNextIndex: void 0 });
    r2.$IteratedList = t2, r2.$ListIteratorNextIndex = 0;
    var n2 = (function(e3) {
      var t3 = new i.NativeFunctionValue(e3, void 0, "next", 0, function(r3) {
        (0, o.default)(r3 instanceof i.ObjectValue);
        var n3 = r3, a2 = t3;
        if (!n3.$IteratorNext) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "O does not have an [[IteratorNext]] internal slot");
        var l2 = n3.$IteratorNext;
        if (!(0, s.SameValue)(e3, a2, l2)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        if (!n3.$IteratedList) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "O does not have an [[IteratedList]] internal slot");
        var c2 = n3.$IteratedList;
        (0, o.default)("number" == typeof n3.$ListIteratorNextIndex);
        var f2 = n3.$ListIteratorNextIndex, p2 = c2.length;
        return f2 >= p2 ? u.Create.CreateIterResultObject(e3, e3.intrinsics.undefined, true) : (n3.$ListIteratorNextIndex = f2 + 1, u.Create.CreateIterResultObject(e3, c2[f2], false));
      });
      return t3;
    })(e2);
    return r2.$IteratorNext = n2, u.Create.CreateMethodProperty(e2, r2, new i.StringValue(e2, "next"), n2), r2;
  }, t.CreateMapIterator = function(e2, t2, r2) {
    if (!(t2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    if (!t2.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    var n2 = u.Create.ObjectCreate(e2, e2.intrinsics.MapIteratorPrototype, { $Map: void 0, $MapNextIndex: void 0, $MapIterationKind: void 0 });
    return n2.$Map = t2, n2.$MapNextIndex = new i.NumberValue(e2, 0), n2.$MapIterationKind = r2, n2;
  }, t.CreateSetIterator = function(e2, t2, r2) {
    if (!(t2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    if (!t2.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    var n2 = u.Create.ObjectCreate(e2, e2.intrinsics.SetIteratorPrototype, { $IteratedSet: void 0, $SetNextIndex: void 0, $SetIterationKind: void 0 });
    return n2.$IteratedSet = t2, n2.$SetNextIndex = 0, n2.$SetIterationKind = r2, n2;
  }, t.IteratorClose = function(e2, t2, r2) {
    (0, o.default)(t2 instanceof i.ObjectValue, "expected object"), (0, o.default)(r2 instanceof n.Completion, "expected completion record");
    var s2, u2 = (0, a.GetMethod)(e2, t2, "return");
    if (u2 instanceof i.UndefinedValue) return r2;
    try {
      s2 = (0, a.Call)(e2, u2.throwIfNotConcrete(), t2, []);
    } catch (e3) {
      if (!(e3 instanceof n.AbruptCompletion)) throw e3;
      s2 = e3;
    }
    if (r2 instanceof n.ThrowCompletion) return r2;
    if (s2 instanceof n.ThrowCompletion) return s2;
    if (!(s2 instanceof i.ObjectValue)) return e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    return r2;
  }, t.IterableToList = function(e2, t2, r2) {
    var n2 = l(e2, t2, r2), i2 = [], a2 = true;
    for (; false !== a2; ) if (false !== (a2 = c(e2, n2))) {
      var o2 = f(e2, a2);
      i2.push(o2);
    }
    return i2;
  };
  var n = r(7), i = r(0), a = r(3), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(16), u = r(2);
  function l(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e2.intrinsics.undefined, r2 = arguments.length > 2 ? arguments[2] : void 0;
    r2 || (r2 = (0, a.GetMethod)(e2, t2, e2.intrinsics.SymbolIterator));
    var n2 = (0, a.Call)(e2, r2, t2);
    if (!(n2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    return n2;
  }
  function c(e2, t2) {
    var r2 = d(e2, t2);
    return !p(e2, r2) && r2;
  }
  function f(e2, t2) {
    return (0, o.default)(t2 instanceof i.ObjectValue, "expected obj"), (0, a.Get)(e2, t2, "value");
  }
  function p(e2, t2) {
    return (0, o.default)(t2 instanceof i.ObjectValue, "expected obj"), u.To.ToBooleanPartial(e2, (0, a.Get)(e2, t2, "done"));
  }
  function d(e2, t2, r2) {
    var n2;
    if (!((n2 = r2 ? (0, a.Invoke)(e2, t2, "next", [r2]) : (0, a.Invoke)(e2, t2, "next", [])) instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    return n2;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.PreludeGenerator = t.DisablePlaceholderSuffix = t.Placeholders = void 0;
  var a = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), o = r(31), s = r(64), u = c(r(190)), l = c(r(1));
  function c(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var f = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
  t.Placeholders = f;
  var p = /* @__PURE__ */ new Set(["global"]), d = new Set(i(p).concat(i(f)));
  t.DisablePlaceholderSuffix = "// disable placeholders";
  var h = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.prelude = [], this.memoizedRefs = /* @__PURE__ */ new Map(), this.nameGenerator = new s.NameGenerator(/* @__PURE__ */ new Set(), !!t2, r2 || "", "_$"), this.usesThis = false, this.declaredGlobals = /* @__PURE__ */ new Set(), this.nextInvariantId = 0, this._expressionTemplates = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "createNameGenerator", value: function(e3) {
      return new s.NameGenerator(this.nameGenerator.forbiddenNames, this.nameGenerator.debugNames, this.nameGenerator.uniqueSuffix, e3);
    } }, { key: "convertStringToMember", value: function(e3) {
      var t2 = this;
      return e3.split(".").map(function(e4) {
        return "global" === e4 ? t2.memoizeReference(e4) : "this" === e4 ? a.thisExpression() : a.identifier(e4);
      }).reduce(function(e4, t3) {
        return a.memberExpression(e4, t3);
      });
    } }, { key: "globalReference", value: function(e3) {
      return arguments.length > 1 && void 0 !== arguments[1] && arguments[1] && a.isValidIdentifier(e3) ? a.identifier(e3) : (0, o.memberExpressionHelper)(this.memoizeReference("global"), e3);
    } }, { key: "memoizeReference", value: function(e3) {
      var t2, r2 = this.memoizedRefs.get(e3);
      if (r2) return r2;
      if (e3.includes("(") || e3.includes("[")) t2 = a.identifier(e3);
      else if ("global" === e3) this.usesThis = true, t2 = a.thisExpression();
      else {
        var n2 = e3.lastIndexOf(".");
        t2 = -1 === n2 ? a.memberExpression(this.memoizeReference("global"), a.identifier(e3)) : a.memberExpression(this.memoizeReference(e3.substr(0, n2)), a.identifier(e3.substr(n2 + 1)));
      }
      return r2 = a.identifier(this.nameGenerator.generate(e3)), this.prelude.push(a.variableDeclaration("var", [a.variableDeclarator(r2, t2)])), this.memoizedRefs.set(e3, r2), r2;
    } }, { key: "buildExpression", value: function(e3, t2) {
      var r2 = false, n2 = e3, i2 = this._expressionTemplates.get(n2);
      void 0 === i2 && (e3.endsWith("// disable placeholders") && (e3 = e3.substring(0, e3.length - "// disable placeholders".length), r2 = true), i2 = (0, u.default)(e3, { placeholderPattern: false, placeholderWhitelist: r2 ? p : d }), this._expressionTemplates.set(n2, i2)), e3.includes("global") && (t2 = Object.assign({ global: this.memoizeReference("global") }, t2));
      var a2 = i2(t2).expression;
      return (0, l.default)(void 0 !== a2, "Code does not represent an expression: " + e3), a2;
    } }]), e2;
  })();
  t.PreludeGenerator = h;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.NOT_LOCAL_BINDING = t.BLOCK_SCOPED_SYMBOL = t.INHERIT_KEYS = t.UNARY_OPERATORS = t.STRING_UNARY_OPERATORS = t.NUMBER_UNARY_OPERATORS = t.BOOLEAN_UNARY_OPERATORS = t.BINARY_OPERATORS = t.NUMBER_BINARY_OPERATORS = t.BOOLEAN_BINARY_OPERATORS = t.COMPARISON_BINARY_OPERATORS = t.EQUALITY_BINARY_OPERATORS = t.BOOLEAN_NUMBER_BINARY_OPERATORS = t.UPDATE_OPERATORS = t.LOGICAL_OPERATORS = t.COMMENT_KEYS = t.FOR_INIT_KEYS = t.FLATTENABLE_KEYS = t.STATEMENT_OR_BLOCK_KEYS = void 0;
  t.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];
  t.FLATTENABLE_KEYS = ["body", "expressions"];
  t.FOR_INIT_KEYS = ["left", "init"];
  t.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];
  t.LOGICAL_OPERATORS = ["||", "&&", "??"];
  t.UPDATE_OPERATORS = ["++", "--"];
  var i = [">", "<", ">=", "<="];
  t.BOOLEAN_NUMBER_BINARY_OPERATORS = i;
  var a = ["==", "===", "!=", "!=="];
  t.EQUALITY_BINARY_OPERATORS = a;
  var o = a.concat(["in", "instanceof"]);
  t.COMPARISON_BINARY_OPERATORS = o;
  var s = n(o).concat(i);
  t.BOOLEAN_BINARY_OPERATORS = s;
  var u = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
  t.NUMBER_BINARY_OPERATORS = u;
  var l = ["+"].concat(u, n(s));
  t.BINARY_OPERATORS = l;
  var c = ["delete", "!"];
  t.BOOLEAN_UNARY_OPERATORS = c;
  var f = ["+", "-", "~"];
  t.NUMBER_UNARY_OPERATORS = f;
  var p = ["typeof"];
  t.STRING_UNARY_OPERATORS = p;
  var d = ["void", "throw"].concat(c, f, p);
  t.UNARY_OPERATORS = d;
  t.INHERIT_KEYS = { optional: ["typeAnnotation", "typeParameters", "returnType"], force: ["start", "loc", "end"] };
  var h = Symbol.for("var used to be block scoped");
  t.BLOCK_SCOPED_SYMBOL = h;
  var v = Symbol.for("should not be considered a local binding");
  t.NOT_LOCAL_BINDING = v;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    return null != e2 && "object" == n(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(758), i = r(753);
  e.exports = function(e2, t2) {
    var r2 = i(e2, t2);
    return n(r2) ? r2 : void 0;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.HeapInspector = void 0;
  r(8);
  var a = r(3), o = r(0), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = (r(19), r(6));
  function c(e2) {
    return !!e2 && (e2 instanceof l.PropertyDescriptor ? !!e2.configurable : e2 instanceof l.AbstractJoinedDescriptor ? c(e2.descriptor1) || c(e2.descriptor2) : void (0, u.default)(false, "internal slots aren't covered here"));
  }
  function f(e2) {
    return !!e2 && (e2 instanceof l.PropertyDescriptor ? void 0 !== e2.value && !!e2.writable : e2 instanceof l.AbstractJoinedDescriptor ? f(e2.descriptor1) || f(e2.descriptor2) : void (0, u.default)(false, "internal slots aren't covered here"));
  }
  var p = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.logger = r2, this.ignoredProperties = /* @__PURE__ */ new Map(), this._targetIntegrityCommands = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "getTargetIntegrityCommand", value: function(e3) {
      var t2 = this._targetIntegrityCommands.get(e3);
      if (void 0 === t2) {
        if (t2 = "", e3 instanceof o.ProxyValue) ;
        else {
          var r2 = e3.$Extensible;
          if (r2 instanceof o.BooleanValue) {
            if (!r2.value) {
              var n2 = false, i2 = false, a2 = true, s2 = false, u2 = void 0;
              try {
                for (var l2, p2 = e3.properties.values()[Symbol.iterator](); !(a2 = (l2 = p2.next()).done); a2 = true) {
                  var d = l2.value.descriptor;
                  void 0 !== d && (c(d) ? i2 = true : f(d) && (n2 = true));
                }
              } catch (e4) {
                s2 = true, u2 = e4;
              } finally {
                try {
                  a2 || null == p2.return || p2.return();
                } finally {
                  if (s2) throw u2;
                }
              }
              t2 = i2 ? "preventExtensions" : n2 ? "seal" : "freeze";
            }
          } else this.logger.logError(e3, "Object that might or might not be sealed or frozen are not supported in residual heap.");
        }
        this._targetIntegrityCommands.set(e3, t2);
      }
      return t2;
    } }, { key: "getTargetIntegrityDescriptor", value: function(t2) {
      return e2._integrityDescriptors[this.getTargetIntegrityCommand(t2)];
    } }, { key: "canIgnoreProperty", value: function(e3, t2) {
      var r2 = this.ignoredProperties.get(e3);
      return r2 || this.ignoredProperties.set(e3, r2 = this._getIgnoredProperties(e3)), r2.has(t2);
    } }, { key: "_getIgnoredProperties", value: function(e3) {
      var t2 = /* @__PURE__ */ new Set(), r2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3.properties[Symbol.iterator](); !(r2 = (o2 = s2.next()).done); r2 = true) {
          var l2 = n(o2.value, 2), c2 = l2[0], f2 = l2[1];
          (0, u.default)(f2);
          var p2 = f2.descriptor;
          void 0 !== p2 && (this._canIgnoreProperty(e3, c2, p2) && t2.add(c2));
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return t2;
    } }, { key: "_canIgnoreProperty", value: function(e3, t2, r2) {
      if (!(r2 instanceof l.PropertyDescriptor)) return false;
      var n2 = this.getTargetIntegrityDescriptor(e3);
      if ((0, a.IsArray)(this.realm, e3)) {
        if ("length" === t2 && r2.writable === n2.writable && true !== r2.enumerable && true !== r2.configurable) return true;
      } else if (e3 instanceof o.FunctionValue) {
        if ("length" === t2) return void 0 === r2.value && this.logger.logError(e3, "Functions with length accessor properties are not supported in residual heap."), true !== r2.writable && true !== r2.enumerable && r2.configurable === n2.configurable && e3.hasDefaultLength();
        if ("name" === t2) return !(void 0 !== r2.value && !this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION) && !this.realm.isCompatibleWith("mobile") && (r2.value instanceof o.AbstractValue || r2.value instanceof o.ConcreteValue && void 0 !== e3.__originalName && "" !== e3.__originalName && s.To.ToString(this.realm, r2.value) !== e3.__originalName));
        if (("arguments" === t2 || "caller" === t2) && ((0, u.default)(e3 instanceof o.ECMAScriptSourceFunctionValue), !e3.$Strict && r2.writable === (!e3.$Strict && n2.writable) && true !== r2.enumerable && r2.configurable === n2.configurable && r2.value instanceof o.UndefinedValue && "normal" === e3.$FunctionKind)) return true;
        if ("prototype" === t2 && true !== r2.configurable && true !== r2.enumerable && r2.writable === n2.writable && r2.value instanceof o.ObjectValue && r2.value.originalConstructor === e3) return true;
      } else {
        switch (e3.getKind()) {
          case "RegExp":
            if ("lastIndex" === t2 && r2.writable === n2.writable && true !== r2.enumerable && true !== r2.configurable) {
              var i2 = r2.value;
              return i2 instanceof o.NumberValue && 0 === i2.value;
            }
        }
      }
      return "constructor" === t2 && r2.configurable === n2.configurable && true !== r2.enumerable && r2.writable === n2.writable && r2.value === e3.originalConstructor;
    } }, { key: "isDefaultPrototype", value: function(t2) {
      if (0 !== t2.symbols.size || t2.$Prototype !== this.realm.intrinsics.ObjectPrototype || t2.$Extensible.mightNotBeTrue()) return false;
      var r2 = false, n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = t2.properties.keys()[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
          var u2 = o2.value;
          if ("constructor" !== u2 || e2.getPropertyValue(t2, u2) !== t2.originalConstructor) return false;
          r2 = true;
        }
      } catch (e3) {
        i2 = true, a2 = e3;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    } }], [{ key: "isLeaf", value: function(e3) {
      if (e3 instanceof o.SymbolValue) return false;
      if (e3 instanceof o.AbstractValue) {
        if (e3.hasIdentifier()) return true;
        if (e3.$Realm.instantRender.enabled && void 0 !== e3.intrinsicName && e3.intrinsicName.startsWith("__native")) return true;
      }
      return !e3.isIntrinsic() && e3 instanceof o.PrimitiveValue;
    } }, { key: "getPropertyValue", value: function(e3, t2) {
      var r2 = e3.properties.get(t2);
      if (void 0 !== r2) {
        var n2 = r2.descriptor;
        if (void 0 !== n2) return (0, u.default)(n2 instanceof l.PropertyDescriptor), (0, u.default)(void 0 === n2.value || n2.value instanceof o.Value), n2.value;
      }
    } }]), e2;
  })();
  t.HeapInspector = p, (function(e2, t2, r2) {
    t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2;
  })(p, "_integrityDescriptors", { "": { writable: true, configurable: true }, preventExtensions: { writable: true, configurable: true }, seal: { writable: true, configurable: false }, freeze: { writable: false, configurable: false } });
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualHeapVisitor = void 0;
  var a = r(10), o = r(4), s = (r(8), r(2)), u = r(3), l = r(0), c = r(26), f = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), p = r(9), d = S(r(28)), h = S(r(1)), v = r(429), y = (r(19), r(38), r(48)), m = r(32), b = r(14), g = r(145), w = r(69), E = r(6);
  function S(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var T = (function() {
    function e2(t2, r2, n2, i2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), (0, h.default)(t2.useAbstractInterpretation), this.realm = t2, this.logger = r2, this.modules = n2, this.declarativeEnvironmentRecordsBindings = /* @__PURE__ */ new Map(), this.globalBindings = /* @__PURE__ */ new Map(), this.functionInfos = /* @__PURE__ */ new Map(), this.classMethodInstances = /* @__PURE__ */ new Map(), this.functionInstances = /* @__PURE__ */ new Map(), this.values = /* @__PURE__ */ new Map(), this.conditionalFeasibility = /* @__PURE__ */ new Map();
      var o2 = this.realm.generator;
      (0, h.default)(o2), this.scope = this.globalGenerator = o2, this.inspector = new y.HeapInspector(t2, r2), this.referencedDeclaredValues = /* @__PURE__ */ new Map(), this.delayedActions = [], this.additionalFunctionValuesAndEffects = i2, this.equivalenceSet = new u.HashSet(), this.additionalFunctionValueInfos = /* @__PURE__ */ new Map(), this.functionToCapturedScopes = /* @__PURE__ */ new Map();
      var s2 = t2.$GlobalEnv.environmentRecord;
      (0, h.default)(s2 instanceof a.GlobalEnvironmentRecord), this.globalEnvironmentRecord = s2, this.additionalGeneratorRoots = /* @__PURE__ */ new Map(), this.residualReactElementVisitor = new g.ResidualReactElementVisitor(this.realm, this), this.generatorTree = new w.GeneratorTree();
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "_getCommonScope", value: function() {
      for (var e3 = this.scope; ; ) if (e3 instanceof p.Generator) e3 = this.generatorTree.getParent(e3);
      else {
        if (!(e3 instanceof l.FunctionValue)) {
          (0, h.default)("GLOBAL" === e3);
          var t2 = this.globalGenerator;
          return (0, h.default)(t2), t2;
        }
        if (this.additionalFunctionValuesAndEffects.has(e3)) return e3;
        e3 = this.generatorTree.getCreator(e3) || "GLOBAL";
      }
      (0, h.default)(false);
    } }, { key: "_getAdditionalFunctionOfScope", value: function() {
      var e3 = this._getCommonScope();
      return e3 instanceof l.FunctionValue ? e3 : void 0;
    } }, { key: "_registerAdditionalRoot", value: function(e3) {
      var t2, r2, n2 = this.generatorTree.getCreator(e3) || this.globalGenerator, i2 = this._getAdditionalFunctionOfScope() || "GLOBAL";
      if (n2 === this.globalGenerator) t2 = "GLOBAL";
      else {
        for (var a2 = n2; a2 instanceof p.Generator; ) a2 = this.generatorTree.getParent(a2), (0, h.default)(void 0 !== a2);
        (0, h.default)("GLOBAL" === a2 || a2 instanceof l.FunctionValue), t2 = a2;
      }
      if (i2 === t2) r2 = this.scope;
      else {
        (0, h.default)(i2 instanceof l.FunctionValue);
        var o2 = this.additionalFunctionValuesAndEffects.get(i2);
        (0, h.default)(void 0 !== o2), o2.additionalRoots.add(e3), this._visitInUnrelatedScope(n2, e3), r2 = this.generatorTree.getCreator(e3) || this.globalGenerator;
      }
      if ((r2 = this.scope) instanceof p.Generator) for (var s2 = false, u2 = r2; u2 instanceof p.Generator; u2 = this.generatorTree.getParent(u2)) {
        if (u2 === n2) {
          if (s2) {
            var c2 = this.additionalGeneratorRoots.get(u2);
            void 0 === c2 && this.additionalGeneratorRoots.set(u2, c2 = /* @__PURE__ */ new Set()), c2.has(e3) || (c2.add(e3), this._visitInUnrelatedScope(u2, e3));
          }
          break;
        }
        var f2 = u2.effectsToApply;
        if (f2) {
          var d2 = true, v2 = false, y2 = void 0;
          try {
            for (var m2, b2 = f2.modifiedProperties.keys()[Symbol.iterator](); !(d2 = (m2 = b2.next()).done); d2 = true) {
              if (m2.value.object === e3) {
                s2 = true;
                break;
              }
            }
          } catch (e4) {
            v2 = true, y2 = e4;
          } finally {
            try {
              d2 || null == b2.return || b2.return();
            } finally {
              if (v2) throw y2;
            }
          }
        }
      }
    } }, { key: "_withScope", value: function(e3, t2) {
      var r2 = this.scope;
      this.scope = e3;
      try {
        t2();
      } finally {
        this.scope = r2;
      }
    } }, { key: "_enqueueWithUnrelatedScope", value: function(e3, t2) {
      var r2 = this;
      if (false === this.residualReactElementVisitor.defaultEquivalenceSet) {
        var n2 = this.residualReactElementVisitor.saveEquivalenceSet(), i2 = t2;
        t2 = function() {
          return r2.residualReactElementVisitor.loadEquivalenceSet(n2, i2);
        };
      }
      this.delayedActions.push({ scope: e3, action: t2 });
    } }, { key: "_visitInUnrelatedScope", value: function(e3, t2) {
      var r2 = this, n2 = this.values.get(t2);
      void 0 !== n2 && n2.has(e3) || this._enqueueWithUnrelatedScope(e3, function() {
        return r2.visitValue(t2);
      });
    } }, { key: "visitObjectProperty", value: function(e3) {
      var t2 = e3.descriptor, r2 = e3.object;
      (0, h.default)(void 0 !== e3.key, "Undefined keys should never make it here."), (r2 instanceof l.AbstractObjectValue || "string" != typeof e3.key || !this.inspector.canIgnoreProperty(r2, e3.key)) && void 0 !== t2 && this.visitDescriptor(t2), e3.key instanceof l.Value && this.visitValue(e3.key);
    } }, { key: "visitObjectProperties", value: function(e3, t2) {
      var r2 = (0, m.getObjectPrototypeMetadata)(this.realm, e3), i2 = r2.skipPrototype, a2 = r2.constructor;
      if (void 0 === e3.temporalAlias) {
        var o2 = true, s2 = false, u2 = void 0;
        try {
          for (var c2, f2 = e3.symbols[Symbol.iterator](); !(o2 = (c2 = f2.next()).done); o2 = true) {
            var p2 = n(c2.value, 2), d2 = p2[0], v2 = p2[1];
            (0, h.default)(v2);
            var y2 = v2.descriptor;
            void 0 !== y2 && (this.visitDescriptor(y2), this.visitValue(d2));
          }
        } catch (e4) {
          s2 = true, u2 = e4;
        } finally {
          try {
            o2 || null == f2.return || f2.return();
          } finally {
            if (s2) throw u2;
          }
        }
        var b2 = true, g2 = false, w2 = void 0;
        try {
          for (var S2, T2 = e3.properties[Symbol.iterator](); !(b2 = (S2 = T2.next()).done); b2 = true) {
            var A = n(S2.value, 2), C = A[0], P = A[1], O = P.descriptor;
            e3 instanceof l.ECMAScriptFunctionValue && "classConstructor" === e3.$FunctionKind && (m.ClassPropertiesToIgnore.has(C) || "length" === C && (0, m.canIgnoreClassLengthProperty)(e3, O, this.logger)) || void 0 === P.pathNode && (!(e3 instanceof l.ArrayValue || e3.mightNotBeLeakedObject()) && O instanceof E.PropertyDescriptor && void 0 === O.get && void 0 === O.set || this.visitObjectProperty(P));
          }
        } catch (e4) {
          g2 = true, w2 = e4;
        } finally {
          try {
            b2 || null == T2.return || T2.return();
          } finally {
            if (g2) throw w2;
          }
        }
        void 0 !== e3.unknownProperty && this.visitObjectPropertiesWithComputedNamesDescriptor(e3.unknownProperty.descriptor), i2 || this.visitObjectPrototype(e3), e3 instanceof l.FunctionValue ? this.visitConstructorPrototype(a2 || e3) : e3 instanceof l.ObjectValue && i2 && a2 && this.visitValue(a2);
      }
    } }, { key: "visitObjectPrototype", value: function(e3) {
      var t2 = e3.$Prototype, r2 = e3.getKind();
      t2 !== this.realm.intrinsics[r2 + "Prototype"] && (e3.$IsClassPrototype && t2 === this.realm.intrinsics.null || this.visitValue(t2));
    } }, { key: "visitConstructorPrototype", value: function(e3) {
      (0, h.default)(e3 instanceof l.FunctionValue);
      var t2 = y.HeapInspector.getPropertyValue(e3, "prototype");
      t2 instanceof l.ObjectValue && t2.originalConstructor === e3 && !this.inspector.isDefaultPrototype(t2) && this.visitValue(t2);
    } }, { key: "visitObjectPropertiesWithComputedNamesDescriptor", value: function(e3) {
      if (void 0 !== e3) if (e3 instanceof E.PropertyDescriptor) {
        var t2 = e3.value;
        (0, h.default)(t2 instanceof l.AbstractValue), this.visitObjectPropertiesWithComputedNames(t2);
      } else e3 instanceof E.AbstractJoinedDescriptor ? (this.visitValue(e3.joinCondition), this.visitObjectPropertiesWithComputedNamesDescriptor(e3.descriptor1), this.visitObjectPropertiesWithComputedNamesDescriptor(e3.descriptor2)) : (0, h.default)(false, "unknown descriptor");
    } }, { key: "visitObjectPropertiesWithComputedNames", value: function(e3) {
      if ("widened property" !== e3.kind && "template for prototype member expression" !== e3.kind) if ("conditional" === e3.kind) {
        var t2 = e3.args[0];
        if ((0, h.default)(t2 instanceof l.AbstractValue), "template for property name condition" === t2.kind) {
          var r2 = t2.args[0];
          (0, h.default)(r2 instanceof l.AbstractValue);
          var n2 = e3.args[1], i2 = e3.args[2];
          i2 instanceof l.AbstractValue && this.visitObjectPropertiesWithComputedNames(i2), this.visitValue(r2), this.visitValue(n2);
        } else {
          e3.args[0] = this.visitEquivalentValue(t2);
          var a2 = e3.args[1];
          a2 instanceof l.AbstractValue && this.visitObjectPropertiesWithComputedNames(a2);
          var o2 = e3.args[2];
          o2 instanceof l.AbstractValue && this.visitObjectPropertiesWithComputedNames(o2);
        }
      } else this.visitValue(e3);
    } }, { key: "visitDescriptor", value: function(e3) {
      void 0 === e3 || (e3 instanceof E.PropertyDescriptor ? (void 0 !== e3.value && (e3.value = this.visitEquivalentValue(e3.value)), void 0 !== e3.get && this.visitValue(e3.get), void 0 !== e3.set && this.visitValue(e3.set)) : e3 instanceof E.AbstractJoinedDescriptor ? (e3.joinCondition = this.visitEquivalentValue(e3.joinCondition), void 0 !== e3.descriptor1 && this.visitDescriptor(e3.descriptor1), void 0 !== e3.descriptor2 && this.visitDescriptor(e3.descriptor2)) : (0, h.default)(false, "unknown descriptor"));
    } }, { key: "visitValueArray", value: function(e3) {
      this._registerAdditionalRoot(e3), this.visitObjectProperties(e3);
      var t2, r2 = this.realm;
      t2 = e3.mightBeLeakedObject() ? this.realm.evaluateWithoutLeakLogic(function() {
        return (0, u.Get)(r2, e3, "length");
      }) : (0, u.Get)(r2, e3, "length");
      var i2 = n((0, m.getSuggestedArrayLiteralLength)(r2, e3), 2), a2 = i2[0];
      i2[1] || (t2 instanceof l.AbstractValue ? "widened property" !== t2.kind : s.To.ToLength(r2, t2) !== a2) && this.visitValue(t2);
    } }, { key: "visitValueMap", value: function(e3) {
      (0, h.default)("Map" === e3.getKind());
      var t2 = e3.$MapData;
      (0, h.default)(void 0 !== t2);
      for (var r2 = t2.length, n2 = 0; n2 < r2; n2++) {
        var i2 = t2[n2], a2 = i2.$Key, o2 = i2.$Value;
        void 0 !== a2 && void 0 !== o2 && (this.visitValue(a2), this.visitValue(o2));
      }
    } }, { key: "visitValueWeakMap", value: function(e3) {
      var t2 = this;
      (0, h.default)("WeakMap" === e3.getKind());
      var r2 = e3.$WeakMapData;
      (0, h.default)(void 0 !== r2);
      for (var n2 = r2.length, i2 = function(e4) {
        var n3 = r2[e4], i3 = n3.$Key, a3 = n3.$Value;
        if (void 0 !== i3 && void 0 !== a3) {
          !(function e5() {
            var r3;
            return t2.values.has(i3) ? (r3 = true, t2.visitValue(i3), t2.visitValue(a3)) : (r3 = false, t2._enqueueWithUnrelatedScope(t2.scope, e5)), r3;
          })();
        }
      }, a2 = 0; a2 < n2; a2++) i2(a2);
    } }, { key: "visitValueSet", value: function(e3) {
      (0, h.default)("Set" === e3.getKind());
      var t2 = e3.$SetData;
      (0, h.default)(void 0 !== t2);
      for (var r2 = t2.length, n2 = 0; n2 < r2; n2++) {
        var i2 = t2[n2];
        void 0 !== i2 && this.visitValue(i2);
      }
    } }, { key: "visitValueWeakSet", value: function(e3) {
      var t2 = this;
      (0, h.default)("WeakSet" === e3.getKind());
      var r2 = e3.$WeakSetData;
      (0, h.default)(void 0 !== r2);
      for (var n2 = r2.length, i2 = function(e4) {
        var n3 = r2[e4];
        if (void 0 !== n3) {
          !(function e5() {
            var r3;
            return t2.values.has(n3) ? (r3 = true, t2.visitValue(n3)) : (r3 = false, t2._enqueueWithUnrelatedScope(t2.scope, e5)), r3;
          })();
        }
      }, a2 = 0; a2 < n2; a2++) i2(a2);
    } }, { key: "visitValueFunction", value: function(e3) {
      var t2 = this, r2 = false;
      if (this._registerAdditionalRoot(e3), e3 instanceof l.ECMAScriptFunctionValue && "classConstructor" === e3.$FunctionKind) {
        (0, h.default)(e3 instanceof l.ECMAScriptSourceFunctionValue);
        var n2 = e3.$HomeObject;
        n2 instanceof l.ObjectValue && n2.$IsClassPrototype && (r2 = true);
      }
      if (this.visitObjectProperties(e3), e3 instanceof l.BoundFunctionValue) {
        this.visitValue(e3.$BoundTargetFunction), this.visitValue(e3.$BoundThis);
        var i2 = true, a2 = false, o2 = void 0;
        try {
          for (var s2, u2 = e3.$BoundArguments[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
            var p2 = s2.value;
            this.visitValue(p2);
          }
        } catch (e4) {
          a2 = true, o2 = e4;
        } finally {
          try {
            i2 || null == u2.return || u2.return();
          } finally {
            if (a2) throw o2;
          }
        }
      } else {
        (0, h.default)(!(e3 instanceof l.NativeFunctionValue), "all native function values should be intrinsics"), (0, h.default)(e3 instanceof l.ECMAScriptSourceFunctionValue), (0, h.default)(e3.constructor === l.ECMAScriptSourceFunctionValue);
        var y2 = e3.$FormalParameters, m2 = e3.$ECMAScriptCode, b2 = this.functionInfos.get(m2), g2 = /* @__PURE__ */ new Map();
        if (this.functionInstances.set(e3, { residualFunctionBindings: g2, initializationStatements: [], functionValue: e3, scopeInstances: /* @__PURE__ */ new Map() }), !b2) {
          var w2 = { functionInfo: b2 = { depth: 0, lexicalDepth: 0, unbound: /* @__PURE__ */ new Map(), requireCalls: /* @__PURE__ */ new Map(), modified: /* @__PURE__ */ new Set(), usesArguments: false, usesThis: false }, realm: this.realm, getModuleIdIfNodeIsRequireFunction: this.modules.getGetModuleIdIfNodeIsRequireFunction(y2, [e3]) };
          (0, d.default)(f.file(f.program([f.expressionStatement(f.functionExpression(null, y2, m2))])), v.ClosureRefVisitor, null, w2), d.default.cache.clear(), this.functionInfos.set(m2, b2), e3.isResidual && b2.unbound.size && (e3.isUnsafeResidual || this.logger.logError(e3, "residual function ".concat((0, c.describeLocation)(this.realm, e3, void 0, m2.loc) || "(unknown)", " refers to the following identifiers defined outside of the local scope: ").concat(Object.keys(b2.unbound).join(", "))));
        }
        var E2 = this.additionalFunctionValuesAndEffects.get(e3);
        E2 ? this._visitAdditionalFunction(e3, E2) : this._enqueueWithUnrelatedScope(e3, function() {
          (0, h.default)(t2.scope === e3), (0, h.default)(b2);
          var r3 = true, n3 = false, i3 = void 0;
          try {
            for (var a3, o3 = b2.unbound.keys()[Symbol.iterator](); !(r3 = (a3 = o3.next()).done); r3 = true) {
              var s3 = a3.value, u3 = t2.resolveBinding(e3, s3), l2 = t2.getBinding(u3, s3);
              t2.visitBinding(e3, l2), g2.set(s3, l2), b2.modified.has(s3) && (l2.modified = true);
            }
          } catch (e4) {
            n3 = true, i3 = e4;
          } finally {
            try {
              r3 || null == o3.return || o3.return();
            } finally {
              if (n3) throw i3;
            }
          }
        }), r2 && e3.$HomeObject instanceof l.ObjectValue && this._visitClass(e3, e3.$HomeObject);
      }
    } }, { key: "_visitBindingHelper", value: function(e3) {
      if (!e3.hasLeaked) {
        var t2 = e3.declarativeEnvironmentRecord;
        if ((0, h.default)(null !== t2), void 0 === e3.value) {
          (0, h.default)(t2 instanceof a.DeclarativeEnvironmentRecord);
          var r2 = t2.bindings[e3.name];
          (0, h.default)(void 0 !== r2), (0, h.default)(!r2.deletable);
          var n2 = r2.initialized && r2.value || this.realm.intrinsics.undefined;
          e3.value = this.visitEquivalentValue(n2);
        } else this.visitValue(e3.value);
      }
    } }, { key: "visitBinding", value: function(e3, t2) {
      var r2 = this;
      if (null !== t2.declarativeEnvironmentRecord) {
        (0, h.default)(this.scope === e3);
        var n2 = this._getAdditionalFunctionOfScope() || "GLOBAL";
        t2.potentialReferentializationScopes.add(n2), (0, h.default)(!(n2 instanceof p.Generator));
        var i2 = (0, m.getOrDefault)(this.functionToCapturedScopes, n2, function() {
          return /* @__PURE__ */ new Map();
        }), a2 = t2.declarativeEnvironmentRecord;
        (0, h.default)(null !== a2);
        var o2 = (0, m.getOrDefault)(i2, a2, function() {
          return { capturedBindings: /* @__PURE__ */ new Set(), capturingScopes: /* @__PURE__ */ new Set() };
        });
        if (!o2.capturedBindings.has(t2)) {
          var s2 = true, u2 = false, l2 = void 0;
          try {
            for (var c2, f2 = o2.capturingScopes[Symbol.iterator](); !(s2 = (c2 = f2.next()).done); s2 = true) {
              var d2 = c2.value;
              this._enqueueWithUnrelatedScope(d2, function() {
                return r2._visitBindingHelper(t2);
              });
            }
          } catch (e4) {
            u2 = true, l2 = e4;
          } finally {
            try {
              s2 || null == f2.return || f2.return();
            } finally {
              if (u2) throw l2;
            }
          }
          o2.capturedBindings.add(t2);
        }
        if (!o2.capturingScopes.has(e3)) {
          (0, h.default)(this.scope === e3);
          var v2 = true, y2 = false, b2 = void 0;
          try {
            for (var g2, w2 = o2.capturedBindings[Symbol.iterator](); !(v2 = (g2 = w2.next()).done); v2 = true) {
              var E2 = g2.value;
              this._visitBindingHelper(E2);
            }
          } catch (e4) {
            y2 = true, b2 = e4;
          } finally {
            try {
              v2 || null == w2.return || w2.return();
            } finally {
              if (y2) throw b2;
            }
          }
          o2.capturingScopes.add(e3);
        }
      }
    } }, { key: "resolveBinding", value: function(e3, t2) {
      var r2 = this, n2 = this.logger.tryQuery(function() {
        return s.Environment.ResolveBinding(r2.realm, t2, true, e3.$Environment);
      }, void 0);
      if (void 0 === n2 || s.Environment.IsUnresolvableReference(this.realm, n2) || n2.base === this.globalEnvironmentRecord || n2.base === this.globalEnvironmentRecord.$DeclarativeRecord) return this.globalEnvironmentRecord;
      (0, h.default)(!s.Environment.IsUnresolvableReference(this.realm, n2));
      var i2 = n2.base, o2 = n2.referencedName;
      return (0, h.default)(o2 === t2), (0, h.default)(i2 instanceof a.DeclarativeEnvironmentRecord), i2;
    } }, { key: "hasBinding", value: function(e3, t2) {
      if (e3 === this.globalEnvironmentRecord.$DeclarativeRecord && (e3 = this.globalEnvironmentRecord), e3 === this.globalEnvironmentRecord) return void 0 !== this.globalBindings.get(t2);
      (0, h.default)(e3 instanceof a.DeclarativeEnvironmentRecord);
      var r2 = this.declarativeEnvironmentRecordsBindings.get(e3);
      return void 0 !== r2 && void 0 !== r2.get(t2);
    } }, { key: "getBinding", value: function(e3, t2) {
      var r2 = this;
      if (e3 === this.globalEnvironmentRecord.$DeclarativeRecord && (e3 = this.globalEnvironmentRecord), e3 === this.globalEnvironmentRecord) return (0, m.getOrDefault)(this.globalBindings, t2, function() {
        var e4 = { name: t2, value: void 0, modified: true, hasLeaked: false, declarativeEnvironmentRecord: null, potentialReferentializationScopes: /* @__PURE__ */ new Set() };
        return r2._enqueueWithUnrelatedScope(r2.globalGenerator, function() {
          var n3 = r2.realm.getGlobalLetBinding(t2);
          void 0 !== n3 && (e4.value = r2.visitEquivalentValue(n3));
        }), e4;
      });
      (0, h.default)(e3 instanceof a.DeclarativeEnvironmentRecord);
      var n2 = (0, m.getOrDefault)(this.declarativeEnvironmentRecordsBindings, e3, function() {
        return /* @__PURE__ */ new Map();
      });
      return (0, m.getOrDefault)(n2, t2, function() {
        return (0, h.default)(e3 instanceof a.DeclarativeEnvironmentRecord), { name: t2, value: void 0, modified: false, hasLeaked: false, declarativeEnvironmentRecord: e3, potentialReferentializationScopes: /* @__PURE__ */ new Set() };
      });
    } }, { key: "_visitClass", value: function(e3, t2) {
      var r2 = this, i2 = function(n2, i3, a3, o3) {
        i3 instanceof l.ECMAScriptSourceFunctionValue && void 0 !== i3.$HomeObject && i3 !== e3 && r2._visitClassMethod(i3, a3, t2, !!o3);
      }, a2 = true, o2 = false, s2 = void 0;
      try {
        for (var c2, f2 = t2.properties[Symbol.iterator](); !(a2 = (c2 = f2.next()).done); a2 = true) {
          var p2 = n(c2.value, 2), d2 = p2[0], v2 = p2[1];
          (0, m.withDescriptorValue)(d2, v2.descriptor, i2);
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          a2 || null == f2.return || f2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      var y2 = true, b2 = false, g2 = void 0;
      try {
        for (var w2, E2 = t2.symbols[Symbol.iterator](); !(y2 = (w2 = E2.next()).done); y2 = true) {
          var S2 = n(w2.value, 2), T2 = S2[0];
          v2 = S2[1];
          (0, m.withDescriptorValue)(T2, v2.descriptor, i2);
        }
      } catch (e4) {
        b2 = true, g2 = e4;
      } finally {
        try {
          y2 || null == E2.return || E2.return();
        } finally {
          if (b2) throw g2;
        }
      }
      if (e3.$Prototype instanceof l.NativeFunctionValue || this.visitValue(e3.$Prototype), t2.properties.has("constructor")) {
        var A = t2.properties.get("constructor");
        if ((0, h.default)(void 0 !== A), void 0 === A.descriptor) e3.$HasEmptyConstructor = true;
        else {
          var C = function(e4, t3, r3) {
            i2(0, t3, r3, true);
          }, P = (0, u.Get)(this.realm, t2, "constructor");
          (0, h.default)(P instanceof l.ObjectValue);
          var O = true, x = false, _ = void 0;
          try {
            for (var V, D = P.properties[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
              var N = n(V.value, 2);
              d2 = N[0], v2 = N[1];
              m.ClassPropertiesToIgnore.has(d2) || void 0 === v2.descriptor || "length" === d2 && (0, m.canIgnoreClassLengthProperty)(P, v2.descriptor, this.logger) || (0, m.withDescriptorValue)(d2, v2.descriptor, C);
            }
          } catch (e4) {
            x = true, _ = e4;
          } finally {
            try {
              O || null == D.return || D.return();
            } finally {
              if (x) throw _;
            }
          }
        }
      }
      this.classMethodInstances.set(e3, { classPrototype: t2, methodType: "constructor", classSuperNode: void 0, classMethodIsStatic: false, classMethodKeyNode: void 0, classMethodComputed: false });
    } }, { key: "_visitClassMethod", value: function(e3, t2, r2, n2) {
      this.classMethodInstances.set(e3, { classPrototype: r2, methodType: "value" === t2 ? "method" : t2, classSuperNode: void 0, classMethodIsStatic: n2, classMethodKeyNode: void 0, classMethodComputed: !!e3.$HasComputedName });
    } }, { key: "visitValueObject", value: function(e3) {
      if ((0, h.default)(e3.isValid()), this._registerAdditionalRoot(e3), (0, b.isReactElement)(e3)) this.residualReactElementVisitor.visitReactElement(e3);
      else {
        var t2 = e3.getKind();
        this.visitObjectProperties(e3, t2);
        var r2 = e3.originalConstructor;
        if (void 0 === r2) switch (t2) {
          case "RegExp":
          case "Number":
          case "String":
          case "Boolean":
          case "ArrayBuffer":
            return;
          case "Date":
            var n2 = e3.$DateValue;
            return (0, h.default)(void 0 !== n2), void this.visitValue(n2);
          case "Float32Array":
          case "Float64Array":
          case "Int8Array":
          case "Int16Array":
          case "Int32Array":
          case "Uint8Array":
          case "Uint16Array":
          case "Uint32Array":
          case "Uint8ClampedArray":
          case "DataView":
            var i2 = e3.$ViewedArrayBuffer;
            return (0, h.default)(void 0 !== i2), void this.visitValue(i2);
          case "Map":
            return void this.visitValueMap(e3);
          case "WeakMap":
            return void this.visitValueWeakMap(e3);
          case "Set":
            return void this.visitValueSet(e3);
          case "WeakSet":
            return void this.visitValueWeakSet(e3);
          default:
            return "Object" !== t2 && this.logger.logError(e3, "Object of kind ".concat(t2, " is not supported in residual heap.")), void (this.realm.react.enabled && (0, b.valueIsReactLibraryObject)(this.realm, e3, this.logger) && (this.realm.fbLibraries.react = e3));
        }
        else this.visitValue(r2);
      }
    } }, { key: "visitValueSymbol", value: function(e3) {
      e3.$Description && this.visitValue(e3.$Description);
    } }, { key: "visitValueProxy", value: function(e3) {
      this._registerAdditionalRoot(e3), this.visitValue(e3.$ProxyTarget), this.visitValue(e3.$ProxyHandler);
    } }, { key: "_visitAbstractValueConditional", value: function(e3) {
      var t2 = this, r2 = e3.args[0];
      (0, h.default)(r2 instanceof l.AbstractValue);
      var n2, i2, a2 = this.conditionalFeasibility.get(e3);
      void 0 === a2 && this.conditionalFeasibility.set(e3, a2 = { t: false, f: false });
      var o2 = this.realm.pathConditions;
      try {
        this.realm.pathConditions = this.scope instanceof p.Generator ? this.scope.pathConditions : (0, s.createPathConditions)();
        var u2 = s.Path.implies(r2), c2 = s.Path.impliesNot(r2);
        (0, h.default)(!(u2 && c2)), u2 || c2 ? (n2 = u2, i2 = c2) : n2 = i2 = true;
      } finally {
        this.realm.pathConditions = o2;
      }
      var f2 = false, d2 = false;
      if (!a2.t && n2 && (e3.args[1] = this.visitEquivalentValue(e3.args[1]), a2.t = true, a2.f && (e3.args[0] = this.visitEquivalentValue(e3.args[0])), f2 = true), !a2.f && i2 && (e3.args[2] = this.visitEquivalentValue(e3.args[2]), a2.f = true, a2.t && (e3.args[0] = this.visitEquivalentValue(e3.args[0])), d2 = true), !f2 || !d2) {
        !(function r3() {
          var n3 = false;
          return (0, h.default)(void 0 !== a2), a2.f && a2.t && ((0, h.default)(!f2 || !d2), t2.visitValue(e3.args[0])), a2.t && !f2 && (t2.visitValue(e3.args[1]), n3 = f2 = true), (0, h.default)(a2.t === f2), a2.f && !d2 && (t2.visitValue(e3.args[2]), n3 = d2 = true), (0, h.default)(a2.f === d2), f2 && d2 || t2._enqueueWithUnrelatedScope(t2.scope, r3), n3;
        })();
      }
    } }, { key: "visitAbstractValue", value: function(e3) {
      if ("sentinel member expression" === e3.kind) this.logger.logError(e3, "expressions of type o[p] are not yet supported for partially known o and unknown p");
      else if ("environment initialization expression" === e3.kind) this.logger.logError(e3, "reads during environment initialization should never leak to serialization");
      else if ("conditional" === e3.kind) return void this._visitAbstractValueConditional(e3);
      for (var t2 = 0, r2 = e3.args.length; t2 < r2; t2++) e3.args[t2] = this.visitEquivalentValue(e3.args[t2]);
    } }, { key: "preProcessValue", value: function(e3) {
      return this._mark(e3);
    } }, { key: "postProcessValue", value: function(e3) {
    } }, { key: "_mark", value: function(e3) {
      var t2 = this.values.get(e3);
      return void 0 === t2 && this.values.set(e3, t2 = /* @__PURE__ */ new Set()), !t2.has(this.scope) && (t2.add(this.scope), true);
    } }, { key: "visitEquivalentValue", value: function(e3) {
      if (e3 instanceof l.AbstractValue) {
        var t2 = this.equivalenceSet.add(e3);
        return this.preProcessValue(t2) && this.visitAbstractValue(t2), this.postProcessValue(t2), t2;
      }
      if (e3 instanceof l.ObjectValue) {
        if ((0, h.default)(e3.isValid()), (0, b.isReactElement)(e3)) {
          if (void 0 !== e3.temporalAlias) return this.visitEquivalentValue(e3.temporalAlias);
          var r2 = this.residualReactElementVisitor.reactElementEquivalenceSet.add(e3);
          return this._mark(r2) && this.visitValueObject(r2), r2;
        }
        if ((0, b.isReactPropsObject)(e3)) {
          var n2 = this.residualReactElementVisitor.reactPropsEquivalenceSet.add(e3);
          return this._mark(n2) && this.visitValueObject(n2), n2;
        }
      }
      return this.visitValue(e3), e3;
    } }, { key: "visitValue", value: function(e3) {
      var t2 = this;
      if ((0, h.default)(void 0 !== e3), (0, h.default)(!(e3 instanceof l.ObjectValue && e3.refuseSerialization)), e3 instanceof l.AbstractValue) this.preProcessValue(e3) && this.visitAbstractValue(e3), this.postProcessValue(e3);
      else if (e3.isIntrinsic()) e3 instanceof l.ObjectValue && e3._isScopedTemplate ? (this.preProcessValue(e3), this.postProcessValue(e3)) : this._enqueueWithUnrelatedScope(this._getCommonScope(), function() {
        t2.preProcessValue(e3), t2.postProcessValue(e3);
      });
      else if (e3 instanceof l.EmptyValue) this.preProcessValue(e3), this.postProcessValue(e3);
      else if (y.HeapInspector.isLeaf(e3)) this.preProcessValue(e3), this.postProcessValue(e3);
      else if ((0, u.IsArray)(this.realm, e3)) (0, h.default)(e3 instanceof l.ObjectValue), this.preProcessValue(e3) && this.visitValueArray(e3), this.postProcessValue(e3);
      else if (e3 instanceof l.ProxyValue) this.preProcessValue(e3) && this.visitValueProxy(e3), this.postProcessValue(e3);
      else if (e3 instanceof l.FunctionValue) {
        var r2 = this.generatorTree.getCreator(e3) || this.globalGenerator;
        this._enqueueWithUnrelatedScope(r2, function() {
          (0, h.default)(e3 instanceof l.FunctionValue), t2.preProcessValue(e3) && t2.visitValueFunction(e3), t2.postProcessValue(e3);
        });
        var n2 = this._getCommonScope();
        n2 !== r2 && n2 !== e3 && this._enqueueWithUnrelatedScope(n2, function() {
          t2.preProcessValue(e3), t2.postProcessValue(e3);
        });
      } else e3 instanceof l.SymbolValue ? (this.preProcessValue(e3) && this.visitValueSymbol(e3), this.postProcessValue(e3)) : ((0, h.default)(e3 instanceof l.ObjectValue), this.preProcessValue(e3) && this.visitValueObject(e3), this.postProcessValue(e3));
    } }, { key: "createGeneratorVisitCallbacks", value: function(e3) {
      var t2 = this, r2 = { visitEquivalentValue: this.visitEquivalentValue.bind(this), visitGenerator: function(r3, n2) {
        (0, h.default)(t2.generatorTree.getParent(r3) === n2), t2.visitGenerator(r3, e3);
      }, canOmit: function(e4) {
        var r3 = !t2.referencedDeclaredValues.has(e4) && !t2.values.has(e4);
        if (!r3) return false;
        if (e4 instanceof l.ObjectValue && void 0 !== e4.temporalAlias) {
          var n2 = e4.temporalAlias;
          return !t2.referencedDeclaredValues.has(n2) && !t2.values.has(n2);
        }
        return r3;
      }, recordDeclaration: function(e4) {
        t2.referencedDeclaredValues.set(e4, t2._getAdditionalFunctionOfScope());
      }, recordDelayedEntry: function(e4, n2) {
        t2._enqueueWithUnrelatedScope(e4, function() {
          return n2.visit(r2, e4);
        });
      }, visitModifiedProperty: function(e4) {
        !(function r3() {
          if (t2.values.has(e4.object)) {
            if (e4.internalSlot) {
              (0, h.default)("string" == typeof e4.key);
              var n2 = new o.CompilerDiagnostic("Internal slot ".concat(e4.key, " modified in a nested context. This is not yet supported."), e4.object.expressionLocation, "PP1006", "FatalError");
              throw t2.realm.handleError(n2), new o.FatalError();
            }
            return t2.visitValue(e4.object), e4.key instanceof l.Value && t2.visitValue(e4.key), t2.visitObjectProperty(e4), true;
          }
          return t2._enqueueWithUnrelatedScope(t2.scope, r3), false;
        })();
      }, visitModifiedBinding: function(r3) {
        !(function n2() {
          if (t2.hasBinding(r3.environment, r3.name)) {
            (0, h.default)(e3);
            var i2 = e3.functionValue;
            (0, h.default)(i2 instanceof l.ECMAScriptSourceFunctionValue);
            var a2 = t2.getBinding(r3.environment, r3.name), s2 = e3.instance;
            (0, h.default)(void 0 !== s2), s2.residualFunctionBindings.set(r3.name, a2);
            var u2 = r3.value;
            (0, h.default)(u2), t2.visitValue(u2), a2.modified = true;
            var c2 = a2.additionalFunctionOverridesValue;
            if (void 0 !== c2 && c2 !== i2) {
              var f2 = c2._SafeGetDataPropertyValue("name"), p2 = f2 instanceof l.StringValue ? f2.value : "unknown function", d2 = i2._SafeGetDataPropertyValue("name"), v2 = d2 instanceof l.StringValue ? d2.value : "unknown function", y2 = new o.CompilerDiagnostic("Variable ".concat(r3.name, " written to in optimized function ").concat(v2, " conflicts with write in another optimized function ").concat(p2), d2.expressionLocation, "PP1001", "RecoverableError");
              if ("Fail" === i2.$Realm.handleError(y2)) throw new o.FatalError();
            }
            return a2.additionalFunctionOverridesValue = i2, e3.modifiedBindings.set(r3, a2), a2.potentialReferentializationScopes.add("GLOBAL"), true;
          }
          return t2._enqueueWithUnrelatedScope(t2.scope, n2), false;
        })();
      }, visitBindingAssignment: function(r3, n2) {
        var i2 = t2.getBinding(r3.environment, r3.name);
        i2.modified = true, i2.hasLeaked = true;
        var a2 = t2._getCommonScope();
        return 0 === i2.potentialReferentializationScopes.size && t2._enqueueWithUnrelatedScope(a2, function() {
          if (void 0 !== e3) {
            var r4 = e3.instance;
            (0, h.default)(void 0 !== r4), r4.residualFunctionBindings.set(i2.name, i2);
          }
          t2.visitBinding(a2, i2);
        }), t2.visitEquivalentValue(n2);
      } };
      return r2;
    } }, { key: "visitGenerator", value: function(e3, t2) {
      var r2 = this;
      this._withScope(e3, function() {
        e3.visit(r2.createGeneratorVisitCallbacks(t2));
      });
    } }, { key: "_visitAdditionalFunction", value: function(e3, t2) {
      var r2 = this;
      (0, h.default)(e3 instanceof l.ECMAScriptSourceFunctionValue);
      var n2 = e3.$ECMAScriptCode, i2 = this.functionInfos.get(n2);
      (0, h.default)(void 0 !== i2);
      var a2 = this.functionInstances.get(e3);
      (0, h.default)(void 0 !== a2);
      var o2 = function() {
        (0, h.default)(void 0 !== a2), (0, h.default)(void 0 !== i2);
        var n3 = { modifiedBindings: /* @__PURE__ */ new Map(), functionValue: e3, instance: a2, prelude: [] };
        r2.additionalFunctionValueInfos.set(e3, n3);
        var o3 = t2.generator;
        r2.generatorTree.add(e3, o3), r2.visitGenerator(o3, n3);
      };
      this.realm.react.enabled ? this.residualReactElementVisitor.withCleanEquivalenceSet(o2) : o2();
    } }, { key: "visitRoots", value: function() {
      this.generatorTree.add("GLOBAL", this.globalGenerator), this.visitGenerator(this.globalGenerator);
      var e3 = true, t2 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.modules.initializedModules.values()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value;
          this.visitValue(a2);
        }
      } catch (e4) {
        t2 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t2) throw r2;
        }
      }
      this._visitUntilFixpoint();
    } }, { key: "_visitUntilFixpoint", value: function() {
      var e3 = this;
      this.realm.react.verbose && this.logger.logInformation("Computing fixed point...");
      for (var t2 = true, r2 = function() {
        var r3 = /* @__PURE__ */ new Map(), i2 = 0, a2 = true, o2 = false, s2 = void 0;
        try {
          for (var u2, c2 = e3.delayedActions[Symbol.iterator](); !(a2 = (u2 = c2.next()).done); a2 = true) {
            var f2 = u2.value, d2 = f2.scope, v2 = f2.action, y2 = void 0;
            d2 instanceof l.FunctionValue ? y2 = e3.generatorTree.getCreator(d2) || e3.globalGenerator : "GLOBAL" === d2 ? y2 = e3.globalGenerator : ((0, h.default)(d2 instanceof p.Generator), y2 = d2);
            var m2 = r3.get(y2);
            void 0 === m2 && r3.set(y2, m2 = []), m2.push({ action: v2, scope: d2 }), i2++;
          }
        } catch (e4) {
          o2 = true, s2 = e4;
        } finally {
          try {
            a2 || null == c2.return || c2.return();
          } finally {
            if (o2) throw s2;
          }
        }
        e3.delayedActions = [], t2 = false;
        var b2 = /* @__PURE__ */ new Map(), g2 = [], w2 = 0, E2 = true, S2 = false, T2 = void 0;
        try {
          for (var A, C = function() {
            for (var r4 = n(A.value, 2), i3 = r4[0], a3 = r4[1], o3 = function() {
              var r5 = true, n2 = false, i4 = void 0;
              try {
                for (var o4, s4 = function() {
                  var r6 = o4.value, n3 = r6.action, i5 = r6.scope;
                  w2++, e3._withScope(i5, function() {
                    false !== n3() && (t2 = true);
                  });
                }, u4 = a3[Symbol.iterator](); !(r5 = (o4 = u4.next()).done); r5 = true) s4();
              } catch (e4) {
                n2 = true, i4 = e4;
              } finally {
                try {
                  r5 || null == u4.return || u4.return();
                } finally {
                  if (n2) throw i4;
                }
              }
            }, s3 = i3, u3 = /* @__PURE__ */ new Set(), c3 = void 0; "GLOBAL" !== s3; ) {
              if ((0, h.default)(!u3.has(s3)), u3.add(s3), s3 instanceof p.Generator) {
                if ("break" === (function() {
                  var t3 = s3.effectsToApply;
                  if (t3) {
                    var r5, n2 = b2.get(t3);
                    if (void 0 === n2 && (r5 = function() {
                      e3.realm.withEffectsAppliedInGlobalEnv(function() {
                        (0, h.default)(void 0 !== n2);
                        var e4 = true, t4 = false, r6 = void 0;
                        try {
                          for (var i4, a4 = n2.nestedEffectsRunners[Symbol.iterator](); !(e4 = (i4 = a4.next()).done); e4 = true) {
                            (0, i4.value)();
                          }
                        } catch (e5) {
                          t4 = true, r6 = e5;
                        } finally {
                          try {
                            e4 || null == a4.return || a4.return();
                          } finally {
                            if (t4) throw r6;
                          }
                        }
                        return null;
                      }, t3);
                    }, b2.set(t3, n2 = { runner: r5, nestedEffectsRunners: [] })), void 0 !== c3 && n2.nestedEffectsRunners.push(c3), c3 = r5, void 0 === o3) return "break";
                    n2.nestedEffectsRunners.push(o3), o3 = void 0;
                  }
                  s3 = e3.generatorTree.getParent(s3);
                })()) break;
              } else s3 instanceof l.FunctionValue && ((0, h.default)(e3.additionalFunctionValuesAndEffects.has(s3)), s3 = e3.generatorTree.getCreator(s3) || "GLOBAL");
              (0, h.default)(s3 instanceof p.Generator || s3 instanceof l.FunctionValue || "GLOBAL" === s3);
            }
            void 0 !== o3 ? ((0, h.default)(void 0 === c3), o3()) : void 0 !== c3 && g2.push(c3);
          }, P = r3[Symbol.iterator](); !(E2 = (A = P.next()).done); E2 = true) C();
        } catch (e4) {
          S2 = true, T2 = e4;
        } finally {
          try {
            E2 || null == P.return || P.return();
          } finally {
            if (S2) throw T2;
          }
        }
        for (var O = 0; O < g2.length; O++) {
          (0, g2[O])();
        }
        (0, h.default)(i2 === w2), e3.realm.react.verbose && e3.logger.logInformation("  (".concat(w2, " items processed)"));
      }; t2; ) r2();
    } }, { key: "toInfo", value: function() {
      return { values: this.values, functionInstances: this.functionInstances, classMethodInstances: this.classMethodInstances, functionInfos: this.functionInfos, referencedDeclaredValues: this.referencedDeclaredValues, additionalFunctionValueInfos: this.additionalFunctionValueInfos, declarativeEnvironmentRecordsBindings: this.declarativeEnvironmentRecordsBindings, globalBindings: this.globalBindings, conditionalFeasibility: this.conditionalFeasibility, additionalGeneratorRoots: this.additionalGeneratorRoots };
    } }]), e2;
  })();
  t.ResidualHeapVisitor = T;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2, t2, r2) {
    return (o = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = s(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function s(e2) {
    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.SerializerStatistics = void 0;
  var l = r(117), c = (function(e2) {
    function t2(e3, r2) {
      var n2, i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (n2 = a(this, s(t2).call(this, e3, r2))).forcingGC = i2, n2.functions = 0, n2.delayedValues = 0, n2.initializedModules = 0, n2.acceleratedModules = 0, n2.delayedModules = 0, n2.totalModules = 0, n2.resetBeforePass(), n2.total = new l.PerformanceTracker(e3, r2), n2.resolveInitializedModules = new l.PerformanceTracker(e3, r2), n2.initializeMoreModules = new l.PerformanceTracker(e3, r2), n2.optimizeReactComponentTreeRoots = new l.PerformanceTracker(e3, r2), n2.checkThatFunctionsAreIndependent = new l.PerformanceTracker(e3, r2), n2.processCollectedNestedOptimizedFunctions = new l.PerformanceTracker(e3, r2), n2.deepTraversal = new l.PerformanceTracker(e3, r2), n2.referentialization = new l.PerformanceTracker(e3, r2), n2.referenceCounts = new l.PerformanceTracker(e3, r2), n2.serializePass = new l.PerformanceTracker(e3, r2), n2.babelGenerate = new l.PerformanceTracker(e3, r2), n2.dumpIR = new l.PerformanceTracker(e3, r2), n2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && u(e3, t3);
    })(t2, l.RealmStatistics), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "resetBeforePass", value: function() {
      this.objects = 0, this.objectProperties = 0, this.functionClones = 0, this.lazyObjects = 0, this.referentialized = 0, this.valueIds = 0, this.valuesInlined = 0, this.generators = 0, this.requireCalls = 0, this.requireCallsReplaced = 0;
    } }, { key: "getSerializerStatistics", value: function() {
      return { objects: this.objects, objectProperties: this.objectProperties, functions: this.functions, functionClones: this.functionClones, lazyObjects: this.lazyObjects, referentialized: this.referentialized, valueIds: this.valueIds, valuesInlined: this.valuesInlined, delayedValues: this.delayedValues, initializedModules: this.initializedModules, acceleratedModules: this.acceleratedModules, delayedModules: this.delayedModules, totalModules: this.totalModules, generators: this.generators, requireCalls: this.requireCalls, requireCallsReplaced: this.requireCallsReplaced };
    } }, { key: "log", value: function() {
      o(s(t2.prototype), "log", this).call(this), console.log("=== serialization statistics"), console.log("".concat(this.objects, " objects with ").concat(this.objectProperties, " properties")), console.log("".concat(this.functions, " functions plus ").concat(this.functionClones, " clones due to captured variables; ").concat(this.referentialized, " captured mutable variables")), console.log("".concat(this.lazyObjects, " objects are lazy.")), console.log("".concat(this.valueIds, " eager and ").concat(this.delayedValues, " delayed value ids generated, and ").concat(this.valuesInlined, " values inlined.")), console.log("".concat(this.initializedModules, " out of ").concat(this.totalModules, " modules initialized, with ").concat(this.acceleratedModules, " accelerated and ").concat(this.delayedModules, " delayed.")), console.log("".concat(this.requireCallsReplaced, " of ").concat(this.requireCalls, " require calls inlined.")), console.log("".concat(this.generators, " generators"));
    } }, { key: "logSerializerPerformanceTrackers", value: function(e3, t3, r2) {
      console.log("=== ".concat(e3, ": ").concat(r2(this.total), " total")), void 0 !== t3 && console.log("NOTE: ".concat(t3)), this.logPerformanceTrackers(r2), console.log("".concat(r2(this.resolveInitializedModules), " resolving initialized modules, ").concat(r2(this.initializeMoreModules), " initializing more modules, ").concat(r2(this.optimizeReactComponentTreeRoots), " optimizing react component tree roots, ").concat(r2(this.checkThatFunctionsAreIndependent), " evaluating functions to optimize, ").concat(r2(this.dumpIR), " dumping IR")), console.log("".concat(r2(this.deepTraversal), " visiting residual heap, ").concat(r2(this.referentialization), " referentializing functions, ").concat(r2(this.referenceCounts), " reference counting, ").concat(r2(this.serializePass), " generating AST, ").concat(r2(this.babelGenerate), " generating source code"));
    } }]), t2;
  })();
  t.SerializerStatistics = c;
}, function(e, t, r) {
  "use strict";
  var n = r(81), i = r(609), a = r(608), o = "[object Null]", s = "[object Undefined]", u = n ? n.toStringTag : void 0;
  e.exports = function(e2) {
    return null == e2 ? void 0 === e2 ? s : o : u && u in Object(e2) ? i(e2) : a(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var i = T(r(181));
  function a() {
    var e2 = S(r(616));
    return a = function() {
      return e2;
    }, e2;
  }
  var o = S(r(28)), s = S(r(180));
  function u() {
    var e2 = T(r(5));
    return u = function() {
      return e2;
    }, e2;
  }
  var l = r(78);
  function c() {
    var e2 = S(r(108));
    return c = function() {
      return e2;
    }, e2;
  }
  var f = T(r(525)), p = T(r(524)), d = T(r(521)), h = T(r(520)), v = T(r(519)), y = T(r(516)), m = T(r(515)), b = T(r(514)), g = T(r(512)), w = T(r(510)), E = T(r(509));
  function S(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function T(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  var A = (0, a().default)("babel"), C = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.parent = r2, this.hub = t2, this.contexts = [], this.data = {}, this.shouldSkip = false, this.shouldStop = false, this.removed = false, this.state = null, this.opts = null, this.skipKeys = null, this.parentPath = null, this.context = null, this.container = null, this.listKey = null, this.inList = false, this.parentKey = null, this.key = null, this.node = null, this.scope = null, this.type = null, this.typeAnnotation = null;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getScope", value: function(e3) {
      return this.isScope() ? new s.default(this) : e3;
    } }, { key: "setData", value: function(e3, t2) {
      return this.data[e3] = t2;
    } }, { key: "getData", value: function(e3, t2) {
      var r2 = this.data[e3];
      return !r2 && t2 && (r2 = this.data[e3] = t2), r2;
    } }, { key: "buildCodeFrameError", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : SyntaxError;
      return this.hub.buildError(this.node, e3, t2);
    } }, { key: "traverse", value: function(e3, t2) {
      (0, o.default)(this.node, e3, this.scope, t2, this);
    } }, { key: "set", value: function(e3, t2) {
      u().validate(this.node, e3, t2), this.node[e3] = t2;
    } }, { key: "getPathLocation", value: function() {
      var e3 = [], t2 = this;
      do {
        var r2 = t2.key;
        t2.inList && (r2 = "".concat(t2.listKey, "[").concat(r2, "]")), e3.unshift(r2);
      } while (t2 = t2.parentPath);
      return e3.join(".");
    } }, { key: "debug", value: function(e3) {
      A.enabled && A("".concat(this.getPathLocation(), " ").concat(this.type, ": ").concat(e3));
    } }, { key: "toString", value: function() {
      return (0, c().default)(this.node).code;
    } }], [{ key: "get", value: function(t2) {
      var r2 = t2.hub, n2 = t2.parentPath, i2 = t2.parent, a2 = t2.container, o2 = t2.listKey, s2 = t2.key;
      if (!r2 && n2 && (r2 = n2.hub), !i2) throw new Error("To get a node path the parent needs to exist");
      var u2, c2 = a2[s2], f2 = l.path.get(i2) || [];
      l.path.has(i2) || l.path.set(i2, f2);
      for (var p2 = 0; p2 < f2.length; p2++) {
        var d2 = f2[p2];
        if (d2.node === c2) {
          u2 = d2;
          break;
        }
      }
      return u2 || (u2 = new e2(r2, i2), f2.push(u2)), u2.setup(n2, a2, o2, s2), u2;
    } }]), e2;
  })();
  t.default = C, Object.assign(C.prototype, f, p, d, h, v, y, m, b, g, w, E);
  var P = true, O = false, x = void 0;
  try {
    for (var _, V = function() {
      var e2 = _.value, t2 = "is".concat(e2), r2 = u()[t2];
      C.prototype[t2] = function(e3) {
        return r2(this.node, e3);
      }, C.prototype["assert".concat(e2)] = function(t3) {
        if (!r2(this.node, t3)) throw new TypeError("Expected node path of type ".concat(e2));
      };
    }, D = u().TYPES[Symbol.iterator](); !(P = (_ = D.next()).done); P = true) V();
  } catch (e2) {
    O = true, x = e2;
  } finally {
    try {
      P || null == D.return || D.return();
    } finally {
      if (O) throw x;
    }
  }
  var N = function(e2) {
    if ("_" === e2[0]) return "continue";
    u().TYPES.indexOf(e2) < 0 && u().TYPES.push(e2);
    var t2 = i[e2];
    C.prototype["is".concat(e2)] = function(e3) {
      return t2.checkPath(this, e3);
    };
  };
  for (var I in i) N(I);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.CreateByteDataBlock = c, t.CopyDataBlockBytes = f, t.AllocateArrayBuffer = p, t.DetachArrayBuffer = function(e2, t2) {
    return (0, u.default)(t2 instanceof n.ObjectValue && "$ArrayBufferData" in t2 && "$ArrayBufferByteLength" in t2), s.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$ArrayBufferData").$ArrayBufferData = null, s.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$ArrayBufferByteLength").$ArrayBufferByteLength = 0, e2.intrinsics.null;
  }, t.GetViewValue = function(e2, t2, r2, i2, a2) {
    var c2 = t2.throwIfNotConcrete();
    if (!(c2 instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(view) is not Object");
    if (!("$DataView" in c2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "view does not have a [[DataView]] internal slot");
    (0, u.default)(c2.$ViewedArrayBuffer);
    var f2 = s.To.ToIndexPartial(e2, r2), p2 = s.To.ToBooleanPartial(e2, i2), h2 = c2.$ViewedArrayBuffer;
    if ((0, u.default)(h2), true === (0, o.IsDetachedBuffer)(e2, h2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
    var v = c2.$ByteOffset;
    (0, u.default)("number" == typeof v);
    var y = c2.$ByteLength;
    (0, u.default)("number" == typeof y);
    var m = l.ElementSize[a2];
    if (f2 + m > y) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "getIndex + elementSize > viewSize");
    return d(e2, h2, f2 + v, a2, p2);
  }, t.GetValueFromBuffer = d, t.SetViewValue = function(e2, t2, r2, i2, a2, c2) {
    var f2 = t2.throwIfNotConcrete();
    if (!(f2 instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(view) is not Object");
    if (!("$DataView" in f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "view does not have a [[DataView]] internal slot");
    (0, u.default)(f2.$ViewedArrayBuffer);
    var p2 = s.To.ToIndexPartial(e2, r2), d2 = s.To.ToNumber(e2, c2), v = s.To.ToBooleanPartial(e2, i2), y = f2.$ViewedArrayBuffer;
    if ((0, u.default)(y), true === (0, o.IsDetachedBuffer)(e2, y)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
    var m = f2.$ByteOffset;
    (0, u.default)("number" == typeof m);
    var b = f2.$ByteLength;
    (0, u.default)("number" == typeof b);
    var g = l.ElementSize[a2];
    if (p2 + g > b) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "getIndex + elementSize > viewSize");
    return h(e2, y, p2 + m, a2, d2, v);
  }, t.CloneArrayBuffer = function(e2, t2, r2, s2) {
    var l2 = s2;
    if ((0, u.default)(t2 instanceof n.ObjectValue && t2.$ArrayBufferData), void 0 === l2) {
      if (l2 = (0, i.SpeciesConstructor)(e2, t2, e2.intrinsics.ArrayBuffer), true === (0, o.IsDetachedBuffer)(e2, t2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(srcBuffer) is true");
    } else (0, u.default)(true === (0, a.IsConstructor)(e2, l2), "IsConstructor(cloneConstructor) is true");
    var c2 = t2.$ArrayBufferByteLength;
    (0, u.default)("number" == typeof c2), (0, u.default)(r2 <= c2, "srcByteOffset \u2264 srcLength");
    var d2 = c2 - r2, h2 = t2.$ArrayBufferData;
    (0, u.default)(h2);
    var v = p(e2, l2, c2);
    if (true === (0, o.IsDetachedBuffer)(e2, t2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(srcBuffer) is true");
    var y = v.$ArrayBufferData;
    return (0, u.default)(y), f(e2, y, 0, h2, r2, d2), v;
  }, t.SetValueInBuffer = h;
  var n = r(0), i = r(22), a = r(3), o = r(11), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(35);
  function c(e2, t2) {
    var r2;
    (0, u.default)(t2 >= 0, "size >= 0");
    try {
      r2 = new Uint8Array(t2);
    } catch (t3) {
      throw t3 instanceof RangeError ? e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "Invalid typed array length") : t3;
    }
    for (var n2 = 0; n2 < t2; ++n2) r2[n2] = 0;
    return r2;
  }
  function f(e2, t2, r2, n2, i2, a2) {
    var o2 = r2, s2 = i2, l2 = a2;
    (0, u.default)(t2 instanceof Uint8Array && n2 instanceof Uint8Array && t2 !== n2), (0, u.default)(o2 >= 0 && s2 >= 0 && l2 >= 0);
    var c2 = n2.length;
    (0, u.default)(s2 + l2 <= c2, "fromIndex+count \u2264 fromSize");
    var f2 = t2.length;
    for ((0, u.default)(o2 + l2 <= f2, "toIndex+count \u2264 toSize"); l2 > 0; ) t2[o2] = n2[s2], o2 += 1, s2 += 1, l2 -= 1;
    return e2.intrinsics.empty;
  }
  function p(e2, t2, r2) {
    var n2 = s.Create.OrdinaryCreateFromConstructor(e2, t2, "ArrayBufferPrototype", { $ArrayBufferData: void 0, $ArrayBufferByteLength: void 0 });
    (0, u.default)("number" == typeof r2 && r2 >= 0, "byteLength is an integer value \u2265 0");
    var i2 = c(e2, r2);
    return n2.$ArrayBufferData = i2, n2.$ArrayBufferByteLength = r2, n2;
  }
  function d(e2, t2, r2, i2, a2) {
    var s2 = a2;
    (0, u.default)(false === (0, o.IsDetachedBuffer)(e2, t2)), (0, u.default)(t2.$ArrayBufferData instanceof Uint8Array && r2 + l.ElementSize[i2] <= t2.$ArrayBufferData.length), (0, u.default)(r2 >= 0);
    var c2 = t2.$ArrayBufferData;
    (0, u.default)(c2 instanceof Uint8Array);
    var f2, p2 = l.ElementSize[i2], d2 = new DataView(c2.buffer, r2, p2);
    return void 0 === s2 && (s2 = true), "Float32" === i2 ? new n.NumberValue(e2, d2.getFloat32(0, s2)) : "Float64" === i2 ? new n.NumberValue(e2, d2.getFloat64(0, s2)) : (f2 = "Uint8" === i2 || "Uint16" === i2 || "Uint32" === i2 || "Uint8Clamped" === i2 ? 1 === p2 ? d2.getUint8(0) : 2 === p2 ? d2.getUint16(0, s2) : d2.getUint32(0, s2) : 1 === p2 ? d2.getInt8(0) : 2 === p2 ? d2.getInt16(0, s2) : d2.getInt32(0, s2), new n.NumberValue(e2, f2));
  }
  function h(e2, t2, r2, n2, i2, a2) {
    var c2 = a2;
    (0, u.default)(false === (0, o.IsDetachedBuffer)(e2, t2)), (0, u.default)(t2.$ArrayBufferData instanceof Uint8Array && r2 + l.ElementSize[n2] <= t2.$ArrayBufferData.length), (0, u.default)(r2 >= 0), (0, u.default)("number" == typeof i2);
    var f2 = s.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$ArrayBufferData").$ArrayBufferData;
    (0, u.default)(f2 instanceof Uint8Array), void 0 === c2 && (c2 = true);
    var p2 = new Uint8Array(l.ElementSize[n2]);
    if ("Float32" === n2) new DataView(p2.buffer).setFloat32(0, i2, c2);
    else if ("Float64" === n2) new DataView(p2.buffer).setFloat64(0, i2, c2);
    else {
      var d2 = l.ElementSize[n2], h2 = (0, s.To.ElementConv[n2])(e2, i2);
      h2 > 0 ? 1 === d2 ? new DataView(p2.buffer).setUint8(0, h2) : 2 === d2 ? new DataView(p2.buffer).setUint16(0, h2, c2) : 4 === d2 ? new DataView(p2.buffer).setUint32(0, h2, c2) : (0, u.default)(false) : 1 === d2 ? new DataView(p2.buffer).setInt8(0, h2) : 2 === d2 ? new DataView(p2.buffer).setInt16(0, h2, c2) : 4 === d2 ? new DataView(p2.buffer).setInt32(0, h2, c2) : (0, u.default)(false);
    }
    for (var v = 0; v < p2.length; ++v) f2[r2 + v] = p2[v];
    return e2.intrinsics.undefined;
  }
}, function(e, t) {
  (function(t2) {
    e.exports = t2;
  }).call(this, {});
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i;
  i = /* @__PURE__ */ (function() {
    return this;
  })();
  try {
    i = i || Function("return this")() || (0, eval)("this");
  } catch (e2) {
    "object" === ("undefined" == typeof window ? "undefined" : n(window)) && (i = window);
  }
  e.exports = i;
}, function(e, t, r) {
  "use strict";
  var n = r(130), i = r(757), a = r(756), o = "[object Null]", s = "[object Undefined]", u = n ? n.toStringTag : void 0;
  e.exports = function(e2) {
    return null == e2 ? void 0 === e2 ? s : o : u && u in Object(e2) ? i(e2) : a(e2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if (e2) return;
    var r2 = new Error(t2);
    throw r2.name = "Invariant Violation", r2;
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.InternalGetResultValue = c, t.LoopContinues = f, t.ForInOfHeadEvaluation = d, t.ForInOfBodyEvaluation = h, t.default = function(e2, t2, r2, n2, i2) {
    var c2 = e2.left, f2 = e2.right, p2 = e2.body;
    try {
      if ("VariableDeclaration" === c2.type) {
        if ("var" === c2.kind) {
          var v = d(n2, r2, [], f2, "iterate", t2);
          return (0, s.default)(v instanceof o.ObjectValue), h(n2, r2, c2.declarations[0].id, p2, v, "varBinding", i2, t2);
        }
        var y = d(n2, r2, l.Environment.BoundNames(n2, c2), f2, "iterate", t2);
        return (0, s.default)(y instanceof o.ObjectValue), h(n2, r2, c2, p2, y, "lexicalBinding", i2, t2);
      }
      var m = d(n2, r2, [], f2, "iterate", t2);
      return (0, s.default)(m instanceof o.ObjectValue), h(n2, r2, c2, p2, m, "assignment", i2, t2);
    } catch (e3) {
      if (e3 instanceof a.BreakCompletion && !e3.target) return (0, u.UpdateEmpty)(n2, e3, n2.intrinsics.undefined).value;
      throw e3;
    }
  };
  var n = r(4), i = r(10), a = r(7), o = r(0), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(3), l = r(2);
  function c(e2, t2) {
    return t2 instanceof a.Completion ? t2.value : t2;
  }
  function f(e2, t2, r2) {
    return t2 instanceof o.Value || t2 instanceof a.NormalCompletion || (t2 instanceof a.JoinedAbruptCompletions ? f(e2, t2.consequent, r2) || f(e2, t2.alternate, r2) : t2 instanceof a.ContinueCompletion && (!t2.target || null != r2 && r2.indexOf(t2.target) >= 0));
  }
  function p(e2, t2, r2) {
    var n2 = r2.environmentRecord;
    (0, s.default)(n2 instanceof i.DeclarativeEnvironmentRecord);
    var a2 = true, o2 = false, u2 = void 0;
    try {
      for (var c2, f2 = l.Environment.BoundNames(e2, t2)[Symbol.iterator](); !(a2 = (c2 = f2.next()).done); a2 = true) {
        var p2 = c2.value;
        "const" === t2.kind ? n2.CreateImmutableBinding(p2, true) : n2.CreateMutableBinding(p2, false);
      }
    } catch (e3) {
      o2 = true, u2 = e3;
    } finally {
      try {
        a2 || null == f2.return || f2.return();
      } finally {
        if (o2) throw u2;
      }
    }
  }
  function d(e2, t2, r2, i2, c2, f2) {
    var p2, d2 = e2.getRunningContext().lexicalEnvironment;
    if (r2.length) {
      var h2 = l.Environment.NewDeclarativeEnvironment(e2, d2), v = h2.environmentRecord, y = true, m = false, b = void 0;
      try {
        for (var g, w = r2[Symbol.iterator](); !(y = (g = w.next()).done); y = true) {
          var E = g.value;
          v.CreateMutableBinding(E, false);
        }
      } catch (e3) {
        m = true, b = e3;
      } finally {
        try {
          y || null == w.return || w.return();
        } finally {
          if (m) throw b;
        }
      }
      e2.getRunningContext().lexicalEnvironment = h2, t2 = h2;
    }
    try {
      p2 = t2.evaluate(i2, f2);
    } finally {
      var S = e2.getRunningContext().lexicalEnvironment;
      S !== d2 && e2.onDestroyScope(S), e2.getRunningContext().lexicalEnvironment = d2;
    }
    t2 = d2;
    var T = l.Environment.GetValue(e2, p2);
    if ("enumerate" === c2) {
      if (T instanceof o.NullValue || T instanceof o.UndefinedValue) throw new a.BreakCompletion(e2.intrinsics.empty, i2.loc, null);
      var A = l.To.ToObject(e2, T);
      return A.isPartialObject() || A instanceof o.AbstractObjectValue ? A : l.Properties.EnumerateObjectProperties(e2, A);
    }
    if ((0, s.default)("iterate" === c2, "expected iterationKind to be iterate"), T instanceof o.AbstractValue) {
      var C = new n.CompilerDiagnostic("for of loops over unknown collections are not yet supported", i2.loc, "PP0014", "FatalError");
      throw e2.handleError(C), new n.FatalError();
    }
    return (0, u.GetIterator)(e2, T);
  }
  function h(e2, t2, r2, n2, d2, h2, v, y) {
    var m = e2.getRunningContext().lexicalEnvironment, b = e2.intrinsics.undefined, g = l.Environment.IsDestructuring(r2);
    for (g && "assignment" === h2 && (0, s.default)("VariableDeclaration" !== r2.type); ; ) {
      var w = (0, u.IteratorStep)(e2, d2);
      if (!w) return b;
      var E = (0, u.IteratorValue)(e2, w), S = void 0, T = void 0;
      if ("assignment" === h2 || "varBinding" === h2) g || (T = t2.evaluateCompletion(r2, y));
      else if ((0, s.default)("lexicalBinding" === h2, "expected lhsKind to be lexicalBinding"), (0, s.default)("VariableDeclaration" === r2.type), p(e2, r2, S = l.Environment.NewDeclarativeEnvironment(e2, m)), e2.getRunningContext().lexicalEnvironment = S, t2 = S, !g) {
        var A = l.Environment.BoundNames(e2, r2);
        (0, s.default)(1 === A.length, "expected single name");
        var C = A[0];
        T = l.Environment.ResolveBinding(e2, C, y);
      }
      var P = void 0;
      try {
        g ? "assignment" === h2 ? ((0, s.default)("ArrayPattern" === r2.type || "ObjectPattern" === r2.type), P = (0, u.DestructuringAssignmentEvaluation)(e2, r2, E, y, S || t2)) : "varBinding" === h2 ? P = l.Environment.BindingInitialization(e2, r2, E, y, void 0) : ((0, s.default)("lexicalBinding" === h2), (0, s.default)(void 0 !== S), P = l.Environment.BindingInitialization(e2, r2, E, y, S)) : T instanceof a.AbruptCompletion ? P = T : "lexicalBinding" === h2 ? ((0, s.default)(T instanceof i.Reference), P = l.Environment.InitializeReferencedBinding(e2, T, E)) : ((0, s.default)(void 0 !== T), P = l.Properties.PutValue(e2, T, E));
      } catch (e3) {
        if (!(e3 instanceof a.AbruptCompletion)) throw e3;
        P = e3;
      }
      if (P instanceof a.AbruptCompletion) throw e2.getRunningContext().lexicalEnvironment = m, (0, u.IteratorClose)(e2, d2, P);
      var O = t2.evaluateCompletion(n2, y);
      (0, s.default)(O instanceof o.Value || O instanceof a.AbruptCompletion);
      var x = e2.getRunningContext().lexicalEnvironment;
      if (x !== m && e2.onDestroyScope(x), e2.getRunningContext().lexicalEnvironment = m, t2 = m, !f(e2, O, v)) throw (0, s.default)(O instanceof a.AbruptCompletion), O = (0, u.UpdateEmpty)(e2, O, b), (0, s.default)(O instanceof a.AbruptCompletion), (0, u.IteratorClose)(e2, d2, O);
      var _ = c(0, O);
      _ instanceof o.EmptyValue || (b = _);
    }
    (0, s.default)(false);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.cloneReactElement = function(e2, t2, r2, i2) {
    var f2 = o.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype);
    e2.react.reactProps.add(f2);
    var p2 = function(t3, r3) {
      "__self" !== t3 && "__source" !== t3 && "key" !== t3 && "ref" !== t3 && ((0, s.default)(f2 instanceof a.ObjectValue), (0, l.hardModifyReactObjectPropertyBinding)(e2, f2, t3, r3));
    }, h2 = (0, l.getProperty)(e2, t2, "props");
    (0, l.applyObjectAssignConfigsForReactElement)(e2, f2, [h2, r2]), f2.makeFinal();
    var v = (0, l.getProperty)(e2, t2, "key"), y = (0, l.getProperty)(e2, t2, "ref"), m = (0, l.getProperty)(e2, t2, "type");
    if (!(r2 instanceof a.NullValue)) {
      var b = (0, u.Get)(e2, r2, "key");
      if (b !== e2.intrinsics.null && b !== e2.intrinsics.undefined) {
        var g = (0, l.hasNoPartialKeyOrRef)(e2, r2) && b instanceof a.AbstractValue && r2 instanceof a.ObjectValue && !r2.properties.has("key");
        g || (v = (0, c.computeBinary)(e2, "+", e2.intrinsics.emptyString, b));
      }
      var w = (0, u.Get)(e2, r2, "ref");
      if (w !== e2.intrinsics.null && w !== e2.intrinsics.undefined) {
        var E = (0, l.hasNoPartialKeyOrRef)(e2, r2) && w instanceof a.AbstractValue && r2 instanceof a.ObjectValue && !r2.properties.has("ref");
        E || (y = w);
      }
      var S = m instanceof a.ObjectValue || m instanceof a.AbstractObjectValue ? (0, u.Get)(e2, m, "defaultProps") : e2.intrinsics.undefined;
      if (S instanceof a.ObjectValue) {
        var T = true, A = false, C = void 0;
        try {
          for (var P, O = S.properties[Symbol.iterator](); !(T = (P = O.next()).done); T = true) {
            var x = n(P.value, 2), _ = x[0], V = x[1];
            V && V.descriptor && ((0, s.default)(V.descriptor instanceof d.PropertyDescriptor), V.descriptor.enumerable && (0, u.Get)(e2, f2, _) === e2.intrinsics.undefined && p2(_, (0, u.Get)(e2, S, _)));
          }
        } catch (e3) {
          A = true, C = e3;
        } finally {
          try {
            T || null == O.return || O.return();
          } finally {
            if (A) throw C;
          }
        }
      } else S instanceof a.AbstractObjectValue && (0, s.default)(false, "TODO: we need to eventually support this");
    }
    if (void 0 !== i2) (0, l.hardModifyReactObjectPropertyBinding)(e2, f2, "children", i2);
    else {
      (0, s.default)(h2 instanceof a.ObjectValue);
      var D = (0, l.getProperty)(e2, h2, "children");
      (0, l.hardModifyReactObjectPropertyBinding)(e2, f2, "children", D);
    }
    return (0, l.createInternalReactElement)(e2, m, v, y, f2);
  }, t.createReactElement = h, t.wrapReactElementWithKeyedFragment = function(e2, t2, r2) {
    var n2 = e2.fbLibraries.react;
    (0, s.default)(n2 instanceof a.ObjectValue);
    var i2 = (0, l.getProperty)(e2, n2, "Fragment"), u2 = o.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype);
    o.Create.CreateDataPropertyOrThrow(e2, u2, "key", t2);
    var c2 = o.Create.ArrayCreate(e2, 1);
    return o.Create.CreateDataPropertyOrThrow(e2, c2, "0", r2), c2 = (0, l.flattenChildren)(e2, c2), h(e2, i2, u2, c2);
  }, t.traverseReactElement = function(e2, t2, r2) {
    var n2 = (0, l.getProperty)(e2, t2, "type");
    r2.visitType(n2);
    var i2 = (0, l.getProperty)(e2, t2, "key");
    i2 !== e2.intrinsics.null && i2 !== e2.intrinsics.undefined && r2.visitKey(i2);
    var o2 = (0, l.getProperty)(e2, t2, "ref");
    o2 !== e2.intrinsics.null && o2 !== e2.intrinsics.undefined && r2.visitRef(o2);
    var u2 = function() {
      if ((0, s.default)(c2 instanceof a.ObjectValue), c2.properties.has("children")) {
        var t3 = (0, l.getProperty)(e2, c2, "children");
        if (t3 !== e2.intrinsics.undefined && t3 !== e2.intrinsics.null) if (t3 instanceof a.ArrayValue && !t3.intrinsicName) {
          var n3 = (0, l.getProperty)(e2, t3, "length"), i3 = 0;
          if (n3 instanceof a.NumberValue) {
            i3 = n3.value;
            for (var o3 = 0; o3 < i3; o3++) {
              var u3 = (0, l.getProperty)(e2, t3, "" + o3);
              r2.visitChildNode(u3);
            }
          }
        } else r2.visitChildNode(t3);
      }
    }, c2 = (0, l.getProperty)(e2, t2, "props");
    c2 instanceof a.AbstractValue ? r2.visitAbstractOrPartialProps(c2) : c2 instanceof a.ObjectValue && (c2.isPartialObject() ? (r2.visitAbstractOrPartialProps(c2), u2()) : (r2.visitConcreteProps(c2), u2()));
  };
  var i = r(12), a = r(0), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(3), l = r(14), c = r(62), f = r(4), p = r(9), d = r(6);
  function h(e2, t2, r2, v) {
    if (t2 instanceof a.AbstractValue && "conditional" === t2.kind) {
      var y = n(t2.args, 3), m = y[0], b = y[1], g = y[2];
      return (0, s.default)(m instanceof a.AbstractValue), (function(e3, t3, r3, n2, i2, a2) {
        return e3.evaluateWithAbstractConditional(t3, function() {
          return e3.evaluateForEffects(function() {
            return h(e3, r3, i2, a2);
          }, null, "splitReactElementsByConditionalType consequent");
        }, function() {
          return e3.evaluateForEffects(function() {
            return h(e3, n2, i2, a2);
          }, null, "splitReactElementsByConditionalType alternate");
        });
      })(e2, m, b, g, r2, v);
    }
    if (r2 instanceof a.AbstractObjectValue && "conditional" === r2.kind) {
      var w = n(r2.args, 3), E = w[0], S = w[1], T = w[2];
      return (0, s.default)(E instanceof a.AbstractValue), (0, s.default)(S instanceof a.ObjectValue || S instanceof a.AbstractObjectValue), (0, s.default)(T instanceof a.ObjectValue || T instanceof a.AbstractObjectValue), (function(e3, t3, r3, n2, i2, a2) {
        return e3.evaluateWithAbstractConditional(t3, function() {
          return e3.evaluateForEffects(function() {
            return h(e3, i2, r3, a2);
          }, null, "splitReactElementsByConditionalConfig consequent");
        }, function() {
          return e3.evaluateForEffects(function() {
            return h(e3, i2, n2, a2);
          }, null, "splitReactElementsByConditionalConfig alternate");
        });
      })(e2, E, S, T, t2, v);
    }
    var A = (function(e3, t3, r3, h2) {
      var v2 = e3.react.activeReconciler, y2 = void 0 !== v2 && v2.componentTreeConfig.firstRenderOnly, m2 = t3 instanceof a.ObjectValue || t3 instanceof a.AbstractObjectValue ? (0, u.Get)(e3, t3, "defaultProps") : e3.intrinsics.undefined, b2 = o.Create.ObjectCreate(e3, e3.intrinsics.ObjectPrototype);
      b2.makeFinal(), e3.react.reactProps.add(b2);
      var g2 = e3.intrinsics.null, w2 = e3.intrinsics.null;
      if (!(0, l.hasNoPartialKeyOrRef)(e3, r3)) {
        var E2 = new f.CompilerDiagnostic('unable to evaluate "key" and "ref" on a ReactElement due to an abstract config passed to createElement', e3.currentLocation, "PP0025", "FatalError");
        if (e3.handleError(E2), "Fail" === e3.handleError(E2)) throw new f.FatalError();
      }
      var S2 = (0, u.Get)(e3, r3, "key");
      S2 !== e3.intrinsics.null && S2 !== e3.intrinsics.undefined && ((0, l.hasNoPartialKeyOrRef)(e3, r3) && S2 instanceof a.AbstractValue && r3 instanceof a.ObjectValue && !r3.properties.has("key") || (g2 = (0, c.computeBinary)(e3, "+", e3.intrinsics.emptyString, S2)));
      var T2 = (0, u.Get)(e3, r3, "ref");
      T2 === e3.intrinsics.null || T2 === e3.intrinsics.undefined || y2 || (0, l.hasNoPartialKeyOrRef)(e3, r3) && T2 instanceof a.AbstractValue && r3 instanceof a.ObjectValue && !r3.properties.has("ref") || (w2 = T2);
      var A2 = function(t4, r4) {
        "__self" !== t4 && "__source" !== t4 && "key" !== t4 && "ref" !== t4 && ((0, s.default)(b2 instanceof a.ObjectValue), (0, l.hardModifyReactObjectPropertyBinding)(e3, b2, t4, r4));
      };
      if (r3 instanceof a.AbstractObjectValue && r3.isPartialObject() || r3 instanceof a.ObjectValue && r3.isPartialObject() && r3.isSimpleObject()) {
        if (b2 = o.Create.ObjectCreate(e3, e3.intrinsics.ObjectPrototype), e3.react.reactProps.add(b2), (0, l.applyObjectAssignConfigsForReactElement)(e3, b2, [r3]), b2.makeFinal(), void 0 !== h2 && (0, l.hardModifyReactObjectPropertyBinding)(e3, b2, "children", h2), m2 !== e3.intrinsics.undefined) {
          var C2 = 0;
          if (m2 instanceof a.ObjectValue && !m2.isPartialObject()) {
            var P2 = true, O2 = false, x = void 0;
            try {
              for (var _, V = m2.properties[Symbol.iterator](); !(P2 = (_ = V.next()).done); P2 = true) {
                var D = n(_.value, 2), N = D[0];
                if (void 0 !== (X = D[1]).descriptor && ((0, s.default)(X.descriptor instanceof d.PropertyDescriptor), X.descriptor.value !== e3.intrinsics.undefined)) {
                  var I = b2.properties.get(N);
                  void 0 === I || I.descriptor instanceof d.PropertyDescriptor && I.descriptor.value instanceof a.AbstractValue || (C2++, I.descriptor && ((0, s.default)(I.descriptor instanceof d.PropertyDescriptor), I.descriptor.value === e3.intrinsics.undefined && (0, l.hardModifyReactObjectPropertyBinding)(e3, b2, N, (0, u.Get)(e3, m2, N))));
                }
              }
            } catch (e4) {
              O2 = true, x = e4;
            } finally {
              try {
                P2 || null == V.return || V.return();
              } finally {
                if (O2) throw x;
              }
            }
          }
          if (!(m2 instanceof a.ObjectValue) || m2.isPartialObject() || C2 !== m2.properties.size) {
            b2.makePartial(), b2.makeSimple();
            var k = true, j = false, F = void 0;
            try {
              for (var R, M = b2.properties[Symbol.iterator](); !(k = (R = M.next()).done); k = true) {
                var B = n(R.value, 2);
                N = B[0], void 0 !== (X = B[1]).descriptor && ((0, s.default)(X.descriptor instanceof d.PropertyDescriptor), X.descriptor.value === e3.intrinsics.undefined && ((0, s.default)(m2 instanceof a.AbstractObjectValue || m2 instanceof a.ObjectValue), (0, l.hardModifyReactObjectPropertyBinding)(e3, b2, N, (0, u.Get)(e3, m2, N))));
              }
            } catch (e4) {
              j = true, F = e4;
            } finally {
              try {
                k || null == M.return || M.return();
              } finally {
                if (j) throw F;
              }
            }
            if (void 0 !== h2 && h2 instanceof a.AbstractValue) {
              var L = a.AbstractValue.createFromBinaryOp(e3, "===", h2, e3.intrinsics.undefined);
              (0, s.default)(m2 instanceof a.AbstractObjectValue || m2 instanceof a.ObjectValue);
              var $ = a.AbstractValue.createFromConditionalOp(e3, L, (0, u.Get)(e3, m2, "children"), h2);
              (0, l.hardModifyReactObjectPropertyBinding)(e3, b2, "children", $);
            }
            var G = e3.react.defaultPropsHelper;
            (0, s.default)(void 0 !== G);
            var z = b2.getSnapshot();
            b2.temporalAlias = z;
            var U = [G, z, m2], W = a.AbstractValue.createTemporalFromBuildFunction(e3, a.ObjectValue, U, (0, p.createOperationDescriptor)("REACT_DEFAULT_PROPS_HELPER"), { skipInvariant: true, mutatesOnly: [z] });
            (0, s.default)(W instanceof a.AbstractObjectValue), b2 instanceof a.AbstractObjectValue ? W.values = b2.values : ((0, s.default)(b2 instanceof a.ObjectValue), W.values = new i.ValuesDomain(b2)), b2.temporalAlias = W;
          }
        }
      } else if ((function() {
        if (r3 instanceof a.ObjectValue) {
          var t4 = true, i2 = false, o2 = void 0;
          try {
            for (var l2, c2 = r3.properties[Symbol.iterator](); !(t4 = (l2 = c2.next()).done); t4 = true) {
              var f2 = n(l2.value, 2), p2 = f2[0], h3 = f2[1];
              h3 && h3.descriptor && ((0, s.default)(h3.descriptor instanceof d.PropertyDescriptor), h3.descriptor.enumerable && A2(p2, (0, u.Get)(e3, r3, p2)));
            }
          } catch (e4) {
            i2 = true, o2 = e4;
          } finally {
            try {
              t4 || null == c2.return || c2.return();
            } finally {
              if (i2) throw o2;
            }
          }
        }
      })(), void 0 !== h2 && A2("children", h2), m2 instanceof a.AbstractObjectValue || m2.isPartialObject()) (0, s.default)(false, "TODO: we need to eventually support this");
      else if (m2 instanceof a.ObjectValue) {
        var q = true, H = false, K = void 0;
        try {
          for (var J, Y = m2.properties[Symbol.iterator](); !(q = (J = Y.next()).done); q = true) {
            var X, Q = n(J.value, 2), Z = Q[0];
            (X = Q[1]) && X.descriptor && ((0, s.default)(X.descriptor instanceof d.PropertyDescriptor), X.descriptor.enumerable && (0, u.Get)(e3, b2, Z) === e3.intrinsics.undefined && A2(Z, (0, u.Get)(e3, m2, Z)));
          }
        } catch (e4) {
          H = true, K = e4;
        } finally {
          try {
            q || null == Y.return || Y.return();
          } finally {
            if (H) throw K;
          }
        }
      }
      return (0, s.default)(b2 instanceof a.ObjectValue), (0, l.flagPropsWithNoPartialKeyOrRef)(e3, b2), { key: g2, props: b2, ref: w2 };
    })(e2, t2, r2, v), C = A.key, P = A.props, O = A.ref;
    return (0, l.createInternalReactElement)(e2, t2, C, O, P);
  }
}, function(e, t, r) {
  "use strict";
  t.getArg = function(e2, t2, r2) {
    if (t2 in e2) return e2[t2];
    if (3 === arguments.length) return r2;
    throw new Error('"' + t2 + '" is a required argument.');
  };
  var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/, i = /^data:.+\,.+$/;
  function a(e2) {
    var t2 = e2.match(n);
    return t2 ? { scheme: t2[1], auth: t2[2], host: t2[3], port: t2[4], path: t2[5] } : null;
  }
  function o(e2) {
    var t2 = "";
    return e2.scheme && (t2 += e2.scheme + ":"), t2 += "//", e2.auth && (t2 += e2.auth + "@"), e2.host && (t2 += e2.host), e2.port && (t2 += ":" + e2.port), e2.path && (t2 += e2.path), t2;
  }
  function s(e2) {
    var r2 = e2, n2 = a(e2);
    if (n2) {
      if (!n2.path) return e2;
      r2 = n2.path;
    }
    for (var i2, s2 = t.isAbsolute(r2), u2 = r2.split(/\/+/), l2 = 0, c2 = u2.length - 1; c2 >= 0; c2--) "." === (i2 = u2[c2]) ? u2.splice(c2, 1) : ".." === i2 ? l2++ : l2 > 0 && ("" === i2 ? (u2.splice(c2 + 1, l2), l2 = 0) : (u2.splice(c2, 2), l2--));
    return "" === (r2 = u2.join("/")) && (r2 = s2 ? "/" : "."), n2 ? (n2.path = r2, o(n2)) : r2;
  }
  t.urlParse = a, t.urlGenerate = o, t.normalize = s, t.join = function(e2, t2) {
    "" === e2 && (e2 = "."), "" === t2 && (t2 = ".");
    var r2 = a(t2), n2 = a(e2);
    if (n2 && (e2 = n2.path || "/"), r2 && !r2.scheme) return n2 && (r2.scheme = n2.scheme), o(r2);
    if (r2 || t2.match(i)) return t2;
    if (n2 && !n2.host && !n2.path) return n2.host = t2, o(n2);
    var u2 = "/" === t2.charAt(0) ? t2 : s(e2.replace(/\/+$/, "") + "/" + t2);
    return n2 ? (n2.path = u2, o(n2)) : u2;
  }, t.isAbsolute = function(e2) {
    return "/" === e2.charAt(0) || !!e2.match(n);
  }, t.relative = function(e2, t2) {
    "" === e2 && (e2 = "."), e2 = e2.replace(/\/$/, "");
    for (var r2 = 0; 0 !== t2.indexOf(e2 + "/"); ) {
      var n2 = e2.lastIndexOf("/");
      if (n2 < 0) return t2;
      if ((e2 = e2.slice(0, n2)).match(/^([^\/]+:\/)?\/*$/)) return t2;
      ++r2;
    }
    return Array(r2 + 1).join("../") + t2.substr(e2.length + 1);
  };
  var u = !("__proto__" in /* @__PURE__ */ Object.create(null));
  function l(e2) {
    return e2;
  }
  function c(e2) {
    if (!e2) return false;
    var t2 = e2.length;
    if (t2 < 9) return false;
    if (95 !== e2.charCodeAt(t2 - 1) || 95 !== e2.charCodeAt(t2 - 2) || 111 !== e2.charCodeAt(t2 - 3) || 116 !== e2.charCodeAt(t2 - 4) || 111 !== e2.charCodeAt(t2 - 5) || 114 !== e2.charCodeAt(t2 - 6) || 112 !== e2.charCodeAt(t2 - 7) || 95 !== e2.charCodeAt(t2 - 8) || 95 !== e2.charCodeAt(t2 - 9)) return false;
    for (var r2 = t2 - 10; r2 >= 0; r2--) if (36 !== e2.charCodeAt(r2)) return false;
    return true;
  }
  function f(e2, t2) {
    return e2 === t2 ? 0 : e2 > t2 ? 1 : -1;
  }
  t.toSetString = u ? l : function(e2) {
    return c(e2) ? "$" + e2 : e2;
  }, t.fromSetString = u ? l : function(e2) {
    return c(e2) ? e2.slice(1) : e2;
  }, t.compareByOriginalPositions = function(e2, t2, r2) {
    var n2 = e2.source - t2.source;
    return 0 !== n2 ? n2 : 0 != (n2 = e2.originalLine - t2.originalLine) ? n2 : 0 != (n2 = e2.originalColumn - t2.originalColumn) || r2 ? n2 : 0 != (n2 = e2.generatedColumn - t2.generatedColumn) ? n2 : 0 != (n2 = e2.generatedLine - t2.generatedLine) ? n2 : e2.name - t2.name;
  }, t.compareByGeneratedPositionsDeflated = function(e2, t2, r2) {
    var n2 = e2.generatedLine - t2.generatedLine;
    return 0 !== n2 ? n2 : 0 != (n2 = e2.generatedColumn - t2.generatedColumn) || r2 ? n2 : 0 != (n2 = e2.source - t2.source) ? n2 : 0 != (n2 = e2.originalLine - t2.originalLine) ? n2 : 0 != (n2 = e2.originalColumn - t2.originalColumn) ? n2 : e2.name - t2.name;
  }, t.compareByGeneratedPositionsInflated = function(e2, t2) {
    var r2 = e2.generatedLine - t2.generatedLine;
    return 0 !== r2 ? r2 : 0 != (r2 = e2.generatedColumn - t2.generatedColumn) ? r2 : 0 !== (r2 = f(e2.source, t2.source)) ? r2 : 0 != (r2 = e2.originalLine - t2.originalLine) ? r2 : 0 != (r2 = e2.originalColumn - t2.originalColumn) ? r2 : f(e2.name, t2.name);
  };
}, function(e, t, r) {
  "use strict";
  var n = Array.isArray;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, n2) {
    var i2 = r2.evaluate(e2.left, t2), a2 = u.Environment.GetValue(n2, i2), o2 = r2.evaluate(e2.right, t2), s2 = u.Environment.GetValue(n2, o2);
    return d(n2, e2.operator, a2, s2, e2.left.loc, e2.right.loc, e2.loc);
  }, t.getPureBinaryOperationResultType = p, t.computeBinary = d;
  var i = r(7), a = r(12), o = r(4), s = r(0), u = r(2), l = r(9), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var f = "might be an object with an unknown valueOf or toString or Symbol.toPrimitive method";
  function p(e2, t2, r2, n2, i2, a2) {
    function l2(t3, s2) {
      var u2 = t3(e2, r2), l3 = t3(e2, n2);
      if (u2 && l3) return s2;
      var c2 = u2 ? a2 : i2, p3 = new o.CompilerDiagnostic(f, c2, "PP0002", "RecoverableError");
      if ("Recover" === e2.handleError(p3)) return s2;
      throw new o.FatalError();
    }
    if ("+" === t2) {
      var p2 = u.To.GetToPrimitivePureResultType(e2, r2), d2 = u.To.GetToPrimitivePureResultType(e2, n2);
      if (p2 === s.StringValue || d2 === s.StringValue ? (u.To.IsToStringPure(e2, n2) || (d2 = void 0), u.To.IsToStringPure(e2, r2) || (p2 = void 0)) : (u.To.IsToNumberPure(e2, n2) || (d2 = void 0), u.To.IsToNumberPure(e2, r2) || (p2 = void 0)), void 0 === p2 || void 0 === d2) {
        if (r2.getType() === s.SymbolValue || n2.getType() === s.SymbolValue) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        var h = void 0 === p2 ? i2 : a2, v = new o.CompilerDiagnostic(f, h, "PP0002", "RecoverableError");
        if ("Recover" === e2.handleError(v)) return p2 = r2.getType(), d2 = n2.getType(), p2 === s.StringValue || d2 === s.StringValue ? s.StringValue : p2 === s.IntegralValue && d2 === s.IntegralValue ? s.IntegralValue : p2 !== s.NumberValue && p2 !== s.IntegralValue || d2 !== s.NumberValue && d2 !== s.IntegralValue ? s.Value : s.NumberValue;
        throw new o.FatalError();
      }
      return p2 === s.StringValue || d2 === s.StringValue ? s.StringValue : s.NumberValue;
    }
    if ("<" === t2 || ">" === t2 || ">=" === t2 || "<=" === t2) return l2(u.To.IsToPrimitivePure.bind(u.To), s.BooleanValue);
    if ("!=" === t2 || "==" === t2) {
      var y = r2.getType(), m = n2.getType();
      return y === s.NullValue || y === s.UndefinedValue || m === s.NullValue || m === s.UndefinedValue ? s.BooleanValue : l2(u.To.IsToPrimitivePure.bind(u.To), s.BooleanValue);
    }
    if ("===" === t2 || "!==" === t2) return s.BooleanValue;
    if (">>>" === t2 || "<<" === t2 || ">>" === t2 || "&" === t2 || "|" === t2 || "^" === t2 || "**" === t2 || "%" === t2 || "/" === t2 || "*" === t2 || "-" === t2) {
      if (r2.getType() === s.SymbolValue || n2.getType() === s.SymbolValue) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return l2(u.To.IsToNumberPure.bind(u.To), s.NumberValue);
    }
    if ("in" === t2 || "instanceof" === t2) {
      if (n2.mightNotBeObject()) {
        var b = new o.CompilerDiagnostic("might not be an object, hence the ".concat(t2, " operator might throw a TypeError"), a2, "PP0003", "RecoverableError");
        if ("Recover" === e2.handleError(b)) return s.BooleanValue;
        throw new o.FatalError();
      }
      if (!n2.mightNotBeObject() && n2.isSimpleObject()) return s.BooleanValue;
      var g = new o.CompilerDiagnostic("might be an object that behaves badly for the ".concat(t2, " operator"), a2, "PP0004", "RecoverableError");
      if ("Recover" === e2.handleError(g)) return s.BooleanValue;
      throw new o.FatalError();
    }
    (0, c.default)(false, "unimplemented " + t2);
  }
  function d(e2, t2, r2, f2, h, v, y) {
    if (e2.useAbstractInterpretation && ("==" === t2 || "===" === t2 || "!=" === t2 || "!==" === t2) && (!r2.mightNotBeObject() && (f2 instanceof s.NullValue || f2 instanceof s.UndefinedValue) || (r2 instanceof s.NullValue || r2 instanceof s.UndefinedValue) && !f2.mightNotBeObject())) return new s.BooleanValue(e2, "=" !== t2[0]);
    var m, b = function() {
      var i2 = r2 instanceof s.AbstractValue, u2 = f2 instanceof s.AbstractValue;
      if (!i2 && !u2) {
        if ("in" === t2 && !(f2 instanceof s.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        (0, c.default)(r2 instanceof s.ConcreteValue), (0, c.default)(f2 instanceof s.ConcreteValue);
        var l2 = a.ValuesDomain.computeBinary(e2, t2, r2, f2);
        return m = l2.getType(), l2;
      }
      if ("instanceof" === t2 && s.Value.isTypeCompatibleWith(r2.getType(), s.PrimitiveValue) && f2 instanceof s.AbstractObjectValue && f2.isSimpleObject()) return e2.intrinsics.false;
      try {
        m = p(e2, t2, r2, f2, h, v);
        var b2 = s.AbstractValue.createFromBinaryOp(e2, t2, r2, f2, y);
        return ("in" === t2 || "instanceof" === t2) && b2 instanceof s.AbstractValue && u2 && (b2 = s.AbstractValue.convertToTemporalIfArgsAreTemporal(e2, b2, [f2])), b2;
      } catch (i3) {
        if (i3 instanceof o.FatalError) {
          if (r2 instanceof s.AbstractValue && "conditional" === r2.kind) {
            var g2 = n(r2.args, 3), w2 = g2[0], E2 = g2[1], S = g2[2];
            return (0, c.default)(w2 instanceof s.AbstractValue), e2.evaluateWithAbstractConditional(w2, function() {
              return e2.evaluateForEffects(function() {
                return d(e2, t2, E2, f2, h, v, y);
              }, void 0, "ConditionalBinaryExpression/1");
            }, function() {
              return e2.evaluateForEffects(function() {
                return d(e2, t2, S, f2, h, v, y);
              }, void 0, "ConditionalBinaryExpression/2");
            });
          }
          if (f2 instanceof s.AbstractValue && "conditional" === f2.kind) {
            var T = n(f2.args, 3), A = T[0], C = T[1], P = T[2];
            return (0, c.default)(A instanceof s.AbstractValue), e2.evaluateWithAbstractConditional(A, function() {
              return e2.evaluateForEffects(function() {
                return d(e2, t2, r2, C, h, v, y);
              }, void 0, "ConditionalBinaryExpression/3");
            }, function() {
              return e2.evaluateForEffects(function() {
                return d(e2, t2, r2, P, h, v, y);
              }, void 0, "ConditionalBinaryExpression/4");
            });
          }
        }
        throw i3;
      }
    };
    if (e2.isInPureScope()) {
      var g, w = e2.errorHandler, E = true;
      e2.errorHandler = function(e3) {
        return E = false, "Recover";
      };
      try {
        g = e2.evaluateForEffects(b, void 0, "computeBinary");
      } catch (e3) {
        if (!(e3 instanceof o.FatalError)) throw e3;
        E = false;
      } finally {
        e2.errorHandler = w;
      }
      return E && g && (e2.applyEffects(g), g.result instanceof i.SimpleNormalCompletion) ? g.result.value : (u.Leak.value(e2, r2, y), "in" !== t2 && u.Leak.value(e2, f2, y), e2.evaluateWithPossibleThrowCompletion(function() {
        return s.AbstractValue.createTemporalFromBuildFunction(e2, m, [r2, f2], (0, l.createOperationDescriptor)("BINARY_EXPRESSION", { binaryOperator: t2 }), { isPure: true });
      }, a.TypesDomain.topVal, a.ValuesDomain.topVal));
    }
    return b();
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.EvalPropertyName = function(e2, t2, r2, a2) {
    var o2 = u(e2, t2, r2, a2);
    if (o2 instanceof i.AbstractValue) {
      var s2 = new n.CompilerDiagnostic("unknown computed property name", e2.loc, "PP0014", "FatalError");
      throw r2.handleError(s2), new n.FatalError();
    }
    return o2;
  }, t.default = function(e2, t2, r2, l) {
    var c = o.Create.ObjectCreate(l, l.intrinsics.ObjectPrototype), f = true, p = false, d = void 0;
    try {
      for (var h, v = e2.properties[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
        var y = h.value;
        if ("ObjectProperty" === y.type) {
          var m = u(y, r2, l, t2), b = r2.evaluate(y.value, t2), g = o.Environment.GetValue(l, b);
          if ((0, a.IsAnonymousFunctionDefinition)(l, y.value)) {
            (0, s.default)(g instanceof i.ObjectValue);
            var w = (0, a.HasOwnProperty)(l, g, "name");
            (0, s.default)(!w), o.Functions.SetFunctionName(l, g, m);
          }
          if (m instanceof i.AbstractValue) {
            if (m.mightNotBeString()) {
              var E = new n.CompilerDiagnostic("property key value is unknown", y.loc, "PP0011", "FatalError");
              if ("Fail" === l.handleError(E)) throw new n.FatalError();
              continue;
            }
            c.$SetPartial(m, g, c);
          } else o.Create.CreateDataPropertyOrThrow(l, c, m, g);
        } else if ("SpreadElement" === y.type) {
          var S = r2.evaluate(y.argument, t2), T = o.Environment.GetValue(l, S);
          o.Create.CopyDataProperties(l, c, T, []);
        } else (0, s.default)("ObjectMethod" === y.type), o.Properties.PropertyDefinitionEvaluation(l, y, c, r2, t2, true);
      }
    } catch (e3) {
      p = true, d = e3;
    } finally {
      try {
        f || null == v.return || v.return();
      } finally {
        if (p) throw d;
      }
    }
    return c;
  };
  var n = r(4), i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function u(e2, t2, r2, n2) {
    if (e2.computed) {
      var a2 = o.Environment.GetValue(r2, t2.evaluate(e2.key, n2));
      return a2 instanceof i.AbstractValue ? a2 : ((0, s.default)(a2 instanceof i.ConcreteValue), o.To.ToPropertyKey(r2, a2));
    }
    if ("Identifier" === e2.key.type) return new i.StringValue(r2, e2.key.name);
    var u2 = o.Environment.GetValue(r2, t2.evaluate(e2.key, n2));
    return (0, s.default)(u2 instanceof i.ConcreteValue), o.To.ToString(r2, u2);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.NameGenerator = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function a(e2) {
    var t2 = "", r2 = true, n2 = false, i2 = void 0;
    try {
      for (var a2, o2 = e2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
        var s2 = a2.value;
        t2 += s2 >= "0" && s2 <= "9" || s2 >= "a" && s2 <= "z" || s2 >= "A" && s2 <= "Z" ? s2 : "_" + s2.charCodeAt(0);
      }
    } catch (e3) {
      n2 = true, i2 = e3;
    } finally {
      try {
        r2 || null == o2.return || o2.return();
      } finally {
        if (n2) throw i2;
      }
    }
    return t2;
  }
  var o = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
  function s(e2) {
    if ((0, i.default)((0 | e2) === e2 && e2 >= 0), 0 === e2) return "0";
    for (var t2 = ""; e2 > 0; ) {
      var r2 = e2 % o.length;
      t2 = o[r2] + t2, e2 = (e2 - r2) / o.length;
    }
    return t2;
  }
  var u = (function() {
    function e2(t2, r2, n2, i2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.prefix = i2, this.uidCounter = 0, this.debugNames = r2, this.forbiddenNames = t2, this.uniqueSuffix = n2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "generate", value: function(e3) {
      var t2;
      do {
        t2 = this.prefix + s(this.uidCounter++), this.uniqueSuffix.length > 0 && (t2 += this.uniqueSuffix), this.debugNames && (t2 += e3 ? "_" + a(e3) : "_");
      } while (this.forbiddenNames.has(t2));
      return t2;
    } }]), e2;
  })();
  t.NameGenerator = u;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = s;
  var n = r(29), i = Function.call.bind(Object.prototype.hasOwnProperty);
  function a(e2, t2) {
    return e2 && "string" == typeof e2.type && "CommentLine" !== e2.type && "CommentBlock" !== e2.type ? s(e2, t2) : e2;
  }
  function o(e2, t2) {
    return Array.isArray(e2) ? e2.map(function(e3) {
      return a(e3, t2);
    }) : a(e2, t2);
  }
  function s(e2) {
    var t2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
    if (!e2) return e2;
    var r2 = e2.type, a2 = { type: r2 };
    if ("Identifier" === r2) a2.name = e2.name;
    else {
      if (!i(n.NODE_FIELDS, r2)) throw new Error('Unknown node type: "'.concat(r2, '"'));
      for (var s2 = Object.keys(n.NODE_FIELDS[r2]), u = 0; u < s2.length; u++) {
        var l = s2[u];
        i(e2, l) && (a2[l] = t2 ? o(e2[l], true) : e2[l]);
      }
    }
    return i(e2, "loc") && (a2.loc = e2.loc), i(e2, "leadingComments") && (a2.leadingComments = e2.leadingComments), i(e2, "innerComments") && (a2.innerComments = e2.innerCmments), i(e2, "trailingComments") && (a2.trailingComments = e2.trailingComments), i(e2, "extra") && (a2.extra = Object.assign({}, e2.extra)), a2;
  }
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(211));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return "string" == typeof e2 && !n().default.keyword.isReservedWordES6(e2, true) && ("await" !== e2 && n().default.keyword.isIdentifierNameES6(e2));
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    var t2 = n(e2);
    return null != e2 && ("object" == t2 || "function" == t2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.parseTypeNameOrTemplate = d, t.createAbstract = function(e2, t2, r2, s2) {
    if (!e2.useAbstractInterpretation) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "realm is not partial");
    var f2, h, v = d(e2, t2), y = v.type, m = v.template, b = v.functionResultType, g = s2 ? s2.properties : /* @__PURE__ */ new Map(), w = null, E = true, S = false, T = void 0;
    try {
      for (var A, C = e2.contextStack.slice().reverse()[Symbol.iterator](); !(E = (A = C.next()).done); E = true) {
        var P = A.value, O = P.caller;
        if (w = P.loc, void 0 !== (h = (0, o.describeLocation)(e2, O ? O.function : void 0, O ? O.lexicalEnvironment : void 0, w))) break;
      }
    } catch (e3) {
      S = true, T = e3;
    } finally {
      try {
        E || null == C.return || C.return();
      } finally {
        if (S) throw T;
      }
    }
    if (void 0 === r2) {
      var x = new n.StringValue(e2, void 0 !== h ? h : "(unknown location)");
      (f2 = n.AbstractValue.createFromTemplate(e2, p, y, [x])).hashValue = ++e2.objectCount;
    } else {
      if (!g.get("allowDuplicateNames") && !e2.isNameStringUnique(r2)) {
        var _ = new l.CompilerDiagnostic("An abstract value with the same name exists", w, "PP0019", "FatalError");
        throw e2.handleError(_), new l.FatalError();
      }
      e2.saveNameString(r2), (f2 = n.AbstractValue.createFromTemplate(e2, g.get("disablePlaceholders") ? r2 + i.DisablePlaceholderSuffix : r2, y, [])).intrinsicName = r2;
    }
    m && (f2.values = new a.ValuesDomain(/* @__PURE__ */ new Set([m])));
    !m || m instanceof n.FunctionValue || (m.makePartial(), void 0 !== r2 && e2.rebuildNestedProperties(f2, r2));
    b && ((0, c.default)(f2 instanceof u.default), f2.functionResultType = b);
    for (var V = arguments.length, D = new Array(V > 4 ? V - 4 : 0), N = 4; N < V; N++) D[N - 4] = arguments[N];
    D.length > 0 && (f2 = n.AbstractValue.createAbstractConcreteUnion(e2, f2, D));
    return f2;
  };
  var n = r(0), i = r(44), a = r(12), o = r(26), s = r(2), u = f(r(147)), l = r(4), c = f(r(1));
  function f(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var p = "(function(){throw new global.Error('abstract value defined at ' + A);})()";
  function d(e2, t2) {
    if (void 0 === t2 || t2 instanceof n.UndefinedValue) return { type: n.Value, template: void 0 };
    if ("string" == typeof t2) {
      var r2 = s.Utils.getTypeFromName(t2);
      if (void 0 === r2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "unknown typeNameOrTemplate");
      return { type: r2, template: void 0 };
    }
    if (t2 instanceof n.StringValue) {
      var i2 = s.To.ToStringPartial(e2, t2), a2 = i2.startsWith(":");
      a2 && (i2 = i2.substring(1));
      var o2 = s.Utils.getTypeFromName(i2);
      if (void 0 === o2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "unknown typeNameOrTemplate");
      return a2 ? { type: n.FunctionValue, template: void 0, functionResultType: o2 } : { type: o2, template: void 0 };
    }
    if (t2 instanceof n.FunctionValue) return { type: n.FunctionValue, template: t2 };
    if (t2 instanceof n.ObjectValue) return { type: n.ObjectValue, template: t2 };
    throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "typeNameOrTemplate has unsupported type");
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.GeneratorTree = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), a = r(0);
  r(9);
  var o = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.parents = /* @__PURE__ */ new Map(), this.createdObjects = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getParent", value: function(e3) {
      var t2 = this.parents.get(e3);
      return (0, i.default)(void 0 !== t2), t2;
    } }, { key: "getCreator", value: function(e3) {
      return this.createdObjects.get(e3);
    } }, { key: "add", value: function(e3, t2) {
      this._add(e3, t2);
    } }, { key: "_add", value: function(e3, t2) {
      (0, i.default)(!this.parents.has(t2)), this.parents.set(t2, e3);
      var r2 = t2.effectsToApply;
      if (void 0 !== r2) {
        (0, i.default)(e3 instanceof a.FunctionValue);
        var n2 = true, o2 = false, s = void 0;
        try {
          for (var u, l = r2.createdObjects[Symbol.iterator](); !(n2 = (u = l.next()).done); n2 = true) {
            var c = u.value;
            (0, i.default)((this.createdObjects.get(c), true)), this.createdObjects.set(c, t2);
          }
        } catch (e4) {
          o2 = true, s = e4;
        } finally {
          try {
            n2 || null == l.return || l.return();
          } finally {
            if (o2) throw s;
          }
        }
      }
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = t2.getDependencies()[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          this._add(t2, y);
        }
      } catch (e4) {
        p = true, d = e4;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
    } }]), e2;
  })();
  t.GeneratorTree = o;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && l(e2, t2);
  }
  function s(e2) {
    var t2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
    return (s = function(e3) {
      if (null === e3 || !(function(e4) {
        return -1 !== Function.toString.call(e4).indexOf("[native code]");
      })(e3)) return e3;
      if ("function" != typeof e3) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t2) {
        if (t2.has(e3)) return t2.get(e3);
        t2.set(e3, r2);
      }
      function r2() {
        return u(e3, arguments, c(this).constructor);
      }
      return r2.prototype = Object.create(e3.prototype, { constructor: { value: r2, enumerable: false, writable: true, configurable: true } }), l(r2, e3);
    })(e2);
  }
  function u(e2, t2, r2) {
    return (u = (function() {
      if ("undefined" == typeof Reflect || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if ("function" == typeof Proxy) return true;
      try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    })() ? Reflect.construct : function(e3, t3, r3) {
      var n2 = [null];
      n2.push.apply(n2, t3);
      var i2 = new (Function.bind.apply(e3, n2))();
      return r3 && l(i2, r3.prototype), i2;
    }).apply(null, arguments);
  }
  function l(e2, t2) {
    return (l = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function c(e2) {
    return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ReconcilerFatalError = t.DoNotOptimize = t.NewComponentTreeBranch = t.UnsupportedSideEffect = t.SimpleClassBailOut = t.ExpectedBailOut = void 0;
  var f = r(4), p = (function(e2) {
    function t2() {
      return i(this, t2), a(this, c(t2).apply(this, arguments));
    }
    return o(t2, s(Error)), t2;
  })();
  t.ExpectedBailOut = p;
  var d = (function(e2) {
    function t2() {
      return i(this, t2), a(this, c(t2).apply(this, arguments));
    }
    return o(t2, s(Error)), t2;
  })();
  t.SimpleClassBailOut = d;
  var h = (function(e2) {
    function t2() {
      return i(this, t2), a(this, c(t2).apply(this, arguments));
    }
    return o(t2, s(Error)), t2;
  })();
  t.UnsupportedSideEffect = h;
  var v = (function(e2) {
    function t2(e3) {
      var r2;
      return i(this, t2), (r2 = a(this, c(t2).call(this))).evaluatedNode = e3, r2;
    }
    return o(t2, s(Error)), t2;
  })();
  t.NewComponentTreeBranch = v;
  var y = (function(e2) {
    function t2() {
      return i(this, t2), a(this, c(t2).apply(this, arguments));
    }
    return o(t2, s(Error)), t2;
  })();
  t.DoNotOptimize = y;
  var m = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return i(this, t2), n2 = a(this, c(t2).call(this, e3)), r2.status = "FATAL", r2.message = e3, n2.evaluatedNode = r2, n2.__isReconcilerFatalError = true, n2;
    }
    return o(t2, f.FatalError), t2;
  })();
  t.ReconcilerFatalError = m;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    var l2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "script", c = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
    try {
      var f = ["objectRestSpread"];
      e2.react.enabled && f.push("jsx"), e2.stripFlow && f.push("flow");
      var p = (0, u.parse)(t2, { filename: r2, sourceType: l2, startLine: c, plugins: f });
      return (0, s.default)(p, function(e3) {
        return (0, n.default)(e3.loc), e3.loc.source = r2, false;
      }), p;
    } catch (s2) {
      if (s2 instanceof SyntaxError) {
        var d;
        throw d = (d = ["Invalid left-hand side in postfix operation", "Invalid left-hand side in prefix operation", "Invalid left-hand side in assignment expression"].some(function(e3) {
          return s2.message.indexOf(e3) >= 0;
        }) ? (0, o.Construct)(e2, e2.intrinsics.ReferenceError, [new a.StringValue(e2, s2.message)]) : (0, o.Construct)(e2, e2.intrinsics.SyntaxError, [new a.StringValue(e2, s2.message)])).throwIfNotConcreteObject(), (0, n.default)(d.$ErrorData), d.$ErrorData.locationData = { filename: r2, sourceCode: t2, loc: s2.loc, stackDecorated: false }, new i.ThrowCompletion(d, s2.loc);
      }
      throw s2;
    }
  };
  var n = l(r(1)), i = r(7), a = r(0), o = r(22), s = l(r(39)), u = r(34);
  function l(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.IntegerIndexedObjectCreate = d, t.IntegerIndexedElementGet = function(e2, t2, r2) {
    (0, c.default)("number" == typeof r2, "Type(index) is Number"), (0, c.default)(t2 instanceof i.ObjectValue && t2.$ViewedArrayBuffer && void 0 !== t2.$ArrayLength && void 0 !== t2.$ByteOffset && t2.$TypedArrayName);
    var n2 = t2.$ViewedArrayBuffer;
    if (true === (0, s.IsDetachedBuffer)(e2, n2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
    if (false === (0, s.IsInteger)(e2, r2)) return e2.intrinsics.undefined;
    if (Object.is(r2, -0)) return e2.intrinsics.undefined;
    var a2 = t2.$ArrayLength;
    if ((0, c.default)("number" == typeof a2), r2 < 0 || r2 >= a2) return e2.intrinsics.undefined;
    var u2 = t2.$ByteOffset;
    (0, c.default)("number" == typeof u2);
    var l2 = t2.$TypedArrayName;
    (0, c.default)("string" == typeof l2);
    var d2 = f[l2], h2 = r2 * d2 + u2, v2 = p[l2];
    return (0, o.GetValueFromBuffer)(e2, n2, h2, v2);
  }, t.IntegerIndexedElementSet = function(e2, t2, r2, n2) {
    (0, c.default)("number" == typeof r2, "Type(index) is Number"), (0, c.default)(t2 instanceof i.ObjectValue && t2.$ViewedArrayBuffer && void 0 !== t2.$ArrayLength && void 0 !== t2.$ByteOffset && t2.$TypedArrayName);
    var a2 = l.To.ToNumber(e2, n2), u2 = t2.$ViewedArrayBuffer;
    if ((0, c.default)(u2), true === (0, s.IsDetachedBuffer)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
    if (false === (0, s.IsInteger)(e2, r2)) return false;
    if (Object.is(r2, -0)) return false;
    var d2 = t2.$ArrayLength;
    if ((0, c.default)("number" == typeof d2), r2 < 0 || r2 >= d2) return false;
    var h2 = t2.$ByteOffset;
    (0, c.default)("number" == typeof h2);
    var v2 = t2.$TypedArrayName;
    (0, c.default)("string" == typeof v2);
    var y2 = f[v2], m = r2 * y2 + h2, b = p[v2];
    return (0, o.SetValueInBuffer)(e2, u2, m, b, a2), true;
  }, t.ValidateTypedArray = h, t.AllocateTypedArray = function(e2, t2, r2, n2, i2) {
    var o2 = (0, a.GetPrototypeFromConstructor)(e2, r2, n2), s2 = d(e2, o2, { $ViewedArrayBuffer: void 0, $TypedArrayName: void 0, $ByteLength: void 0, $ByteOffset: void 0, $ArrayLength: void 0 });
    (0, c.default)(void 0 === s2.$ViewedArrayBuffer), s2.$TypedArrayName = t2, void 0 === i2 ? (s2.$ByteLength = 0, s2.$ByteOffset = 0, s2.$ArrayLength = 0) : v(e2, s2, i2);
    return s2;
  }, t.AllocateTypedArrayBuffer = v, t.TypedArrayCreate = y, t.TypedArraySpeciesCreate = function(e2, t2, r2) {
    (0, c.default)(t2 instanceof i.ObjectValue && "string" == typeof t2.$TypedArrayName), (0, c.default)("string" == typeof t2.$TypedArrayName);
    var n2 = { Float32Array: e2.intrinsics.Float32Array, Float64Array: e2.intrinsics.Float64Array, Int8Array: e2.intrinsics.Int8Array, Int16Array: e2.intrinsics.Int16Array, Int32Array: e2.intrinsics.Int32Array, Uint8Array: e2.intrinsics.Uint8Array, Uint16Array: e2.intrinsics.Uint16Array, Uint32Array: e2.intrinsics.Uint32Array, Uint8ClampedArray: e2.intrinsics.Uint8ClampedArray }[t2.$TypedArrayName], a2 = (0, u.SpeciesConstructor)(e2, t2, n2);
    return y(e2, a2, r2);
  }, t.ArrayElementType = t.ArrayElementSize = void 0;
  var n = r(4), i = r(0), a = r(13), o = r(53), s = r(11), u = r(22), l = r(2), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var f = { Float32Array: 4, Float64Array: 8, Int8Array: 1, Int16Array: 2, Int32Array: 4, Uint8Array: 1, Uint16Array: 2, Uint32Array: 4, Uint8ClampedArray: 1 };
  t.ArrayElementSize = f;
  var p = { Float32Array: "Float32", Float64Array: "Float64", Int8Array: "Int8", Int16Array: "Int16", Int32Array: "Int32", Uint8Array: "Uint8", Uint16Array: "Uint16", Uint32Array: "Uint32", Uint8ClampedArray: "Uint8Clamped" };
  function d(e2, t2, r2) {
    (0, c.default)("$ViewedArrayBuffer" in r2 && "$ArrayLength" in r2 && "$ByteOffset" in r2 && "$TypedArrayName" in r2);
    var n2 = new i.IntegerIndexedExotic(e2);
    return Object.assign(n2, r2), n2.$Prototype = t2, n2.setExtensible(true), n2;
  }
  function h(e2, t2) {
    if (!((t2 = t2.throwIfNotConcrete()) instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
    if (!t2.$TypedArrayName) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
    (0, c.default)(t2.$ViewedArrayBuffer, "O has a [[ViewedArrayBuffer]] internal slot");
    var r2 = t2.$ViewedArrayBuffer;
    if (true === (0, s.IsDetachedBuffer)(e2, r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
    return r2;
  }
  function v(e2, t2, r2) {
    (0, c.default)(e2.isNewObject(t2)), (0, c.default)(t2 instanceof i.ObjectValue && "$ViewedArrayBuffer" in t2, "O is an Object that has a [[ViewedArrayBuffer]] internal slot"), (0, c.default)(void 0 === t2.$ViewedArrayBuffer, "O.[[ViewedArrayBuffer]] is undefined"), (0, c.default)(r2 >= 0, "length \u2265 0");
    var n2 = t2.$TypedArrayName;
    (0, c.default)(n2);
    var a2 = f[n2] * r2, s2 = (0, o.AllocateArrayBuffer)(e2, e2.intrinsics.ArrayBuffer, a2);
    return t2.$ViewedArrayBuffer = s2, t2.$ByteLength = a2, t2.$ByteOffset = 0, t2.$ArrayLength = r2, t2;
  }
  function y(e2, t2, r2) {
    var a2 = (0, u.Construct)(e2, t2, r2).throwIfNotConcreteObject();
    if (h(e2, a2), 1 === r2.length && r2[0].mightBeNumber()) {
      if (r2[0].mightNotBeNumber()) throw (0, c.default)(r2[0] instanceof i.AbstractValue), i.AbstractValue.reportIntrospectionError(r2[0]), new n.FatalError();
      if ((0, c.default)("number" == typeof a2.$ArrayLength), a2.$ArrayLength < r2[0].throwIfNotConcrete().value) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "newTypedArray.[[ArrayLength]] < argumentList[0]");
    }
    return a2;
  }
  t.ArrayElementType = p;
}, function(e, t, r) {
  "use strict";
  var n = r(155), i = r(154);
  e.exports = function(e2, t2, r2, a) {
    var o = !r2;
    r2 || (r2 = {});
    for (var s = -1, u = t2.length; ++s < u; ) {
      var l = t2[s], c = a ? a(r2[l], e2[l], l, r2, e2) : void 0;
      void 0 === c && (c = e2[l]), o ? i(r2, l, c) : n(r2, l, c);
    }
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(485);
  e.exports = function(e2, t2) {
    var r2 = e2.__data__;
    return n(t2) ? r2["string" == typeof t2 ? "string" : "hash"] : r2.map;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(40)(Object, "create");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(79);
  e.exports = function(e2, t2) {
    for (var r2 = e2.length; r2--; ) if (n(e2[r2][0], t2)) return r2;
    return -1;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(504), i = r(503), a = r(502), o = r(501), s = r(500);
  function u(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e2[t2];
      this.set(n2[0], n2[1]);
    }
  }
  u.prototype.clear = n, u.prototype.delete = i, u.prototype.get = a, u.prototype.has = o, u.prototype.set = s, e.exports = u;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.clear = function() {
    a(), o();
  }, t.clearPath = a, t.clearScope = o, t.scope = t.path = void 0;
  var n = /* @__PURE__ */ new WeakMap();
  t.path = n;
  var i = /* @__PURE__ */ new WeakMap();
  function a() {
    t.path = n = /* @__PURE__ */ new WeakMap();
  }
  function o() {
    t.scope = i = /* @__PURE__ */ new WeakMap();
  }
  t.scope = i;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return e2 === t2 || e2 != e2 && t2 != t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(173), i = r(596), a = r(82);
  e.exports = function(e2) {
    return a(e2) ? n(e2) : i(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(27).Symbol;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(179), i = r(177);
  e.exports = function(e2) {
    return null != e2 && i(e2.length) && !n(e2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.RegExpCreate = function(e2, t2, r2) {
    var n2 = f(e2, e2.intrinsics.RegExp);
    return p(e2, n2, t2, r2);
  }, t.RegExpAlloc = f, t.RegExpInitialize = p, t.RegExpExec = function(e2, t2, r2) {
    (0, n.default)(t2 instanceof i.ObjectValue, "Type(R) is Object"), (0, n.default)("string" == typeof r2, "Type(S) is String");
    var l2 = (0, a.Get)(e2, t2, "exec");
    if ((0, o.IsCallable)(e2, l2)) {
      var c2 = (0, s.Call)(e2, l2, t2, [new i.StringValue(e2, r2)]);
      if (!(0, u.HasSomeCompatibleType)(c2, i.ObjectValue, i.NullValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(result) is neither Object or Null");
      return c2.throwIfNotConcrete();
    }
    if (void 0 === t2.$RegExpMatcher) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "R does not have a [[RegExpMatcher]] internal slot");
    return d(e2, t2, r2);
  }, t.RegExpBuiltinExec = d, t.AdvanceStringIndex = h, t.EscapeRegExpPattern = function(e2, t2, r2) {
    return t2.replace("/", "/");
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), i = r(0), a = r(13), o = r(11), s = r(15), u = r(20), l = r(2), c = r(6);
  function f(e2, t2) {
    var r2 = l.Create.OrdinaryCreateFromConstructor(e2, t2, "RegExpPrototype", { $RegExpMatcher: void 0, $OriginalSource: void 0, $OriginalFlags: void 0 });
    return l.Properties.DefinePropertyOrThrow(e2, r2, "lastIndex", new c.PropertyDescriptor({ writable: true, enumerable: false, configurable: false })), r2;
  }
  function p(e2, t2, r2, a2) {
    var o2, s2;
    (0, n.default)(e2.isNewObject(t2)), o2 = !r2 || (0, u.HasCompatibleType)(r2, i.UndefinedValue) ? "" : l.To.ToStringPartial(e2, r2), s2 = !a2 || (0, u.HasCompatibleType)(a2, i.UndefinedValue) ? "" : l.To.ToStringPartial(e2, a2);
    for (var c2 = 0; c2 < s2.length; ++c2) {
      if ("gimuy".indexOf(s2.charAt(c2)) < 0) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "invalid RegExp flag");
      for (var f2 = c2 + 1; f2 < s2.length; ++f2) if (s2.charAt(c2) === s2.charAt(f2)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "duplicate RegExp flag");
    }
    s2.indexOf("u");
    t2.$OriginalSource = o2, t2.$OriginalFlags = s2;
    try {
      var p2 = "y";
      s2.indexOf("i") >= 0 && (p2 += "i"), s2.indexOf("u") >= 0 && (p2 += "u"), s2.indexOf("m") >= 0 && (p2 += "m");
      var d2 = new RegExp(o2, p2);
      t2.$RegExpMatcher = function(e3, t3) {
        d2.lastIndex = t3;
        var r3 = d2.exec(e3);
        return r3 ? { endIndex: r3.index + r3[0].length, captures: r3 } : null;
      };
    } catch (t3) {
      throw t3 instanceof SyntaxError ? e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "invalid RegExp") : t3;
    }
    return l.Properties.Set(e2, t2, "lastIndex", e2.intrinsics.zero, true), t2;
  }
  function d(e2, t2, r2) {
    (0, n.default)(void 0 !== t2.$RegExpMatcher && void 0 !== t2.$OriginalSource && void 0 !== t2.$OriginalFlags, "R is an initialized RegExp instance"), (0, n.default)("string" == typeof r2, "Type(S) is String");
    var o2 = r2.length, s2 = l.To.ToLength(e2, (0, a.Get)(e2, t2, "lastIndex")), u2 = t2.$OriginalFlags;
    (0, n.default)("string" == typeof u2);
    var c2 = u2.indexOf("g") >= 0, f2 = u2.indexOf("y") >= 0;
    false === c2 && false === f2 && (s2 = 0);
    var p2 = t2.$RegExpMatcher;
    (0, n.default)(void 0 !== p2);
    for (var d2 = u2.indexOf("u") >= 0, v = false, y = null; !v; ) {
      if (s2 > o2) return l.Properties.Set(e2, t2, "lastIndex", e2.intrinsics.zero, true), e2.intrinsics.null;
      if (null == (y = p2(r2, s2))) {
        if (f2) return l.Properties.Set(e2, t2, "lastIndex", e2.intrinsics.zero, true), e2.intrinsics.null;
        s2 = h(e2, r2, s2, d2);
      } else (0, n.default)(y, "r is a State"), v = true, s2 = y.captures.index;
    }
    (0, n.default)(null != y);
    var m = y.endIndex;
    true !== c2 && true !== f2 || l.Properties.Set(e2, t2, "lastIndex", new i.NumberValue(e2, m), true);
    var b = y.captures.length - 1, g = l.Create.ArrayCreate(e2, b + 1), w = (0, a.Get)(e2, g, "length").throwIfNotConcrete();
    (0, n.default)(w instanceof i.NumberValue), (0, n.default)(w.value === b + 1, `The value of A's "length" property is n + 1`);
    var E = s2;
    l.Create.CreateDataProperty(e2, g, "index", new i.NumberValue(e2, E)), l.Create.CreateDataProperty(e2, g, "input", new i.StringValue(e2, r2));
    var S = r2.substr(s2, m - s2);
    l.Create.CreateDataProperty(e2, g, "0", new i.StringValue(e2, S));
    for (var T = 1; T <= b; ++T) {
      var A = y.captures[T], C = void 0;
      void 0 === A ? C = e2.intrinsics.undefined : d2 ? C = e2.intrinsics.undefined : ((0, n.default)("string" == typeof A), C = new i.StringValue(e2, A)), l.Create.CreateDataProperty(e2, g, l.To.ToString(e2, new i.NumberValue(e2, T)), C);
    }
    return g;
  }
  function h(e2, t2, r2, i2) {
    if ((0, n.default)("string" == typeof t2, "Type(S) is String"), (0, n.default)(r2 >= 0 && r2 <= Math.pow(2, 53) - 1, "index is an integer such that 0\u2264index\u2264253-1"), (0, n.default)("boolean" == typeof i2, "Type(unicode) is Boolean"), false === i2) return r2 + 1;
    if (r2 + 1 >= t2.length) return r2 + 1;
    var a2 = t2.charCodeAt(r2);
    if (a2 < 55296 || a2 > 56319) return r2 + 1;
    var o2 = t2.charCodeAt(r2 + 1);
    return o2 < 56320 || o2 > 57343 ? r2 + 1 : r2 + 2;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = i;
  var n = r(17);
  function i(e2, t2, r2) {
    for (var a = [].concat(e2), o = /* @__PURE__ */ Object.create(null); a.length; ) {
      var s = a.shift();
      if (s) {
        var u = i.keys[s.type];
        if ((0, n.isIdentifier)(s)) t2 ? (o[s.name] = o[s.name] || []).push(s) : o[s.name] = s;
        else if ((0, n.isExportDeclaration)(s)) (0, n.isDeclaration)(s.declaration) && a.push(s.declaration);
        else {
          if (r2) {
            if ((0, n.isFunctionDeclaration)(s)) {
              a.push(s.id);
              continue;
            }
            if ((0, n.isFunctionExpression)(s)) continue;
          }
          if (u) for (var l = 0; l < u.length; l++) {
            var c = u[l];
            s[c] && (a = a.concat(s[c]));
          }
        }
      }
    }
    return o;
  }
  i.keys = { DeclareClass: ["id"], DeclareFunction: ["id"], DeclareModule: ["id"], DeclareVariable: ["id"], DeclareInterface: ["id"], DeclareTypeAlias: ["id"], DeclareOpaqueType: ["id"], InterfaceDeclaration: ["id"], TypeAlias: ["id"], OpaqueType: ["id"], CatchClause: ["param"], LabeledStatement: ["label"], UnaryExpression: ["argument"], AssignmentExpression: ["left"], ImportSpecifier: ["local"], ImportNamespaceSpecifier: ["local"], ImportDefaultSpecifier: ["local"], ImportDeclaration: ["specifiers"], ExportSpecifier: ["exported"], ExportNamespaceSpecifier: ["exported"], ExportDefaultSpecifier: ["exported"], FunctionDeclaration: ["id", "params"], FunctionExpression: ["id", "params"], ArrowFunctionExpression: ["params"], ObjectMethod: ["params"], ClassMethod: ["params"], ForInStatement: ["left"], ForOfStatement: ["left"], ClassDeclaration: ["id"], ClassExpression: ["id"], RestElement: ["argument"], UpdateExpression: ["argument"], ObjectProperty: ["value"], AssignmentPattern: ["left"], ArrayPattern: ["elements"], ObjectPattern: ["properties"], VariableDeclaration: ["declarations"], VariableDeclarator: ["id"] };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3) {
      return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var i = r(227), a = "object" == n(t) && t && !t.nodeType && t, o = a && "object" == n(e2) && e2 && !e2.nodeType && e2, s = o && o.exports === a && i.process, u = (function() {
      try {
        var e3 = o && o.require && o.require("util").types;
        return e3 || s && s.binding && s.binding("util");
      } catch (e4) {
      }
    })();
    e2.exports = u;
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return function(t2) {
      return e2(t2);
    };
  };
}, function(e, t, r) {
  "use strict";
  var n = r(224), i = r(223);
  e.exports = function(e2, t2, r2, a) {
    var o = !r2;
    r2 || (r2 = {});
    for (var s = -1, u = t2.length; ++s < u; ) {
      var l = t2[s], c = a ? a(r2[l], e2[l], l, r2, e2) : void 0;
      void 0 === c && (c = e2[l]), o ? i(r2, l, c) : n(r2, l, c);
    }
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(744);
  e.exports = function(e2, t2) {
    var r2 = e2.__data__;
    return n(t2) ? r2["string" == typeof t2 ? "string" : "hash"] : r2.map;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(47)(Object, "create");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(229);
  e.exports = function(e2, t2) {
    for (var r2 = e2.length; r2--; ) if (n(e2[r2][0], t2)) return r2;
    return -1;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(768), i = r(767), a = r(766), o = r(765), s = r(764);
  function u(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e2[t2];
      this.set(n2[0], n2[1]);
    }
  }
  u.prototype.clear = n, u.prototype.delete = i, u.prototype.get = a, u.prototype.has = o, u.prototype.set = s, e.exports = u;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.updateIntrinsicNames = function(e2, t2, r2, s) {
    if (t2.intrinsicName = 'require("'.concat(r2, '")'), s) {
      var u = true, l = false, c = void 0;
      try {
        for (var f, p = s[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
          var d = f.value;
          if ("string" == typeof d) {
            var h = (0, a.Get)(e2, t2, d);
            (0, o.default)(h instanceof i.Value), h.intrinsicName = 'require("'.concat(r2, '").').concat(d);
          } else if ("object" === n(d) && null !== d) {
            var v = d.name, y = d.updatePrototype, m = (0, a.Get)(e2, t2, v);
            if ((0, o.default)(m instanceof i.Value), m.intrinsicName = 'require("'.concat(r2, '").').concat(v), y) {
              (0, o.default)(m instanceof i.ObjectValue);
              var b = (0, a.Get)(e2, m, "prototype");
              b.intrinsicName = 'require("'.concat(r2, '").').concat(v, ".prototype");
            }
          }
        }
      } catch (e3) {
        l = true, c = e3;
      } finally {
        try {
          u || null == p.return || p.return();
        } finally {
          if (l) throw c;
        }
      }
    }
  }, t.addMockFunctionToObject = function(e2, t2, r2, n2, a2) {
    var o2 = new i.NativeFunctionValue(e2, void 0, n2, 0, function(e3, t3) {
      return a2(o2, t3);
    });
    t2.defineNativeProperty(n2, o2, { writable: false, enumerable: false, configurable: true }), o2.intrinsicName = 'require("'.concat(r2, '").').concat(n2);
  };
  var i = r(0), a = r(3), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.Breakpoint = void 0;
  t.Breakpoint = function e2(t2, r2) {
    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], a = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4];
    !(function(e3, t3) {
      if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
    })(this, e2), this.filePath = t2, this.line = r2, this.temporary = i, this.enabled = a, this.column = n;
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.typeToString = function(e2) {
    function t2(e3, t3) {
      return e3 instanceof t3 || e3 === t3.prototype;
    }
    var r2 = e2.prototype;
    return t2(r2, n.UndefinedValue) ? "undefined" : t2(r2, n.NullValue) ? "object" : t2(r2, n.StringValue) ? "string" : t2(r2, n.BooleanValue) ? "boolean" : t2(r2, n.NumberValue) ? "number" : t2(r2, n.SymbolValue) ? "symbol" : t2(r2, n.ObjectValue) ? n.Value.isTypeCompatibleWith(e2, n.FunctionValue) ? "function" : "object" : void 0;
  }, t.getTypeFromName = function(e2) {
    switch (e2) {
      case "empty":
        return n.EmptyValue;
      case "void":
        return n.UndefinedValue;
      case "null":
        return n.NullValue;
      case "boolean":
        return n.BooleanValue;
      case "string":
        return n.StringValue;
      case "symbol":
        return n.SymbolValue;
      case "number":
        return n.NumberValue;
      case "object":
        return n.ObjectValue;
      case "array":
        return n.ArrayValue;
      case "function":
        return n.FunctionValue;
      case "integral":
        return n.IntegralValue;
      default:
        return;
    }
  }, t.describeValue = function e2(t2) {
    var r2;
    var a2 = "";
    if (t2 instanceof n.PrimitiveValue) r2 = t2.toDisplayString();
    else if (t2 instanceof n.ObjectValue) r2 = "[object]";
    else {
      (0, i.default)(t2 instanceof n.AbstractValue, t2.constructor.name), r2 = "[abstract]", void 0 !== t2.kind && (r2 += ", kind: ".concat(t2.kind));
      var o2 = true, s2 = false, u = void 0;
      try {
        for (var l, c = t2.args[Symbol.iterator](); !(o2 = (l = c.next()).done); o2 = true) {
          var f = l.value, p = e2(f);
          a2 += p.split("\n").map(function(e3) {
            return "  " + e3;
          }).join("\n") + "\n";
        }
      } catch (e3) {
        s2 = true, u = e3;
      } finally {
        try {
          o2 || null == c.return || c.return();
        } finally {
          if (s2) throw u;
        }
      }
    }
    r2 += ", hash: ".concat(t2.getHash());
    void 0 !== t2.intrinsicName && (r2 += ", intrinsic name: ".concat(t2.intrinsicName));
    void 0 !== t2.__originalName && (r2 += ", original name: ".concat(t2.__originalName));
    return a2 ? "".concat(r2, "\n").concat(a2) : r2;
  }, t.jsonToDisplayString = function(e2, t2) {
    var r2 = e2.toDisplayJson(t2);
    return "string" == typeof r2 ? r2 : JSON.stringify(r2, null, 2).replace(/\"/g, "");
  }, t.verboseToDisplayJson = function(e2, t2) {
    var r2 = {};
    function n2(e3) {
      if ("function" != typeof e3) {
        if (Array.isArray(e3)) {
          if (0 === e3.length) return "[]";
          var r3 = e3.map(function(e4) {
            return n2(e4);
          });
          if (r3.length < 5) {
            var i3 = "[" + r3.reduce(function(e4, t3) {
              return "".concat(e4, ", ").concat(t3 instanceof Object ? JSON.stringify(t3) : t3);
            }) + "]";
            if ((i3 = i3.replace(/\"/g, "")).length < 60) return i3;
          }
          return r3;
        }
        return e3 instanceof Set || e3 instanceof Map ? "".concat(e3.constructor.name, "(").concat(e3.size, ")") : e3.toDisplayJson ? e3.toDisplayJson(t2 - 1) : e3.toDisplayString ? e3.toDisplayString() : e3.toJSON ? e3.toJSON() : e3.toString();
      }
    }
    for (var i2 in e2) {
      var a2 = e2[i2];
      if (a2) {
        var o2 = n2(a2);
        void 0 !== o2 && "[object Object]" !== o2 && (r2[i2] = o2);
      }
    }
    return r2;
  }, t.createModelledFunctionCall = function(e2, t2, r2, u) {
    var l = t2.$Call;
    (0, i.default)(l);
    var c = t2.getLength(), f = [], p = "string" == typeof r2 ? JSON.parse(r2) : r2;
    (0, i.default)(t2 instanceof n.ECMAScriptSourceFunctionValue);
    var d = t2.$FormalParameters;
    if (void 0 !== c && c > 0 && d) {
      var h = true, v = false, y = void 0;
      try {
        for (var m, b = d[Symbol.iterator](); !(h = (m = b.next()).done); h = true) {
          var g = m.value;
          if (!s.isIdentifier(g)) throw e2.handleError(new o.CompilerDiagnostic("Non-identifier args to additional functions unsupported", t2.expressionLocation, "PP1005", "FatalError")), new o.FatalError("Non-identifier args to additional functions unsupported");
          var w = g.name, E = a.ShapeInformation.createForArgument(p, w);
          f.push(n.AbstractValue.createAbstractArgument(e2, w, t2.expressionLocation, void 0 !== E ? E.getAbstractType() : n.Value, E));
        }
      } catch (e3) {
        v = true, y = e3;
      } finally {
        try {
          h || null == b.return || b.return();
        } finally {
          if (v) throw y;
        }
      }
    }
    var S = void 0 !== u ? u : n.AbstractValue.createAbstractArgument(e2, "this", t2.expressionLocation, n.ObjectValue);
    return function() {
      var r3 = e2.pathConditions, n2 = t2.pathConditionDuringDeclaration || r3;
      e2.pathConditions = n2;
      try {
        var i2 = l(S, f);
        return i2;
      } finally {
        e2.pathConditions = r3;
      }
    };
  };
  var n = r(0), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), a = r(100), o = r(4), s = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualHeapValueIdentifiers = void 0;
  r(0);
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), a = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
  var o = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.collectValToRefCountOnly = false, this._valueNameGenerator = r2.createNameGenerator("_"), this._populateIdentifierMap(t2);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "initPass1", value: function() {
      this.collectValToRefCountOnly = true, this.valToRefCount = /* @__PURE__ */ new Map();
    } }, { key: "initPass2", value: function() {
      this.collectValToRefCountOnly = false;
    } }, { key: "_populateIdentifierMap", value: function(e3) {
      this.refs = /* @__PURE__ */ new Map();
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = e3[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value;
          this._setIdentifier(o2, this._createNewIdentifier(o2));
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }, { key: "_createNewIdentifier", value: function(e3) {
      var t2 = this._valueNameGenerator.generate(e3.__originalName || "");
      return a.identifier(t2);
    } }, { key: "_setIdentifier", value: function(e3, t2) {
      (0, i.default)(!this.refs.has(e3)), this.refs.set(e3, t2);
    } }, { key: "hasIdentifier", value: function(e3) {
      return this.refs.has(e3);
    } }, { key: "getIdentifier", value: function(e3) {
      var t2 = this.refs.get(e3);
      return (0, i.default)(void 0 !== t2), t2;
    } }, { key: "deleteIdentifier", value: function(e3) {
      (0, i.default)(this.refs.has(e3)), this.refs.delete(e3);
    } }, { key: "getIdentifierAndIncrementReferenceCount", value: function(e3) {
      this.incrementReferenceCount(e3);
      var t2 = this.refs.get(e3);
      return (0, i.default)(void 0 !== t2, "Value Id cannot be null or undefined"), t2;
    } }, { key: "incrementReferenceCount", value: function(e3) {
      if (this.collectValToRefCountOnly) {
        var t2 = this.valToRefCount;
        (0, i.default)(void 0 !== t2);
        var r2 = t2.get(e3);
        void 0 !== r2 ? r2++ : r2 = 1, t2.set(e3, r2);
      }
    } }, { key: "needsIdentifier", value: function(e3) {
      if (this.collectValToRefCountOnly || void 0 === this.valToRefCount) return true;
      var t2 = this.valToRefCount.get(e3);
      return (0, i.default)(void 0 !== t2 && t2 > 0), 1 !== t2;
    } }]), e2;
  })();
  t.ResidualHeapValueIdentifiers = o;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.convertExpressionToJSXIdentifier = function e2(t2, r2) {
    switch (t2.type) {
      case "ThisExpression":
        return (0, i.default)(false === r2, "invalid conversion of root expression to JSXIdentifier for ThisExpression"), n.jSXIdentifier("this");
      case "Identifier":
        var o = t2.name;
        return (0, i.default)(false === r2 || (0, a.isReactComponent)(o), "invalid JSXIdentifer from Identifier, Identifier name must be uppercase"), n.jSXIdentifier(o);
      case "StringLiteral":
        var s = t2.value;
        return (0, i.default)(s.length > 0 && s[0] === s[0].toLowerCase(), "invalid JSXIdentifer from string, strings must be lowercase"), n.jSXIdentifier(s);
      case "MemberExpression":
        return (0, i.default)(false === t2.computed, "Cannot inline computed expressions in JSX type."), n.jSXMemberExpression(e2(t2.object, false), e2(t2.property, false));
      default:
        (0, i.default)(false, "Invalid JSX type");
    }
  }, t.convertJSXExpressionToIdentifier = function e2(t2) {
    switch (t2.type) {
      case "JSXIdentifier":
        return n.identifier(t2.name);
      case "JSXMemberExpression":
        return n.memberExpression(e2(t2.object), e2(t2.property));
      default:
        (0, i.default)(false, "Invalid JSX type");
    }
  }, t.convertKeyValueToJSXAttribute = function(e2, t2) {
    var r2 = true;
    if (t2 && n.isStringLiteral(t2) && "string" == typeof t2.value) {
      var i2 = t2.value;
      r2 = i2.includes('"') || i2.includes("'");
    }
    return n.jSXAttribute(n.jSXIdentifier(e2), r2 ? n.jSXExpressionContainer(t2) : t2);
  };
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), a = r(14);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function o(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function s(e2, t2, r2) {
    return t2 && o(e2.prototype, t2), r2 && o(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualHeapSerializer = void 0;
  r(8);
  var u = r(3), l = r(0), c = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), f = r(9), p = (r(44), r(64), (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1))), d = r(33), h = r(50), v = (r(19), r(38), r(48)), y = r(144), m = r(142), b = r(31), g = r(425), w = (r(95), r(32)), E = r(4), S = r(99), T = r(2), A = r(424), C = r(10), P = (r(69), r(143)), O = r(94), x = r(423), _ = r(6);
  function V(e2) {
    var t2 = c.emptyStatement();
    return t2.leadingComments = [{ type: "BlockComment", value: e2 }], t2;
  }
  var D = (function() {
    function e2(t2) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
      a(this, e2), (0, p.default)(r2 >= 1), this.count = r2, this.action = t2;
    }
    return s(e2, [{ key: "acquireOne", value: function() {
      this.count++;
    } }, { key: "releaseOne", value: function() {
      (0, p.default)(this.count > 0), 0 == --this.count && this.action();
    } }]), e2;
  })(), N = (function() {
    function e2(t2, r2, n2, i2, o2, s2, u2, l2, f2, d2, h2) {
      var v2 = this;
      a(this, e2), this.realm = t2, this.logger = r2, this.modules = n2, this.residualHeapValueIdentifiers = i2, this.referentializer = f2, this._residualOptimizedFunctions = h2;
      var m2 = this.realm.generator;
      (0, p.default)(m2), this.generator = m2;
      var b2 = this.realm.preludeGenerator;
      (0, p.default)(b2), this.preludeGenerator = b2, this.residualOperationSerializer = new x.ResidualOperationSerializer(t2, b2), this.prelude = [], this._descriptors = /* @__PURE__ */ new Map(), this.needsEmptyVar = false, this.needsAuxiliaryConstructor = false, this.descriptorNameGenerator = this.preludeGenerator.createNameGenerator("$$"), this.factoryNameGenerator = this.preludeGenerator.createNameGenerator("$_"), this.intrinsicNameGenerator = this.preludeGenerator.createNameGenerator("$i_"), this.functionNameGenerator = this.preludeGenerator.createNameGenerator("$f_"), this.initializeConditionNameGenerator = this.preludeGenerator.createNameGenerator("_initialized"), this.initializerNameGenerator = this.preludeGenerator.createNameGenerator("__init_"), this.requireReturns = /* @__PURE__ */ new Map(), this.serializedValues = /* @__PURE__ */ new Set(), this._serializedValueWithIdentifiers = /* @__PURE__ */ new Set(), this.additionalFunctionValueNestedFunctions = /* @__PURE__ */ new Set(), this.residualReactElementSerializer = new A.ResidualReactElementSerializer(this.realm, this, h2), this.residualFunctions = new y.ResidualFunctions(this.realm, u2, this.modules, this.requireReturns, { getContainingAdditionalFunction: function(e3) {
        var t3 = v2.residualFunctionInstances.get(e3);
        return (0, p.default)(void 0 !== t3), t3.containingAdditionalFunction;
      }, getLocation: function(e3) {
        return v2.getSerializeObjectIdentifier(e3);
      }, createLocation: function(e3) {
        var t3 = c.identifier(v2.initializeConditionNameGenerator.generate()), r3 = c.variableDeclaration("var", [c.variableDeclarator(t3)]);
        return v2.getPrelude(e3).push(r3), t3;
      }, createFunction: function(e3, t3) {
        var r3 = c.identifier(v2.initializerNameGenerator.generate());
        return v2.getPrelude(e3).push(c.functionDeclaration(r3, [], c.blockStatement(t3))), r3;
      } }, this.prelude, this.factoryNameGenerator, s2.functionInfos, s2.functionInstances, s2.classMethodInstances, s2.additionalFunctionValueInfos, this.additionalFunctionValueNestedFunctions, f2), this.emitter = new g.Emitter(this.residualFunctions, s2.referencedDeclaredValues, s2.conditionalFeasibility, this.realm.derivedIds), this.mainBody = this.emitter.getBody(), this.residualHeapInspector = o2, this.residualValues = s2.values, this.residualFunctionInstances = s2.functionInstances, this.residualClassMethodInstances = s2.classMethodInstances, this.residualFunctionInfos = s2.functionInfos, this._options = u2, this.referencedDeclaredValues = s2.referencedDeclaredValues, this.activeGeneratorBodies = /* @__PURE__ */ new Map(), this.additionalFunctionValuesAndEffects = l2, this.additionalFunctionValueInfos = s2.additionalFunctionValueInfos, this.rewrittenAdditionalFunctions = /* @__PURE__ */ new Map(), this.declarativeEnvironmentRecordsBindings = s2.declarativeEnvironmentRecordsBindings, this.globalBindings = s2.globalBindings, this.generatorTree = d2, this.conditionalFeasibility = s2.conditionalFeasibility, this.additionalFunctionGenerators = /* @__PURE__ */ new Map(), this.declaredGlobalLets = /* @__PURE__ */ new Map(), this._objectSemaphores = /* @__PURE__ */ new Map(), this.additionalGeneratorRoots = s2.additionalGeneratorRoots;
      var w2 = t2.$GlobalEnv.environmentRecord;
      (0, p.default)(w2 instanceof C.GlobalEnvironmentRecord), this.globalEnvironmentRecord = w2;
    }
    return s(e2, [{ key: "getStatistics", value: function() {
      return (0, p.default)(this.realm.statistics instanceof h.SerializerStatistics, "serialization requires SerializerStatistics"), this.realm.statistics;
    } }, { key: "_acquireOneObjectSemaphore", value: function(e3) {
      var t2 = this._objectSemaphores.get(e3);
      return void 0 !== t2 && t2.acquireOne(), t2;
    } }, { key: "_emitObjectProperties", value: function(e3) {
      var t2 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e3.properties, n2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a2 = arguments.length > 3 ? arguments[3] : void 0, o2 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], s2 = true, u2 = false, c2 = void 0;
      try {
        for (var f2, d2 = function() {
          var r3 = i(f2.value, 2), n3 = r3[0], a3 = r3[1];
          (0, p.default)(a3);
          var o3 = a3.descriptor;
          if (void 0 === o3) return "continue";
          var s3 = t2._acquireOneObjectSemaphore(e3);
          t2.emitter.emitNowOrAfterWaitingForDependencies(t2._getDescriptorValues(o3).concat([n3, e3]), function() {
            (0, p.default)(void 0 !== o3), t2._emitProperty(e3, n3, o3), void 0 !== s3 && s3.releaseOne();
          }, t2.emitter.getBody());
        }, h2 = e3.symbols[Symbol.iterator](); !(s2 = (f2 = h2.next()).done); s2 = true) d2();
      } catch (e4) {
        u2 = true, c2 = e4;
      } finally {
        try {
          s2 || null == h2.return || h2.return();
        } finally {
          if (u2) throw c2;
        }
      }
      var v2 = !e3.mightNotBeLeakedObject(), y2 = true, m2 = false, b2 = void 0;
      try {
        for (var g2, w2 = function() {
          var r3 = i(g2.value, 2), n3 = r3[0], o3 = r3[1];
          if ((0, p.default)(o3), void 0 !== o3.pathNode) return "continue";
          var s3 = o3.descriptor;
          if ((function(e4) {
            return v2 && e4 instanceof _.PropertyDescriptor && void 0 === e4.get && void 0 === e4.set;
          })(s3)) return "continue";
          if (void 0 === s3) return "continue";
          if (t2.residualHeapInspector.canIgnoreProperty(e3, n3)) return "continue";
          (0, p.default)(void 0 !== s3);
          var u3 = t2._acquireOneObjectSemaphore(e3), l2 = t2.emitter.getBody();
          t2.emitter.emitNowOrAfterWaitingForDependencies(t2._getDescriptorValues(s3).concat(e3), function() {
            (0, p.default)(void 0 !== s3), t2._emitProperty(e3, n3, s3, null != a2 && a2.has(n3)), void 0 !== u3 && u3.releaseOne();
          }, l2);
        }, E2 = r2[Symbol.iterator](); !(y2 = (g2 = E2.next()).done); y2 = true) w2();
      } catch (e4) {
        m2 = true, b2 = e4;
      } finally {
        try {
          y2 || null == E2.return || E2.return();
        } finally {
          if (m2) throw b2;
        }
      }
      if (void 0 !== e3.unknownProperty) {
        var S2 = e3.unknownProperty.descriptor;
        if (void 0 !== S2) {
          var T2 = this._acquireOneObjectSemaphore(e3);
          this.emitter.emitNowOrAfterWaitingForDependencies(this._getNestedValuesFromAbstractDescriptor(S2, [e3]), function() {
            t2._emitPropertiesWithComputedNamesDescriptor(e3, S2), void 0 !== T2 && T2.releaseOne();
          }, this.emitter.getBody());
        }
      }
      o2 || (this._emitObjectPrototype(e3, n2), e3 instanceof l.FunctionValue && this._emitConstructorPrototype(e3)), this.getStatistics().objects++, this.getStatistics().objectProperties += e3.properties.size;
    } }, { key: "_emitObjectPrototype", value: function(e3, t2) {
      var r2 = this, n2 = e3.getKind(), i2 = e3.$Prototype;
      if (t2) this.realm.invariantLevel >= 3 && this.emitter.emitNowOrAfterWaitingForDependencies([i2, e3], function() {
        (0, p.default)(i2);
        var t3 = r2.serializeValue(i2), n3 = r2.getSerializeObjectIdentifier(e3), a3 = r2.realm.isCompatibleWith(r2.realm.MOBILE_JSC_VERSION) || r2.realm.isCompatibleWith("mobile") ? c.memberExpression(n3, b.protoExpression) : c.callExpression(r2.preludeGenerator.memoizeReference("Object.getPrototypeOf"), [n3]), o2 = c.binaryExpression("!==", a3, t3), s2 = r2.residualOperationSerializer.getErrorStatement(c.stringLiteral("unexpected prototype"));
        r2.emitter.emit(c.ifStatement(o2, s2));
      }, this.emitter.getBody());
      else if (i2 !== this.realm.intrinsics[n2 + "Prototype"]) {
        var a2 = this._acquireOneObjectSemaphore(e3);
        this.emitter.emitNowOrAfterWaitingForDependencies([i2, e3], function() {
          (0, p.default)(i2);
          var t3 = r2.serializeValue(i2), n3 = r2.getSerializeObjectIdentifier(e3);
          r2.realm.isCompatibleWith(r2.realm.MOBILE_JSC_VERSION) || r2.realm.isCompatibleWith("mobile") ? r2.emitter.emit(c.expressionStatement(c.assignmentExpression("=", c.memberExpression(n3, b.protoExpression), t3))) : r2.emitter.emit(c.expressionStatement(c.callExpression(r2.preludeGenerator.memoizeReference("Object.setPrototypeOf"), [n3, t3]))), void 0 !== a2 && a2.releaseOne();
        }, this.emitter.getBody());
      }
    } }, { key: "_emitConstructorPrototype", value: function(e3) {
      var t2 = this, r2 = v.HeapInspector.getPropertyValue(e3, "prototype");
      r2 instanceof l.ObjectValue && this.residualValues.has(r2) && this.emitter.emitNowOrAfterWaitingForDependencies([r2], function() {
        (0, p.default)(r2 instanceof l.Value), t2.serializeValue(r2);
      }, this.emitter.getBody());
    } }, { key: "_getNestedValuesFromAbstractDescriptor", value: function(e3, t2) {
      if (void 0 === e3) return t2;
      if (e3 instanceof _.PropertyDescriptor) {
        var r2 = e3.value;
        return (0, p.default)(r2 instanceof l.AbstractValue), this._getNestedValuesFromAbstract(r2, t2);
      }
      if (e3 instanceof _.AbstractJoinedDescriptor) return t2.push(e3.joinCondition), this._getNestedValuesFromAbstractDescriptor(e3.descriptor1, t2), this._getNestedValuesFromAbstractDescriptor(e3.descriptor2, t2), t2;
      (0, p.default)(false, "unknown descriptor");
    } }, { key: "_getNestedValuesFromAbstract", value: function(e3, t2) {
      if ("widened property" === e3.kind) return t2;
      if ("template for prototype member expression" === e3.kind) return t2;
      (0, p.default)(3 === e3.args.length);
      var r2 = e3.args[0];
      if ((0, p.default)(r2 instanceof l.AbstractValue), "template for property name condition" === r2.kind) {
        var n2 = r2.args[0];
        t2.push(n2);
        var i2 = e3.args[1];
        t2.push(i2);
        var a2 = e3.args[2];
        a2 instanceof l.AbstractValue ? this._getNestedValuesFromAbstract(a2, t2) : t2.push(a2);
      } else {
        t2.push(r2);
        var o2 = e3.args[1];
        o2 instanceof l.AbstractValue ? this._getNestedValuesFromAbstract(o2, t2) : t2.push(o2);
        var s2 = e3.args[2];
        s2 instanceof l.AbstractValue ? this._getNestedValuesFromAbstract(s2, t2) : t2.push(s2);
      }
      return t2;
    } }, { key: "_emitPropertiesWithComputedNamesDescriptor", value: function(e3, t2) {
      if (void 0 !== t2) if (t2 instanceof _.PropertyDescriptor) {
        var r2 = t2.value;
        (0, p.default)(r2 instanceof l.AbstractValue), this._emitPropertiesWithComputedNames(e3, r2);
      } else if (t2 instanceof _.AbstractJoinedDescriptor) {
        var n2, i2, a2 = this.serializeValue(t2.joinCondition), o2 = /* @__PURE__ */ new Set();
        if (t2.descriptor1) {
          var s2 = this.emitter.beginEmitting("consequent", { type: "ConditionalAssignmentBranch", parentBody: void 0, entries: [], done: false }, true);
          this._emitPropertiesWithComputedNamesDescriptor(e3, t2.descriptor1);
          var u2 = this.emitter.endEmitting("consequent", s2, o2, true);
          n2 = c.blockStatement(u2.entries);
        }
        if (t2.descriptor2) {
          var f2 = this.emitter.beginEmitting("alternate", { type: "ConditionalAssignmentBranch", parentBody: void 0, entries: [], done: false }, true);
          this._emitPropertiesWithComputedNamesDescriptor(e3, t2.descriptor2);
          var d2 = this.emitter.endEmitting("alternate", f2, o2, true);
          i2 = c.blockStatement(d2.entries);
        }
        n2 ? this.emitter.emit(c.ifStatement(a2, n2, i2)) : i2 && this.emitter.emit(c.ifStatement(c.unaryExpression("!", a2), i2)), this.emitter.processValues(o2);
      } else (0, p.default)(false, "unknown descriptor");
    } }, { key: "_emitPropertiesWithComputedNames", value: function(e3, t2) {
      if ("widened property" !== t2.kind && "template for prototype member expression" !== t2.kind) {
        (0, p.default)(3 === t2.args.length);
        var r2 = t2.args[0];
        if ((0, p.default)(r2 instanceof l.AbstractValue), "template for property name condition" === r2.kind) {
          var n2 = r2.args[0];
          (0, p.default)(n2 instanceof l.AbstractValue);
          var i2 = t2.args[1], a2 = t2.args[2];
          a2 instanceof l.AbstractValue && this._emitPropertiesWithComputedNames(e3, a2);
          var o2 = this.getSerializeObjectIdentifier(e3), s2 = this.serializeValue(n2), u2 = this.serializeValue(i2);
          this.emitter.emit(c.expressionStatement(c.assignmentExpression("=", c.memberExpression(o2, s2, true), u2)));
        } else {
          var f2, d2, h2 = this.serializeValue(r2), v2 = t2.args[1], y2 = /* @__PURE__ */ new Set();
          if (v2 instanceof l.AbstractValue) {
            var m2 = this.emitter.beginEmitting("consequent", { type: "ConditionalAssignmentBranch", parentBody: void 0, entries: [], done: false }, true);
            this._emitPropertiesWithComputedNames(e3, v2);
            var b2 = this.emitter.endEmitting("consequent", m2, y2, true);
            f2 = c.blockStatement(b2.entries);
          }
          var g2 = t2.args[2];
          if (g2 instanceof l.AbstractValue) {
            var w2 = this.emitter.beginEmitting("alternate", { type: "ConditionalAssignmentBranch", parentBody: void 0, entries: [], done: false }, true);
            this._emitPropertiesWithComputedNames(e3, g2);
            var E2 = this.emitter.endEmitting("alternate", w2, y2, true);
            d2 = c.blockStatement(E2.entries);
          }
          f2 ? this.emitter.emit(c.ifStatement(h2, f2, d2)) : d2 && this.emitter.emit(c.ifStatement(c.unaryExpression("!", h2), d2)), this.emitter.processValues(y2);
        }
      }
    } }, { key: "getSerializeObjectIdentifier", value: function(e3) {
      return this.residualHeapValueIdentifiers.getIdentifierAndIncrementReferenceCount(e3);
    } }, { key: "_emitProperty", value: function(e3, t2, r2) {
      var n2 = this, i2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], a2 = function() {
        var r3 = t2 instanceof l.SymbolValue || t2 instanceof l.AbstractValue ? n2.serializeValue(t2) : (0, b.getAsPropertyNameExpression)(t2), i3 = t2 instanceof l.SymbolValue || t2 instanceof l.AbstractValue || !c.isIdentifier(r3);
        return c.memberExpression(n2.getSerializeObjectIdentifier(e3), r3, i3);
      };
      void 0 === r2 ? this._deleteProperty(a2()) : this.emitter.emit(this.emitDefinePropertyBody(i2, a2, e3, t2, r2));
    } }, { key: "emitDefinePropertyBody", value: function(e3, t2, r2, n2, i2) {
      if (i2 instanceof _.AbstractJoinedDescriptor) {
        var a2, o2, s2 = this.serializeValue(i2.joinCondition);
        if ((0, p.default)(void 0 !== s2), i2.descriptor1 && (a2 = this.emitDefinePropertyBody(e3, t2, r2, n2, i2.descriptor1)), i2.descriptor2 && (o2 = this.emitDefinePropertyBody(e3, t2, r2, n2, i2.descriptor2)), a2 && o2) return c.ifStatement(s2, a2, o2);
        if (a2) return c.ifStatement(s2, a2);
        if (o2) return c.ifStatement(c.unaryExpression("!", s2), o2);
        (0, p.default)(false);
      }
      if ((0, p.default)(i2 instanceof _.PropertyDescriptor), void 0 !== t2 && this._canEmbedProperty(r2, n2, i2)) {
        var u2 = i2.value;
        (0, p.default)(u2 instanceof l.Value), (0, p.default)(!this.emitter.getReasonToWaitForDependencies([u2, r2]), "precondition of _emitProperty");
        var f2 = u2.mightHaveBeenDeleted();
        return this._getPropertyAssignmentStatement(t2(), u2, f2, e3);
      }
      var d2 = [], h2 = [], v2 = ["enumerable", "configurable"], y2 = [];
      i2.get || i2.set ? y2.push("set", "get") : (v2.push("writable"), y2.push("value"));
      for (var m2 = [], g2 = 0; g2 < v2.length; g2++) {
        var w2 = v2[g2];
        if (void 0 !== i2[w2]) {
          var E2 = i2[w2];
          (0, p.default)(void 0 !== E2), h2.push(c.objectProperty(c.identifier(w2), c.booleanLiteral(E2))), m2.push("".concat(w2, ":").concat(E2.toString()));
        }
      }
      m2 = m2.join(",");
      var S2 = this._descriptors.get(m2);
      if (void 0 === S2) {
        S2 = c.identifier(this.descriptorNameGenerator.generate(m2));
        var T2 = c.variableDeclaration("var", [c.variableDeclarator(S2, c.objectExpression(h2))]);
        this.prelude.push(T2), this._descriptors.set(m2, S2);
      }
      (0, p.default)(void 0 !== S2);
      for (var A2 = 0; A2 < y2.length; A2++) {
        var C2 = y2[A2];
        if (void 0 !== i2[C2]) {
          var P2 = i2[C2];
          if ((0, p.default)(P2 instanceof l.Value), P2 instanceof l.UndefinedValue) {
            this.serializeValue(P2);
            continue;
          }
          (0, p.default)(!this.emitter.getReasonToWaitForDependencies([P2]), "precondition of _emitProperty"), d2.push(c.assignmentExpression("=", c.memberExpression(S2, c.identifier(C2)), this.serializeValue(P2)));
        }
      }
      var O2 = n2 instanceof l.SymbolValue || n2 instanceof l.AbstractValue ? this.serializeValue(n2) : (0, b.getAsPropertyNameExpression)(n2, false);
      return (0, p.default)(!this.emitter.getReasonToWaitForDependencies([r2]), "precondition of _emitProperty"), d2.push(c.callExpression(this.preludeGenerator.memoizeReference("Object.defineProperty"), [this.getSerializeObjectIdentifier(r2), O2, S2])), c.expressionStatement(c.sequenceExpression(d2));
    } }, { key: "_serializeDeclarativeEnvironmentRecordBinding", value: function(e3) {
      if (!e3.serializedValue) {
        var t2 = e3.value;
        (0, p.default)(e3.declarativeEnvironmentRecord), e3.hasLeaked ? this.referentializer.referentializeLeakedBinding(e3) : (e3.serializedValue = void 0 !== t2 ? this.serializeValue(t2) : b.voidExpression, e3.modified && this.referentializer.referentializeModifiedBinding(e3)), void 0 !== t2 && t2.mightBeObject() && this.residualHeapValueIdentifiers.incrementReferenceCount(t2);
      }
    } }, { key: "_getReferencingGenerators", value: function(e3, t2, r2) {
      for (var n2 = new Set(e3), i2 = t2.slice(), a2 = /* @__PURE__ */ new Set(); i2.length > 0; ) {
        var o2 = i2.pop();
        if (!a2.has(o2)) if (a2.add(o2), o2 === r2) {
          var s2 = this.additionalFunctionGenerators.get(o2);
          (0, p.default)(void 0 !== s2), n2.add(s2);
        } else {
          var u2 = this.residualValues.get(o2);
          (0, p.default)(u2);
          var c2 = true, d2 = false, h2 = void 0;
          try {
            for (var v2, y2 = u2[Symbol.iterator](); !(c2 = (v2 = y2.next()).done); c2 = true) {
              var m2 = v2.value;
              m2 instanceof l.FunctionValue ? i2.push(m2) : ((0, p.default)(m2 instanceof f.Generator), n2.add(m2));
            }
          } catch (e4) {
            d2 = true, h2 = e4;
          } finally {
            try {
              c2 || null == y2.return || y2.return();
            } finally {
              if (d2) throw h2;
            }
          }
        }
      }
      return Array.from(n2);
    } }, { key: "_getActiveBodyOfGenerator", value: function(e3) {
      return e3 === this.generator ? this.mainBody : this.activeGeneratorBodies.get(e3);
    } }, { key: "_getTarget", value: function(e3, t2) {
      var r2 = this, n2 = this.residualValues.get(e3);
      (0, p.default)(void 0 !== n2, "value must have been visited"), (0, p.default)(n2.size >= 1), t2 && this._logScopes(n2), n2.size > 1 && this.residualHeapValueIdentifiers.incrementReferenceCount(e3);
      var i2 = [], a2 = [], o2 = true, s2 = false, u2 = void 0;
      try {
        for (var c2, d2 = n2[Symbol.iterator](); !(o2 = (c2 = d2.next()).done); o2 = true) {
          var h2 = c2.value;
          h2 instanceof l.FunctionValue ? i2.push(h2) : ((0, p.default)(h2 instanceof f.Generator, "scope must be either function value or generator"), a2.push(h2));
        }
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          o2 || null == d2.return || d2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      var v2 = this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(e3);
      if (0 === a2.length && (this._options.delayInitializations && (void 0 === v2 || !i2.includes(v2)))) return { body: this.residualFunctions.residualFunctionInitializers.registerValueOnlyReferencedByResidualFunctions(i2, e3), usedOnlyByResidualFunctions: true, optimizedFunctionRoot: v2, description: "delay_initializer" };
      if (t2 && console.log("  has optimized function root? ".concat(void 0 !== v2 ? "yes" : "no")), a2 = this._getReferencingGenerators(a2, i2, v2), void 0 === v2 && 0 === (a2 = a2.filter(function(e4) {
        for (var t3 = e4; t3 instanceof f.Generator; ) t3 = r2.generatorTree.getParent(t3);
        return "GLOBAL" === t3;
      })).length) return t2 && console.log("  no filtered generators"), { body: this.mainBody };
      var y2, m2 = function(e4) {
        var t3 = r2.generatorTree.getParent(e4);
        return t3 instanceof f.Generator ? t3 : void 0;
      }, b2 = Array.from(a2).reduce(function(e4, t3) {
        return (0, w.commonAncestorOf)(e4, t3, m2);
      }, a2[0]);
      for (void 0 === b2 && void 0 !== v2 && (b2 = this.additionalFunctionGenerators.get(v2)), (0, p.default)(void 0 !== b2, "there must always be a common generator ancestor"), t2 && console.log("  common ancestor: ".concat(b2.getName())); void 0 === (y2 = this._getActiveBodyOfGenerator(b2)); ) b2 = m2(b2), (0, p.default)(void 0 !== b2, "there must always be an active body for the common generator ancestor");
      (0, p.default)(void 0 !== y2, "there must always be an active body");
      var g2 = /* @__PURE__ */ new Set();
      this.emitter.dependenciesVisitor(e3, { onArrayWithWidenedNumericProperty: function(e4) {
        t2 && console.log("  depending on array with widened numeric properties and an identifier ".concat(e4.intrinsicName || "?")), (0, p.default)(void 0 === v2 || !!r2.emitter.getActiveOptimizedFunction(), "optimized function inconsistency");
        var n3 = r2.emitter.getDeclarationBody(e4);
        if (void 0 !== n3) {
          t2 && console.log("    has declaration body");
          for (var i3 = n3; void 0 !== i3 && !g2.has(i3); i3 = i3.parentBody) g2.add(i3);
        }
      }, onAbstractValueWithIdentifier: function(e4) {
        t2 && console.log("  depending on abstract value with identifier ".concat(e4.intrinsicName || "?")), (0, p.default)(void 0 === v2 || !!r2.emitter.getActiveOptimizedFunction(), "optimized function inconsistency");
        var n3 = r2.emitter.getDeclarationBody(e4);
        if (void 0 !== n3) {
          t2 && console.log("    has declaration body");
          for (var i3 = n3; void 0 !== i3 && !g2.has(i3); i3 = i3.parentBody) g2.add(i3);
        }
      } }), t2 && console.log("  got ".concat(g2.size, " not yet done bodies"));
      var E2 = true, S2 = false, T2 = void 0;
      try {
        for (var A2, C2 = a2[Symbol.iterator](); !(E2 = (A2 = C2.next()).done); E2 = true) for (var P2 = A2.value; void 0 !== P2; P2 = m2(P2)) {
          var O2 = this._getActiveBodyOfGenerator(P2);
          if (void 0 !== O2 && (O2.nestingLevel || 0) > (y2.nestingLevel || 0) && g2.has(O2)) {
            y2 = O2;
            break;
          }
        }
      } catch (e4) {
        S2 = true, T2 = e4;
      } finally {
        try {
          E2 || null == C2.return || C2.return();
        } finally {
          if (S2) throw T2;
        }
      }
      return { body: y2, commonAncestor: b2 };
    } }, { key: "_getValueDebugName", value: function(e3) {
      var t2;
      if (e3 instanceof l.FunctionValue) t2 = e3.getName();
      else {
        var r2 = this.residualHeapValueIdentifiers.getIdentifier(e3);
        (0, p.default)(r2), t2 = r2.name;
      }
      return t2;
    } }, { key: "_getResidualFunctionBinding", value: function(e3) {
      var t2 = e3.environment;
      if (t2 === this.globalEnvironmentRecord.$DeclarativeRecord && (t2 = this.globalEnvironmentRecord), t2 === this.globalEnvironmentRecord) return this.globalBindings.get(e3.name);
      (0, p.default)(t2 instanceof C.DeclarativeEnvironmentRecord, "only declarative environments have bindings");
      var r2 = this.declarativeEnvironmentRecordsBindings.get(t2);
      return void 0 !== r2 ? r2.get(e3.name) : void 0;
    } }, { key: "serializeBinding", value: function(e3) {
      var t2 = this._getResidualFunctionBinding(e3);
      (0, p.default)(void 0 !== t2, "any referenced residual binding should have been visited"), this._serializeDeclarativeEnvironmentRecordBinding(t2);
      var r2 = t2.serializedUnscopedLocation;
      return (0, p.default)(void 0 !== r2), r2;
    } }, { key: "getPrelude", value: function(e3) {
      if (void 0 !== e3) {
        var t2 = this.residualFunctions.additionalFunctionPreludes.get(e3);
        return (0, p.default)(void 0 !== t2), t2;
      }
      return this.prelude;
    } }, { key: "_declare", value: function(e3, t2, r2, n2, i2) {
      if (e3) {
        var a2 = c.variableDeclaration(r2, [c.variableDeclarator(n2)]);
        this.getPrelude(t2).push(a2);
        var o2 = c.expressionStatement(c.assignmentExpression("=", n2, i2));
        this.emitter.emit(o2);
      } else {
        var s2 = c.variableDeclaration(r2, [c.variableDeclarator(n2, i2)]);
        this.emitter.emit(s2);
      }
    } }, { key: "serializeValue", value: function(e3, t2, r2) {
      if ((0, p.default)(!(e3 instanceof l.ObjectValue && e3.refuseSerialization)), e3 instanceof l.AbstractValue) {
        if ("widened" === e3.kind) {
          this.serializedValues.add(e3);
          var n2 = e3.intrinsicName;
          return (0, p.default)(void 0 !== n2), c.identifier(n2);
        }
        if ("widened property" === e3.kind) return this.serializedValues.add(e3), this._serializeAbstractValueHelper(e3);
      }
      if (e3 instanceof l.ECMAScriptSourceFunctionValue && this.residualClassMethodInstances.has(e3)) {
        var i2 = this.residualClassMethodInstances.get(e3);
        if ((0, p.default)(i2), "constructor" !== i2.methodType) {
          var a2 = new E.CompilerDiagnostic("a class method incorrectly went through the serializeValue() code path", e3.$ECMAScriptCode.loc, "PP0022", "FatalError");
          throw this.realm.handleError(a2), new E.FatalError();
        }
      }
      if (this._serializedValueWithIdentifiers.has(e3)) return this.getSerializeObjectIdentifier(e3);
      if (this.serializedValues.add(e3), !t2 && v.HeapInspector.isLeaf(e3)) {
        var o2 = this._serializeValue(e3);
        return (0, p.default)(void 0 !== o2), o2;
      }
      this._serializedValueWithIdentifiers.add(e3);
      var s2 = this._getTarget(e3), u2 = this.emitter.beginEmitting(e3, s2.body), f2 = this._serializeValue(e3), d2 = this.residualHeapValueIdentifiers.getIdentifier(e3);
      void 0 !== this._options.debugIdentifiers && this._options.debugIdentifiers.includes(d2.name) && (console.log("Tracing value with identifier ".concat(d2.name, " (").concat(e3.constructor.name, ") targetting ").concat(s2.body.type)), this._getTarget(e3, true));
      var h2 = d2;
      if (this.residualHeapValueIdentifiers.incrementReferenceCount(e3), this.residualHeapValueIdentifiers.needsIdentifier(e3)) {
        if (f2) {
          if (this._options.debugScopes) {
            var y2 = this.residualValues.get(e3);
            (0, p.default)(void 0 !== y2);
            var m2 = Array.from(y2).map(function(e4) {
              return '"'.concat(e4.getName(), '"');
            }).join(","), b2 = "".concat(this._getValueDebugName(e3), " referenced from scopes [").concat(m2, "]");
            void 0 !== s2.commonAncestor && (b2 = "".concat(b2, " with common ancestor: ").concat(s2.commonAncestor.getName())), void 0 !== s2.description && (b2 = "".concat(b2, " => ").concat(s2.description, " ")), this.emitter.emit(V(b2));
          }
          f2 !== d2 && this._declare(!!s2.usedOnlyByResidualFunctions, s2.optimizedFunctionRoot, r2 || "var", d2, f2), this.getStatistics().valueIds++, s2.usedOnlyByResidualFunctions && this.getStatistics().delayedValues++;
        }
      } else f2 && (this.residualHeapValueIdentifiers.deleteIdentifier(e3), h2 = f2, this.getStatistics().valuesInlined++);
      return this.emitter.endEmitting(e3, u2), h2;
    } }, { key: "_serializeValueIntrinsic", value: function(e3) {
      var t2 = e3.intrinsicName;
      return (0, p.default)(t2), e3 instanceof l.ObjectValue && e3.intrinsicNameGenerated ? this.preludeGenerator.convertStringToMember(t2) : ((0, p.default)("MainGenerator" === this.emitter.getBody().type || "OptimizedFunction" === this.emitter.getBody().type || "DelayInitializations" === this.emitter.getBody().type), this.preludeGenerator.memoizeReference(t2));
    } }, { key: "_getDescriptorValues", value: function(e3) {
      return void 0 === e3 ? [] : e3 instanceof _.PropertyDescriptor ? ((0, p.default)(void 0 === e3.value || e3.value instanceof l.Value), void 0 !== e3.value ? [e3.value] : ((0, p.default)(void 0 !== e3.get), (0, p.default)(void 0 !== e3.set), [e3.get, e3.set])) : e3 instanceof _.AbstractJoinedDescriptor ? [e3.joinCondition].concat(n(this._getDescriptorValues(e3.descriptor1)), n(this._getDescriptorValues(e3.descriptor2))) : void (0, p.default)(false, "unknown descriptor");
    } }, { key: "_deleteProperty", value: function(e3) {
      (0, p.default)("MemberExpression" === e3.type), this.emitter.emit(c.expressionStatement(c.unaryExpression("delete", e3, true)));
    } }, { key: "_assignProperty", value: function(e3, t2, r2) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
      this.emitter.emit(this._getPropertyAssignmentStatement(e3, t2, r2, n2));
    } }, { key: "_getPropertyAssignmentStatement", value: function(e3, t2, r2) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
      if (r2) {
        var a2, o2 = this.serializeValue(t2);
        if (t2 instanceof l.AbstractValue && "conditional" === t2.kind) {
          var s2 = i(t2.args, 3), u2 = s2[0], f2 = s2[1], d2 = s2[2];
          f2 instanceof l.EmptyValue ? (a2 = u2 instanceof l.AbstractValue && "!" === u2.kind ? this.serializeValue(u2.args[0]) : c.unaryExpression("!", this.serializeValue(u2)), o2 = this.serializeValue(d2)) : d2 instanceof l.EmptyValue && (a2 = this.serializeValue(u2), o2 = this.serializeValue(f2));
        }
        void 0 === a2 && (a2 = c.binaryExpression("!==", this.serializeValue(t2), this._serializeEmptyValue()));
        var h2 = c.expressionStatement(c.assignmentExpression("=", e3, o2)), v2 = null;
        return n2 && ((0, p.default)("MemberExpression" === e3.type), v2 = c.expressionStatement(c.unaryExpression("delete", e3, true))), c.ifStatement(a2, h2, v2);
      }
      return c.expressionStatement(c.assignmentExpression("=", e3, this.serializeValue(t2)));
    } }, { key: "_serializeArrayIndexProperties", value: function(e3, t2, r2) {
      for (var n2 = [], i2 = 0; i2 < t2; i2++) {
        var a2 = i2 + "", o2 = r2.get(a2), s2 = null;
        if (void 0 !== o2) {
          var u2 = o2.descriptor;
          if ((0, p.default)(void 0 === u2 || u2 instanceof _.PropertyDescriptor), void 0 !== u2 && void 0 !== u2.value && this._canEmbedProperty(e3, a2, u2)) {
            var c2 = u2.value;
            (0, p.default)(c2 instanceof l.Value);
            var f2 = c2.mightHaveBeenDeleted(), d2 = void 0;
            this.realm.instantRender.enabled ? (this.emitter.getReasonToWaitForDependencies(c2) && this.realm.instantRenderBailout("InstantRender does not yet support cyclical arrays or objects", e3.expressionLocation), d2 = void 0) : d2 = this.emitter.getReasonToWaitForDependencies(c2) || this.emitter.getReasonToWaitForActiveValue(e3, f2), d2 || (s2 = this.serializeValue(c2), r2.delete(a2));
          }
        }
        n2.push(s2);
      }
      return n2;
    } }, { key: "_serializeArrayLengthIfNeeded", value: function(e3, t2, r2) {
      var n2, i2 = this, a2 = this.realm;
      if ((n2 = e3.mightBeLeakedObject() ? this.realm.evaluateWithoutLeakLogic(function() {
        return (0, u.Get)(a2, e3, "length");
      }) : (0, u.Get)(a2, e3, "length")) instanceof l.AbstractValue || T.To.ToLength(a2, n2) !== t2) {
        if (!(n2 instanceof l.AbstractValue) || "widened property" !== n2.kind) {
          var o2 = this._acquireOneObjectSemaphore(e3);
          this.emitter.emitNowOrAfterWaitingForDependencies([e3, n2], function() {
            i2._assignProperty(c.memberExpression(i2.getSerializeObjectIdentifier(e3), c.identifier("length")), n2, false), void 0 !== o2 && o2.releaseOne();
          }, this.emitter.getBody());
        }
        r2.delete("length");
      }
    } }, { key: "_serializeValueArray", value: function(e3) {
      var t2 = new Map(e3.properties), r2 = i((0, w.getSuggestedArrayLiteralLength)(this.realm, e3), 2), n2 = r2[0], a2 = r2[1], o2 = this._serializeArrayIndexProperties(e3, n2, t2);
      return a2 || this._serializeArrayLengthIfNeeded(e3, n2, t2), this._emitObjectProperties(e3, t2), c.arrayExpression(o2);
    } }, { key: "_serializeValueMap", value: function(e3) {
      var t2, r2, n2 = this, i2 = e3.getKind(), a2 = [];
      "Map" === i2 ? (t2 = e3.$MapData, r2 = false) : ((0, p.default)("WeakMap" === i2), t2 = e3.$WeakMapData, r2 = true), (0, p.default)(void 0 !== t2);
      for (var o2 = t2.length, s2 = this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION), u2 = function(i3) {
        var o3 = t2[i3], u3 = o3.$Key, l3 = o3.$Value;
        if (void 0 === u3 || void 0 === l3 || r2 && !n2.residualValues.has(u3)) return "continue";
        var f3 = u3.mightHaveBeenDeleted(), d2 = n2.emitter.getReasonToWaitForDependencies(u3) || n2.emitter.getReasonToWaitForDependencies(l3) || n2.emitter.getReasonToWaitForActiveValue(e3, f3 || s2);
        if (d2) n2.emitter.emitAfterWaiting(d2, [u3, l3, e3], function() {
          (0, p.default)(void 0 !== u3), (0, p.default)(void 0 !== l3), n2.emitter.emit(c.expressionStatement(c.callExpression(c.memberExpression(n2.residualHeapValueIdentifiers.getIdentifierAndIncrementReferenceCount(e3), c.identifier("set")), [n2.serializeValue(u3), n2.serializeValue(l3)])));
        }, n2.emitter.getBody());
        else {
          var h2 = n2.serializeValue(u3), v2 = n2.serializeValue(l3), y2 = c.arrayExpression([h2, v2]);
          a2.push(y2);
        }
      }, l2 = 0; l2 < o2; l2++) u2(l2);
      this._emitObjectProperties(e3);
      var f2 = a2.length > 0 ? [c.arrayExpression(a2)] : [];
      return c.newExpression(this.preludeGenerator.memoizeReference(i2), f2);
    } }, { key: "_serializeValueSet", value: function(e3) {
      var t2, r2, n2 = this, i2 = e3.getKind(), a2 = [];
      "Set" === i2 ? (t2 = e3.$SetData, r2 = false) : ((0, p.default)("WeakSet" === i2), t2 = e3.$WeakSetData, r2 = true), (0, p.default)(void 0 !== t2);
      for (var o2 = t2.length, s2 = this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION), u2 = function(i3) {
        var o3 = t2[i3];
        if (void 0 === o3 || r2 && !n2.residualValues.has(o3)) return "continue";
        var u3 = o3.mightHaveBeenDeleted(), l3 = n2.emitter.getReasonToWaitForDependencies(o3) || n2.emitter.getReasonToWaitForActiveValue(e3, u3 || s2);
        if (l3) n2.emitter.emitAfterWaiting(l3, [o3, e3], function() {
          (0, p.default)(void 0 !== o3), n2.emitter.emit(c.expressionStatement(c.callExpression(c.memberExpression(n2.residualHeapValueIdentifiers.getIdentifierAndIncrementReferenceCount(e3), c.identifier("add")), [n2.serializeValue(o3)])));
        }, n2.emitter.getBody());
        else {
          var f3 = n2.serializeValue(o3);
          a2.push(f3);
        }
      }, l2 = 0; l2 < o2; l2++) u2(l2);
      this._emitObjectProperties(e3);
      var f2 = a2.length > 0 ? [c.arrayExpression(a2)] : [];
      return c.newExpression(this.preludeGenerator.memoizeReference(i2), f2);
    } }, { key: "_serializeValueTypedArrayOrDataView", value: function(e3) {
      var t2 = e3.$ViewedArrayBuffer;
      (0, p.default)(void 0 !== t2);
      var r2 = this.serializeValue(t2, true);
      return this._emitObjectProperties(e3), c.newExpression(this.preludeGenerator.memoizeReference(e3.getKind()), [r2]);
    } }, { key: "_serializeValueArrayBuffer", value: function(e3) {
      var t2 = [], r2 = e3.$ArrayBufferByteLength, n2 = e3.$ArrayBufferData;
      (0, p.default)(void 0 !== r2), (0, p.default)(n2);
      for (var i2 = true, a2 = 0; a2 < r2; a2++) {
        0 !== n2[a2] && (i2 = false);
        var o2 = c.numericLiteral(n2[a2]);
        t2.push(o2);
      }
      if (this._emitObjectProperties(e3), i2) return c.newExpression(this.preludeGenerator.memoizeReference(e3.getKind()), [c.numericLiteral(r2)]);
      var s2 = c.arrayExpression(t2), u2 = c.newExpression(this.preludeGenerator.memoizeReference("Uint8Array"), [s2]);
      return c.memberExpression(u2, c.identifier("buffer"));
    } }, { key: "_serializeValueFunction", value: function(e3) {
      var t2 = this;
      if (e3 instanceof l.BoundFunctionValue) return this._emitObjectProperties(e3), c.callExpression(c.memberExpression(this.serializeValue(e3.$BoundTargetFunction), c.identifier("bind")), [].concat(this.serializeValue(e3.$BoundThis), e3.$BoundArguments.map(function(e4, r3) {
        return t2.serializeValue(e4);
      })));
      (0, p.default)(!(e3 instanceof l.NativeFunctionValue), "all native function values should be intrinsics"), (0, p.default)(e3 instanceof l.ECMAScriptSourceFunctionValue);
      var r2 = this.residualFunctionInstances.get(e3);
      (0, p.default)(void 0 !== r2);
      var n2 = r2.residualFunctionBindings, a2 = this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(e3);
      void 0 !== a2 && (r2.containingAdditionalFunction = a2);
      var o2 = new D(function() {
        (0, p.default)(r2), void 0 !== a2 && (0, S.canHoistFunction)(t2.realm, e3, void 0, /* @__PURE__ */ new Set()) ? (r2.insertionPoint = new d.BodyReference(t2.mainBody, t2.mainBody.entries.length), r2.containingAdditionalFunction = void 0) : r2.insertionPoint = t2.emitter.getBodyReference();
      }), s2 = true, u2 = false, f2 = void 0;
      try {
        for (var h2, v2 = function() {
          var e4 = i(h2.value, 2), r3 = e4[0], n3 = e4[1], a3 = [], s3 = void 0;
          n3.declarativeEnvironmentRecord ? (s3 = function() {
            return t2._serializeDeclarativeEnvironmentRecordBinding(n3);
          }, void 0 !== n3.value && a3.push(n3.value)) : s3 = function() {
            return t2._serializeGlobalBinding(r3, n3);
          }, o2.acquireOne(), t2.emitter.emitNowOrAfterWaitingForDependencies(a3, function() {
            s3(), o2.releaseOne();
          }, t2.emitter.getBody());
        }, y2 = n2[Symbol.iterator](); !(s2 = (h2 = y2.next()).done); s2 = true) v2();
      } catch (e4) {
        u2 = true, f2 = e4;
      } finally {
        try {
          s2 || null == y2.return || y2.return();
        } finally {
          if (u2) throw f2;
        }
      }
      if ("classConstructor" === e3.$FunctionKind) {
        var m2 = e3.$HomeObject;
        if (m2 instanceof l.ObjectValue && m2.$IsClassPrototype) return void this._serializeClass(e3, m2, o2);
      }
      o2.releaseOne(), this._emitObjectProperties(e3);
      var b2 = this.additionalFunctionValuesAndEffects.get(e3);
      b2 && this._serializeAdditionalFunction(e3, b2);
    } }, { key: "_serializeClass", value: function(e3, t2, r2) {
      var n2, a2 = this, o2 = this.residualClassMethodInstances.get(e3);
      (0, p.default)(void 0 !== o2);
      var s2 = false, u2 = /* @__PURE__ */ new Map();
      e3.$Prototype instanceof l.NativeFunctionValue || (o2.classSuperNode = this.serializeValue(e3.$Prototype));
      var f2 = function(t3, r3) {
        var i2 = function() {
          var e4 = a2.serializeValue(r3);
          return { name: "string" == typeof t3 ? c.identifier(t3) : a2.serializeValue(t3), methodFuncOrPropertyId: e4 };
        };
        if (r3 instanceof l.ECMAScriptSourceFunctionValue) {
          if (r3 !== e3) if (void 0 !== r3.$HomeObject) a2.serializedValues.add(r3), a2._serializeClassMethod(t3, r3);
          else {
            !(function() {
              if (!s2) {
                var t4 = a2.getSerializeObjectIdentifier(e3);
                n2 = c.identifier(a2.intrinsicNameGenerator.generate()), s2 = true, a2.emitter.emit(c.variableDeclaration("var", [c.variableDeclarator(n2, c.memberExpression(t4, c.identifier("prototype")))]));
              }
            })(), (0, p.default)(void 0 !== n2);
            var o3 = i2(), u3 = o3.name, f3 = o3.methodFuncOrPropertyId;
            a2.emitter.emit(c.expressionStatement(c.assignmentExpression("=", c.memberExpression(n2, u3), f3)));
          }
        } else {
          var d3 = c.memberExpression(a2.getSerializeObjectIdentifier(e3), c.identifier("prototype")), h3 = i2(), v3 = h3.name, y3 = h3.methodFuncOrPropertyId;
          a2.emitter.emit(c.expressionStatement(c.assignmentExpression("=", c.memberExpression(d3, v3), y3)));
        }
      }, d2 = function(t3, r3) {
        if ("prototype" === t3) a2.serializedValues.add(r3);
        else if (r3 instanceof l.ECMAScriptSourceFunctionValue && r3.$HomeObject === e3) f2(t3, r3);
        else {
          var n3 = e3.properties.get(t3);
          (0, p.default)(n3), u2.set(t3, n3);
        }
      }, h2 = true, v2 = false, y2 = void 0;
      try {
        for (var m2, b2 = e3.properties[Symbol.iterator](); !(h2 = (m2 = b2.next()).done); h2 = true) {
          var g2 = i(m2.value, 2), E2 = g2[0], S2 = g2[1];
          this.residualHeapInspector.canIgnoreProperty(e3, E2) || w.ClassPropertiesToIgnore.has(E2) || void 0 === S2.descriptor || "length" === E2 && (0, w.canIgnoreClassLengthProperty)(e3, S2.descriptor, this.logger) || (0, w.withDescriptorValue)(E2, S2.descriptor, d2);
        }
      } catch (e4) {
        v2 = true, y2 = e4;
      } finally {
        try {
          h2 || null == b2.return || b2.return();
        } finally {
          if (v2) throw y2;
        }
      }
      r2.releaseOne(), this._emitObjectProperties(e3, u2, void 0, void 0, true);
      var T2 = true, A2 = false, C2 = void 0;
      try {
        for (var P2, O2 = t2.properties[Symbol.iterator](); !(T2 = (P2 = O2.next()).done); T2 = true) {
          var x2 = i(P2.value, 2);
          E2 = x2[0], S2 = x2[1];
          (0, w.withDescriptorValue)(E2, S2.descriptor, f2);
        }
      } catch (e4) {
        A2 = true, C2 = e4;
      } finally {
        try {
          T2 || null == O2.return || O2.return();
        } finally {
          if (A2) throw C2;
        }
      }
      var _2 = true, V2 = false, D2 = void 0;
      try {
        for (var N2, I = t2.symbols[Symbol.iterator](); !(_2 = (N2 = I.next()).done); _2 = true) {
          var k = i(N2.value, 2), j = k[0];
          S2 = k[1];
          (0, w.withDescriptorValue)(j, S2.descriptor, f2);
        }
      } catch (e4) {
        V2 = true, D2 = e4;
      } finally {
        try {
          _2 || null == I.return || I.return();
        } finally {
          if (V2) throw D2;
        }
      }
      o2.classMethodKeyNode = c.identifier("constructor");
    } }, { key: "_serializeClassMethod", value: function(e3, t2) {
      var r2 = this.residualClassMethodInstances.get(t2);
      (0, p.default)(void 0 !== r2), "string" == typeof e3 ? (r2.classMethodKeyNode = c.identifier(e3), r2.classMethodComputed = false) : e3 instanceof l.SymbolValue ? r2.classMethodKeyNode = this.serializeValue(e3) : (0, p.default)(false, "Unknown method key type"), this._serializeValueFunction(t2);
    } }, { key: "_canEmbedProperty", value: function(e3, t2, r2) {
      if (!(r2 instanceof _.PropertyDescriptor)) return false;
      var n2 = this.residualHeapInspector.getTargetIntegrityDescriptor(e3);
      return e3 instanceof l.FunctionValue && "prototype" === t2 || "RegExp" === e3.getKind() && "lastIndex" === t2 ? !(r2.writable !== n2.writable || r2.configurable || r2.enumerable || r2.set || r2.get) : !(r2.writable !== n2.writable || r2.configurable !== n2.configurable || !r2.enumerable || r2.set || r2.get) && !(r2.value instanceof l.AbstractValue && "widened property" === r2.value.kind);
    } }, { key: "_findLastObjectPrototype", value: function(e3) {
      for (; e3.$Prototype instanceof l.ObjectValue; ) e3 = e3.$Prototype;
      return e3;
    } }, { key: "_serializeValueRegExpObject", value: function(e3) {
      var t2 = e3.$OriginalSource, r2 = e3.$OriginalFlags;
      return (0, p.default)("string" == typeof t2), (0, p.default)("string" == typeof r2), this._emitObjectProperties(e3), t2 = new RegExp(t2).source, c.regExpLiteral(t2, r2);
    } }, { key: "serializeValueRawObject", value: function(e3, t2, r2) {
      var n2 = new Map(e3.properties), a2 = /* @__PURE__ */ new Set(), o2 = [], s2 = !e3.mightNotBeLeakedObject(), u2 = function(e4) {
        return s2 && e4 instanceof _.PropertyDescriptor && void 0 === e4.get && void 0 === e4.set;
      };
      if (void 0 !== e3.temporalAlias) return c.objectExpression(o2);
      var f2 = true, d2 = false, h2 = void 0;
      try {
        for (var v2, y2 = e3.properties[Symbol.iterator](); !(f2 = (v2 = y2.next()).done); f2 = true) {
          var m2 = i(v2.value, 2), g2 = m2[0], w2 = m2[1];
          if (void 0 !== w2.descriptor && u2(w2.descriptor)) n2.delete(g2);
          else if (void 0 === w2.pathNode) {
            var E2 = w2.descriptor;
            if (void 0 !== E2 && E2 instanceof _.PropertyDescriptor && void 0 !== E2.value) {
              var S2 = (0, b.getAsPropertyNameExpression)(g2);
              if (this._canEmbedProperty(e3, g2, E2)) {
                var T2 = E2.value;
                if ((0, p.default)(T2 instanceof l.Value), this.residualHeapInspector.canIgnoreProperty(e3, g2)) continue;
                var A2 = T2.mightHaveBeenDeleted(), C2 = this.realm.instantRender.enabled, P2 = void 0;
                C2 ? (this.emitter.getReasonToWaitForDependencies(T2) && this.realm.instantRenderBailout("InstantRender does not yet support cyclical arrays or objects", e3.expressionLocation), P2 = void 0) : P2 = this.emitter.getReasonToWaitForDependencies(T2) || this.emitter.getReasonToWaitForActiveValue(e3, A2);
                var O2 = C2 ? b.emptyExpression : b.voidExpression;
                P2 ? a2.add(g2) : (n2.delete(g2), O2 = this.serializeValue(T2)), o2.push(c.objectProperty(S2, O2));
              } else E2.value instanceof l.Value && E2.value.mightHaveBeenDeleted() && (a2.add(g2), o2.push(c.objectProperty(S2, b.voidExpression)));
            }
          }
        }
      } catch (e4) {
        d2 = true, h2 = e4;
      } finally {
        try {
          f2 || null == y2.return || y2.return();
        } finally {
          if (d2) throw h2;
        }
      }
      return this._emitObjectProperties(e3, n2, false, a2, t2), c.objectExpression(o2);
    } }, { key: "_serializeValueObjectViaConstructor", value: function(e3, t2, r2) {
      var n2 = this, i2 = e3.$Prototype;
      this._emitObjectProperties(e3, e3.properties, true, void 0, t2);
      var a2 = this.serializeValue(r2 || i2);
      return void 0 === e3.temporalAlias ? (this.needsAuxiliaryConstructor = true, c.sequenceExpression([c.assignmentExpression("=", c.memberExpression(b.constructorExpression, c.identifier("prototype")), r2 ? c.memberExpression(a2, c.identifier("prototype")) : a2), c.newExpression(b.constructorExpression, [])])) : (this.emitter.emitAfterWaiting(e3.temporalAlias, [], function() {
        (0, p.default)(void 0 !== e3.temporalAlias);
        var t3 = n2.serializeValue(e3.temporalAlias);
        n2.emitter.emit(c.expressionStatement(c.callExpression(n2.preludeGenerator.memoizeReference("Object.setPrototypeOf"), [t3, a2])));
      }, this.emitter.getBody()), c.objectExpression([]));
    } }, { key: "serializeValueObject", value: function(e3, t2) {
      var r2 = this, n2 = e3.originalConstructor;
      if (void 0 !== n2) {
        var i2 = this.residualHeapValueIdentifiers.getIdentifier(e3);
        return this.emitter.emitNowOrAfterWaitingForDependencies([n2], function() {
          (0, p.default)(void 0 !== n2), (0, p.default)(void 0 !== i2), r2.serializeValue(n2), r2._emitObjectProperties(e3), (0, p.default)("Identifier" === i2.type), r2.residualFunctions.setFunctionPrototype(n2, i2);
        }, this.emitter.getBody()), i2;
      }
      var a2 = e3.getKind();
      switch (a2) {
        case "RegExp":
          return this._serializeValueRegExpObject(e3);
        case "Number":
          var o2 = e3.$NumberData;
          return (0, p.default)(void 0 !== o2), o2.throwIfNotConcreteNumber(), (0, p.default)(o2 instanceof l.NumberValue, "expected number data internal slot to be a number value"), this._emitObjectProperties(e3), c.newExpression(this.preludeGenerator.memoizeReference("Number"), [c.numericLiteral(o2.value)]);
        case "String":
          var s2 = e3.$StringData;
          return (0, p.default)(void 0 !== s2), s2.throwIfNotConcreteString(), (0, p.default)(s2 instanceof l.StringValue, "expected string data internal slot to be a string value"), this._emitObjectProperties(e3), c.newExpression(this.preludeGenerator.memoizeReference("String"), [c.stringLiteral(s2.value)]);
        case "Boolean":
          var u2 = e3.$BooleanData;
          return (0, p.default)(void 0 !== u2), u2.throwIfNotConcreteBoolean(), (0, p.default)(u2 instanceof l.BooleanValue, "expected boolean data internal slot to be a boolean value"), this._emitObjectProperties(e3), c.newExpression(this.preludeGenerator.memoizeReference("Boolean"), [c.booleanLiteral(u2.value)]);
        case "Date":
          var f2 = e3.$DateValue;
          (0, p.default)(void 0 !== f2);
          var d2 = this.serializeValue(f2);
          return this._emitObjectProperties(e3), c.newExpression(this.preludeGenerator.memoizeReference("Date"), [d2]);
        case "Float32Array":
        case "Float64Array":
        case "Int8Array":
        case "Int16Array":
        case "Int32Array":
        case "Uint8Array":
        case "Uint16Array":
        case "Uint32Array":
        case "Uint8ClampedArray":
        case "DataView":
          return this._serializeValueTypedArrayOrDataView(e3);
        case "ArrayBuffer":
          return this._serializeValueArrayBuffer(e3);
        case "ReactElement":
          return void this.residualReactElementSerializer.serializeReactElement(e3);
        case "Map":
        case "WeakMap":
          return this._serializeValueMap(e3);
        case "Set":
        case "WeakSet":
          return this._serializeValueSet(e3);
        default:
          (0, p.default)("Object" === a2, "invariant established by visitor");
          var h2 = e3.$Prototype, v2 = (0, w.getObjectPrototypeMetadata)(this.realm, e3), y2 = v2.skipPrototype, m2 = v2.constructor;
          return void 0 === e3.temporalAlias && h2 !== this.realm.intrinsics.ObjectPrototype && this._findLastObjectPrototype(e3) === this.realm.intrinsics.ObjectPrototype && h2 instanceof l.ObjectValue && !y2 || m2 ? this._serializeValueObjectViaConstructor(e3, y2, m2) : this.serializeValueRawObject(e3, y2, t2);
      }
    } }, { key: "_serializeValueSymbol", value: function(e3) {
      var t2 = [];
      if (e3.$Description instanceof l.Value) {
        var r2 = this.serializeValue(e3.$Description);
        (0, p.default)(r2), t2.push(r2);
      }
      return void 0 !== this.realm.globalSymbolRegistry.find(function(t3) {
        return t3.$Symbol === e3;
      }) ? c.callExpression(this.preludeGenerator.memoizeReference("Symbol.for"), t2) : c.callExpression(this.preludeGenerator.memoizeReference("Symbol"), t2);
    } }, { key: "_serializeValueProxy", value: function(e3) {
      return c.newExpression(this.preludeGenerator.memoizeReference("Proxy"), [this.serializeValue(e3.$ProxyTarget), this.serializeValue(e3.$ProxyHandler)]);
    } }, { key: "_serializeAbstractValueHelper", value: function(e3) {
      var t2 = this, r2 = e3.args.map(function(e4, r3) {
        return t2.serializeValue(e4);
      });
      if ("abstractConcreteUnion" === e3.kind) return (0, p.default)(e3.args.length >= 2), (0, p.default)(e3.args[0] instanceof l.AbstractValue), r2[0];
      if ("explicit conversion to object" === e3.kind) {
        var n2 = r2[0];
        return (0, p.default)(void 0 !== n2), c.callExpression(this.preludeGenerator.memoizeReference("Object.assign"), [n2]);
      }
      if ("template for prototype member expression" === e3.kind) {
        var i2 = this.serializeValue(e3.args[0]), a2 = this.serializeValue(e3.args[1]);
        return c.memberExpression(i2, a2, true);
      }
      (0, p.default)(void 0 !== e3.operationDescriptor);
      var o2 = this.residualOperationSerializer.serializeExpression(e3.operationDescriptor, r2);
      if ("Identifier" === o2.type) {
        var s2 = o2;
        (0, p.default)(!this.realm.derivedIds.has(s2.name) || this.emitter.cannotDeclare() || this.emitter.hasBeenDeclared(e3) || !!this.emitter.getActiveOptimizedFunction(), 'an abstract value with an identifier "'.concat(s2.name, '" was referenced before being declared'));
      }
      return o2;
    } }, { key: "_serializeAbstractValue", value: function(e3) {
      var t2 = this;
      if ((0, p.default)("sentinel member expression" !== e3.kind, "invariant established by visitor"), "conditional" === e3.kind) {
        var r2 = this.conditionalFeasibility.get(e3);
        if ((0, p.default)(void 0 !== r2), r2.t && !r2.f) return this.serializeValue(e3.args[1]);
        if (!r2.t && r2.f) return this.serializeValue(e3.args[2]);
        (0, p.default)(r2.t && r2.f);
      }
      if (e3.hasIdentifier()) return this._serializeAbstractValueHelper(e3);
      var n2 = this.emitter.getReasonToWaitForDependencies(e3.args);
      if (void 0 === n2) return this._serializeAbstractValueHelper(e3);
      this.emitter.emitAfterWaiting(n2, e3.args, function() {
        var r3 = t2._serializeAbstractValueHelper(e3), n3 = t2.getSerializeObjectIdentifier(e3);
        t2._declare(t2.emitter.cannotDeclare(), void 0, "var", n3, r3);
      }, this.emitter.getBody());
    } }, { key: "_serializeEmptyValue", value: function() {
      return this.needsEmptyVar = !this.realm.instantRender.enabled, b.emptyExpression;
    } }, { key: "_serializeValue", value: function(e3) {
      return e3 instanceof l.AbstractValue ? this._serializeAbstractValue(e3) : e3.isIntrinsic() ? this._serializeValueIntrinsic(e3) : e3 instanceof l.EmptyValue ? this._serializeEmptyValue() : e3 instanceof l.UndefinedValue ? b.voidExpression : v.HeapInspector.isLeaf(e3) ? c.valueToNode(e3.serialize()) : e3 instanceof l.ObjectValue ? this._serializeValueObjectBase(e3) : ((0, p.default)(e3 instanceof l.SymbolValue), this._serializeValueSymbol(e3));
    } }, { key: "_serializeValueObjectBase", value: function(e3) {
      var t2, r2 = this;
      if (e3 instanceof l.ProxyValue) return this._serializeValueProxy(e3);
      var n2, i2, a2 = this.residualHeapInspector.getTargetIntegrityCommand(e3);
      if (a2) {
        var o2 = this.emitter.getBody();
        t2 = new D(function() {
          r2.emitter.emitNowOrAfterWaitingForDependencies([e3], function() {
            var t3 = r2.getSerializeObjectIdentifier(e3);
            r2.emitter.emit(c.expressionStatement(c.callExpression(r2.preludeGenerator.memoizeReference("Object." + a2), [t3])));
          }, o2);
        }), this._objectSemaphores.set(e3, t2), n2 = function(n3) {
          void 0 !== t2 && (void 0 !== n3 && (o2 = n3), t2.releaseOne(), r2._objectSemaphores.delete(e3)), t2 = void 0;
        };
      }
      return i2 = (0, u.IsArray)(this.realm, e3) ? this._serializeValueArray(e3) : e3 instanceof l.FunctionValue ? this._serializeValueFunction(e3) : this.serializeValueObject(e3, n2), void 0 !== n2 && n2(), i2;
    } }, { key: "_serializeGlobalBinding", value: function(e3, t2) {
      (0, p.default)(!t2.declarativeEnvironmentRecord), t2.serializedValue || (t2.referentialized = true, "undefined" === e3 ? t2.serializedValue = b.voidExpression : void 0 !== t2.value && (t2.serializedValue = c.identifier(e3), (0, p.default)(void 0 !== t2.value), this.declaredGlobalLets.set(e3, t2.value)));
    } }, { key: "_annotateGeneratorStatements", value: function(e3, t2) {
      var r2 = this, n2 = 'generator "'.concat(e3.getName(), '"'), i2 = this.generatorTree.getParent(e3);
      i2 instanceof f.Generator ? n2 = "".concat(n2, ' with parent "').concat(i2.getName(), '"') : i2 instanceof l.FunctionValue ? n2 = "".concat(n2, " with function parent") : ((0, p.default)("GLOBAL" === i2), n2 = "".concat(n2, " with global parent"));
      var a2 = [V("begin " + n2)], o2 = e3.effectsToApply;
      if (o2) {
        var s2 = function(e4) {
          return r2.residualHeapValueIdentifiers.hasIdentifier(e4) ? r2.residualHeapValueIdentifiers.getIdentifier(e4).name : "?";
        };
        a2.push(V("  has effects: ".concat(o2.createdObjects.size, " created objects, ").concat(o2.modifiedBindings.size, " modified bindings, ").concat(o2.modifiedProperties.size, " modified properties"))), o2.createdObjects.size > 0 && a2.push(V("    created objects: ".concat(Array.from(o2.createdObjects).map(s2).join(", ")))), o2.modifiedBindings.size > 0 && a2.push(V("    modified bindings: ".concat(Array.from(o2.modifiedBindings.keys()).map(function(e4) {
          return e4.name;
        }).join(", ")))), o2.modifiedProperties.size > 0 && a2.push(V("    modified properties: ".concat(Array.from(o2.modifiedProperties.keys()).map(function(e4) {
          return "".concat(s2(e4.object), ".").concat((function(e5) {
            return "string" == typeof e5 ? e5 : e5 instanceof l.Value ? s2(e5) : "?";
          })(e4.key));
        }).join(", "))));
      }
      t2.unshift.apply(t2, a2), t2.push(V("end " + n2));
    } }, { key: "_withGeneratorScope", value: function(e3, t2, r2, n2, i2) {
      var a2 = { type: e3, parentBody: void 0, entries: [], done: false, optimizedFunction: i2 }, o2 = !!(void 0 === i2 ? void 0 : this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(i2)) || "Generator" === e3, s2 = this.emitter.beginEmitting(t2, a2, o2);
      (0, p.default)(!this.activeGeneratorBodies.has(t2)), this.activeGeneratorBodies.set(t2, a2), n2(a2), (0, p.default)(this.activeGeneratorBodies.has(t2)), this.activeGeneratorBodies.delete(t2);
      var u2 = this.emitter.endEmitting(t2, s2, r2, o2).entries;
      return this._options.debugScopes && this._annotateGeneratorStatements(t2, u2), this.getStatistics().generators++, u2;
    } }, { key: "_getContext", value: function() {
      var e3 = this, t2 = { serializeOperationDescriptor: this.residualOperationSerializer.serializeStatement.bind(this.residualOperationSerializer), serializeBinding: this.serializeBinding.bind(this), serializeBindingAssignment: function(r2, n2) {
        var i2 = e3.serializeBinding(r2), a2 = t2.serializeValue(n2);
        return c.expressionStatement(c.assignmentExpression("=", i2, a2));
      }, serializeCondition: function(r2, n2, i2, a2) {
        var o2 = e3.serializeValue(r2), s2 = t2.serializeGenerator(n2, a2), u2 = t2.serializeGenerator(i2, a2);
        return c.ifStatement(o2, c.blockStatement(s2), c.blockStatement(u2));
      }, serializeDebugScopeComment: function(e4) {
        var t3 = c.emptyStatement();
        return t3.leadingComments = [{ type: "BlockComment", value: "declaring ".concat(e4.intrinsicName || "?") }], t3;
      }, serializeReturnValue: function(t3) {
        return c.returnStatement(e3.serializeValue(t3));
      }, serializeGenerator: function(r2, n2) {
        return e3._withGeneratorScope("Generator", r2, n2, function() {
          return r2.serialize(t2);
        });
      }, serializeValue: this.serializeValue.bind(this), initGenerator: function(t3) {
        var r2 = e3._getActiveBodyOfGenerator(t3);
        (0, p.default)(r2 === e3.emitter.getBody(), "generator to init must be current emitter body");
        var n2 = e3.additionalGeneratorRoots.get(t3);
        if (void 0 !== n2) {
          var i2 = true, a2 = false, o2 = void 0;
          try {
            for (var s2, u2 = n2[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
              var l2 = s2.value;
              e3.serializeValue(l2);
            }
          } catch (e4) {
            a2 = true, o2 = e4;
          } finally {
            try {
              i2 || null == u2.return || u2.return();
            } finally {
              if (a2) throw o2;
            }
          }
        }
      }, finalizeGenerator: function(t3) {
        var r2 = e3._getActiveBodyOfGenerator(t3);
        (0, p.default)(r2 === e3.emitter.getBody(), "generator to finalize must be current emitter body"), e3.emitter.finalizeCurrentBody();
      }, emit: function(t3) {
        e3.emitter.emit(t3);
      }, processValues: function(t3) {
        e3.emitter.processValues(t3);
      }, getPropertyAssignmentStatement: this._getPropertyAssignmentStatement.bind(this), emitDefinePropertyBody: this.emitDefinePropertyBody.bind(this, false, void 0), canOmit: function(t3) {
        var r2 = !e3.referencedDeclaredValues.has(t3) && !e3.residualValues.has(t3);
        if (!r2) return false;
        if (t3 instanceof l.ObjectValue && void 0 !== t3.temporalAlias) {
          var n2 = t3.temporalAlias;
          return !e3.referencedDeclaredValues.has(n2) && !e3.residualValues.has(n2);
        }
        return r2;
      }, declare: function(t3) {
        e3.emitter.declare(t3);
      }, emitBindingModification: function(t3) {
        var r2 = e3._getResidualFunctionBinding(t3);
        if (void 0 !== r2) {
          (0, p.default)(r2.referentialized), (0, p.default)(r2.serializedValue, "ResidualFunctionBinding must be referentialized before serializing a mutation to it.");
          var n2 = t3.value;
          (0, p.default)(n2);
          var i2 = r2.serializedValue;
          (0, p.default)(c.isLVal(i2), "Referentialized values must be LVals even though serializedValues may be any Expression");
          var a2 = e3.serializeValue(n2);
          e3.emitter.emit(c.expressionStatement(c.assignmentExpression("=", i2, a2)));
        }
      }, emitPropertyModification: function(t3) {
        var r2 = t3.descriptor, i2 = t3.object;
        if ((0, p.default)(i2 instanceof l.ObjectValue), e3.residualValues.has(i2)) {
          var a2 = t3.key;
          (0, p.default)(void 0 !== a2, "established by visitor");
          var o2 = [];
          void 0 !== r2 && o2.push.apply(o2, n(e3._getDescriptorValues(r2))), o2.push(i2), a2 instanceof l.Value && o2.push(a2), e3.emitter.emitNowOrAfterWaitingForDependencies(o2, function() {
            e3.serializeValue(i2), e3._emitProperty(i2, a2, r2, true);
          }, e3.emitter.getBody());
        }
      }, options: this._options };
      return t2;
    } }, { key: "_shouldBeWrapped", value: function(e3) {
      for (var t2 = 0; t2 < e3.length; t2++) {
        var r2 = e3[t2];
        if ("ExpressionStatement" !== r2.type) {
          if ("VariableDeclaration" === r2.type || "FunctionDeclaration" === r2.type) return true;
          if ("BlockStatement" === r2.type) {
            if (this._shouldBeWrapped(r2.body)) return true;
          } else if ("IfStatement" === r2.type) {
            if (r2.alternate && this._shouldBeWrapped(r2.alternate.body)) return true;
            if (r2.consequent && this._shouldBeWrapped(r2.consequent.body)) return true;
          }
        }
      }
      return false;
    } }, { key: "_serializeAdditionalFunctionGeneratorAndEffects", value: function(e3, t2, r2) {
      var i2 = this;
      return this._withGeneratorScope("OptimizedFunction", e3, void 0, function(a2) {
        var o2 = r2.generator;
        (0, p.default)(o2 === e3), o2.serialize(i2._getContext()), i2.realm.withEffectsAppliedInGlobalEnv(function() {
          var e4, r3 = i2.residualReactElementSerializer.serializeLazyHoistedNodes(t2);
          return (e4 = i2.mainBody.entries).push.apply(e4, n(r3)), null;
        }, r2.effects);
      }, t2);
    } }, { key: "_serializeAdditionalFunction", value: function(e3, t2) {
      var r2 = this, i2 = t2.effects, a2 = t2.transforms, o2 = t2.generator, s2 = t2.additionalRoots;
      if (this.additionalFunctionValueInfos.has(e3) && !this.rewrittenAdditionalFunctions.has(e3)) {
        this.rewrittenAdditionalFunctions.set(e3, []);
        var u2 = true, c2 = false, f2 = void 0;
        try {
          for (var d2, h2 = s2[Symbol.iterator](); !(u2 = (d2 = h2.next()).done); u2 = true) {
            var v2 = d2.value;
            this.serializeValue(v2);
          }
        } catch (e4) {
          c2 = true, f2 = e4;
        } finally {
          try {
            u2 || null == h2.return || h2.return();
          } finally {
            if (c2) throw f2;
          }
        }
        var y2 = i2.createdObjects;
        new Set(n(y2).filter(function(e4) {
          return e4 instanceof l.FunctionValue;
        })).forEach(function(e4) {
          return r2.additionalFunctionValueNestedFunctions.add(e4);
        });
        var m2 = this._serializeAdditionalFunctionGeneratorAndEffects(o2, e3, t2);
        (0, p.default)(e3 instanceof l.ECMAScriptSourceFunctionValue);
        var b2 = true, g2 = false, w2 = void 0;
        try {
          for (var E2, S2 = a2[Symbol.iterator](); !(b2 = (E2 = S2.next()).done); b2 = true) {
            (0, E2.value)(m2);
          }
        } catch (e4) {
          g2 = true, w2 = e4;
        } finally {
          try {
            b2 || null == S2.return || S2.return();
          } finally {
            if (g2) throw w2;
          }
        }
        this.rewrittenAdditionalFunctions.set(e3, m2);
      }
    } }, { key: "prepareAdditionalFunctionValues", value: function() {
      var e3 = true, t2 = false, r2 = void 0;
      try {
        for (var n2, a2 = this.additionalFunctionValuesAndEffects.entries()[Symbol.iterator](); !(e3 = (n2 = a2.next()).done); e3 = true) {
          var o2 = i(n2.value, 2), s2 = o2[0], u2 = o2[1].generator;
          (0, p.default)(!this.additionalFunctionGenerators.has(s2)), this.additionalFunctionGenerators.set(s2, u2);
        }
      } catch (e4) {
        t2 = true, r2 = e4;
      } finally {
        try {
          e3 || null == a2.return || a2.return();
        } finally {
          if (t2) throw r2;
        }
      }
    } }, { key: "postGeneratorSerialization", value: function() {
    } }, { key: "serialize", value: function() {
      var e3 = this;
      this.prepareAdditionalFunctionValues(), this.generator.serialize(this._getContext()), this.getStatistics().generators++, (0, p.default)(this.emitter.declaredCount() <= this.realm.derivedIds.size);
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var a2, o2 = this.modules.initializedModules[Symbol.iterator](); !(t2 = (a2 = o2.next()).done); t2 = true) {
          var s2 = i(a2.value, 2), u2 = s2[0], l2 = s2[1];
          this.requireReturns.set(u2, (0, P.getReplacement)(this.serializeValue(l2), l2));
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == o2.return || o2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      var f2 = true, d2 = false, h2 = void 0;
      try {
        for (var v2, y2 = this.declaredGlobalLets[Symbol.iterator](); !(f2 = (v2 = y2.next()).done); f2 = true) {
          var g2 = i(v2.value, 2), w2 = g2[0], E2 = g2[1];
          this.emitter.emit(c.expressionStatement(c.assignmentExpression("=", c.identifier(w2), this.serializeValue(E2))));
        }
      } catch (e4) {
        d2 = true, h2 = e4;
      } finally {
        try {
          f2 || null == y2.return || y2.return();
        } finally {
          if (d2) throw h2;
        }
      }
      this.postGeneratorSerialization(), Array.prototype.push.apply(this.prelude, this.preludeGenerator.prelude), this.emitter.finalize(), this.residualFunctions.residualFunctionInitializers.factorifyInitializers(this.factoryNameGenerator);
      var S2 = this.residualFunctions.spliceFunctions(this.rewrittenAdditionalFunctions), T2 = S2.unstrictFunctionBodies, A2 = S2.strictFunctionBodies, C2 = c.directive(c.directiveLiteral("use strict")), O2 = [];
      if (this.realm.isStrict || T2.length || !A2.length) {
        if (T2.length && A2.length) {
          var x2 = true, _2 = false, V2 = void 0;
          try {
            e: for (var D2, N2 = A2[Symbol.iterator](); !(x2 = (D2 = N2.next()).done); x2 = true) {
              var I = D2.value;
              if (c.isFunctionExpression(I)) {
                var k = I;
                if (k.body.directives) {
                  var j = true, F = false, R = void 0;
                  try {
                    for (var M, B = k.body.directives[Symbol.iterator](); !(j = (M = B.next()).done); j = true) {
                      if ("use strict" === M.value.value.value) continue e;
                    }
                  } catch (e4) {
                    F = true, R = e4;
                  } finally {
                    try {
                      j || null == B.return || B.return();
                    } finally {
                      if (F) throw R;
                    }
                  }
                } else k.body.directives = [];
                k.body.directives.unshift(C2);
              }
            }
          } catch (e4) {
            _2 = true, V2 = e4;
          } finally {
            try {
              x2 || null == N2.return || N2.return();
            } finally {
              if (_2) throw V2;
            }
          }
        }
      } else O2.push(C2);
      this.needsEmptyVar && this.prelude.push(c.variableDeclaration("var", [c.variableDeclarator(b.emptyExpression, c.objectExpression([]))])), this.needsAuxiliaryConstructor && this.prelude.push(c.variableDeclaration("var", [c.variableDeclarator(b.constructorExpression, c.functionExpression(null, [], c.blockStatement([])))]));
      var L = this.prelude.concat(this.emitter.getBody().entries);
      (0, m.factorifyObjects)(L, this.factoryNameGenerator);
      var $ = [];
      if (this.preludeGenerator.declaredGlobals.size > 0 && $.push(c.variableDeclaration("var", Array.from(this.preludeGenerator.declaredGlobals).map(function(e4) {
        return c.variableDeclarator(c.identifier(e4));
      }))), this.declaredGlobalLets.size > 0 && $.push(c.variableDeclaration("let", Array.from(this.declaredGlobalLets.keys()).map(function(e4) {
        return c.variableDeclarator(c.identifier(e4));
      }))), L.length) if (this.realm.isCompatibleWith("node-source-maps") && $.push(c.expressionStatement(c.callExpression(c.memberExpression(c.callExpression(c.identifier("require"), [c.stringLiteral("source-map-support")]), c.identifier("install")), []))), this._shouldBeWrapped(L)) {
        var G = c.thisExpression(), z = c.functionExpression(null, [], c.blockStatement(L, O2)), U = this.preludeGenerator.usesThis ? c.callExpression(c.memberExpression(z, c.identifier("call")), [G]) : c.callExpression(z, []);
        $.push(c.expressionStatement(U));
      } else Array.prototype.push.apply($, L);
      this.serializedValues.size === this.residualValues.size && Array.from(this.serializedValues).every(function(t3) {
        return e3.residualValues.has(t3);
      }) || (this._logSerializedResidualMismatches(), (0, p.default)(false, "serialized " + this.serializedValues.size + " of " + this.residualValues.size));
      var W = true, q = false, H = void 0;
      try {
        for (var K, J = this.residualFunctionInstances.values()[Symbol.iterator](); !(W = (K = J.next()).done); W = true) {
          var Y = K.value;
          this.referentializer.cleanInstance(Y);
        }
      } catch (e4) {
        q = true, H = e4;
      } finally {
        try {
          W || null == J.return || J.return();
        } finally {
          if (q) throw H;
        }
      }
      var X = [];
      return this.realm.isStrict && X.push(C2), c.file(c.program($, X));
    } }, { key: "_logScopes", value: function(e3) {
      console.log("  referenced by ".concat(e3.size, " scopes"));
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = e3[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value;
          if (o2 instanceof f.Generator) {
            for (var s2 = ""; o2 instanceof f.Generator; o2 = this.generatorTree.getParent(o2)) s2 += "=>" + o2.getName();
            console.log("      ".concat(s2));
          } else (0, p.default)(o2 instanceof l.FunctionValue), console.log("      ".concat(o2.__originalName || JSON.stringify(o2.expressionLocation) || o2.constructor.name));
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }, { key: "_logSerializedResidualMismatches", value: function() {
      var e3 = this, t2 = function(t3) {
        console.log((0, O.describeValue)(t3));
        var r3 = e3.residualValues.get(t3);
        void 0 !== r3 && e3._logScopes(r3);
      };
      console.log("=== serialized but not visited values");
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = this.serializedValues[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var s2 = a2.value;
          this.residualValues.has(s2) || t2(s2);
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
      console.log("=== visited but not serialized values");
      var u2 = true, l2 = false, c2 = void 0;
      try {
        for (var f2, p2 = this.residualValues.keys()[Symbol.iterator](); !(u2 = (f2 = p2.next()).done); u2 = true) {
          var d2 = f2.value;
          this.serializedValues.has(d2) || t2(d2);
        }
      } catch (e4) {
        l2 = true, c2 = e4;
      } finally {
        try {
          u2 || null == p2.return || p2.return();
        } finally {
          if (l2) throw c2;
        }
      }
    } }]), e2;
  })();
  t.ResidualHeapSerializer = N;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ReactEquivalenceSet = t.temporalAliasSymbol = void 0;
  r(8);
  var a = r(0), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(14);
  r(145);
  var u = Symbol("temporalAlias");
  t.temporalAliasSymbol = u;
  var l = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.residualReactElementVisitor = r2, this.objectRoot = /* @__PURE__ */ new Map(), this.arrayRoot = /* @__PURE__ */ new Map(), this.reactElementRoot = /* @__PURE__ */ new Map(), this.reactPropsRoot = /* @__PURE__ */ new Map(), this.temporalAliasRoot = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "_createNode", value: function() {
      return { map: /* @__PURE__ */ new Map(), value: null };
    } }, { key: "getKey", value: function(e3, t2, r2) {
      return t2.has(e3) || t2.set(e3, /* @__PURE__ */ new Map()), t2.get(e3);
    } }, { key: "_getValue", value: function(e3, t2, r2) {
      return e3 instanceof a.StringValue || e3 instanceof a.NumberValue ? e3 = e3.value : e3 instanceof a.AbstractValue ? e3 = this.residualReactElementVisitor.residualHeapVisitor.equivalenceSet.add(e3) : e3 instanceof a.ArrayValue ? e3 = this._getArrayValue(e3, r2) : e3 instanceof a.ObjectValue && !(e3 instanceof a.FunctionValue) && (e3 = this._getObjectValue(e3, r2)), t2.has(e3) || t2.set(e3, this._createNode()), t2.get(e3);
    } }, { key: "_getObjectValue", value: function(e3, t2) {
      if (t2.has(e3)) return e3;
      if (t2.add(e3), (0, s.isReactElement)(e3)) return this.residualReactElementVisitor.reactElementEquivalenceSet.add(e3);
      var r2, i2 = this.objectRoot, a2 = true, o2 = false, l2 = void 0;
      try {
        for (var c, f = e3.properties[Symbol.iterator](); !(a2 = (c = f.next()).done); a2 = true) {
          var p = n(c.value, 1)[0];
          i2 = this.getKey(p, i2, t2), i2 = (r2 = this.getEquivalentPropertyValue(e3, p, i2, t2)).map;
        }
      } catch (e4) {
        o2 = true, l2 = e4;
      } finally {
        try {
          a2 || null == f.return || f.return();
        } finally {
          if (o2) throw l2;
        }
      }
      var d = true, h = false, v = void 0;
      try {
        for (var y, m = e3.symbols[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
          var b = n(y.value, 1)[0];
          i2 = this.getKey(b, i2, t2);
          var g = (0, s.getProperty)(this.realm, e3, b);
          i2 = (r2 = this._getValue(g, i2, t2)).map;
        }
      } catch (e4) {
        h = true, v = e4;
      } finally {
        try {
          d || null == m.return || m.return();
        } finally {
          if (h) throw v;
        }
      }
      var w = e3.temporalAlias;
      return void 0 !== w && (i2 = this.getKey(u, i2, t2), r2 = this.getTemporalAliasValue(w, i2, t2)), void 0 === r2 ? void 0 === w && void 0 !== this.realm.react.emptyObject ? this.realm.react.emptyObject : e3 : (null === r2.value && (r2.value = e3), r2.value);
    } }, { key: "_getTemporalValue", value: function(e3, t2) {
      if (!this.residualReactElementVisitor.wasTemporalAliasDeclaredInCurrentScope(e3)) return e3;
      var r2 = this.realm.getTemporalOperationEntryFromDerivedValue(e3);
      if (void 0 === r2) return e3;
      var n2 = r2.args;
      if (0 === n2.length) return e3;
      for (var i2, u2 = this.temporalAliasRoot, l2 = 0; l2 < n2.length; l2++) {
        var c = n2[l2], f = void 0;
        if (!(c instanceof a.ObjectValue && c.temporalAlias === e3)) {
          if (c instanceof a.ObjectValue && (0, s.isReactElement)(c)) c !== (f = this.residualReactElementVisitor.reactElementEquivalenceSet.add(c)) && (n2[l2] = f);
          else if (c instanceof a.AbstractObjectValue && !c.values.isTop() && "conditional" !== c.kind) {
            void 0 !== this.realm.getTemporalOperationEntryFromDerivedValue(c) && (f = this._getTemporalValue(c, t2), (0, o.default)(f instanceof a.AbstractObjectValue), f !== c && (n2[l2] = f));
          } else c instanceof a.AbstractValue && c !== (f = this.residualReactElementVisitor.residualHeapVisitor.equivalenceSet.add(c)) && (n2[l2] = f);
          u2 = this.getKey(l2, u2, t2), (0, o.default)(c instanceof a.Value && (f instanceof a.Value || void 0 === f)), u2 = (i2 = this._getValue(f || c, u2, t2)).map;
        }
      }
      return (0, o.default)(void 0 !== i2), null === i2.value && (i2.value = e3), this.residualReactElementVisitor.wasTemporalAliasDeclaredInCurrentScope(i2.value) ? i2.value : (i2.value = e3, e3);
    } }, { key: "getTemporalAliasValue", value: function(e3, t2, r2) {
      var n2 = this._getTemporalValue(e3, r2);
      return (0, o.default)(n2 instanceof a.AbstractObjectValue), t2.has(n2) || t2.set(n2, this._createNode()), t2.get(n2);
    } }, { key: "_getArrayValue", value: function(e3, t2) {
      if (t2.has(e3)) return e3;
      if (e3.intrinsicName) return e3;
      t2.add(e3);
      var r2 = (0, s.getProperty)(this.realm, e3, "length");
      (0, o.default)(r2 instanceof a.NumberValue);
      for (var n2, i2 = r2.value, u2 = this.arrayRoot, l2 = 0; l2 < i2; l2++) u2 = this.getKey(l2, u2, t2), u2 = (n2 = this.getEquivalentPropertyValue(e3, "" + l2, u2, t2)).map;
      return void 0 === n2 ? void 0 !== this.realm.react.emptyArray ? this.realm.react.emptyArray : e3 : (null === n2.value && (n2.value = e3), n2.value);
    } }, { key: "getEquivalentPropertyValue", value: function(e3, t2, r2, n2) {
      var i2, o2 = (0, s.getProperty)(this.realm, e3, t2), u2 = e3.mightBeFinalObject();
      return o2 instanceof a.ObjectValue && (0, s.isReactElement)(o2) ? i2 = this.residualReactElementVisitor.reactElementEquivalenceSet.add(o2) : o2 instanceof a.ObjectValue && (0, s.isReactPropsObject)(o2) ? i2 = this.residualReactElementVisitor.reactPropsEquivalenceSet.add(o2) : o2 instanceof a.AbstractValue && (i2 = this.residualReactElementVisitor.residualHeapVisitor.equivalenceSet.add(o2)), void 0 !== i2 ? (o2 !== i2 && u2 && (0, s.hardModifyReactObjectPropertyBinding)(this.realm, e3, t2, i2), r2.has(i2) || r2.set(i2, this._createNode()), r2.get(i2)) : this._getValue(o2, r2, n2);
    } }]), e2;
  })();
  t.ReactEquivalenceSet = l;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.canHoistFunction = u, t.canHoistReactElement = c, t.determineIfReactElementCanBeHoisted = function(e2, t2, r2) {
    c(e2, t2, r2);
  };
  r(8);
  var i = r(0), a = r(3), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(14);
  r(49);
  function u(e2, t2, r2, a2) {
    if (e2.react.hoistableFunctions.has(t2)) return e2.react.hoistableFunctions.get(t2);
    if (void 0 === r2) return false;
    var s2 = r2.functionInstances.get(t2);
    if (void 0 !== s2) {
      (0, o.default)(s2.residualFunctionBindings instanceof Map);
      var u2 = s2.residualFunctionBindings, c2 = true, f = false, p = void 0;
      try {
        for (var d, h = u2[Symbol.iterator](); !(c2 = (d = h.next()).done); c2 = true) {
          var v = n(d.value, 2)[1], y = v.declarativeEnvironmentRecord, m = v.value;
          if (null !== y) {
            if (void 0 === m) return false;
            if ((0, o.default)(m instanceof i.Value), !l(e2, m, r2, a2)) return false;
          }
        }
      } catch (e3) {
        f = true, p = e3;
      } finally {
        try {
          c2 || null == h.return || h.return();
        } finally {
          if (f) throw p;
        }
      }
      if (t2 instanceof i.ECMAScriptSourceFunctionValue) {
        var b = t2.$ECMAScriptCode, g = r2.functionInfos.get(b);
        if (g && g.unbound.size > 0) return false;
      }
      return e2.react.hoistableFunctions.set(t2, true), true;
    }
    return e2.react.hoistableFunctions.set(t2, false), false;
  }
  function l(e2, t2, r2, f) {
    if (f.has(t2)) return false;
    f.add(t2);
    var p = false;
    return t2 instanceof i.ArrayValue ? p = (function(e3, t3, r3, n2) {
      if (t3.intrinsicName) return false;
      var s2 = (0, a.Get)(e3, t3, "length");
      (0, o.default)(s2 instanceof i.NumberValue);
      for (var u2 = s2.value, c2 = 0; c2 < u2; c2++) if (!l(e3, (0, a.Get)(e3, t3, "" + c2), r3, n2)) return false;
      return true;
    })(e2, t2, r2, f) : t2 instanceof i.FunctionValue ? p = u(e2, t2, r2, f) : t2 instanceof i.ObjectValue ? p = (function(e3, t3, r3, i2) {
      if ((0, s.isReactElement)(t3)) return c(e3, t3, r3, i2);
      var o2 = true, u2 = false, f2 = void 0;
      try {
        for (var p2, d = t3.properties[Symbol.iterator](); !(o2 = (p2 = d.next()).done); o2 = true) {
          var h = n(p2.value, 1)[0];
          if (!l(e3, (0, a.Get)(e3, t3, h), r3, i2)) return false;
        }
      } catch (e4) {
        u2 = true, f2 = e4;
      } finally {
        try {
          o2 || null == d.return || d.return();
        } finally {
          if (u2) throw f2;
        }
      }
      var v = true, y = false, m = void 0;
      try {
        for (var b, g = t3.symbols[Symbol.iterator](); !(v = (b = g.next()).done); v = true) {
          var w = n(b.value, 1)[0];
          if (!l(e3, (0, a.Get)(e3, t3, w), r3, i2)) return false;
        }
      } catch (e4) {
        y = true, m = e4;
      } finally {
        try {
          v || null == g.return || g.return();
        } finally {
          if (y) throw m;
        }
      }
      return true;
    })(e2, t2, r2, f) : t2 instanceof i.AbstractValue ? p = false : p = true, f.delete(t2), p;
  }
  function c(e2, t2, r2, n2) {
    if (e2.react.hoistableReactElements.has(t2)) return e2.react.hoistableReactElements.get(t2);
    if (void 0 === r2) return false;
    var a2 = (0, s.getProperty)(e2, t2, "type"), o2 = (0, s.getProperty)(e2, t2, "ref"), u2 = (0, s.getProperty)(e2, t2, "key"), c2 = (0, s.getProperty)(e2, t2, "props");
    return void 0 === n2 && (n2 = /* @__PURE__ */ new Set()).add(t2), l(e2, a2, r2, n2) && !(o2 instanceof String || o2 instanceof i.AbstractValue) && l(e2, o2, r2, n2) && l(e2, u2, r2, n2) && !c2.isPartialObject() && l(e2, c2, r2, n2) ? (e2.react.hoistableReactElements.set(t2, true), true) : (e2.react.hoistableReactElements.set(t2, false), false);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createAndValidateArgModel = function(e2, t2) {
    var r2;
    if (t2 instanceof a.StringValue) try {
      var n2 = JSON.parse(t2.value);
      return n2.universe || (r2 = new o.CompilerDiagnostic("ArgModel must contain a universe property containing a ShapeUniverse", e2.currentLocation, "PP1008", "FatalError")), n2.arguments || (r2 = new o.CompilerDiagnostic("ArgModel must contain an arguments property.", e2.currentLocation, "PP1008", "FatalError")), n2;
    } catch (t3) {
      r2 = new o.CompilerDiagnostic("Failed to parse model for arguments", e2.currentLocation, "PP1008", "FatalError");
    }
    else r2 = new o.CompilerDiagnostic("String expected as a model", e2.currentLocation, "PP1008", "FatalError");
    if (void 0 !== r2 && "Recover" !== e2.handleError(r2)) throw new o.FatalError();
    return;
  }, t.ShapeInformation = void 0;
  var i = r(2), a = r(0), o = r(4);
  r(8);
  var s = (function() {
    function e2(t2, r2, n2, i2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._descriptor = t2, this._parentDescriptor = r2, this._parentKey = n2, this._universe = i2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getGetter", value: function() {
      return void 0 !== this._parentDescriptor && void 0 !== this._parentDescriptor.graphQLType && "object" === this._parentDescriptor.kind ? this._getAssociatedGetter() : void 0;
    } }, { key: "getAbstractType", value: function() {
      return this._isOptional() || "void" === this._descriptor.jsType || "null" === this._descriptor.jsType ? a.Value : i.Utils.getTypeFromName(this._descriptor.jsType) || a.Value;
    } }, { key: "getPropertyShape", value: function(t2) {
      var r2 = this._getInformationForProperty(t2);
      return void 0 !== r2 ? e2._resolveLinksAndWrap(r2.shape, this._descriptor, t2, this._universe) : void 0;
    } }, { key: "_isOptional", value: function() {
      if (void 0 !== this._parentDescriptor) switch (this._parentDescriptor.kind) {
        case "object":
          return void 0 !== this._parentKey && void 0 !== this._parentDescriptor.properties[this._parentKey] ? this._parentDescriptor.properties[this._parentKey].optional : void 0;
        case "array":
          return void 0 !== this._parentDescriptor.elementShape ? this._parentDescriptor.elementShape.optional : void 0;
        default:
          return;
      }
    } }, { key: "_getInformationForProperty", value: function(t2) {
      switch (this._descriptor.kind) {
        case "object":
          return this._descriptor.properties[t2];
        case "array":
          switch (t2) {
            case "length":
              return e2._arrayLengthProperty;
            case "prototype":
              return;
            default:
              return this._descriptor.elementShape;
          }
        default:
          return;
      }
    } }, { key: "_getAssociatedGetter", value: function() {
      switch (this._descriptor.kind) {
        case "object":
          return "tree";
        case "array":
          var t2 = void 0 !== this._descriptor.elementShape ? this._descriptor.elementShape.shape : void 0, r2 = e2._resolveLinksAndWrap(t2, this._descriptor, void 0, this._universe);
          if (void 0 === r2) return;
          switch (r2._getAssociatedGetter()) {
            case "bool":
              return "bool_list";
            case "double":
              return "double_list";
            case "int":
              return "int_list";
            case "time":
              return "time_list";
            case "string":
              return "string_list";
            case "tree":
              return "tree_list";
            default:
              return;
          }
        case "scalar":
          switch (this._descriptor.graphQLType) {
            case "Color":
            case "File":
            case "ID":
            case "String":
            case "Url":
              return "string";
            case "Int":
            case "Time":
              return "int";
            case "Float":
              return "double";
            case "Boolean":
              return "bool";
            default:
              return;
          }
        case "enum":
          return "string";
        default:
          return;
      }
    } }], [{ key: "createForArgument", value: function(t2, r2) {
      return void 0 !== t2 ? e2._resolveLinksAndWrap(t2.universe[t2.arguments[r2]], void 0, void 0, t2.universe) : void 0;
    } }, { key: "createForReactComponentProps", value: function(t2) {
      return void 0 !== t2 ? e2._resolveLinksAndWrap(t2.universe[t2.component.props], void 0, void 0, t2.universe) : void 0;
    } }, { key: "_resolveLinksAndWrap", value: function(t2, r2, n2, i2) {
      for (; t2 && "link" === t2.kind; ) t2 = i2[t2.shapeName];
      return void 0 !== t2 ? new e2(t2, r2, n2, i2) : void 0;
    } }]), e2;
  })();
  t.ShapeInformation = s, (function(e2, t2, r2) {
    t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2;
  })(s, "_arrayLengthProperty", { shape: { kind: "scalar", jsType: "integral" }, optional: false });
}, function(e, t, r) {
  "use strict";
  var n = r(465);
  e.exports = function(e2) {
    var t2 = new e2.constructor(e2.byteLength);
    return new n(t2).set(new n(e2)), t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(471), i = r(104), a = r(470), o = r(469), s = r(468), u = r(51), l = r(165), c = l(n), f = l(i), p = l(a), d = l(o), h = l(s), v = u;
  (n && "[object DataView]" != v(new n(new ArrayBuffer(1))) || i && "[object Map]" != v(new i()) || a && "[object Promise]" != v(a.resolve()) || o && "[object Set]" != v(new o()) || s && "[object WeakMap]" != v(new s())) && (v = function(e2) {
    var t2 = u(e2), r2 = "[object Object]" == t2 ? e2.constructor : void 0, n2 = r2 ? l(r2) : "";
    if (n2) switch (n2) {
      case c:
        return "[object DataView]";
      case f:
        return "[object Map]";
      case p:
        return "[object Promise]";
      case d:
        return "[object Set]";
      case h:
        return "[object WeakMap]";
    }
    return t2;
  }), e.exports = v;
}, function(e, t, r) {
  "use strict";
  var n = r(475), i = r(153), a = Object.prototype.propertyIsEnumerable, o = Object.getOwnPropertySymbols, s = o ? function(e2) {
    return null == e2 ? [] : (e2 = Object(e2), n(o(e2), function(t2) {
      return a.call(e2, t2);
    }));
  } : i;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = r(40)(r(27), "Map");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  function i() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(534));
    return i = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Identifier = function(e2) {
    var t2 = this;
    this.exactSource(e2.loc, function() {
      t2.word(e2.name);
    });
  }, t.SpreadElement = t.RestElement = function(e2) {
    this.token("..."), this.print(e2.argument, e2);
  }, t.ObjectPattern = t.ObjectExpression = function(e2) {
    var t2 = e2.properties;
    this.token("{"), this.printInnerComments(e2), t2.length && (this.space(), this.printList(t2, e2, { indent: true, statement: true }), this.space());
    this.token("}");
  }, t.ObjectMethod = function(e2) {
    this.printJoin(e2.decorators, e2), this._methodHead(e2), this.space(), this.print(e2.body, e2);
  }, t.ObjectProperty = function(e2) {
    if (this.printJoin(e2.decorators, e2), e2.computed) this.token("["), this.print(e2.key, e2), this.token("]");
    else {
      if (n().isAssignmentPattern(e2.value) && n().isIdentifier(e2.key) && e2.key.name === e2.value.left.name) return void this.print(e2.value, e2);
      if (this.print(e2.key, e2), e2.shorthand && n().isIdentifier(e2.key) && n().isIdentifier(e2.value) && e2.key.name === e2.value.name) return;
    }
    this.token(":"), this.space(), this.print(e2.value, e2);
  }, t.ArrayPattern = t.ArrayExpression = function(e2) {
    var t2 = e2.elements, r2 = t2.length;
    this.token("["), this.printInnerComments(e2);
    for (var n2 = 0; n2 < t2.length; n2++) {
      var i2 = t2[n2];
      i2 ? (n2 > 0 && this.space(), this.print(i2, e2), n2 < r2 - 1 && this.token(",")) : this.token(",");
    }
    this.token("]");
  }, t.RegExpLiteral = function(e2) {
    this.word("/".concat(e2.pattern, "/").concat(e2.flags));
  }, t.BooleanLiteral = function(e2) {
    this.word(e2.value ? "true" : "false");
  }, t.NullLiteral = function() {
    this.word("null");
  }, t.NumericLiteral = function(e2) {
    var t2 = this.getPossibleRaw(e2), r2 = e2.value + "";
    null == t2 ? this.number(r2) : this.format.minified ? this.number(t2.length < r2.length ? t2 : r2) : this.number(t2);
  }, t.StringLiteral = function(e2) {
    var t2 = this.getPossibleRaw(e2);
    if (!this.format.minified && null != t2) return void this.token(t2);
    var r2 = this.format.jsescOption;
    this.format.jsonCompatibleStrings && (r2.json = true);
    var n2 = (0, i().default)(e2.value, r2);
    return this.token(n2);
  }, t.BigIntLiteral = function(e2) {
    var t2 = this.getPossibleRaw(e2);
    if (!this.format.minified && null != t2) return void this.token(t2);
    this.token(e2.value);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(561).Symbol;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    var t2 = n(e2);
    return null != e2 && ("object" == t2 || "function" == t2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2, r2) {
    return t2 && a(e2.prototype, t2), r2 && a(e2, r2), e2;
  }
  function s(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function u(e2, t2, r2) {
    return (u = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = l(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function l(e2) {
    return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function c(e2, t2) {
    return (c = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    return new h(e2, t2, r2).generate();
  }, t.CodeGenerator = void 0;
  var f = d(r(572)), p = d(r(565));
  function d(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var h = (function(e2) {
    function t2(e3) {
      var r2, n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, a2 = arguments.length > 2 ? arguments[2] : void 0;
      i(this, t2);
      var o2 = (function(e4, t3) {
        var r3 = { auxiliaryCommentBefore: t3.auxiliaryCommentBefore, auxiliaryCommentAfter: t3.auxiliaryCommentAfter, shouldPrintComment: t3.shouldPrintComment, retainLines: t3.retainLines, retainFunctionParens: t3.retainFunctionParens, comments: null == t3.comments || t3.comments, compact: t3.compact, minified: t3.minified, concise: t3.concise, jsonCompatibleStrings: t3.jsonCompatibleStrings, indent: { adjustMultilineComment: true, style: "  ", base: 0 }, decoratorsBeforeExport: !!t3.decoratorsBeforeExport, jsescOption: Object.assign({ quotes: "double", wrap: true }, t3.jsescOption) };
        r3.minified ? (r3.compact = true, r3.shouldPrintComment = r3.shouldPrintComment || function() {
          return r3.comments;
        }) : r3.shouldPrintComment = r3.shouldPrintComment || function(e5) {
          return r3.comments || e5.indexOf("@license") >= 0 || e5.indexOf("@preserve") >= 0;
        };
        "auto" === r3.compact && (r3.compact = e4.length > 5e5, r3.compact && console.error("[BABEL] Note: The code generator has deoptimised the styling of " + "".concat(t3.filename, " as it exceeds the max of ", "500KB", ".")));
        r3.compact && (r3.indent.adjustMultilineComment = false);
        return r3;
      })(a2, n2), u2 = n2.sourceMaps ? new f.default(n2, a2) : null;
      return (r2 = s(this, l(t2).call(this, o2, u2))).ast = e3, r2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && c(e3, t3);
    })(t2, p.default), o(t2, [{ key: "generate", value: function() {
      return u(l(t2.prototype), "generate", this).call(this, this.ast);
    } }]), t2;
  })();
  var v = (function() {
    function e2(t2, r2, n2) {
      i(this, e2), this._generator = new h(t2, r2, n2);
    }
    return o(e2, [{ key: "generate", value: function() {
      return this._generator.generate();
    } }]), e2;
  })();
  t.CodeGenerator = v;
}, function(e, t, r) {
  "use strict";
  var n = r(173), i = r(576), a = r(82);
  e.exports = function(e2) {
    return a(e2) ? n(e2, true) : i(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype;
  e.exports = function(e2) {
    var t2 = e2 && e2.constructor;
    return e2 === ("function" == typeof t2 && t2.prototype || n);
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3) {
      return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var i = r(178), a = "object" == n(t) && t && !t.nodeType && t, o = a && "object" == n(e2) && e2 && !e2.nodeType && e2, s = o && o.exports === a && i.process, u = (function() {
      try {
        var e3 = o && o.require && o.require("util").types;
        return e3 || s && s.binding && s.binding("util");
      } catch (e4) {
      }
    })();
    e2.exports = u;
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return function(t2) {
      return e2(t2);
    };
  };
}, function(e, t, r) {
  "use strict";
  var n = r(613), i = r(82), a = r(607), o = r(176), s = r(604), u = Math.max;
  e.exports = function(e2, t2, r2, l) {
    e2 = i(e2) ? e2 : s(e2), r2 = r2 && !l ? o(r2) : 0;
    var c = e2.length;
    return r2 < 0 && (r2 = u(c + r2, 0)), a(e2) ? r2 <= c && e2.indexOf(t2, r2) > -1 : !!c && n(e2, t2, r2) > -1;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.EnqueueJob = h, t.NewPromiseCapability = function(e2, t2) {
    if (false === (0, c.IsConstructor)(e2, t2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsConstructor(C) is false");
    (0, d.default)(t2 instanceof a.ObjectValue);
    var r2 = { promise: e2.intrinsics.undefined, resolve: e2.intrinsics.undefined, reject: e2.intrinsics.undefined }, i2 = new a.NativeFunctionValue(e2, void 0, void 0, 2, function(t3, a2) {
      var o3 = n(a2, 2), s2 = o3[0], u2 = o3[1];
      if ((0, d.default)(i2.$Capability, "F has a [[Capability]] internal slot whose value is a PromiseCapability Record"), (0, d.default)(r2 === i2.$Capability), !r2.resolve.mightBeUndefined()) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "promiseCapability.[[Resolve]] is not undefined");
      if (r2.resolve.throwIfNotConcrete(), !r2.reject.mightBeUndefined()) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "promiseCapability.[[Reject]] is not undefined");
      return r2.reject.throwIfNotConcrete(), r2.resolve = s2, r2.reject = u2, e2.intrinsics.undefined;
    }, false);
    i2.$Capability = r2;
    var o2 = (0, s.Construct)(e2, t2, [i2]).throwIfNotConcreteObject();
    if (false === (0, c.IsCallable)(e2, r2.resolve)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsCallable(promiseCapability.[[Resolve]]) is false");
    if (false === (0, c.IsCallable)(e2, r2.reject)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsCallable(promiseCapability.[[Reject]]) is false");
    return r2.promise = o2, r2;
  }, t.PerformPromiseAll = function(e2, t2, r2, n2) {
    (0, d.default)(r2 instanceof a.FunctionValue && (0, c.IsConstructor)(e2, r2), "constructor is a constructor function");
    var o2 = [], s2 = { value: 1 }, u2 = 0;
    for (; ; ) {
      var h2 = void 0;
      try {
        h2 = (0, f.IteratorStep)(e2, t2.$Iterator);
      } catch (e3) {
        throw e3 instanceof i.AbruptCompletion && (t2.$Done = true), e3;
      }
      if (false === h2) {
        if (t2.$Done = true, s2.value = s2.value - 1, 0 === s2.value) {
          var y2 = p.Create.CreateArrayFromList(e2, o2);
          (0, l.Call)(e2, n2.resolve, e2.intrinsics.undefined, [y2]);
        }
        return n2.promise;
      }
      var m2 = void 0;
      try {
        m2 = (0, f.IteratorValue)(e2, h2);
      } catch (e3) {
        throw e3 instanceof i.AbruptCompletion && (t2.$Done = true), e3;
      }
      o2.push(e2.intrinsics.undefined);
      var b2 = (0, l.Invoke)(e2, r2, "resolve", [m2]), g2 = v(e2);
      g2.$AlreadyCalled = { value: false }, g2.$Index = u2, g2.$Values = o2, g2.$Capabilities = n2, g2.$RemainingElements = s2, s2.value = s2.value + 1, (0, l.Invoke)(e2, b2, "then", [g2, n2.reject]), u2 += 1;
    }
    (0, d.default)(false);
  }, t.PerformPromiseRace = function(e2, t2, r2, n2) {
    (0, d.default)((0, c.IsConstructor)(e2, n2), "constructor is a constructor function");
    for (; ; ) {
      var o2 = void 0;
      try {
        o2 = (0, f.IteratorStep)(e2, t2.$Iterator);
      } catch (e3) {
        throw e3 instanceof i.AbruptCompletion && (t2.$Done = true), e3;
      }
      if (false === o2) return t2.$Done = true, (0, d.default)(r2.promise instanceof a.ObjectValue), r2.promise;
      var s2 = void 0;
      try {
        s2 = (0, f.IteratorValue)(e2, o2);
      } catch (e3) {
        throw e3 instanceof i.AbruptCompletion && (t2.$Done = true), e3;
      }
      var u2 = (0, l.Invoke)(e2, n2, "resolve", [s2]);
      (0, l.Invoke)(e2, u2, "then", [r2.resolve, r2.reject]);
    }
    (0, d.default)(false);
  }, t.PerformPromiseThen = function(e2, t2, r2, n2, i2) {
    (0, d.default)((0, c.IsPromise)(e2, t2), "IsPromise(promise) is true"), false === (0, c.IsCallable)(e2, r2) && (r2 = new a.StringValue(e2, "Identity"));
    (0, c.IsCallable)(e2, n2) && (n2 = new a.StringValue(e2, "Thrower"));
    var o2 = { capabilities: i2, handler: r2 }, s2 = { capabilities: i2, handler: n2 };
    if ("pending" === t2.$PromiseState) p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseFulfillReactions"), (0, d.default)(t2.$PromiseFulfillReactions), t2.$PromiseFulfillReactions.push(o2), p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseRejectReactions"), (0, d.default)(t2.$PromiseRejectReactions), t2.$PromiseRejectReactions.push(s2);
    else if ("fulfilled" === t2.$PromiseState) t2.$PromiseResult;
    else {
      (0, d.default)("rejected" === t2.$PromiseState);
      t2.$PromiseResult;
      t2.$PromiseIsHandled;
    }
    return p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseIsHandled").$PromiseIsHandled = true, (0, d.default)(i2.promise instanceof a.ObjectValue), i2.promise;
  }, t.PromiseReactionJob = y, t.CreateResolvingFunctions = function(e2, t2) {
    var r2 = { value: false }, l2 = (function(e3) {
      var t3 = new a.NativeFunctionValue(e3, void 0, void 0, 1, function(r3, l3) {
        var f3 = n(l3, 1), p2 = f3[0];
        (0, d.default)(t3.$Promise instanceof a.ObjectValue, "F has a [[Promise]] internal slot whose value is an Object");
        var h2, v2 = t3.$Promise, y2 = t3.$AlreadyResolved;
        if ((0, d.default)(void 0 !== y2), true === y2.value) return e3.intrinsics.undefined;
        if (y2.value = true, (0, o.SameValue)(e3, p2.throwIfNotConcrete(), v2)) {
          var g2 = (0, s.Construct)(e3, e3.intrinsics.TypeError, [new a.StringValue(e3, "resolve")]);
          return b(e3, v2, g2);
        }
        if (!(p2 instanceof a.ObjectValue)) return m(e3, v2, p2);
        try {
          h2 = (0, u.Get)(e3, p2, "then");
        } catch (t4) {
          if (t4 instanceof i.AbruptCompletion) return b(e3, v2, t4);
          throw t4;
        }
        var w2 = h2;
        return (0, c.IsCallable)(e3, w2) ? m(e3, v2, p2) : e3.intrinsics.undefined;
      }, false);
      return t3;
    })(e2);
    l2.$Promise = t2, l2.$AlreadyResolved = r2;
    var f2 = (function(e3) {
      var t3 = new a.NativeFunctionValue(e3, void 0, void 0, 1, function(r3, i2) {
        var o2 = n(i2, 1), s2 = o2[0];
        (0, d.default)(t3.$Promise instanceof a.ObjectValue, "F has a [[Promise]] internal slot whose value is an Object");
        var u2 = t3.$Promise, l3 = t3.$AlreadyResolved;
        return (0, d.default)(void 0 !== l3), true === l3.value ? e3.intrinsics.undefined : (l3.value = true, b(e3, u2, s2));
      }, false);
      return t3;
    })(e2);
    return f2.$Promise = t2, f2.$AlreadyResolved = r2, { resolve: l2, reject: f2 };
  }, t.FulfillPromise = m, t.RejectPromise = b, t.TriggerPromiseReactions = g, t.HostPromiseRejectionTracker = w, t.PromiseResolveThenableJob = E;
  var i = r(7), a = r(0), o = r(16), s = r(22), u = r(13), l = r(15), c = r(11), f = r(43), p = r(2), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function h(e2, t2, r2, n2) {
  }
  function v(e2) {
    var t2 = new a.NativeFunctionValue(e2, void 0, void 0, 1, function(r2, i2) {
      var a2 = n(i2, 1)[0], o2 = t2.$AlreadyCalled;
      if ((0, d.default)(o2), true === o2.value) return e2.intrinsics.undefined;
      o2.value = true;
      var s2 = t2.$Index;
      (0, d.default)("number" == typeof s2);
      var u2 = t2.$Values;
      (0, d.default)(u2 instanceof Array);
      var c2 = t2.$Capabilities;
      (0, d.default)(c2);
      var f2 = t2.$RemainingElements;
      if ((0, d.default)(f2), u2[s2] = a2, f2.value = f2.value - 1, 0 === f2.value) {
        var h2 = p.Create.CreateArrayFromList(e2, u2);
        (0, l.Call)(e2, c2.resolve, e2.intrinsics.undefined, [h2]);
      }
      return e2.intrinsics.undefined;
    }, false);
    return t2;
  }
  function y(e2, t2, r2) {
    return e2.intrinsics.undefined;
  }
  function m(e2, t2, r2) {
    (0, d.default)("pending" === t2.$PromiseState);
    var n2 = t2.$PromiseFulfillReactions;
    return (0, d.default)(n2), p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseResult").$PromiseResult = r2, p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseFulfillReactions").$PromiseFulfillReactions = void 0, p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseRejectReactions").$PromiseRejectReactions = void 0, p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseState").$PromiseState = "fulfilled", g(e2, n2, r2);
  }
  function b(e2, t2, r2) {
    (0, d.default)("pending" === t2.$PromiseState);
    var n2 = t2.$PromiseFulfillReactions;
    return (0, d.default)(n2), p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseResult").$PromiseResult = r2, p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseFulfillReactions").$PromiseFulfillReactions = void 0, p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseRejectReactions").$PromiseRejectReactions = void 0, p.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$PromiseState").$PromiseState = "rejected", t2.$PromiseIsHandled, g(e2, n2, r2);
  }
  function g(e2, t2, r2) {
    var n2 = true, i2 = false, a2 = void 0;
    try {
      for (var o2, s2 = t2[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) o2.value;
    } catch (e3) {
      i2 = true, a2 = e3;
    } finally {
      try {
        n2 || null == s2.return || s2.return();
      } finally {
        if (i2) throw a2;
      }
    }
    return e2.intrinsics.undefined;
  }
  function w(e2, t2, r2) {
  }
  function E(e2, t2, r2, n2) {
  }
}, function(e, t, r) {
  "use strict";
  var n, i, a = e.exports = {};
  function o() {
    throw new Error("setTimeout has not been defined");
  }
  function s() {
    throw new Error("clearTimeout has not been defined");
  }
  function u(e2) {
    if (n === setTimeout) return setTimeout(e2, 0);
    if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(e2, 0);
    try {
      return n(e2, 0);
    } catch (t2) {
      try {
        return n.call(null, e2, 0);
      } catch (t3) {
        return n.call(this, e2, 0);
      }
    }
  }
  !(function() {
    try {
      n = "function" == typeof setTimeout ? setTimeout : o;
    } catch (e2) {
      n = o;
    }
    try {
      i = "function" == typeof clearTimeout ? clearTimeout : s;
    } catch (e2) {
      i = s;
    }
  })();
  var l, c = [], f = false, p = -1;
  function d() {
    f && l && (f = false, l.length ? c = l.concat(c) : p = -1, c.length && h());
  }
  function h() {
    if (!f) {
      var e2 = u(d);
      f = true;
      for (var t2 = c.length; t2; ) {
        for (l = c, c = []; ++p < t2; ) l && l[p].run();
        p = -1, t2 = c.length;
      }
      l = null, f = false, (function(e3) {
        if (i === clearTimeout) return clearTimeout(e3);
        if ((i === s || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e3);
        try {
          i(e3);
        } catch (t3) {
          try {
            return i.call(null, e3);
          } catch (t4) {
            return i.call(this, e3);
          }
        }
      })(e2);
    }
  }
  function v(e2, t2) {
    this.fun = e2, this.array = t2;
  }
  function y() {
  }
  a.nextTick = function(e2) {
    var t2 = new Array(arguments.length - 1);
    if (arguments.length > 1) for (var r2 = 1; r2 < arguments.length; r2++) t2[r2 - 1] = arguments[r2];
    c.push(new v(e2, t2)), 1 !== c.length || f || u(h);
  }, v.prototype.run = function() {
    this.fun.apply(null, this.array);
  }, a.title = "browser", a.browser = true, a.env = {}, a.argv = [], a.version = "", a.versions = {}, a.on = y, a.addListener = y, a.once = y, a.off = y, a.removeListener = y, a.removeAllListeners = y, a.emit = y, a.prependListener = y, a.prependOnceListener = y, a.listeners = function(e2) {
    return [];
  }, a.binding = function(e2) {
    throw new Error("process.binding is not supported");
  }, a.cwd = function() {
    return "/";
  }, a.chdir = function(e2) {
    throw new Error("process.chdir is not supported");
  }, a.umask = function() {
    return 0;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.merge = function(e2, t2) {
    var r2 = t2.placeholderWhitelist, n2 = void 0 === r2 ? e2.placeholderWhitelist : r2, i = t2.placeholderPattern, a = void 0 === i ? e2.placeholderPattern : i, o = t2.preserveComments, s = void 0 === o ? e2.preserveComments : o;
    return { parser: Object.assign({}, e2.parser, t2.parser), placeholderWhitelist: n2, placeholderPattern: a, preserveComments: s };
  }, t.validate = function(e2) {
    if (null != e2 && "object" !== n(e2)) throw new Error("Unknown template options.");
    var t2 = e2 || {}, r2 = t2.placeholderWhitelist, i = t2.placeholderPattern, a = t2.preserveComments, o = (function(e3, t3) {
      if (null == e3) return {};
      var r3, n2, i2 = {}, a2 = Object.keys(e3);
      for (n2 = 0; n2 < a2.length; n2++) r3 = a2[n2], t3.indexOf(r3) >= 0 || (i2[r3] = e3[r3]);
      return i2;
    })(t2, ["placeholderWhitelist", "placeholderPattern", "preserveComments"]);
    if (null != r2 && !(r2 instanceof Set)) throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");
    if (null != i && !(i instanceof RegExp) && false !== i) throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");
    if (null != a && "boolean" != typeof a) throw new Error("'.preserveComments' must be a boolean, null, or undefined");
    return { parser: o, placeholderWhitelist: r2 || void 0, placeholderPattern: null == i ? void 0 : i, preserveComments: null != a && a };
  }, t.normalizeReplacements = function(e2) {
    if (Array.isArray(e2)) return e2.reduce(function(e3, t2, r2) {
      return e3["$" + r2] = t2, e3;
    }, {});
    if ("object" === n(e2) || null == e2) return e2 || void 0;
    throw new Error("Template replacements must be an array, object, null, or undefined");
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2, r2) {
    return t2 && i(e2.prototype, t2), r2 && i(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.PerformanceTracker = t.RealmStatistics = void 0;
  var o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var s = (function() {
    function e2(t2, r2) {
      n(this, e2), this.simplifications = 0, this.simplificationAttempts = 0, this.evaluatedNodes = 0, this.parsing = new u(t2, r2), this.fixupSourceLocations = new u(t2, r2), this.fixupFilenames = new u(t2, r2), this.evaluation = new u(t2, r2);
    }
    return a(e2, [{ key: "getRealmStatistics", value: function() {
      return { simplifications: this.simplifications, simplificationAttempts: this.simplificationAttempts, evaluatedNodes: this.evaluatedNodes };
    } }, { key: "projectPerformanceTrackers", value: function(e3, t2) {
      for (var r2 = {}, n2 = Object.keys(this), i2 = 0; i2 < n2.length; i2++) {
        var a2 = n2[i2], o2 = this[a2];
        o2 instanceof u && (r2[a2 + e3] = t2(o2));
      }
      return r2;
    } }, { key: "log", value: function() {
      console.log("=== realm statistics"), console.log("".concat(this.evaluatedNodes, " AST nodes evaluated.")), console.log("".concat(this.simplifications, " abstract values simplified after ").concat(this.simplificationAttempts, " attempts."));
    } }, { key: "logPerformanceTrackers", value: function(e3) {
      console.log("".concat(e3(this.parsing), " parsing, ").concat(e3(this.fixupSourceLocations), " fixing source locations, ").concat(e3(this.fixupFilenames), " fixing filenames, ").concat(e3(this.evaluation), " evaluating global code"));
    } }]), e2;
  })();
  t.RealmStatistics = s;
  var u = (function() {
    function e2(t2, r2) {
      n(this, e2), this.time = this.memory = 0, this._getTime = t2, this._getMemory = r2, this._running = false;
    }
    return a(e2, [{ key: "start", value: function() {
      (0, o.default)(false === this._running), void 0 !== this._getTime && (this.time = this._getTime() - this.time), void 0 !== this._getMemory && (this.memory = this._getMemory() - this.memory), this._running = true;
    } }, { key: "stop", value: function() {
      (0, o.default)(true === this._running), void 0 !== this._getTime && (this.time = this._getTime() - this.time), void 0 !== this._getMemory && (this.memory = this._getMemory() - this.memory), this._running = false;
    } }, { key: "measure", value: function(e3) {
      this.start();
      try {
        return e3();
      } finally {
        this.stop();
      }
    } }]), e2;
  })();
  t.PerformanceTracker = u;
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(687));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    t2 && r2 && (t2[e2] = (0, n().default)([].concat(t2[e2], r2[e2]).filter(Boolean)));
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.classMethodOrDeclareMethodCommon = t.classMethodOrPropertyCommon = void 0;
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36)), i = r(122);
  (0, n.default)("AssignmentPattern", { visitor: ["left", "right"], builder: ["left", "right"], aliases: ["Pattern", "PatternLike", "LVal"], fields: Object.assign({}, i.patternLikeCommon, { left: { validate: (0, n.assertNodeType)("Identifier", "ObjectPattern", "ArrayPattern") }, right: { validate: (0, n.assertNodeType)("Expression") }, decorators: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Decorator"))) } }) }), (0, n.default)("ArrayPattern", { visitor: ["elements", "typeAnnotation"], builder: ["elements"], aliases: ["Pattern", "PatternLike", "LVal"], fields: Object.assign({}, i.patternLikeCommon, { elements: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("PatternLike"))) }, decorators: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Decorator"))) } }) }), (0, n.default)("ArrowFunctionExpression", { builder: ["params", "body", "async"], visitor: ["params", "body", "returnType", "typeParameters"], aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"], fields: Object.assign({}, i.functionCommon, i.functionTypeAnnotationCommon, { expression: { validate: (0, n.assertValueType)("boolean") }, body: { validate: (0, n.assertNodeType)("BlockStatement", "Expression") } }) }), (0, n.default)("ClassBody", { visitor: ["body"], fields: { body: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("ClassMethod", "ClassProperty", "ClassPrivateProperty", "TSDeclareMethod", "TSIndexSignature"))) } } });
  var a = { typeParameters: { validate: (0, n.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"), optional: true }, body: { validate: (0, n.assertNodeType)("ClassBody") }, superClass: { optional: true, validate: (0, n.assertNodeType)("Expression") }, superTypeParameters: { validate: (0, n.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true }, implements: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("TSExpressionWithTypeArguments", "ClassImplements"))), optional: true } };
  (0, n.default)("ClassDeclaration", { builder: ["id", "superClass", "body", "decorators"], visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"], aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"], fields: Object.assign({}, a, { declare: { validate: (0, n.assertValueType)("boolean"), optional: true }, abstract: { validate: (0, n.assertValueType)("boolean"), optional: true }, id: { validate: (0, n.assertNodeType)("Identifier"), optional: true }, decorators: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Decorator"))), optional: true } }) }), (0, n.default)("ClassExpression", { inherits: "ClassDeclaration", aliases: ["Scopable", "Class", "Expression", "Pureish"], fields: Object.assign({}, a, { id: { optional: true, validate: (0, n.assertNodeType)("Identifier") }, body: { validate: (0, n.assertNodeType)("ClassBody") }, superClass: { optional: true, validate: (0, n.assertNodeType)("Expression") }, decorators: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Decorator"))), optional: true } }) }), (0, n.default)("ExportAllDeclaration", { visitor: ["source"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { source: { validate: (0, n.assertNodeType)("StringLiteral") } } }), (0, n.default)("ExportDefaultDeclaration", { visitor: ["declaration"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { declaration: { validate: (0, n.assertNodeType)("FunctionDeclaration", "TSDeclareFunction", "ClassDeclaration", "Expression") } } }), (0, n.default)("ExportNamedDeclaration", { visitor: ["declaration", "specifiers", "source"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { declaration: { validate: (0, n.assertNodeType)("Declaration"), optional: true }, specifiers: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("ExportSpecifier", "ExportDefaultSpecifier", "ExportNamespaceSpecifier"))) }, source: { validate: (0, n.assertNodeType)("StringLiteral"), optional: true } } }), (0, n.default)("ExportSpecifier", { visitor: ["local", "exported"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, n.assertNodeType)("Identifier") }, exported: { validate: (0, n.assertNodeType)("Identifier") } } }), (0, n.default)("ForOfStatement", { visitor: ["left", "right", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: (0, n.assertNodeType)("VariableDeclaration", "LVal") }, right: { validate: (0, n.assertNodeType)("Expression") }, body: { validate: (0, n.assertNodeType)("Statement") }, await: { default: false, validate: (0, n.assertValueType)("boolean") } } }), (0, n.default)("ImportDeclaration", { visitor: ["specifiers", "source"], aliases: ["Statement", "Declaration", "ModuleDeclaration"], fields: { specifiers: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier"))) }, source: { validate: (0, n.assertNodeType)("StringLiteral") } } }), (0, n.default)("ImportDefaultSpecifier", { visitor: ["local"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, n.assertNodeType)("Identifier") } } }), (0, n.default)("ImportNamespaceSpecifier", { visitor: ["local"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, n.assertNodeType)("Identifier") } } }), (0, n.default)("ImportSpecifier", { visitor: ["local", "imported"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, n.assertNodeType)("Identifier") }, imported: { validate: (0, n.assertNodeType)("Identifier") }, importKind: { validate: (0, n.assertOneOf)(null, "type", "typeof") } } }), (0, n.default)("MetaProperty", { visitor: ["meta", "property"], aliases: ["Expression"], fields: { meta: { validate: (0, n.assertNodeType)("Identifier") }, property: { validate: (0, n.assertNodeType)("Identifier") } } });
  var o = { abstract: { validate: (0, n.assertValueType)("boolean"), optional: true }, accessibility: { validate: (0, n.chain)((0, n.assertValueType)("string"), (0, n.assertOneOf)("public", "private", "protected")), optional: true }, static: { validate: (0, n.assertValueType)("boolean"), optional: true }, computed: { default: false, validate: (0, n.assertValueType)("boolean") }, optional: { validate: (0, n.assertValueType)("boolean"), optional: true }, key: { validate: (0, n.chain)((function() {
    var e2 = (0, n.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral"), t2 = (0, n.assertNodeType)("Expression");
    return function(r2, n2, i2) {
      (r2.computed ? t2 : e2)(r2, n2, i2);
    };
  })(), (0, n.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "Expression")) } };
  t.classMethodOrPropertyCommon = o;
  var s = Object.assign({}, i.functionCommon, o, { kind: { validate: (0, n.chain)((0, n.assertValueType)("string"), (0, n.assertOneOf)("get", "set", "method", "constructor")), default: "method" }, access: { validate: (0, n.chain)((0, n.assertValueType)("string"), (0, n.assertOneOf)("public", "private", "protected")), optional: true }, decorators: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Decorator"))), optional: true } });
  t.classMethodOrDeclareMethodCommon = s, (0, n.default)("ClassMethod", { aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"], builder: ["kind", "key", "params", "body", "computed", "static"], visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], fields: Object.assign({}, s, i.functionTypeAnnotationCommon, { body: { validate: (0, n.assertNodeType)("BlockStatement") } }) }), (0, n.default)("ObjectPattern", { visitor: ["properties", "typeAnnotation"], builder: ["properties"], aliases: ["Pattern", "PatternLike", "LVal"], fields: Object.assign({}, i.patternLikeCommon, { properties: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("RestElement", "ObjectProperty"))) } }) }), (0, n.default)("SpreadElement", { visitor: ["argument"], aliases: ["UnaryLike"], deprecatedAlias: "SpreadProperty", fields: { argument: { validate: (0, n.assertNodeType)("Expression") } } }), (0, n.default)("Super", { aliases: ["Expression"] }), (0, n.default)("TaggedTemplateExpression", { visitor: ["tag", "quasi"], aliases: ["Expression"], fields: { tag: { validate: (0, n.assertNodeType)("Expression") }, quasi: { validate: (0, n.assertNodeType)("TemplateLiteral") }, typeParameters: { validate: (0, n.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true } } }), (0, n.default)("TemplateElement", { builder: ["value", "tail"], fields: { value: {}, tail: { validate: (0, n.assertValueType)("boolean"), default: false } } }), (0, n.default)("TemplateLiteral", { visitor: ["quasis", "expressions"], aliases: ["Expression", "Literal"], fields: { quasis: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("TemplateElement"))) }, expressions: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Expression"))) } } }), (0, n.default)("YieldExpression", { builder: ["argument", "delegate"], visitor: ["argument"], aliases: ["Expression", "Terminatorless"], fields: { delegate: { validate: (0, n.assertValueType)("boolean"), default: false }, argument: { optional: true, validate: (0, n.assertNodeType)("Expression") } } });
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if (e2 === t2) return true;
    if (n.ALIAS_KEYS[t2]) return false;
    var r2 = n.FLIPPED_ALIAS_KEYS[t2];
    if (r2) {
      if (r2[0] === e2) return true;
      var i = true, a = false, o = void 0;
      try {
        for (var s, u = r2[Symbol.iterator](); !(i = (s = u.next()).done); i = true) {
          var l = s.value;
          if (e2 === l) return true;
        }
      } catch (e3) {
        a = true, o = e3;
      } finally {
        try {
          i || null == u.return || u.return();
        } finally {
          if (a) throw o;
        }
      }
    }
    return false;
  };
  var n = r(29);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    if (!t2) return false;
    if (!(0, i.default)(t2.type, e2)) return false;
    return void 0 === r2 || (0, n.default)(t2, r2);
  };
  var n = a(r(132)), i = a(r(120));
  function a(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.patternLikeCommon = t.functionDeclarationCommon = t.functionTypeAnnotationCommon = t.functionCommon = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(66)), a = r(45), o = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36));
  (0, o.default)("ArrayExpression", { fields: { elements: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeOrValueType)("null", "Expression", "SpreadElement"))), default: [] } }, visitor: ["elements"], aliases: ["Expression"] }), (0, o.default)("AssignmentExpression", { fields: { operator: { validate: (0, o.assertValueType)("string") }, left: { validate: (0, o.assertNodeType)("LVal") }, right: { validate: (0, o.assertNodeType)("Expression") } }, builder: ["operator", "left", "right"], visitor: ["left", "right"], aliases: ["Expression"] }), (0, o.default)("BinaryExpression", { builder: ["operator", "left", "right"], fields: { operator: { validate: o.assertOneOf.apply(void 0, n(a.BINARY_OPERATORS)) }, left: { validate: (0, o.assertNodeType)("Expression") }, right: { validate: (0, o.assertNodeType)("Expression") } }, visitor: ["left", "right"], aliases: ["Binary", "Expression"] }), (0, o.default)("InterpreterDirective", { builder: ["value"], fields: { value: { validate: (0, o.assertValueType)("string") } } }), (0, o.default)("Directive", { visitor: ["value"], fields: { value: { validate: (0, o.assertNodeType)("DirectiveLiteral") } } }), (0, o.default)("DirectiveLiteral", { builder: ["value"], fields: { value: { validate: (0, o.assertValueType)("string") } } }), (0, o.default)("BlockStatement", { builder: ["body", "directives"], visitor: ["directives", "body"], fields: { directives: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Directive"))), default: [] }, body: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Statement"))) } }, aliases: ["Scopable", "BlockParent", "Block", "Statement"] }), (0, o.default)("BreakStatement", { visitor: ["label"], fields: { label: { validate: (0, o.assertNodeType)("Identifier"), optional: true } }, aliases: ["Statement", "Terminatorless", "CompletionStatement"] }), (0, o.default)("CallExpression", { visitor: ["callee", "arguments", "typeParameters", "typeArguments"], builder: ["callee", "arguments"], aliases: ["Expression"], fields: { callee: { validate: (0, o.assertNodeType)("Expression") }, arguments: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Expression", "SpreadElement", "JSXNamespacedName"))) }, optional: { validate: (0, o.assertOneOf)(true, false), optional: true }, typeArguments: { validate: (0, o.assertNodeType)("TypeParameterInstantiation"), optional: true }, typeParameters: { validate: (0, o.assertNodeType)("TSTypeParameterInstantiation"), optional: true } } }), (0, o.default)("CatchClause", { visitor: ["param", "body"], fields: { param: { validate: (0, o.assertNodeType)("Identifier"), optional: true }, body: { validate: (0, o.assertNodeType)("BlockStatement") } }, aliases: ["Scopable", "BlockParent"] }), (0, o.default)("ConditionalExpression", { visitor: ["test", "consequent", "alternate"], fields: { test: { validate: (0, o.assertNodeType)("Expression") }, consequent: { validate: (0, o.assertNodeType)("Expression") }, alternate: { validate: (0, o.assertNodeType)("Expression") } }, aliases: ["Expression", "Conditional"] }), (0, o.default)("ContinueStatement", { visitor: ["label"], fields: { label: { validate: (0, o.assertNodeType)("Identifier"), optional: true } }, aliases: ["Statement", "Terminatorless", "CompletionStatement"] }), (0, o.default)("DebuggerStatement", { aliases: ["Statement"] }), (0, o.default)("DoWhileStatement", { visitor: ["test", "body"], fields: { test: { validate: (0, o.assertNodeType)("Expression") }, body: { validate: (0, o.assertNodeType)("Statement") } }, aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"] }), (0, o.default)("EmptyStatement", { aliases: ["Statement"] }), (0, o.default)("ExpressionStatement", { visitor: ["expression"], fields: { expression: { validate: (0, o.assertNodeType)("Expression") } }, aliases: ["Statement", "ExpressionWrapper"] }), (0, o.default)("File", { builder: ["program", "comments", "tokens"], visitor: ["program"], fields: { program: { validate: (0, o.assertNodeType)("Program") } } }), (0, o.default)("ForInStatement", { visitor: ["left", "right", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: (0, o.assertNodeType)("VariableDeclaration", "LVal") }, right: { validate: (0, o.assertNodeType)("Expression") }, body: { validate: (0, o.assertNodeType)("Statement") } } }), (0, o.default)("ForStatement", { visitor: ["init", "test", "update", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"], fields: { init: { validate: (0, o.assertNodeType)("VariableDeclaration", "Expression"), optional: true }, test: { validate: (0, o.assertNodeType)("Expression"), optional: true }, update: { validate: (0, o.assertNodeType)("Expression"), optional: true }, body: { validate: (0, o.assertNodeType)("Statement") } } });
  var s = { params: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("LVal"))) }, generator: { default: false, validate: (0, o.assertValueType)("boolean") }, async: { validate: (0, o.assertValueType)("boolean"), default: false } };
  t.functionCommon = s;
  var u = { returnType: { validate: (0, o.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, typeParameters: { validate: (0, o.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"), optional: true } };
  t.functionTypeAnnotationCommon = u;
  var l = Object.assign({}, s, { declare: { validate: (0, o.assertValueType)("boolean"), optional: true }, id: { validate: (0, o.assertNodeType)("Identifier"), optional: true } });
  t.functionDeclarationCommon = l, (0, o.default)("FunctionDeclaration", { builder: ["id", "params", "body", "generator", "async"], visitor: ["id", "params", "body", "returnType", "typeParameters"], fields: Object.assign({}, l, u, { body: { validate: (0, o.assertNodeType)("BlockStatement") } }), aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"] }), (0, o.default)("FunctionExpression", { inherits: "FunctionDeclaration", aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"], fields: Object.assign({}, s, u, { id: { validate: (0, o.assertNodeType)("Identifier"), optional: true }, body: { validate: (0, o.assertNodeType)("BlockStatement") } }) });
  var c = { typeAnnotation: { validate: (0, o.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, decorators: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Decorator"))) } };
  t.patternLikeCommon = c, (0, o.default)("Identifier", { builder: ["name"], visitor: ["typeAnnotation"], aliases: ["Expression", "PatternLike", "LVal", "TSEntityName"], fields: Object.assign({}, c, { name: { validate: (0, o.chain)(function(e2, t2, r2) {
    (0, i.default)(r2);
  }, (0, o.assertValueType)("string")) }, optional: { validate: (0, o.assertValueType)("boolean"), optional: true } }) }), (0, o.default)("IfStatement", { visitor: ["test", "consequent", "alternate"], aliases: ["Statement", "Conditional"], fields: { test: { validate: (0, o.assertNodeType)("Expression") }, consequent: { validate: (0, o.assertNodeType)("Statement") }, alternate: { optional: true, validate: (0, o.assertNodeType)("Statement") } } }), (0, o.default)("LabeledStatement", { visitor: ["label", "body"], aliases: ["Statement"], fields: { label: { validate: (0, o.assertNodeType)("Identifier") }, body: { validate: (0, o.assertNodeType)("Statement") } } }), (0, o.default)("StringLiteral", { builder: ["value"], fields: { value: { validate: (0, o.assertValueType)("string") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, o.default)("NumericLiteral", { builder: ["value"], deprecatedAlias: "NumberLiteral", fields: { value: { validate: (0, o.assertValueType)("number") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, o.default)("NullLiteral", { aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, o.default)("BooleanLiteral", { builder: ["value"], fields: { value: { validate: (0, o.assertValueType)("boolean") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, o.default)("RegExpLiteral", { builder: ["pattern", "flags"], deprecatedAlias: "RegexLiteral", aliases: ["Expression", "Literal"], fields: { pattern: { validate: (0, o.assertValueType)("string") }, flags: { validate: (0, o.assertValueType)("string"), default: "" } } }), (0, o.default)("LogicalExpression", { builder: ["operator", "left", "right"], visitor: ["left", "right"], aliases: ["Binary", "Expression"], fields: { operator: { validate: o.assertOneOf.apply(void 0, n(a.LOGICAL_OPERATORS)) }, left: { validate: (0, o.assertNodeType)("Expression") }, right: { validate: (0, o.assertNodeType)("Expression") } } }), (0, o.default)("MemberExpression", { builder: ["object", "property", "computed", "optional"], visitor: ["object", "property"], aliases: ["Expression", "LVal"], fields: { object: { validate: (0, o.assertNodeType)("Expression") }, property: { validate: (function() {
    var e2 = (0, o.assertNodeType)("Identifier", "PrivateName"), t2 = (0, o.assertNodeType)("Expression");
    return function(r2, n2, i2) {
      (r2.computed ? t2 : e2)(r2, n2, i2);
    };
  })() }, computed: { default: false }, optional: { validate: (0, o.assertOneOf)(true, false), optional: true } } }), (0, o.default)("NewExpression", { inherits: "CallExpression" }), (0, o.default)("Program", { visitor: ["directives", "body"], builder: ["body", "directives", "sourceType", "interpreter"], fields: { sourceFile: { validate: (0, o.assertValueType)("string") }, sourceType: { validate: (0, o.assertOneOf)("script", "module"), default: "script" }, interpreter: { validate: (0, o.assertNodeType)("InterpreterDirective"), default: null, optional: true }, directives: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Directive"))), default: [] }, body: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Statement"))) } }, aliases: ["Scopable", "BlockParent", "Block"] }), (0, o.default)("ObjectExpression", { visitor: ["properties"], aliases: ["Expression"], fields: { properties: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadElement"))) } } }), (0, o.default)("ObjectMethod", { builder: ["kind", "key", "params", "body", "computed"], fields: Object.assign({}, s, u, { kind: { validate: (0, o.chain)((0, o.assertValueType)("string"), (0, o.assertOneOf)("method", "get", "set")), default: "method" }, computed: { validate: (0, o.assertValueType)("boolean"), default: false }, key: { validate: (function() {
    var e2 = (0, o.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral"), t2 = (0, o.assertNodeType)("Expression");
    return function(r2, n2, i2) {
      (r2.computed ? t2 : e2)(r2, n2, i2);
    };
  })() }, decorators: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Decorator"))) }, body: { validate: (0, o.assertNodeType)("BlockStatement") } }), visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"] }), (0, o.default)("ObjectProperty", { builder: ["key", "value", "computed", "shorthand", "decorators"], fields: { computed: { validate: (0, o.assertValueType)("boolean"), default: false }, key: { validate: (function() {
    var e2 = (0, o.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral"), t2 = (0, o.assertNodeType)("Expression");
    return function(r2, n2, i2) {
      (r2.computed ? t2 : e2)(r2, n2, i2);
    };
  })() }, value: { validate: (0, o.assertNodeType)("Expression", "PatternLike") }, shorthand: { validate: (0, o.assertValueType)("boolean"), default: false }, decorators: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Decorator"))), optional: true } }, visitor: ["key", "value", "decorators"], aliases: ["UserWhitespacable", "Property", "ObjectMember"] }), (0, o.default)("RestElement", { visitor: ["argument", "typeAnnotation"], builder: ["argument"], aliases: ["LVal", "PatternLike"], deprecatedAlias: "RestProperty", fields: Object.assign({}, c, { argument: { validate: (0, o.assertNodeType)("LVal") } }) }), (0, o.default)("ReturnStatement", { visitor: ["argument"], aliases: ["Statement", "Terminatorless", "CompletionStatement"], fields: { argument: { validate: (0, o.assertNodeType)("Expression"), optional: true } } }), (0, o.default)("SequenceExpression", { visitor: ["expressions"], fields: { expressions: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Expression"))) } }, aliases: ["Expression"] }), (0, o.default)("SwitchCase", { visitor: ["test", "consequent"], fields: { test: { validate: (0, o.assertNodeType)("Expression"), optional: true }, consequent: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("Statement"))) } } }), (0, o.default)("SwitchStatement", { visitor: ["discriminant", "cases"], aliases: ["Statement", "BlockParent", "Scopable"], fields: { discriminant: { validate: (0, o.assertNodeType)("Expression") }, cases: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("SwitchCase"))) } } }), (0, o.default)("ThisExpression", { aliases: ["Expression"] }), (0, o.default)("ThrowStatement", { visitor: ["argument"], aliases: ["Statement", "Terminatorless", "CompletionStatement"], fields: { argument: { validate: (0, o.assertNodeType)("Expression") } } }), (0, o.default)("TryStatement", { visitor: ["block", "handler", "finalizer"], aliases: ["Statement"], fields: { block: { validate: (0, o.assertNodeType)("BlockStatement") }, handler: { optional: true, validate: (0, o.assertNodeType)("CatchClause") }, finalizer: { optional: true, validate: (0, o.assertNodeType)("BlockStatement") } } }), (0, o.default)("UnaryExpression", { builder: ["operator", "argument", "prefix"], fields: { prefix: { default: true }, argument: { validate: (0, o.assertNodeType)("Expression") }, operator: { validate: o.assertOneOf.apply(void 0, n(a.UNARY_OPERATORS)) } }, visitor: ["argument"], aliases: ["UnaryLike", "Expression"] }), (0, o.default)("UpdateExpression", { builder: ["operator", "argument", "prefix"], fields: { prefix: { default: false }, argument: { validate: (0, o.assertNodeType)("Expression") }, operator: { validate: o.assertOneOf.apply(void 0, n(a.UPDATE_OPERATORS)) } }, visitor: ["argument"], aliases: ["Expression"] }), (0, o.default)("VariableDeclaration", { builder: ["kind", "declarations"], visitor: ["declarations"], aliases: ["Statement", "Declaration"], fields: { declare: { validate: (0, o.assertValueType)("boolean"), optional: true }, kind: { validate: (0, o.chain)((0, o.assertValueType)("string"), (0, o.assertOneOf)("var", "let", "const")) }, declarations: { validate: (0, o.chain)((0, o.assertValueType)("array"), (0, o.assertEach)((0, o.assertNodeType)("VariableDeclarator"))) } } }), (0, o.default)("VariableDeclarator", { visitor: ["id", "init"], fields: { id: { validate: (0, o.assertNodeType)("LVal") }, definite: { optional: true, validate: (0, o.assertValueType)("boolean") }, init: { optional: true, validate: (0, o.assertNodeType)("Expression") } } }), (0, o.default)("WhileStatement", { visitor: ["test", "body"], aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"], fields: { test: { validate: (0, o.assertNodeType)("Expression") }, body: { validate: (0, o.assertNodeType)("BlockStatement", "Statement") } } }), (0, o.default)("WithStatement", { visitor: ["object", "body"], aliases: ["Statement"], fields: { object: { validate: (0, o.assertNodeType)("Expression") }, body: { validate: (0, o.assertNodeType)("BlockStatement", "Statement") } } });
}, function(e, t, r) {
  "use strict";
  var n = r(713);
  e.exports = function(e2) {
    var t2 = new e2.constructor(e2.byteLength);
    return new n(t2).set(new n(e2)), t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(718), i = r(131), a = r(717), o = r(212), s = r(716), u = r(56), l = r(226), c = l(n), f = l(i), p = l(a), d = l(o), h = l(s), v = u;
  (n && "[object DataView]" != v(new n(new ArrayBuffer(1))) || i && "[object Map]" != v(new i()) || a && "[object Promise]" != v(a.resolve()) || o && "[object Set]" != v(new o()) || s && "[object WeakMap]" != v(new s())) && (v = function(e2) {
    var t2 = u(e2), r2 = "[object Object]" == t2 ? e2.constructor : void 0, n2 = r2 ? l(r2) : "";
    if (n2) switch (n2) {
      case c:
        return "[object DataView]";
      case f:
        return "[object Map]";
      case p:
        return "[object Promise]";
      case d:
        return "[object Set]";
      case h:
        return "[object WeakMap]";
    }
    return t2;
  }), e.exports = v;
}, function(e, t, r) {
  "use strict";
  var n = r(219)(Object.getPrototypeOf, Object);
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(722), i = r(216), a = Object.prototype.propertyIsEnumerable, o = Object.getOwnPropertySymbols, s = o ? function(e2) {
    return null == e2 ? [] : (e2 = Object(e2), n(o(e2), function(t2) {
      return a.call(e2, t2);
    }));
  } : i;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype;
  e.exports = function(e2) {
    var t2 = e2 && e2.constructor;
    return e2 === ("function" == typeof t2 && t2.prototype || n);
  };
}, function(e, t, r) {
  "use strict";
  var n = Array.isArray;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(222), i = r(730), a = r(218);
  e.exports = function(e2) {
    return a(e2) ? n(e2) : i(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(30).Symbol;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(47)(r(30), "Map");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    for (var r2 = Object.keys(t2), n = 0; n < r2.length; n++) {
      var i = r2[n];
      if (e2[i] !== t2[i]) return false;
    }
    return true;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.getPropertyInfo = function(e2) {
    return g.hasOwnProperty(e2) ? g[e2] : null;
  }, t.isAttributeNameSafe = function(e2) {
    if (A.hasOwnProperty(e2)) return true;
    if (T.hasOwnProperty(e2)) return false;
    if (p.test(e2)) return A[e2] = true, true;
    return T[e2] = true, false;
  }, t.shouldRemoveAttribute = function(e2, t2, r2, n2, o2) {
    if (r2 === e2.intrinsics.null || r2 === e2.intrinsics.undefined) return true;
    if ((function(e3, t3, r3, n3) {
      if (null !== r3 && r3.type === d) return false;
      if (t3 instanceof i.FunctionValue || t3 instanceof i.SymbolValue) return true;
      if (t3 instanceof i.BooleanValue) {
        if (n3) return false;
        if (null !== r3) return !r3.acceptsBooleans;
        var o3 = e3.toLowerCase().slice(0, 5);
        return "data-" !== o3 && "aria-" !== o3;
      }
      t3 instanceof i.AbstractValue && (0, a.default)(false, "TODO");
      return false;
    })(t2, r2, n2, o2)) return true;
    if (o2) return false;
    if (null !== n2) switch (n2.type) {
      case v:
        return r2 instanceof i.BooleanValue ? !r2.value : (0, a.default)(false, "TODO");
      case y:
        return r2 instanceof i.BooleanValue ? false === r2.value : (0, a.default)(false, "TODO");
      case m:
        return r2 instanceof i.NumberValue ? isNaN(r2.value) : (0, a.default)(false, "TODO");
      case b:
        return r2 instanceof i.NumberValue ? isNaN(r2.value) || r2.value < 1 : (0, a.default)(false, "TODO");
      default:
        return false;
    }
    return false;
  }, t.shouldIgnoreAttribute = function(e2, t2, r2) {
    if (null !== t2) return t2.type === d;
    if (r2) return false;
    if (e2.length > 2 && ("o" === e2[0] || "O" === e2[0]) && ("n" === e2[1] || "N" === e2[1])) return true;
    return false;
  }, t.POSITIVE_NUMERIC = t.NUMERIC = t.OVERLOADED_BOOLEAN = t.BOOLEAN = t.BOOLEANISH_STRING = t.STRING = t.RESERVED = t.VALID_ATTRIBUTE_NAME_REGEX = t.ATTRIBUTE_NAME_CHAR = t.ATTRIBUTE_NAME_START_CHAR = t.ROOT_ATTRIBUTE_NAME = t.isUnitlessNumber = t.newlineEatingTags = t.omittedCloseTags = t.RESERVED_PROPS = t.STYLE = void 0;
  var i = r(0), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  t.STYLE = "style";
  var o = /* @__PURE__ */ new Set(["children", "dangerouslySetInnerHTML", "suppressContentEditableWarning", "suppressHydrationWarning"]);
  t.RESERVED_PROPS = o;
  var s = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
  t.omittedCloseTags = s;
  t.newlineEatingTags = { listing: true, pre: true, textarea: true };
  var u = { animationIterationCount: true, borderImageOutset: true, borderImageSlice: true, borderImageWidth: true, boxFlex: true, boxFlexGroup: true, boxOrdinalGroup: true, columnCount: true, columns: true, flex: true, flexGrow: true, flexPositive: true, flexShrink: true, flexNegative: true, flexOrder: true, gridRow: true, gridRowEnd: true, gridRowSpan: true, gridRowStart: true, gridColumn: true, gridColumnEnd: true, gridColumnSpan: true, gridColumnStart: true, fontWeight: true, lineClamp: true, lineHeight: true, opacity: true, order: true, orphans: true, tabSize: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeDasharray: true, strokeDashoffset: true, strokeMiterlimit: true, strokeOpacity: true, strokeWidth: true };
  t.isUnitlessNumber = u;
  var l = ["Webkit", "ms", "Moz", "O"];
  t.ROOT_ATTRIBUTE_NAME = "data-reactroot";
  var c = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
  t.ATTRIBUTE_NAME_START_CHAR = c;
  var f = c + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
  t.ATTRIBUTE_NAME_CHAR = f;
  var p = new RegExp("^[" + c + "][" + f + "]*$");
  t.VALID_ATTRIBUTE_NAME_REGEX = p, Object.keys(u).forEach(function(e2) {
    l.forEach(function(t2) {
      u[(function(e3, t3) {
        return e3 + t3.charAt(0).toUpperCase() + t3.substring(1);
      })(t2, e2)] = u[e2];
    });
  });
  var d = 0;
  t.RESERVED = d;
  t.STRING = 1;
  var h = 2;
  t.BOOLEANISH_STRING = h;
  var v = 3;
  t.BOOLEAN = v;
  var y = 4;
  t.OVERLOADED_BOOLEAN = y;
  var m = 5;
  t.NUMERIC = m;
  var b = 6;
  t.POSITIVE_NUMERIC = b;
  var g = {};
  function w(e2, t2, r2, n2, i2) {
    this.acceptsBooleans = t2 === h || t2 === v || t2 === y, this.attributeName = n2, this.attributeNamespace = i2, this.mustUseProperty = r2, this.propertyName = e2, this.type = t2;
  }
  [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(e2) {
    var t2 = n(e2, 2), r2 = t2[0], i2 = t2[1];
    g[r2] = new w(r2, 1, false, i2, null);
  }), ["children", "dangerouslySetInnerHTML", "defaultValue", "defaultChecked", "innerHTML", "suppressContentEditableWarning", "suppressHydrationWarning", "style"].forEach(function(e2) {
    g[e2] = new w(e2, d, false, e2, null);
  }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(e2) {
    g[e2] = new w(e2, h, false, e2.toLowerCase(), null);
  }), ["autoReverse", "externalResourcesRequired", "preserveAlpha"].forEach(function(e2) {
    g[e2] = new w(e2, h, false, e2, null);
  }), ["allowFullScreen", "async", "autoFocus", "autoPlay", "controls", "default", "defer", "disabled", "formNoValidate", "hidden", "loop", "noModule", "noValidate", "open", "playsInline", "readOnly", "required", "reversed", "scoped", "seamless", "itemScope"].forEach(function(e2) {
    g[e2] = new w(e2, v, false, e2.toLowerCase(), null);
  }), ["checked", "multiple", "muted", "selected"].forEach(function(e2) {
    g[e2] = new w(e2, v, true, e2.toLowerCase(), null);
  }), ["capture", "download"].forEach(function(e2) {
    g[e2] = new w(e2, y, false, e2.toLowerCase(), null);
  }), ["cols", "rows", "size", "span"].forEach(function(e2) {
    g[e2] = new w(e2, b, false, e2.toLowerCase(), null);
  }), ["rowSpan", "start"].forEach(function(e2) {
    g[e2] = new w(e2, m, false, e2.toLowerCase(), null);
  });
  var E = /[\-\:]([a-z])/g, S = function(e2) {
    return e2[1].toUpperCase();
  };
  ["accent-height", "alignment-baseline", "arabic-form", "baseline-shift", "cap-height", "clip-path", "clip-rule", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "dominant-baseline", "enable-background", "fill-opacity", "fill-rule", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "glyph-name", "glyph-orientation-horizontal", "glyph-orientation-vertical", "horiz-adv-x", "horiz-origin-x", "image-rendering", "letter-spacing", "lighting-color", "marker-end", "marker-mid", "marker-start", "overline-position", "overline-thickness", "paint-order", "panose-1", "pointer-events", "rendering-intent", "shape-rendering", "stop-color", "stop-opacity", "strikethrough-position", "strikethrough-thickness", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke-width", "text-anchor", "text-decoration", "text-rendering", "underline-position", "underline-thickness", "unicode-bidi", "unicode-range", "units-per-em", "v-alphabetic", "v-hanging", "v-ideographic", "v-mathematical", "vector-effect", "vert-adv-y", "vert-origin-x", "vert-origin-y", "word-spacing", "writing-mode", "xmlns:xlink", "x-height"].forEach(function(e2) {
    var t2 = e2.replace(E, S);
    g[t2] = new w(t2, 1, false, e2, null);
  }), ["xlink:actuate", "xlink:arcrole", "xlink:href", "xlink:role", "xlink:show", "xlink:title", "xlink:type"].forEach(function(e2) {
    var t2 = e2.replace(E, S);
    g[t2] = new w(t2, 1, false, e2, "http://www.w3.org/1999/xlink");
  }), ["xml:base", "xml:lang", "xml:space"].forEach(function(e2) {
    var t2 = e2.replace(E, S);
    g[t2] = new w(t2, 1, false, e2, "http://www.w3.org/XML/1998/namespace");
  }), g.tabIndex = new w("tabIndex", 1, false, "tabindex", null);
  var T = {}, A = {};
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    for (var t2 = new n.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "console"), r2 = function() {
      var r3 = i[a];
      t2.defineNativeMethod(r3, 0, function(t3, n2) {
        return e2.outputToConsole(r3, n2), e2.intrinsics.undefined;
      });
    }, a = 0; a < i.length; a++) r2();
    return t2.defineNativeMethod("time", 0, function(t3, r3) {
      return e2.outputToConsole("time", r3), e2.intrinsics.undefined;
    }), t2.defineNativeMethod("timeEnd", 0, function(t3, r3) {
      return e2.outputToConsole("timeEnd", r3), e2.intrinsics.undefined;
    }), t2;
  };
  var n = r(0), i = ["assert", "clear", "count", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "table", "time", "timeEnd", "trace", "warn"];
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function a(e2) {
    return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function o(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && s(e2, t2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function u(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function l(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function c(e2, t2, r2) {
    return t2 && l(e2.prototype, t2), r2 && l(e2, r2), e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.StepOutStepper = t.StepOverStepper = t.StepIntoStepper = t.Stepper = void 0;
  r(5);
  var f = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(57));
  var p = (function() {
    function e2(t2, r2, n2, i2) {
      u(this, e2), this._stepStartData = { filePath: t2, line: r2, column: n2, stackSize: i2 };
    }
    return c(e2, [{ key: "isComplete", value: function(e3, t2) {
      (0, f.default)(false, "Abstract method, please override");
    } }, { key: "isAstLocationChanged", value: function(e3) {
      var t2 = e3.loc;
      if (!t2) return false;
      var r2 = t2.source, n2 = t2.start.line, i2 = t2.start.column;
      return null !== r2 && (!!this._stepStartData && (r2 !== this._stepStartData.filePath || n2 !== this._stepStartData.line || i2 !== this._stepStartData.column));
    } }]), e2;
  })();
  t.Stepper = p;
  var d = (function(e2) {
    function t2(e3, r2, n2, o2) {
      return u(this, t2), i(this, a(t2).call(this, e3, r2, n2, o2));
    }
    return o(t2, p), c(t2, [{ key: "isComplete", value: function(e3, t3) {
      return this.isAstLocationChanged(e3) || t3 !== this._stepStartData.stackSize;
    } }]), t2;
  })();
  t.StepIntoStepper = d;
  var h = (function(e2) {
    function t2(e3, r2, n2, o2) {
      return u(this, t2), i(this, a(t2).call(this, e3, r2, n2, o2));
    }
    return o(t2, p), c(t2, [{ key: "isComplete", value: function(e3, t3) {
      return t3 < this._stepStartData.stackSize || t3 === this._stepStartData.stackSize && this.isAstLocationChanged(e3);
    } }]), t2;
  })();
  t.StepOverStepper = h;
  var v = (function(e2) {
    function t2(e3, r2, n2, o2) {
      return u(this, t2), i(this, a(t2).call(this, e3, r2, n2, o2));
    }
    return o(t2, p), c(t2, [{ key: "isComplete", value: function(e3, t3) {
      return t3 < this._stepStartData.stackSize;
    } }]), t2;
  })();
  t.StepOutStepper = v;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function a(e2) {
    var t2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
    return (a = function(e3) {
      if (null === e3 || !(function(e4) {
        return -1 !== Function.toString.call(e4).indexOf("[native code]");
      })(e3)) return e3;
      if ("function" != typeof e3) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t2) {
        if (t2.has(e3)) return t2.get(e3);
        t2.set(e3, r2);
      }
      function r2() {
        return o(e3, arguments, u(this).constructor);
      }
      return r2.prototype = Object.create(e3.prototype, { constructor: { value: r2, enumerable: false, writable: true, configurable: true } }), s(r2, e3);
    })(e2);
  }
  function o(e2, t2, r2) {
    return (o = (function() {
      if ("undefined" == typeof Reflect || !Reflect.construct) return false;
      if (Reflect.construct.sham) return false;
      if ("function" == typeof Proxy) return true;
      try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
        })), true;
      } catch (e3) {
        return false;
      }
    })() ? Reflect.construct : function(e3, t3, r3) {
      var n2 = [null];
      n2.push.apply(n2, t3);
      var i2 = new (Function.bind.apply(e3, n2))();
      return r3 && s(i2, r3.prototype), i2;
    }).apply(null, arguments);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function u(e2) {
    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.DebuggerError = void 0;
  var l = (function(e2) {
    function t2(e3, r2) {
      var n2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (n2 = i(this, u(t2).call(this, "".concat(e3, ": ").concat(r2)))).errorType = e3, n2.message = r2, n2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, a(Error)), t2;
  })();
  t.DebuggerError = l;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return new n.StringValue(i, e2.value);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ClassDefinitionEvaluation = f, t.default = function(e2, t2, r2, n2) {
    return (function(e3, t3, r3, n3) {
      if (t3.id) {
        var i2 = t3.id.name, a2 = f(e3, t3, i2, r3, n3), o2 = (0, s.HasOwnProperty)(e3, a2, "name");
        return false === o2 && u.Functions.SetFunctionName(e3, a2, i2), u.Environment.InitializeBoundName(e3, i2, a2, n3), a2;
      }
      f(e3, t3, void 0, r3, n3);
    })(n2, e2, t2, r2), n2.intrinsics.empty;
  };
  var i = r(0), a = r(4), o = c(r(71)), s = r(3), u = r(2), l = c(r(1));
  function c(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function f(e2, t2, r2, c2, f2) {
    var p, d = f2, h = u.Environment.NewDeclarativeEnvironment(e2, d);
    try {
      var v, y, m = h.environmentRecord;
      void 0 !== r2 && m.CreateImmutableBinding(r2, true);
      var b = t2.superClass;
      if (b) {
        e2.getRunningContext().lexicalEnvironment = h;
        var g = null;
        try {
          g = (function(e3, t3, r3) {
            var n2 = e3.getRunningContext().lexicalEnvironment.evaluate(t3, r3), o2 = u.Environment.GetValue(e3, n2);
            if (o2 instanceof i.AbstractValue) {
              var s2 = new a.CompilerDiagnostic("unknown super class", t3.loc, "PP0009", "RecoverableError");
              if ("Fail" === e3.handleError(s2)) throw new a.FatalError();
            }
            return o2 instanceof i.ObjectValue ? o2 : null;
          })(e2, b, c2);
        } finally {
          e2.getRunningContext().lexicalEnvironment = d;
        }
        if (null === g) v = e2.intrinsics.null, y = e2.intrinsics.FunctionPrototype;
        else {
          if (!(0, s.IsConstructor)(e2, g)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "superclass must be a constructor");
          if (g instanceof i.ECMAScriptFunctionValue && "generator" === g.$FunctionKind) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "superclass cannot be a generator");
          if (!((v = (0, s.Get)(e2, g, "prototype")) instanceof i.ObjectValue || v instanceof i.NullValue)) {
            if (!(v instanceof i.AbstractValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "protoParent must be an instance of Object or Null");
            var w = new a.CompilerDiagnostic("unknown super class prototype", b.loc, "PP0010", "RecoverableError");
            if ("Fail" === e2.handleError(w)) throw new a.FatalError();
            v = e2.intrinsics.ObjectPrototype;
          }
          y = g;
        }
      } else v = e2.intrinsics.ObjectPrototype, y = e2.intrinsics.FunctionPrototype;
      var E, S = u.Create.ObjectCreate(e2, v);
      S.$IsClassPrototype = true;
      var T = false, A = [], C = true, P = false, O = void 0;
      try {
        for (var x, _ = t2.body.body[Symbol.iterator](); !(C = (x = _.next()).done); C = true) {
          var V = x.value;
          "ClassMethod" === V.type && A.push(V);
        }
      } catch (e3) {
        P = true, O = e3;
      } finally {
        try {
          C || null == _.return || _.return();
        } finally {
          if (P) throw O;
        }
      }
      if (0 === A.length ? (T = true, E = e2.intrinsics.empty) : E = (0, s.ConstructorMethod)(e2, A), E instanceof i.EmptyValue) {
        T = true;
        var D = n((t2.superClass ? (0, o.default)(e2, "class NeedClassForParsing { constructor(... args){ super (...args);} }", "") : (0, o.default)(e2, "class NeedClassForParsing { constructor( ){ } }", "")).program.body, 1)[0];
        (0, l.default)("ClassDeclaration" === D.type);
        var N = D.body;
        (0, l.default)("ClassMethod" === N.body[0].type), E = N.body[0];
      }
      e2.getRunningContext().lexicalEnvironment = h;
      try {
        var I;
        (p = u.Functions.DefineMethod(e2, E, S, f2, c2, y).$Closure).$HasEmptyConstructor = T, t2.superClass && (p.$ConstructorKind = "derived"), (0, s.MakeConstructor)(e2, p, false, S), (0, s.MakeClassConstructor)(e2, p), u.Create.CreateMethodProperty(e2, S, "constructor", p), I = 0 === A.length ? [] : (0, s.NonConstructorMethodDefinitions)(e2, A);
        var k = true, j = false, F = void 0;
        try {
          for (var R, M = I[Symbol.iterator](); !(k = (R = M.next()).done); k = true) {
            var B = R.value;
            (0, s.IsStatic)(B) ? u.Properties.PropertyDefinitionEvaluation(e2, B, p, f2, c2, false) : u.Properties.PropertyDefinitionEvaluation(e2, B, S, f2, c2, false);
          }
        } catch (e3) {
          j = true, F = e3;
        } finally {
          try {
            k || null == M.return || M.return();
          } finally {
            if (j) throw F;
          }
        }
      } finally {
        e2.getRunningContext().lexicalEnvironment = d;
      }
      void 0 !== r2 && m.InitializeBinding(r2, p);
    } finally {
      e2.onDestroyScope(h);
    }
    return p;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    var o = a.getRunningContext().lexicalEnvironment, s = i.Environment.NewDeclarativeEnvironment(a, o);
    i.Environment.BlockDeclarationInstantiation(a, t2, e2.body, s), a.getRunningContext().lexicalEnvironment = s;
    try {
      var u;
      if (e2.directives) {
        var l = true, c = false, f = void 0;
        try {
          for (var p, d = e2.directives[Symbol.iterator](); !(l = (p = d.next()).done); l = true) {
            var h = p.value;
            u = new n.StringValue(a, h.value.value);
          }
        } catch (e3) {
          c = true, f = e3;
        } finally {
          try {
            l || null == d.return || d.return();
          } finally {
            if (c) throw f;
          }
        }
      }
      return i.Functions.EvaluateStatements(e2.body, u, t2, s, a);
    } finally {
      a.getRunningContext().lexicalEnvironment = o, a.onDestroyScope(s);
    }
  };
  var n = r(0), i = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.SourceMapManager = void 0;
  var a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var o = (function() {
    function e2(t2, r2) {
      if ((function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), void 0 !== t2) {
        if (void 0 === r2) throw new Error("Invalid input: Can't provide a sourcemap directory root without having sourcemaps present");
        this._buckRoot = t2, "/" === this._buckRoot[this._buckRoot.length - 1] && (this._buckRoot = this._buckRoot.slice(0, -1));
      } else {
        if (!(r2 && r2.length > 0)) return this._sourcemapCommonPrefix = void 0, void (this._sourcemapMapDifference = void 0);
        var n2 = true, i2 = false, o2 = void 0;
        try {
          for (var s, u = r2[Symbol.iterator](); !(n2 = (s = u.next()).done); n2 = true) {
            var l = s.value;
            if (void 0 === l.sourceMapContents || "" === l.sourceMapContents) return this._sourcemapCommonPrefix = void 0, void (this._sourcemapMapDifference = void 0);
          }
        } catch (e3) {
          i2 = true, o2 = e3;
        } finally {
          try {
            n2 || null == u.return || u.return();
          } finally {
            if (i2) throw o2;
          }
        }
        var c = [], f = [], p = true, d = false, h = void 0;
        try {
          for (var v, y = r2[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
            var m = v.value;
            (0, a.default)(void 0 !== m.sourceMapContents);
            var b = JSON.parse(m.sourceMapContents);
            if ("sections" in b) {
              var g = true, w = false, E = void 0;
              try {
                for (var S, T = b.sections[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
                  var A = S.value, C = true, P = false, O = void 0;
                  try {
                    for (var x, _ = A.map.sources[Symbol.iterator](); !(C = (x = _.next()).done); C = true) {
                      var V = x.value;
                      c.push(this._getAbsoluteSourcePath(m.filePath, V));
                    }
                  } catch (e3) {
                    P = true, O = e3;
                  } finally {
                    try {
                      C || null == _.return || _.return();
                    } finally {
                      if (P) throw O;
                    }
                  }
                }
              } catch (e3) {
                w = true, E = e3;
              } finally {
                try {
                  g || null == T.return || T.return();
                } finally {
                  if (w) throw E;
                }
              }
            } else {
              var D = true, N = false, I = void 0;
              try {
                for (var k, j = b.sources[Symbol.iterator](); !(D = (k = j.next()).done); D = true) {
                  var F = k.value;
                  c.push(this._getAbsoluteSourcePath(m.filePath, F));
                }
              } catch (e3) {
                N = true, I = e3;
              } finally {
                try {
                  D || null == j.return || j.return();
                } finally {
                  if (N) throw I;
                }
              }
            }
            f.push(this._stripEmptyStringBookends(m.filePath.split("/")));
          }
        } catch (e3) {
          d = true, h = e3;
        } finally {
          try {
            p || null == y.return || y.return();
          } finally {
            if (d) throw h;
          }
        }
        var R = this._findCommonPrefix(c), M = this._stripEmptyStringBookends(R.split("/")), B = this._findCommonPrefix(f), L = this._stripEmptyStringBookends(B.split("/"));
        this._sourcemapCommonPrefix = this._findCommonPrefix([M, L]), this._sourcemapMapDifference = this._findMapDifference(this._sourcemapCommonPrefix, B);
      }
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "_getAbsoluteSourcePath", value: function(e3, t2) {
      var r2 = this._stripEmptyStringBookends(e3.split("/"));
      r2.pop();
      var n2 = t2.split("/"), i2 = true, a2 = false, o2 = void 0;
      try {
        for (var s, u = n2[Symbol.iterator](); !(i2 = (s = u.next()).done); i2 = true) {
          var l = s.value;
          switch (l) {
            case ".":
              break;
            case "..":
              r2.pop();
              break;
            default:
              r2.push(l);
          }
        }
      } catch (e4) {
        a2 = true, o2 = e4;
      } finally {
        try {
          i2 || null == u.return || u.return();
        } finally {
          if (a2) throw o2;
        }
      }
      return r2;
    } }, { key: "_findCommonPrefix", value: function(e3) {
      for (var t2 = 0, r2 = true, i2 = Math.max.apply(Math, n(e3.map(function(e4) {
        return e4.length;
      }))); r2 && t2 < i2; ) {
        var a2 = e3[0][t2], o2 = true, s = false, u = void 0;
        try {
          for (var l, c = e3[Symbol.iterator](); !(o2 = (l = c.next()).done); o2 = true) {
            if (l.value[t2] !== a2) {
              r2 = false;
              break;
            }
          }
        } catch (e4) {
          s = true, u = e4;
        } finally {
          try {
            o2 || null == c.return || c.return();
          } finally {
            if (s) throw u;
          }
        }
        r2 && (t2 += 1);
      }
      return 1 === e3.length && (t2 -= 1), "/".concat(e3[0].slice(0, t2).join("/"), "/");
    } }, { key: "_findMapDifference", value: function(e3, t2) {
      for (var r2 = this._stripEmptyStringBookends(t2.replace(e3, "").split("/")), n2 = "", i2 = 0; i2 < r2.length; i2++) n2 = n2.concat("../");
      return n2;
    } }, { key: "_stripEmptyStringBookends", value: function(e3) {
      return "" === e3[0] && e3.shift(), "" === e3[e3.length - 1] && e3.pop(), e3;
    } }, { key: "relativeToAbsolute", value: function(e3) {
      var t2;
      if (void 0 !== this._buckRoot) {
        var r2 = this._buckRoot;
        if (this._stripEmptyStringBookends(e3.split("/"))[0] === this._stripEmptyStringBookends(this._buckRoot.split("/"))[0]) t2 = e3;
        else t2 = r2 + ("/" === e3[0] ? "" : "/") + e3;
      } else void 0 !== this._sourcemapCommonPrefix && void 0 !== this._sourcemapMapDifference ? (t2 = e3.replace(this._sourcemapMapDifference, ""), (0, a.default)(void 0 !== this._sourcemapCommonPrefix), t2 = this._sourcemapCommonPrefix + t2) : t2 = e3;
      return t2;
    } }, { key: "absoluteToRelative", value: function(e3) {
      var t2;
      return void 0 !== this._buckRoot ? t2 = e3.replace(this._buckRoot, "") : void 0 !== this._sourcemapCommonPrefix && void 0 !== this._sourcemapMapDifference ? (t2 = e3.replace(this._sourcemapCommonPrefix, ""), (0, a.default)(void 0 !== this._sourcemapMapDifference), t2 = this._sourcemapMapDifference + t2) : t2 = e3, t2;
    } }]), e2;
  })();
  t.SourceMapManager = o;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Referentializer = void 0;
  r(10);
  var a = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), o = c(r(108)), s = (r(64), c(r(1))), u = r(50), l = r(32);
  r(8);
  function c(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var f = (function() {
    function e2(t2, r2, n2, i2, a2, o2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._options = r2, this.scopeNameGenerator = n2, this.scopeBindingNameGenerator = i2, this.referentializationState = /* @__PURE__ */ new Map(), this._leakedNameGenerator = a2, this.realm = t2, this._residualOptimizedFunctions = o2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "getStatistics", value: function() {
      return (0, s.default)(this.realm.statistics instanceof u.SerializerStatistics, "serialization requires SerializerStatistics"), this.realm.statistics;
    } }, { key: "_createReferentializationState", value: function() {
      return { capturedScopeInstanceIdx: 0, capturedScopesArray: a.identifier(this.scopeNameGenerator.generate("main")), capturedScopeAccessFunctionId: a.identifier(this.scopeBindingNameGenerator.generate("get_scope_binding")), serializedScopes: /* @__PURE__ */ new Map() };
    } }, { key: "_getReferentializationState", value: function(e3) {
      return (0, l.getOrDefault)(this.referentializationState, e3, this._createReferentializationState.bind(this));
    } }, { key: "createLeakedIds", value: function(e3) {
      var t2 = [], r2 = this._getReferentializationState(e3).serializedScopes, i2 = true, o2 = false, s2 = void 0;
      try {
        for (var u2, l2 = r2.values()[Symbol.iterator](); !(i2 = (u2 = l2.next()).done); i2 = true) {
          var c2 = u2.value;
          t2.push.apply(t2, n(c2.leakedIds));
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          i2 || null == l2.return || l2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      return 0 === t2.length ? [] : [a.variableDeclaration("var", t2.map(function(e4) {
        return a.variableDeclarator(e4);
      }))];
    } }, { key: "createCapturedScopesPrelude", value: function(e3) {
      var t2 = this._createCaptureScopeAccessFunction(e3);
      return void 0 === t2 ? [] : [t2, this._createCapturedScopesArrayInitialization(e3)];
    } }, { key: "_createCaptureScopeAccessFunction", value: function(e3) {
      var t2 = [], r2 = this._getReferentializationState(e3).serializedScopes, n2 = /* @__PURE__ */ new Map(), i2 = true, u2 = false, l2 = void 0;
      try {
        for (var c2, f2 = r2.values()[Symbol.iterator](); !(i2 = (c2 = f2.next()).done); i2 = true) {
          var p = c2.value;
          if (0 !== p.initializationValues.length) {
            var d = a.arrayExpression(p.initializationValues), h = (0, o.default)(d, {}, "").code;
            if (n2.has(h)) {
              var v = n2.get(h);
              (0, s.default)(v), v.scopeIDs.push(p.id);
            } else n2.set(h, { scopeIDs: [p.id], value: d });
          }
        }
      } catch (e4) {
        u2 = true, l2 = e4;
      } finally {
        try {
          i2 || null == f2.return || f2.return();
        } finally {
          if (u2) throw l2;
        }
      }
      if (0 !== n2.size) {
        var y = [], m = a.identifier("__selector"), b = a.identifier("__captured"), g = this._getReferentializationState(e3).capturedScopesArray, w = a.memberExpression(g, m, true), E = true, S = false, T = void 0;
        try {
          for (var A, C = function() {
            var e4 = A.value;
            e4.scopeIDs.forEach(function(r3, n3) {
              var i3 = [];
              n3 === e4.scopeIDs.length - 1 && (i3 = [a.expressionStatement(a.assignmentExpression("=", b, e4.value)), a.breakStatement()]), t2.push(a.switchCase(a.numericLiteral(r3), i3));
            });
          }, P = n2.values()[Symbol.iterator](); !(E = (A = P.next()).done); E = true) C();
        } catch (e4) {
          S = true, T = e4;
        } finally {
          try {
            E || null == P.return || P.return();
          } finally {
            if (S) throw T;
          }
        }
        this.realm.invariantLevel >= 1 && t2.push(a.switchCase(null, [a.throwStatement(a.newExpression(a.identifier("Error"), [a.stringLiteral("Unknown scope selector")]))])), y.push(a.variableDeclaration("var", [a.variableDeclarator(b)])), y.push(a.switchStatement(m, t2)), y.push(a.expressionStatement(a.assignmentExpression("=", w, b))), y.push(a.returnStatement(b));
        var O = a.functionExpression(null, [m], a.blockStatement(y)), x = this._getReferentializationState(e3).capturedScopeAccessFunctionId;
        return a.variableDeclaration("var", [a.variableDeclarator(x, O)]);
      }
    } }, { key: "_getReferentializationScope", value: function(e3) {
      if (e3.potentialReferentializationScopes.has("GLOBAL")) return "GLOBAL";
      if (e3.potentialReferentializationScopes.size > 1) {
        var t2 = e3.potentialReferentializationScopes;
        return this._residualOptimizedFunctions.tryGetOutermostOptimizedFunction(t2) || "GLOBAL";
      }
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = e3.potentialReferentializationScopes[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          return a2.value;
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
      (0, s.default)(false);
    } }, { key: "_getSerializedBindingScopeInstance", value: function(e3) {
      var t2 = e3.declarativeEnvironmentRecord;
      (0, s.default)(t2);
      var r2 = this._getReferentializationScope(e3), n2 = this._getReferentializationState(r2), i2 = n2.serializedScopes.get(t2);
      return i2 || (i2 = { name: this.scopeNameGenerator.generate(), id: n2.capturedScopeInstanceIdx++, initializationValues: [], leakedIds: [], referentializationScope: r2 }, n2.serializedScopes.set(t2, i2)), (0, s.default)(i2.referentializationScope === r2), (0, s.default)(!e3.scope || e3.scope === i2), e3.scope = i2, i2;
    } }, { key: "getReferentializedScopeInitialization", value: function(e3, t2) {
      var r2 = e3.capturedScope;
      (0, s.default)(r2);
      var n2 = this._getReferentializationState(e3.referentializationScope), i2 = n2.capturedScopeAccessFunctionId, o2 = n2.capturedScopesArray, u2 = a.logicalExpression("||", a.memberExpression(o2, t2, true), a.callExpression(i2, [t2]));
      return [a.variableDeclaration("var", [a.variableDeclarator(a.identifier(r2), u2)])];
    } }, { key: "referentializeLeakedBinding", value: function(e3) {
      (0, s.default)(e3.hasLeaked);
      var t2 = a.identifier(this._leakedNameGenerator.generate(e3.name));
      this._getSerializedBindingScopeInstance(e3).leakedIds.push(t2), e3.serializedValue = e3.serializedUnscopedLocation = t2, this.getStatistics().referentialized++;
    } }, { key: "referentializeModifiedBinding", value: function(e3) {
      (0, s.default)(e3.modified);
      var t2 = this._getSerializedBindingScopeInstance(e3), r2 = "__captured" + t2.name, n2 = t2.initializationValues.length, i2 = a.numericLiteral(n2);
      (0, s.default)(e3.serializedValue), t2.initializationValues.push(e3.serializedValue), t2.capturedScope = r2, e3.serializedValue = a.memberExpression(a.identifier(r2), i2, true);
      var o2 = this._getReferentializationState(t2.referentializationScope), u2 = o2.capturedScopeAccessFunctionId, l2 = o2.capturedScopesArray, c2 = a.numericLiteral(t2.id), f2 = a.logicalExpression("||", a.memberExpression(l2, c2, true), a.callExpression(u2, [c2]));
      e3.serializedUnscopedLocation = a.memberExpression(f2, i2, true), this.getStatistics().referentialized++;
    } }, { key: "cleanInstance", value: function(e3) {
      e3.initializationStatements = [];
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = e3.residualFunctionBindings.values()[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value;
          if (o2.referentialized && o2.declarativeEnvironmentRecord) {
            var s2 = o2.declarativeEnvironmentRecord, u2 = this._getReferentializationScope(o2), l2 = this.referentializationState.get(u2);
            if (l2) {
              var c2 = l2.serializedScopes.get(s2);
              c2 && (c2.initializationValues = [], c2.leakedIds = []);
            }
          }
          delete o2.serializedValue;
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }, { key: "referentialize", value: function(e3) {
      var t2 = e3.residualFunctionBindings, r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = t2.values()[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var u2 = a2.value;
          void 0 !== u2 && (u2.modified && (u2.declarativeEnvironmentRecord || (u2.referentialized = true), u2.referentialized || (u2.hasLeaked || this._getSerializedBindingScopeInstance(u2), u2.referentialized = true), (0, s.default)(u2.referentialized), u2.declarativeEnvironmentRecord && u2.scope && e3.scopeInstances.set(u2.scope.name, u2.scope)));
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
    } }, { key: "_createCapturedScopesArrayInitialization", value: function(e3) {
      return a.variableDeclaration("var", [a.variableDeclarator(this._getReferentializationState(e3).capturedScopesArray, a.newExpression(a.identifier("Array"), [a.numericLiteral(this._getReferentializationState(e3).capturedScopeInstanceIdx)]))]);
    } }]), e2;
  })();
  t.Referentializer = f;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.factorifyObjects = function(e2, t2) {
    var r2 = /* @__PURE__ */ Object.create(null), i2 = true, s = false, u = void 0;
    try {
      for (var l, c = e2[Symbol.iterator](); !(i2 = (l = c.next()).done); i2 = true) {
        var f = l.value;
        switch (f.type) {
          case "VariableDeclaration":
            var p = true, d = false, h = void 0;
            try {
              for (var v, y = f.declarations[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
                var m = v.value, b = m.init;
                if (b && "ObjectExpression" === b.type) {
                  var g = o(b);
                  if (g) {
                    var w = r2[g] = r2[g] || [];
                    w.push({ declar: m, initializerAstNodeName: "init" });
                  }
                }
              }
            } catch (e3) {
              d = true, h = e3;
            } finally {
              try {
                p || null == y.return || y.return();
              } finally {
                if (d) throw h;
              }
            }
            break;
          case "ExpressionStatement":
            var E = f.expression;
            if ("AssignmentExpression" !== E.type) break;
            var S = E.right;
            if ("ObjectExpression" !== S.type) break;
            var T = o(S);
            if (!T) continue;
            var A = "right", C = r2[T] = r2[T] || [];
            C.push({ declar: f.expression, initializerAstNodeName: A });
        }
      }
    } catch (e3) {
      s = true, u = e3;
    } finally {
      try {
        i2 || null == c.return || c.return();
      } finally {
        if (s) throw u;
      }
    }
    for (var P in r2) {
      var O = r2[P];
      if (!(O.length < 5)) {
        for (var x = P.split("|"), _ = [], V = [], D = 0; D < x.length; D++) {
          var N = x[D], I = n.identifier("__".concat(D));
          _.push(I);
          var k = n.isValidIdentifier(N) ? n.identifier(N) : n.stringLiteral(N);
          V.push(n.objectProperty(k, I));
        }
        var j = n.identifier(t2.generate("root")), F = n.blockStatement([n.returnStatement(n.objectExpression(V))]), R = n.functionDeclaration(j, _, F);
        e2.unshift(R);
        var M = true, B = false, L = void 0;
        try {
          for (var $, G = O[Symbol.iterator](); !(M = ($ = G.next()).done); M = true) {
            var z = $.value, m = z.declar, A = z.initializerAstNodeName, U = [], W = true, q = false, H = void 0;
            try {
              for (var K, J = m[A].properties[Symbol.iterator](); !(W = (K = J.next()).done); W = true) {
                var Y = K.value;
                U.push(Y.value);
              }
            } catch (e3) {
              q = true, H = e3;
            } finally {
              try {
                W || null == J.return || J.return();
              } finally {
                if (q) throw H;
              }
            }
            m[A] = n.callExpression(j, U);
          }
        } catch (e3) {
          B = true, L = e3;
        } finally {
          try {
            M || null == G.return || G.return();
          } finally {
            if (B) throw L;
          }
        }
        var X = /* @__PURE__ */ new Set(), Q = true, Z = false, ee = void 0;
        try {
          for (var te, re = function() {
            var r3 = te.value, i3 = r3.declar, o2 = r3.initializerAstNodeName;
            if (X.has(i3)) return "continue";
            var s2 = [], u2 = 0, l2 = true, c2 = false, f2 = void 0;
            try {
              for (var p2, d2 = O[Symbol.iterator](); !(l2 = (p2 = d2.next()).done); l2 = true) {
                var h2 = p2.value, v2 = h2.declar, y2 = h2.initializerAstNodeName;
                if (!X.has(v2) && i3 !== v2) {
                  for (var m2 = [], b2 = 0; b2 < x.length; b2++) a(i3[o2].arguments[b2], v2[y2].arguments[b2]) && m2.push(b2);
                  m2.length && (u2 = Math.max(u2, m2.length), s2.push({ declar: v2, initializerAstNodeName: y2, sharedArgs: m2 }));
                }
              }
            } catch (e3) {
              c2 = true, f2 = e3;
            } finally {
              try {
                l2 || null == d2.return || d2.return();
              } finally {
                if (c2) throw f2;
              }
            }
            for (var g2 = /* @__PURE__ */ Object.create(null), w2 = 0; w2 < s2.length; w2++) {
              var E2 = s2[w2], v2 = E2.declar, y2 = E2.initializerAstNodeName, S2 = E2.sharedArgs;
              if (S2.length === u2) {
                S2 = S2.join(",");
                var T2 = g2[S2] = g2[S2] || [{ declar: i3, initializerAstNodeName: o2 }];
                T2.push({ declar: v2, initializerAstNodeName: y2 });
              }
            }
            var A2 = void 0, C2 = void 0;
            for (var P2 in g2) {
              var _2 = g2[P2];
              (void 0 === A2 || _2.length > C2) && (C2 = _2.length, A2 = P2);
            }
            if (void 0 === A2) return "continue";
            for (var V2 = g2[A2], D2 = A2.split(","), N2 = [], I2 = [], k2 = i3[o2].arguments, F2 = 0; F2 < k2.length; F2++) {
              var R2 = k2[F2];
              if (D2.indexOf(F2 + "") >= 0) N2.push(R2);
              else {
                var M2 = n.identifier("__".concat(F2));
                N2.push(M2), I2.push(M2);
              }
            }
            var B2 = n.identifier(t2.generate("sub")), L2 = n.blockStatement([n.returnStatement(n.callExpression(j, N2))]), $2 = n.functionDeclaration(B2, I2, L2);
            e2.unshift($2);
            var G2 = true, z2 = false, U2 = void 0;
            try {
              for (var W2, q2 = V2[Symbol.iterator](); !(G2 = (W2 = q2.next()).done); G2 = true) {
                var H2 = W2.value, v2 = H2.declar, y2 = H2.initializerAstNodeName;
                X.add(v2);
                var K2 = v2[y2];
                K2.callee = B2, K2.arguments = K2.arguments.filter(function(e3, t3) {
                  return D2.indexOf(t3 + "") < 0;
                });
              }
            } catch (e3) {
              z2 = true, U2 = e3;
            } finally {
              try {
                G2 || null == q2.return || q2.return();
              } finally {
                if (z2) throw U2;
              }
            }
          }, ne = O[Symbol.iterator](); !(Q = (te = ne.next()).done); Q = true) re();
        } catch (e3) {
          Z = true, ee = e3;
        } finally {
          try {
            Q || null == ne.return || ne.return();
          } finally {
            if (Z) throw ee;
          }
        }
      }
    }
  };
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
  r(64);
  function i(e2) {
    switch (e2.type) {
      case "NullLiteral":
      case "BooleanLiteral":
      case "StringLiteral":
      case "NumericLiteral":
        return true;
      case "UnaryExpression":
        return "void" === e2.operator && i(e2.argument);
      default:
        return false;
    }
  }
  function a(e2, t2) {
    var r2 = e2.type;
    return r2 === t2.type && ("Identifier" === r2 ? e2.name === t2.name : "NullLiteral" === r2 || ("BooleanLiteral" === r2 || "StringLiteral" === r2 || "NumericLiteral" === r2 ? Object.is(e2.value, t2.value) : "UnaryExpression" === r2 && ("void" === e2.operator && "void" === t2.operator && i(e2.argument) && i(t2.argument))));
  }
  function o(e2) {
    var t2 = [], r2 = true, n2 = false, i2 = void 0;
    try {
      for (var a2, o2 = e2.properties[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
        var s = a2.value;
        if ("ObjectProperty" !== s.type) return false;
        var u = s.key;
        if ("StringLiteral" === u.type) t2.push(u.value);
        else {
          if ("Identifier" !== u.type) return false;
          if (s.computed) return false;
          t2.push(u.name);
        }
      }
    } catch (e3) {
      n2 = true, i2 = e3;
    } finally {
      try {
        r2 || null == o2.return || o2.return();
      } finally {
        if (n2) throw i2;
      }
    }
    for (var l = 0; l < t2.length; l++) {
      if (t2[l].indexOf("|") >= 0) return false;
    }
    return t2.join("|");
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.getReplacement = function(e2, t2) {
    var r2;
    void 0 !== t2 && (t2.mightNotBeFalse() ? t2.mightNotBeTrue() || (r2 = true) : r2 = false);
    return { node: e2, truthiness: r2 };
  }, t.isPure = s, t.ResidualFunctionInstantiator = void 0;
  var i = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), a = r(96), o = r(31);
  function s(e2) {
    switch (e2.type) {
      case "NullLiteral":
      case "BooleanLiteral":
      case "StringLiteral":
      case "NumericLiteral":
        return true;
      case "UnaryExpression":
      case "SpreadElement":
        return s(e2.argument);
      case "BinaryExpression":
      case "LogicalExpression":
        var t2 = e2;
        return s(t2.left) && s(t2.right);
      default:
        return false;
    }
  }
  var u = (function() {
    function e2(t2, r2, n2, i2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.factoryFunctionInfos = t2, this.identifierReplacements = r2, this.callReplacements = n2, this.root = i2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "instantiate", value: function() {
      return this._replace(this.root);
    } }, { key: "_getLiteralTruthiness", value: function(e3) {
      switch (e3.type) {
        case "BooleanLiteral":
        case "NumericLiteral":
        case "StringLiteral":
          return !!e3.value;
        case "Identifier":
          var t2 = this.identifierReplacements.get(e3);
          return void 0 !== t2 ? t2.truthiness : void 0;
        case "CallExpression":
          var r2 = this.callReplacements.get(e3);
          return void 0 !== r2 ? r2.truthiness : void 0;
        case "FunctionExpression":
        case "ArrowFunctionExpression":
        case "RegExpLiteral":
          return true;
        case "ClassExpression":
          var n2 = e3;
          return null === n2.superClass && 0 === n2.body.body.length || void 0;
        case "ObjectExpression":
          return !!e3.properties.every(function(e4) {
            return s(e4.key) && s(e4.value);
          }) || void 0;
        case "ArrayExpression":
          return !!e3.elements.every(function(e4) {
            return void 0 === e4 || s(e4);
          }) || void 0;
        case "NullLiteral":
          return false;
        case "UnaryExpression":
          var i2 = e3;
          return ("void" !== i2.operator || !s(i2.argument)) && void 0;
        default:
          return;
      }
    } }, { key: "_replaceIdentifier", value: function(e3) {
      var t2 = this.identifierReplacements.get(e3);
      return void 0 !== t2 ? t2.node : e3;
    } }, { key: "_replaceJSXIdentifier", value: function(e3) {
      var t2 = this.identifierReplacements.get(e3);
      return void 0 !== t2 ? (0, a.convertExpressionToJSXIdentifier)(t2.node, true) : e3;
    } }, { key: "_replaceLabeledStatement", value: function(e3) {
      var t2 = this._replace(e3.body);
      if (t2 !== e3.body) {
        var r2 = Object.assign({}, e3);
        return r2.body = t2, r2;
      }
      return e3;
    } }, { key: "_replaceCallExpression", value: function(e3) {
      var t2 = this.callReplacements.get(e3);
      return void 0 !== t2 ? t2.node : this._replaceFallback(e3);
    } }, { key: "_replaceFunctionExpression", value: function(e3) {
      if (this.root !== e3) {
        var t2 = e3.body.uniqueOrderedTag;
        if (void 0 !== t2) {
          var r2 = this.factoryFunctionInfos.get(t2);
          if (r2 && (function(e4) {
            if (e4.anyContainingAdditionalFunction) return false;
            var t3 = e4.functionInfo, r3 = t3.unbound, n3 = t3.modified, i2 = t3.usesThis;
            return 0 === r3.size && 0 === n3.size && !i2;
          })(r2)) {
            var n2 = r2.factoryId;
            return i.callExpression(i.memberExpression(n2, i.identifier("bind")), [o.nullExpression]);
          }
        }
      }
      return this._replaceFallback(e3);
    } }, { key: "_replaceIfStatement", value: function(e3) {
      var t2 = this._getLiteralTruthiness(e3.test);
      return true === t2 ? this._replace(e3.consequent) : false === t2 ? null !== e3.alternate ? this._replace(e3.alternate) : i.emptyStatement() : this._replaceFallback(e3);
    } }, { key: "_replaceConditionalExpression", value: function(e3) {
      var t2 = this._getLiteralTruthiness(e3.test);
      return void 0 !== t2 ? t2 ? this._replace(e3.consequent) : this._replace(e3.alternate) : this._replaceFallback(e3);
    } }, { key: "_replaceLogicalExpression", value: function(e3) {
      var t2 = this._getLiteralTruthiness(e3.left);
      return "&&" === e3.operator && void 0 !== t2 ? t2 ? this._replace(e3.right) : this._replace(e3.left) : "||" === e3.operator && void 0 !== t2 ? t2 ? this._replace(e3.left) : this._replace(e3.right) : this._replaceFallback(e3);
    } }, { key: "_replaceWhileStatement", value: function(e3) {
      return false === this._getLiteralTruthiness(e3.test) ? i.emptyStatement() : this._replaceFallback(e3);
    } }, { key: "_replaceFallback", value: function(e3) {
      var t2;
      for (var r2 in e3) {
        var n2 = e3[r2];
        if (n2) {
          var i2 = void 0;
          if (Array.isArray(n2)) {
            for (var a2 = void 0, o2 = 0; o2 < n2.length; o2++) {
              var s2 = n2[o2];
              if (s2) {
                var u2 = this._replace(s2);
                u2 !== s2 && (void 0 === a2 && (a2 = n2.slice(0)), a2[o2] = u2);
              }
            }
            if (void 0 === a2) continue;
            i2 = a2;
          } else {
            if (!n2.type) continue;
            if ((i2 = this._replace(n2)) === n2) continue;
          }
          void 0 === t2 && (t2 = Object.assign({}, e3)), t2[r2] = i2;
        }
      }
      return t2 || e3;
    } }, { key: "_replace", value: function(e3) {
      switch (e3.type) {
        case "Identifier":
          return this._replaceIdentifier(e3);
        case "LabeledStatement":
          return this._replaceLabeledStatement(e3);
        case "BreakStatement":
        case "ContinueStatement":
          return e3;
        case "JSXIdentifier":
        case "JSXMemberExpressions":
          return this._replaceJSXIdentifier(e3);
        case "CallExpression":
          return this._replaceCallExpression(e3);
        case "FunctionExpression":
          return this._replaceFunctionExpression(e3);
        case "IfStatement":
          return this._replaceIfStatement(e3);
        case "ConditionalExpression":
          return this._replaceConditionalExpression(e3);
        case "LogicalExpression":
          return this._replaceLogicalExpression(e3);
        case "WhileStatement":
          return this._replaceWhileStatement(e3);
        default:
          return this._replaceFallback(e3);
      }
    } }]), e2;
  })();
  t.ResidualFunctionInstantiator = u;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualFunctions = void 0;
  var o = r(4), s = (r(8), r(0)), u = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(33), f = r(50), p = r(143), d = (r(38), r(426)), h = r(31), v = (r(141), r(32));
  var y = (function() {
    function e2(t2, r2, n2, i2, a2, o2, s2, u2, c2, f2, p2, h2, v2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.modules = n2, this.requireReturns = i2, this.locationService = a2, this.prelude = o2, this.factoryNameGenerator = s2, this.functionPrototypes = /* @__PURE__ */ new Map(), this.firstFunctionUsages = /* @__PURE__ */ new Map(), this.functions = /* @__PURE__ */ new Map(), this.classes = /* @__PURE__ */ new Map(), this.functionInstances = [], this.residualFunctionInitializers = new d.ResidualFunctionInitializers(a2), this.residualFunctionInfos = u2, this.residualFunctionInstances = c2, this.residualClassMethodInstances = f2, this.additionalFunctionValueInfos = p2, this.referentializer = v2;
      var y2 = true, m = false, b = void 0;
      try {
        for (var g, w = c2.values()[Symbol.iterator](); !(y2 = (g = w.next()).done); y2 = true) {
          var E = g.value;
          (0, l.default)(void 0 !== E), p2.has(E.functionValue) || this.addFunctionInstance(E);
        }
      } catch (e3) {
        m = true, b = e3;
      } finally {
        try {
          y2 || null == w.return || w.return();
        } finally {
          if (m) throw b;
        }
      }
      this.additionalFunctionValueNestedFunctions = h2, this.additionalFunctionPreludes = /* @__PURE__ */ new Map();
      var S = true, T = false, A = void 0;
      try {
        for (var C, P = p2.keys()[Symbol.iterator](); !(S = (C = P.next()).done); S = true) {
          var O = C.value;
          this.additionalFunctionPreludes.set(O, []);
        }
      } catch (e3) {
        T = true, A = e3;
      } finally {
        try {
          S || null == P.return || P.return();
        } finally {
          if (T) throw A;
        }
      }
    }
    return (function(e3, t2, r2) {
      t2 && a(e3.prototype, t2), r2 && a(e3, r2);
    })(e2, [{ key: "getStatistics", value: function() {
      return (0, l.default)(this.realm.statistics instanceof f.SerializerStatistics, "serialization requires SerializerStatistics"), this.realm.statistics;
    } }, { key: "addFunctionInstance", value: function(e3) {
      this.functionInstances.push(e3);
      var t2 = e3.functionValue.$ECMAScriptCode;
      (0, l.default)(null != t2), (0, v.getOrDefault)(this.functions, t2, function() {
        return [];
      }).push(e3);
    } }, { key: "setFunctionPrototype", value: function(e3, t2) {
      this.functionPrototypes.set(e3, t2);
    } }, { key: "addFunctionUsage", value: function(e3, t2) {
      this.firstFunctionUsages.has(e3) || this.firstFunctionUsages.set(e3, t2);
    } }, { key: "_shouldUseFactoryFunction", value: function(e3, t2) {
      (0, l.default)(t2.length > 0);
      var r2 = this.residualFunctionInfos.get(e3);
      (0, l.default)(r2);
      var n2 = r2.usesArguments, i2 = false, a2 = true, o2 = false, s2 = void 0;
      try {
        for (var u2, c2 = t2[Symbol.iterator](); !(a2 = (u2 = c2.next()).done); a2 = true) {
          var f2 = u2.value, p2 = true, d2 = false, h2 = void 0;
          try {
            for (var v2, y2 = f2.scopeInstances.values()[Symbol.iterator](); !(p2 = (v2 = y2.next()).done); p2 = true) {
              v2.value.leakedIds.length > 0 && (i2 = true);
            }
          } catch (e4) {
            d2 = true, h2 = e4;
          } finally {
            try {
              p2 || null == y2.return || y2.return();
            } finally {
              if (d2) throw h2;
            }
          }
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          a2 || null == c2.return || c2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      return !(function() {
        if (t2[0].scopeInstances.size > 0) return false;
        var r3 = true;
        return e3.start && e3.end && (r3 = e3.end - e3.start <= 30), r3;
      })() && t2.length > 1 && !n2 && !i2;
    } }, { key: "_getIdentifierReplacements", value: function(e3, t2) {
      var r2 = this.residualFunctionInfos.get(e3);
      (0, l.default)(r2);
      var n2 = r2.unbound, a2 = /* @__PURE__ */ new Map(), o2 = true, s2 = false, u2 = void 0;
      try {
        for (var c2, f2 = n2[Symbol.iterator](); !(o2 = (c2 = f2.next()).done); o2 = true) {
          var d2 = i(c2.value, 2), h2 = d2[0], v2 = d2[1], y2 = t2.get(h2);
          if (void 0 !== y2 && (null !== y2.declarativeEnvironmentRecord || void 0 !== y2.value)) {
            var m = y2.serializedValue;
            (0, l.default)(void 0 !== m);
            var b = (0, p.getReplacement)(m, y2.referentialized ? void 0 : y2.value), g = true, w = false, E = void 0;
            try {
              for (var S, T = v2[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
                var A = S.value;
                a2.set(A, b);
              }
            } catch (e4) {
              w = true, E = e4;
            } finally {
              try {
                g || null == T.return || T.return();
              } finally {
                if (w) throw E;
              }
            }
          }
        }
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return a2;
    } }, { key: "_getCallReplacements", value: function(e3) {
      var t2 = this.residualFunctionInfos.get(e3);
      (0, l.default)(t2);
      var r2 = t2.requireCalls, n2 = t2.modified, a2 = /* @__PURE__ */ new Map(), o2 = true, s2 = false, u2 = void 0;
      try {
        for (var c2, f2 = r2[Symbol.iterator](); !(o2 = (c2 = f2.next()).done); o2 = true) {
          var p2 = i(c2.value, 2), d2 = p2[0], h2 = p2[1];
          if (this.getStatistics().requireCalls++, !n2.has(d2.callee.name)) {
            var v2 = this.requireReturns.get("" + h2);
            void 0 !== v2 && (this.getStatistics().requireCallsReplaced++, a2.set(d2, v2));
          }
        }
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return a2;
    } }, { key: "_hasRewrittenFunctionInstance", value: function(e3, t2) {
      return void 0 !== t2.find(function(t3) {
        return e3.has(t3.functionValue);
      });
    } }, { key: "_generateFactoryFunctionInfos", value: function(e3) {
      var t2 = /* @__PURE__ */ new Map(), r2 = true, n2 = false, a2 = void 0;
      try {
        for (var o2, s2 = this.functions[Symbol.iterator](); !(r2 = (o2 = s2.next()).done); r2 = true) {
          var c2 = i(o2.value, 2), f2 = c2[0], p2 = c2[1];
          (0, l.default)(p2.length > 0);
          var d2 = void 0, h2 = p2[0].functionValue.__originalName || this.realm.debugNames ? "factoryFunction" : "";
          this._shouldUseFactoryFunction(f2, p2) ? ((0, l.default)(!this._hasRewrittenFunctionInstance(e3, p2)), d2 = u.identifier(this.factoryNameGenerator.generate(h2))) : d2 = this.locationService.getLocation(p2[0].functionValue);
          var v2 = f2.uniqueOrderedTag;
          (0, l.default)(v2);
          var y2 = this.residualFunctionInfos.get(f2);
          (0, l.default)(y2);
          var m = !p2.every(function(e4) {
            return void 0 === e4.containingAdditionalFunction;
          });
          t2.set(v2, { factoryId: d2, functionInfo: y2, anyContainingAdditionalFunction: m });
        }
      } catch (e4) {
        n2 = true, a2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (n2) throw a2;
        }
      }
      return t2;
    } }, { key: "_sortFunctionByOriginalOrdering", value: function(e3) {
      e3.sort(function(e4, t2) {
        var r2 = e4[0].uniqueOrderedTag;
        (0, l.default)(r2);
        var n2 = t2[0].uniqueOrderedTag;
        return (0, l.default)(n2), r2 - n2;
      });
    } }, { key: "_createFunctionExpression", value: function(e3, t2, r2) {
      return t2 = Object.assign({}, t2), r2 ? u.arrowFunctionExpression(e3, t2) : u.functionExpression(null, e3, t2);
    } }, { key: "spliceFunctions", value: function(e3) {
      var t2 = this;
      this.residualFunctionInitializers.scrubFunctionInitializers();
      var r2 = /* @__PURE__ */ new Map(), a2 = /* @__PURE__ */ new Map(), f2 = function(e4) {
        return (0, v.getOrDefault)(a2, e4, function() {
          return [];
        });
      }, d2 = function(e4) {
        return (0, v.getOrDefault)(r2, e4, function() {
          return [];
        });
      }, y2 = Array.from(this.functions.entries());
      this._sortFunctionByOriginalOrdering(y2), this.getStatistics().functions = y2.length;
      var m = [], b = [], g = function(e4, t3) {
        (u.isFunctionExpression(e4) || u.isArrowFunctionExpression(e4)) && (t3 ? b : m).push(e4);
      }, w = /* @__PURE__ */ new Map(), E = function(e4, r3, n2) {
        var i2, a3 = e4.functionValue;
        if (e4.initializationStatements.length > 0) {
          var o2 = d2(e4);
          Array.prototype.push.apply(o2, e4.initializationStatements);
        }
        u.isFunctionExpression(n2) ? (w.set(a3, n2), i2 = (function(e5) {
          var r4, n3 = e5.containingAdditionalFunction;
          return void 0 !== n3 ? (r4 = t2.additionalFunctionPreludes.get(n3), (0, l.default)(void 0 !== r4)) : r4 = t2.prelude, r4;
        })(e4)) : ((0, l.default)(u.isCallExpression(n2) || u.isClassExpression(n2) || u.isArrowFunctionExpression(n2)), i2 = d2(e4)), i2.push(u.variableDeclaration("var", [u.variableDeclarator(r3, n2)]));
        var s2 = t2.functionPrototypes.get(a3);
        if (void 0 !== s2) {
          var c2 = t2.locationService.getLocation(a3);
          (0, l.default)(void 0 !== c2), i2.push(u.variableDeclaration("var", [u.variableDeclarator(s2, u.memberExpression(c2, u.identifier("prototype")))]));
        }
      }, S = true, T = false, A = void 0;
      try {
        for (var C, P = this.additionalFunctionValueInfos[Symbol.iterator](); !(S = (C = P.next()).done); S = true) {
          var O = i(C.value, 2), x = O[0], _ = O[1], V = /* @__PURE__ */ new Set(), D = true, N = false, I = void 0;
          try {
            for (var k, j = _.modifiedBindings[Symbol.iterator](); !(D = (k = j.next()).done); D = true) {
              var F = i(k.value, 2)[1], R = F.scope;
              if (void 0 !== R && !V.has(R)) {
                V.add(R), (0, l.default)(F.referentialized);
                var M = f2(x);
                if (R.referentializationScope !== x) {
                  var B = this.referentializer.getReferentializedScopeInitialization(R, u.numericLiteral(R.id));
                  Array.prototype.push.apply(M, B);
                }
              }
            }
          } catch (e4) {
            N = true, I = e4;
          } finally {
            try {
              D || null == j.return || j.return();
            } finally {
              if (N) throw I;
            }
          }
        }
      } catch (e4) {
        T = true, A = e4;
      } finally {
        try {
          S || null == P.return || P.return();
        } finally {
          if (T) throw A;
        }
      }
      var L = true, $ = false, G = void 0;
      try {
        for (var z, U = this.additionalFunctionValueInfos.entries()[Symbol.iterator](); !(L = (z = U.next()).done); L = true) {
          var W = i(z.value, 2), q = (x = W[0], (He = W[1]).instance), H = x, K = H.$FormalParameters, J = "lexical" === H.$ThisMode;
          (0, l.default)(void 0 !== K);
          var Y = e3.get(x);
          (0, l.default)(Y);
          var X = u.blockStatement(Y), Q = void 0;
          if (this.residualClassMethodInstances.has(x)) {
            var Z = this.residualClassMethodInstances.get(x);
            (0, l.default)(Z);
            var ee = Z.methodType, te = Z.classMethodKeyNode, re = Z.classSuperNode, ne = Z.classMethodComputed, ie = Z.classPrototype, ae = Z.classMethodIsStatic, oe = "constructor" === ee;
            (0, l.default)(ie instanceof s.ObjectValue), (0, l.default)(te && (u.isExpression(te) || u.isIdentifier(te))), Q = this._getOrCreateClassNode(ie);
            var se = u.classMethod(ee, te, K, X, ne, ae);
            if (oe ? Q.body.body.unshift(se) : Q.body.body.push(se), !oe) continue;
            void 0 !== re && (Q.superClass = re);
          } else Q = J ? u.arrowFunctionExpression(K, X) : u.functionExpression(null, K, X);
          var ue = this.locationService.getLocation(x);
          (0, l.default)(void 0 !== ue), g(Q, x instanceof s.ECMAScriptSourceFunctionValue && x.$Strict), E(q, ue, Q);
        }
      } catch (e4) {
        $ = true, G = e4;
      } finally {
        try {
          L || null == U.return || U.return();
        } finally {
          if ($) throw G;
        }
      }
      for (var le = this._generateFactoryFunctionInfos(e3), ce = function() {
        var e4 = i(y2[fe], 2), r3 = e4[0], n2 = e4[1], a3 = t2.residualFunctionInfos.get(r3);
        (0, l.default)(a3);
        var f3 = a3.unbound, d3 = a3.usesThis, v2 = n2[0].functionValue.$FormalParameters;
        (0, l.default)(void 0 !== v2);
        var m2 = [], b2 = [], w2 = true, S2 = false, T2 = void 0;
        try {
          for (var A2, C2 = n2[Symbol.iterator](); !(w2 = (A2 = C2.next()).done); w2 = true) {
            var P2 = A2.value;
            t2.additionalFunctionValueNestedFunctions.has(P2.functionValue) ? b2.push(P2) : m2.push(P2);
          }
        } catch (e5) {
          S2 = true, T2 = e5;
        } finally {
          try {
            w2 || null == C2.return || C2.return();
          } finally {
            if (S2) throw T2;
          }
        }
        var O2 = function(e5) {
          t2.getStatistics().functionClones += e5.length;
          var n3 = true, i2 = false, a4 = void 0;
          try {
            for (var o2, c2 = e5[Symbol.iterator](); !(n3 = (o2 = c2.next()).done); n3 = true) {
              var f4 = o2.value, d4 = f4.functionValue, h2 = f4.residualFunctionBindings, y3 = f4.scopeInstances, m3 = void 0;
              if (t2.residualClassMethodInstances.has(d4)) {
                var b3 = t2.residualClassMethodInstances.get(d4);
                (0, l.default)(b3);
                var w3 = b3.classSuperNode, S3 = b3.classMethodKeyNode, T3 = b3.methodType, A3 = b3.classMethodComputed, C3 = b3.classPrototype, P3 = b3.classMethodIsStatic, O3 = "constructor" === T3;
                (0, l.default)(C3 instanceof s.ObjectValue), (0, l.default)(S3), (0, l.default)(u.isExpression(S3) || u.isIdentifier(S3)), m3 = t2._getOrCreateClassNode(C3);
                var x3 = !!d4.$HasEmptyConstructor;
                if (!O3 || O3 && !x3) {
                  var _3 = v2.slice(), V3 = new p.ResidualFunctionInstantiator(le, t2._getIdentifierReplacements(r3, h2), t2._getCallReplacements(r3), u.classMethod(T3, S3, _3, r3, A3, P3)).instantiate();
                  O3 ? m3.body.body.unshift(V3) : m3.body.body.push(V3);
                }
                if (!O3) continue;
                void 0 !== w3 && (m3.superClass = w3);
              } else {
                var D3 = "lexical" === f4.functionValue.$ThisMode;
                m3 = new p.ResidualFunctionInstantiator(le, t2._getIdentifierReplacements(r3, h2), t2._getCallReplacements(r3), t2._createFunctionExpression(v2, r3, D3)).instantiate();
                var N3 = [], I3 = true, k3 = false, j3 = void 0;
                try {
                  for (var F3, R3 = y3.values()[Symbol.iterator](); !(I3 = (F3 = R3.next()).done); I3 = true) {
                    var M3 = F3.value;
                    N3 = N3.concat(t2.referentializer.getReferentializedScopeInitialization(M3, u.numericLiteral(M3.id)));
                  }
                } catch (e6) {
                  k3 = true, j3 = e6;
                } finally {
                  try {
                    I3 || null == R3.return || R3.return();
                  } finally {
                    if (k3) throw j3;
                  }
                }
                if (N3.length > 0) {
                  var B3 = m3.body;
                  (0, l.default)(u.isBlockStatement(B3)), B3.body = N3.concat(B3.body);
                }
              }
              var L3 = t2.locationService.getLocation(d4);
              (0, l.default)(void 0 !== L3), g(m3, d4.$Strict), (0, l.default)(void 0 !== L3), (0, l.default)(void 0 !== m3), E(f4, L3, m3);
            }
          } catch (e6) {
            i2 = true, a4 = e6;
          } finally {
            try {
              n3 || null == c2.return || c2.return();
            } finally {
              if (i2) throw a4;
            }
          }
        };
        if (b2.length > 0 && O2(b2), m2.length > 0 && !t2._shouldUseFactoryFunction(r3, m2)) O2(m2), t2.getStatistics().functionClones--;
        else if (m2.length > 0) {
          var x2 = r3.uniqueOrderedTag;
          (0, l.default)(x2);
          var _2 = le.get(x2);
          (0, l.default)(_2);
          var V2 = _2.factoryId, D2 = [], N2 = /* @__PURE__ */ new Map(), I2 = true, k2 = false, j2 = void 0;
          try {
            for (var F2, R2 = f3.keys()[Symbol.iterator](); !(I2 = (F2 = R2.next()).done); I2 = true) {
              var M2 = F2.value, B2 = false, L2 = void 0, $2 = m2[0].residualFunctionBindings.get(M2);
              if ((0, l.default)($2), $2.modified) N2.set(M2, $2);
              else {
                for (var G2 = 0; G2 < m2.length; G2++) {
                  var z2 = m2[G2].residualFunctionBindings.get(M2);
                  if ((0, l.default)(z2), (0, l.default)(!z2.modified), L2) {
                    if (!(0, c.AreSameResidualBinding)(t2.realm, z2, L2)) {
                      B2 = true;
                      break;
                    }
                  } else L2 = z2;
                }
                B2 ? D2.push(M2) : ((0, l.default)(L2), N2.set(M2, L2));
              }
            }
          } catch (e5) {
            k2 = true, j2 = e5;
          } finally {
            try {
              I2 || null == R2.return || R2.return();
            } finally {
              if (k2) throw j2;
            }
          }
          for (var U2 = [], W2 = 0; W2 < D2.length; W2++) {
            var q2 = D2[W2];
            U2.push(u.identifier(q2));
          }
          var H2 = [], K2 = true, J2 = false, Y2 = void 0;
          try {
            for (var X2, Q2 = m2[0].scopeInstances[Symbol.iterator](); !(K2 = (X2 = Q2.next()).done); K2 = true) {
              var Z2 = i(X2.value, 2), ee2 = Z2[0], te2 = Z2[1], re2 = u.identifier(ee2);
              U2.push(re2), H2 = H2.concat(t2.referentializer.getReferentializedScopeInitialization(te2, re2));
            }
          } catch (e5) {
            J2 = true, Y2 = e5;
          } finally {
            try {
              K2 || null == Q2.return || Q2.return();
            } finally {
              if (J2) throw Y2;
            }
          }
          U2 = U2.concat(v2).slice();
          var ne2 = new p.ResidualFunctionInstantiator(le, t2._getIdentifierReplacements(r3, N2), t2._getCallReplacements(r3), t2._createFunctionExpression(U2, r3, false)).instantiate();
          if (H2.length > 0) {
            var ie2 = ne2.body;
            (0, l.default)(u.isBlockStatement(ie2)), ie2.body = H2.concat(ie2.body);
          }
          var ae2 = u.variableDeclaration("var", [u.variableDeclarator(V2, ne2)]);
          t2.prelude.push(ae2), g(ne2, m2[0].functionValue.$Strict);
          for (var oe2 = function() {
            var e5 = m2[se2], r4 = e5.functionValue, n3 = e5.residualFunctionBindings, i2 = e5.insertionPoint, a4 = t2.locationService.getLocation(r4);
            (0, l.default)(void 0 !== a4);
            var c2 = false, f4 = D2.map(function(e6) {
              var t3 = n3.get(e6);
              (0, l.default)(t3);
              var r5 = t3.serializedValue;
              return c2 = c2 || t3.value && t3.value instanceof s.FunctionValue, (0, l.default)(r5), r5;
            }), p2 = false, y3 = true, b3 = false, w3 = void 0;
            try {
              for (var S3, T3 = e5.scopeInstances.values()[Symbol.iterator](); !(y3 = (S3 = T3.next()).done); y3 = true) {
                var A3 = S3.value;
                f4.push(u.numericLiteral(A3.id)), A3.leakedIds.length > 0 && (p2 = true);
              }
            } catch (e6) {
              b3 = true, w3 = e6;
            } finally {
              try {
                y3 || null == T3.return || T3.return();
              } finally {
                if (b3) throw w3;
              }
            }
            var C3 = void 0, P3 = t2.firstFunctionUsages.get(r4);
            if ((0, l.default)(void 0 !== i2), t2.residualFunctionInitializers.hasInitializerStatement(r4) || d3 || c2 || void 0 === P3 || !P3.isNotEarlierThan(i2) || void 0 !== t2.functionPrototypes.get(r4) || p2) {
              var O3 = [u.thisExpression()], x3 = true, _3 = false, N3 = void 0;
              try {
                for (var I3, k3 = f4[Symbol.iterator](); !(x3 = (I3 = k3.next()).done); x3 = true) {
                  var j3 = I3.value;
                  O3.push(j3);
                }
              } catch (e6) {
                _3 = true, N3 = e6;
              } finally {
                try {
                  x3 || null == k3.return || k3.return();
                } finally {
                  if (_3) throw N3;
                }
              }
              var F3 = true, R3 = false, M3 = void 0;
              try {
                for (var B3, L3 = v2[Symbol.iterator](); !(F3 = (B3 = L3.next()).done); F3 = true) {
                  var $3 = B3.value;
                  if ("Identifier" !== $3.type) throw new o.FatalError("TODO: do not know how to deal with non-Identifier parameters");
                  O3.push($3);
                }
              } catch (e6) {
                R3 = true, M3 = e6;
              } finally {
                try {
                  F3 || null == L3.return || L3.return();
                } finally {
                  if (R3) throw M3;
                }
              }
              var G3 = u.memberExpression(V2, u.identifier("call")), z3 = u.blockStatement([u.returnStatement(u.callExpression(G3, O3))]);
              C3 = u.functionExpression(null, v2, z3), g(C3, r4.$Strict);
            } else C3 = u.callExpression(u.memberExpression(V2, u.identifier("bind")), [h.nullExpression].concat(f4));
            E(e5, a4, C3);
          }, se2 = 0; se2 < m2.length; se2++) oe2();
        }
      }, fe = 0; fe < y2.length; fe++) ce();
      var pe = true, de = false, he = void 0;
      try {
        for (var ve, ye = this.referentializer.referentializationState.keys()[Symbol.iterator](); !(pe = (ve = ye.next()).done); pe = true) {
          var me, be = ve.value, ge = void 0;
          if ("GLOBAL" !== be) {
            var we = be;
            ge = this.additionalFunctionPreludes.get(we), (0, l.default)(void 0 !== ge);
          } else ge = this.prelude;
          (me = ge).unshift.apply(me, n(this.referentializer.createCapturedScopesPrelude(be)).concat(n(this.referentializer.createLeakedIds(be))));
        }
      } catch (e4) {
        de = true, he = e4;
      } finally {
        try {
          pe || null == ye.return || ye.return();
        } finally {
          if (de) throw he;
        }
      }
      var Ee = true, Se = false, Te = void 0;
      try {
        for (var Ae, Ce = this.functionInstances.reverse()[Symbol.iterator](); !(Ee = (Ae = Ce.next()).done); Ee = true) {
          q = Ae.value;
          var Pe = r2.get(q);
          if (void 0 !== Pe) {
            var Oe, xe = q.insertionPoint;
            (0, l.default)(xe instanceof c.BodyReference), (Oe = xe.body.entries).splice.apply(Oe, [xe.index, 0].concat(n(Pe)));
          }
        }
      } catch (e4) {
        Se = true, Te = e4;
      } finally {
        try {
          Ee || null == Ce.return || Ce.return();
        } finally {
          if (Se) throw Te;
        }
      }
      var _e = true, Ve = false, De = void 0;
      try {
        for (var Ne, Ie = w[Symbol.iterator](); !(_e = (Ne = Ie.next()).done); _e = true) {
          var ke = i(Ne.value, 2), je = ke[0], Fe = ke[1], Re = this.residualFunctionInitializers.getInitializerStatement(je);
          if (void 0 !== Re) (0, l.default)(u.isFunctionExpression(Fe)), Fe.body.body.unshift(Re);
        }
      } catch (e4) {
        Ve = true, De = e4;
      } finally {
        try {
          _e || null == Ie.return || Ie.return();
        } finally {
          if (Ve) throw De;
        }
      }
      var Me = true, Be = false, Le = void 0;
      try {
        for (var $e, Ge = Array.from(e3.entries()).reverse()[Symbol.iterator](); !(Me = ($e = Ge.next()).done); Me = true) {
          var ze, Ue = i($e.value, 2), We = Ue[0], qe = Ue[1], He = this.additionalFunctionValueInfos.get(We);
          (0, l.default)(He);
          var Ke = a2.get(We), Je = d2(He.instance), Ye = this.additionalFunctionPreludes.get(We);
          (0, l.default)(void 0 !== Ye);
          var Xe = He.instance.insertionPoint;
          (0, l.default)(Xe), (ze = Xe.body.entries).splice.apply(ze, [Xe.index, 0].concat(n(Je))), Ke && qe.unshift.apply(qe, n(Ke)), qe.unshift.apply(qe, n(Ye));
        }
      } catch (e4) {
        Be = true, Le = e4;
      } finally {
        try {
          Me || null == Ge.return || Ge.return();
        } finally {
          if (Be) throw Le;
        }
      }
      return { unstrictFunctionBodies: m, strictFunctionBodies: b };
    } }, { key: "_getOrCreateClassNode", value: function(e3) {
      if (this.classes.has(e3)) {
        var t2 = this.classes.get(e3);
        return (0, l.default)(t2 && u.isClassExpression(t2)), t2;
      }
      var r2 = u.classExpression(null, null, u.classBody([]), []);
      return this.classes.set(e3, r2), r2;
    } }]), e2;
  })();
  t.ResidualFunctions = y;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualReactElementVisitor = void 0;
  r(8);
  var a = r(0), o = (r(49), r(99)), s = r(59), u = r(14), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(9), f = r(98), p = r(428), d = r(427), h = r(3);
  var v = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.residualHeapVisitor = r2, this.reactOutput = t2.react.output || "create-element", this.defaultEquivalenceSet = true, this.reactEquivalenceSet = new f.ReactEquivalenceSet(t2, this), this.reactElementEquivalenceSet = new p.ReactElementSet(t2, this.reactEquivalenceSet), this.reactPropsEquivalenceSet = new d.ReactPropsSet(t2, this.reactEquivalenceSet);
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "visitReactElement", value: function(e3) {
      var t2 = this, r2 = this.realm.react.reactElements.get(e3);
      (0, l.default)(void 0 !== r2);
      var i2 = r2.firstRenderOnly, c2 = false;
      if ((0, s.traverseReactElement)(this.realm, e3, { visitType: function(r3) {
        var n2 = t2.realm.react.reactElementStringTypeReferences;
        if (r3 instanceof a.StringValue && n2.has(r3.value)) {
          var i3 = n2.get(r3.value);
          return (0, l.default)(i3 instanceof a.AbstractValue), (0, u.hardModifyReactObjectPropertyBinding)(t2.realm, e3, "type", i3), void t2.residualHeapVisitor.visitValue(i3);
        }
        (c2 = r3 instanceof a.SymbolValue && r3 === (0, u.getReactSymbol)("react.fragment", t2.realm)) || t2.residualHeapVisitor.visitValue(r3);
      }, visitKey: function(e4) {
        t2.residualHeapVisitor.visitValue(e4);
      }, visitRef: function(e4) {
        i2 || t2.residualHeapVisitor.visitValue(e4);
      }, visitAbstractOrPartialProps: function(e4) {
        t2.residualHeapVisitor.visitValue(e4);
      }, visitConcreteProps: function(r3) {
        var i3 = true, a2 = false, o2 = void 0;
        try {
          for (var s2, c3 = r3.properties[Symbol.iterator](); !(i3 = (s2 = c3.next()).done); i3 = true) {
            var f3 = n(s2.value, 2), p3 = f3[0], d3 = f3[1];
            if ((0, l.default)("key" !== p3 && "ref" !== p3, '"'.concat(p3, '" is a reserved prop name')), void 0 !== d3.descriptor && "children" !== p3) {
              var h2 = (0, u.getProperty)(t2.realm, r3, p3);
              (0, u.canExcludeReactElementObjectProperty)(t2.realm, e3, p3, h2) || t2.residualHeapVisitor.visitValue(h2);
            }
          }
        } catch (e4) {
          a2 = true, o2 = e4;
        } finally {
          try {
            i3 || null == c3.return || c3.return();
          } finally {
            if (a2) throw o2;
          }
        }
      }, visitChildNode: function(e4) {
        t2.residualHeapVisitor.visitValue(e4);
      } }), "create-element" === this.realm.react.output) {
        var f2 = this._getReactLibraryValue();
        (0, l.default)(f2 instanceof a.ObjectValue);
        var p2 = f2.properties.get("createElement");
        (0, l.default)(void 0 !== p2);
        var d2 = (0, h.Get)(this.realm, f2, "createElement");
        this.residualHeapVisitor._visitInUnrelatedScope(this.residualHeapVisitor.globalGenerator, d2);
      }
      if (c2) {
        var v2 = this._getReactLibraryValue();
        this.residualHeapVisitor._visitInUnrelatedScope(this.residualHeapVisitor.globalGenerator, v2);
      }
      (0, o.determineIfReactElementCanBeHoisted)(this.realm, e3, this.residualHeapVisitor);
    } }, { key: "withCleanEquivalenceSet", value: function(e3) {
      var t2 = this.defaultEquivalenceSet, r2 = this.reactEquivalenceSet, n2 = this.reactElementEquivalenceSet, i2 = this.reactPropsEquivalenceSet;
      this.defaultEquivalenceSet = false, this.reactEquivalenceSet = new f.ReactEquivalenceSet(this.realm, this), this.reactElementEquivalenceSet = new p.ReactElementSet(this.realm, this.reactEquivalenceSet), this.reactPropsEquivalenceSet = new d.ReactPropsSet(this.realm, this.reactEquivalenceSet), e3(), this.defaultEquivalenceSet = t2, this.reactEquivalenceSet = r2, this.reactElementEquivalenceSet = n2, this.reactPropsEquivalenceSet = i2;
    } }, { key: "saveEquivalenceSet", value: function() {
      return { reactEquivalenceSet: this.reactEquivalenceSet, reactElementEquivalenceSet: this.reactElementEquivalenceSet, reactPropsEquivalenceSet: this.reactPropsEquivalenceSet };
    } }, { key: "loadEquivalenceSet", value: function(e3, t2) {
      var r2 = this.defaultEquivalenceSet, n2 = this.reactEquivalenceSet, i2 = this.reactElementEquivalenceSet, a2 = this.reactPropsEquivalenceSet;
      this.defaultEquivalenceSet = false, this.reactEquivalenceSet = e3.reactEquivalenceSet, this.reactElementEquivalenceSet = e3.reactElementEquivalenceSet, this.reactPropsEquivalenceSet = e3.reactPropsEquivalenceSet;
      var o2 = t2();
      return this.defaultEquivalenceSet = r2, this.reactEquivalenceSet = n2, this.reactElementEquivalenceSet = i2, this.reactPropsEquivalenceSet = a2, o2;
    } }, { key: "wasTemporalAliasDeclaredInCurrentScope", value: function(e3) {
      var t2 = this.residualHeapVisitor.scope;
      if (t2 instanceof a.FunctionValue) return false;
      if (this.residualHeapVisitor.values.has(e3)) return false;
      for (var r2 = 0; r2 < t2._entries.length; r2++) {
        var n2 = t2._entries[r2];
        if (n2 instanceof c.TemporalOperationEntry && n2.declared === e3) return true;
      }
      return false;
    } }, { key: "_getReactLibraryValue", value: function() {
      var e3 = this.realm.fbLibraries.react;
      return (0, l.default)(e3, "Unable to find React library reference in scope."), e3;
    } }]), e2;
  })();
  t.ResidualReactElementVisitor = v;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Reconciler = void 0;
  r(8);
  var a = r(0), o = (r(33), r(14)), s = r(3), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(2), c = r(4), f = r(433), p = r(7), d = r(432), h = r(70), v = r(59), y = (r(19), r(32)), m = r(9), b = r(6);
  function g(e2, t2) {
    if (e2 instanceof a.AbstractObjectValue && !e2.values.isTop()) {
      var r2 = e2.values.getElements();
      if (r2 && 1 === r2.size) {
        var n2 = true, i2 = false, o2 = void 0;
        try {
          for (var s2, l2 = r2[Symbol.iterator](); !(n2 = (s2 = l2.next()).done); n2 = true) {
            var c2 = s2.value;
            (0, u.default)(c2 instanceof a.ObjectValue), e2 = c2;
          }
        } catch (e3) {
          i2 = true, o2 = e3;
        } finally {
          try {
            n2 || null == l2.return || l2.return();
          } finally {
            if (i2) throw o2;
          }
        }
      } else (0, u.default)(false, "TODO: deal with multiple possible context objects");
    }
    if (!(e2 instanceof a.ObjectValue)) throw new h.ExpectedBailOut("cannot set currentValue on an abstract context consumer");
    var f2 = e2.properties.get("currentValue");
    f2 && f2.descriptor ? ((0, u.default)(f2.descriptor instanceof b.PropertyDescriptor), f2.descriptor.value = t2) : (0, u.default)(false, "setContextCurrentValue failed to set the currentValue");
  }
  function w(e2) {
    throw new h.UnsupportedSideEffect(e2);
  }
  var E = (function() {
    function e2(t2, r2, n2, i2, a2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.statistics = i2, this.logger = a2, this.componentTreeConfig = r2, this.componentTreeState = this._createComponentTreeState(), this.alreadyEvaluated = n2, this.branchedComponentTrees = [];
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "resolveReactComponentTree", value: function(e3, t2, r2, n2) {
      var i2 = this, a2 = function() {
        try {
          var a3 = t2 || (0, d.getInitialProps)(i2.realm, e3, i2.componentTreeConfig), o2 = r2 || (0, d.getInitialContext)(i2.realm, e3), s2 = i2._resolveComponent(e3, a3, o2, "ROOT", n2).result;
          return i2.statistics.optimizedTrees++, s2;
        } catch (e4) {
          if (e4 instanceof p.AbruptCompletion) throw e4;
          i2._handleComponentTreeRootFailure(e4, n2), (0, u.default)(false, "resolveReactComponentTree error not handled correctly");
        }
      };
      try {
        return this.realm.react.activeReconciler = this, this.realm.wrapInGlobalEnv(function() {
          return i2.realm.evaluatePure(function() {
            return i2.realm.evaluateForEffects(a2, null, "react component: ".concat((0, o.getComponentName)(i2.realm, e3)));
          }, true, function(e4, t3, r3) {
            i2.realm.react.failOnUnsupportedSideEffects && (0, y.handleReportedSideEffect)(w, e4, t3, r3);
          });
        });
      } finally {
        this.realm.react.activeReconciler = void 0;
      }
    } }, { key: "clearComponentTreeState", value: function() {
      this.componentTreeState = this._createComponentTreeState();
    } }, { key: "_queueNewComponentTree", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
      if (!(e3 instanceof a.SymbolValue)) {
        (0, u.default)(e3 instanceof a.ECMAScriptSourceFunctionValue || e3 instanceof a.AbstractValue), this.componentTreeState.deadEnds++;
        var i2 = (0, o.getComponentTypeFromRootValue)(this.realm, e3);
        null === i2 || this.alreadyEvaluated.has(i2) || this.branchedComponentTrees.push({ context: n2, evaluatedNode: t2, props: r2, rootValue: e3 });
      }
    } }, { key: "_resolveComplexClassComponent", value: function(e3, t2, r2, n2, i2, l2) {
      if ("ROOT" !== i2) {
        var c2 = this.alreadyEvaluated.get(e3);
        if ("NO_BRANCH" !== i2 || "SIMPLE" !== this.componentTreeState.status || !c2 || "RENDER_PROPS" === c2.status) throw this._queueNewComponentTree(e3, l2), l2.status = "NEW_TREE", new h.NewComponentTreeBranch(l2);
        this.componentTreeState.componentType = e3;
      }
      this.componentTreeState.status = "COMPLEX";
      var f2 = (0, d.createClassInstance)(this.realm, e3, t2, r2, n2), p2 = (0, s.Get)(this.realm, f2, "render");
      return (0, u.default)(p2 instanceof a.ECMAScriptSourceFunctionValue), (0, o.getValueFromFunctionCall)(this.realm, p2, f2, []);
    } }, { key: "_resolveSimpleClassComponent", value: function(e3, t2, r2, n2, i2) {
      var l2 = (0, d.createSimpleClassInstance)(this.realm, e3, t2, r2), c2 = (0, s.Get)(this.realm, l2, "render");
      return (0, u.default)(c2 instanceof a.ECMAScriptSourceFunctionValue), (0, o.getValueFromFunctionCall)(this.realm, c2, l2, []);
    } }, { key: "_resolveFunctionalComponent", value: function(e3, t2, r2, n2) {
      return (0, o.getValueFromFunctionCall)(this.realm, e3, this.realm.intrinsics.undefined, [t2, r2]);
    } }, { key: "_getClassComponentMetadata", value: function(e3, t2, r2) {
      if (this.realm.react.classComponentMetadata.has(e3)) {
        var n2 = this.realm.react.classComponentMetadata.get(e3);
        return (0, u.default)(n2), n2;
      }
      var i2 = (0, d.evaluateClassConstructor)(this.realm, e3, t2, r2);
      return this.realm.react.classComponentMetadata.set(e3, i2), i2;
    } }, { key: "_resolveContextProviderComponent", value: function(e3, t2, r2, n2, i2) {
      var l2 = (0, o.getProperty)(this.realm, t2, "type"), c2 = (0, o.getProperty)(this.realm, t2, "props"), f2 = (0, o.createReactEvaluatedNode)("NORMAL", "Context.Provider");
      i2.children.push(f2), this.statistics.componentsEvaluated++, (0, u.default)(l2 instanceof a.ObjectValue || l2 instanceof a.AbstractObjectValue);
      var p2 = (0, o.getProperty)(this.realm, l2, "context");
      (0, u.default)(p2 instanceof a.ObjectValue || p2 instanceof a.AbstractObjectValue);
      var d2, h2 = (0, o.getProperty)(this.realm, p2, "currentValue");
      if (this._incremementReferenceForContextNode(p2), (c2 instanceof a.ObjectValue || c2 instanceof a.AbstractObjectValue) && g(p2, d2 = (0, s.Get)(this.realm, c2, "value")), c2 instanceof a.ObjectValue && (!(d2 instanceof a.AbstractValue) || this.componentTreeConfig.firstRenderOnly)) {
        var v2 = this._resolveReactElementHostChildren(e3, t2, r2, n2, f2), y2 = (0, o.getProperty)(this.realm, v2, "props");
        if ((0, u.default)(y2 instanceof a.ObjectValue || y2 instanceof a.AbstractObjectValue), (0, u.default)(h2 instanceof a.Value), g(p2, h2), this._decremementReferenceForContextNode(p2), 0 === this.componentTreeState.deadEnds) {
          var m2 = (0, s.Get)(this.realm, y2, "children");
          return f2.status = "INLINED", this.statistics.inlinedComponents++, m2;
        }
        return v2;
      }
      var b2 = this._resolveReactElementHostChildren(e3, t2, r2, n2, f2);
      return g(p2, h2), this._decremementReferenceForContextNode(p2), b2;
    } }, { key: "_decremementReferenceForContextNode", value: function(e3) {
      var t2 = this.componentTreeState.contextNodeReferences.get(e3);
      t2 ? t2-- : t2 = 0, this.componentTreeState.contextNodeReferences.set(e3, t2);
    } }, { key: "_incremementReferenceForContextNode", value: function(e3) {
      var t2 = this.componentTreeState.contextNodeReferences.get(e3);
      t2 ? t2++ : t2 = 1, this.componentTreeState.contextNodeReferences.set(e3, t2);
    } }, { key: "_isContextValueKnown", value: function(e3) {
      if (this.componentTreeConfig.isRoot) return true;
      if (this.componentTreeState.contextNodeReferences.has(e3)) {
        var t2 = this.componentTreeState.contextNodeReferences.get(e3);
        return !!t2 && t2 > 0;
      }
      return false;
    } }, { key: "_resolveContextConsumerComponent", value: function(e3, t2, r2, n2, i2) {
      var u2 = (0, o.getProperty)(this.realm, t2, "type"), l2 = (0, o.getProperty)(this.realm, t2, "props"), c2 = (0, o.createReactEvaluatedNode)("RENDER_PROPS", "Context.Consumer");
      if (i2.children.push(c2), (l2 instanceof a.ObjectValue || l2 instanceof a.AbstractObjectValue) && l2 instanceof a.ObjectValue && l2.properties.has("children")) {
        var f2 = (0, o.getProperty)(this.realm, l2, "children");
        if (this._findReactComponentTrees(l2, c2, "NORMAL_FUNCTIONS", e3, r2, n2), f2 instanceof a.ECMAScriptSourceFunctionValue) {
          if ((u2 instanceof a.ObjectValue || u2 instanceof a.AbstractObjectValue) && this._isContextValueKnown(u2)) {
            var p2 = (0, s.Get)(this.realm, u2, "currentValue");
            if (!(p2 instanceof a.AbstractValue) || this.componentTreeConfig.firstRenderOnly) {
              var d2 = (0, o.getValueFromFunctionCall)(this.realm, f2, this.realm.intrinsics.undefined, [p2]);
              return this.statistics.inlinedComponents++, this.statistics.componentsEvaluated++, c2.status = "INLINED", this._resolveDeeply(e3, d2, r2, n2, i2);
            }
          }
          return void this._evaluateNestedOptimizedFunctionAndStoreEffects(e3, r2, n2, c2, f2);
        }
        this._findReactComponentTrees(f2, c2, "NESTED_CLOSURES", e3, r2, n2);
      }
      this.componentTreeState.deadEnds++;
    } }, { key: "_resolveForwardRefComponent", value: function(e3, t2, r2, n2, i2) {
      var s2 = (0, o.getProperty)(this.realm, t2, "type"), l2 = (0, o.getProperty)(this.realm, t2, "props"), c2 = (0, o.getProperty)(this.realm, t2, "ref");
      (0, u.default)(s2 instanceof a.AbstractObjectValue || s2 instanceof a.ObjectValue);
      var f2 = (0, o.getProperty)(this.realm, s2, "render"), p2 = (0, o.createReactEvaluatedNode)("FORWARD_REF", (0, o.getComponentName)(this.realm, f2));
      i2.children.push(p2), (0, u.default)(f2 instanceof a.ECMAScriptSourceFunctionValue || f2 instanceof a.BoundFunctionValue, "expect React.forwardRef() to be passed function value");
      var d2 = (0, o.getValueFromFunctionCall)(this.realm, f2, this.realm.intrinsics.undefined, [l2, c2]);
      return this._resolveDeeply(e3, d2, r2, n2, p2);
    } }, { key: "_resolveRelayQueryRendererComponent", value: function(e3, t2, r2, n2, i2) {
      var s2 = (0, o.getProperty)(this.realm, t2, "type"), u2 = (0, o.getProperty)(this.realm, t2, "props"), l2 = (0, o.createReactEvaluatedNode)("RENDER_PROPS", (0, o.getComponentName)(this.realm, s2));
      if (i2.children.push(l2), u2 instanceof a.ObjectValue || u2 instanceof a.AbstractObjectValue) {
        if (u2 instanceof a.ObjectValue && u2.properties.has("render")) {
          var c2 = (0, o.getProperty)(this.realm, u2, "render");
          c2 instanceof a.ECMAScriptSourceFunctionValue ? this._evaluateNestedOptimizedFunctionAndStoreEffects(e3, r2, n2, l2, c2) : c2 instanceof a.AbstractValue && this._findReactComponentTrees(c2, l2, "NESTED_CLOSURES", e3, r2, n2);
        }
        this._findReactComponentTrees(u2, l2, "NORMAL_FUNCTIONS", e3, r2, n2);
      } else this.componentTreeState.deadEnds++;
    } }, { key: "_resolveClassComponent", value: function(e3, t2, r2, n2, i2) {
      var a2, o2 = this._getClassComponentMetadata(e3, t2, r2), s2 = o2.instanceProperties, u2 = o2.instanceSymbols;
      if (0 === s2.size && 0 === u2.size) try {
        a2 = this._resolveSimpleClassComponent(e3, t2, r2, n2, i2);
      } catch (e4) {
        if (!(e4 instanceof h.SimpleClassBailOut)) throw e4;
      }
      return void 0 === a2 && (a2 = this._resolveComplexClassComponent(e3, t2, r2, o2, n2, i2)), a2;
    } }, { key: "_resolveClassComponentForFirstRenderOnly", value: function(e3, t2, r2, n2, i2) {
      var l2 = (0, d.createClassInstanceForFirstRenderOnly)(this.realm, e3, t2, r2, i2), c2 = (0, s.Get)(this.realm, e3, "getDerivedStateFromProps"), f2 = (0, s.Get)(this.realm, l2, "getSnapshotBeforeUpdate");
      if (c2 !== this.realm.intrinsics.undefined || f2 !== this.realm.intrinsics.undefined) c2 instanceof a.ECMAScriptSourceFunctionValue && c2.$Call && (0, d.applyGetDerivedStateFromProps)(this.realm, c2, l2, t2);
      else {
        var p2 = (0, s.Get)(this.realm, l2, "componentWillMount");
        p2 instanceof a.ECMAScriptSourceFunctionValue && p2.$Call && p2.$Call(l2, []);
        var h2 = (0, s.Get)(this.realm, l2, "UNSAFE_componentWillMount");
        h2 instanceof a.ECMAScriptSourceFunctionValue && h2.$Call && h2.$Call(l2, []);
      }
      var v2 = (0, s.Get)(this.realm, l2, "render");
      return (0, u.default)(v2 instanceof a.ECMAScriptSourceFunctionValue), (0, o.getValueFromFunctionCall)(this.realm, v2, l2, []);
    } }, { key: "_resolveRelayContainer", value: function(e3, t2, r2, n2, i2) {
      if (i2.status = "INLINED", i2.message = "RelayContainer", (0, u.default)(e3.firstRenderValue instanceof a.Value), (0, o.getProperty)(this.realm, r2, "relay") === this.realm.intrinsics.undefined) {
        var s2 = a.AbstractValue.createAbstractObject(this.realm, "context.relay"), c2 = a.AbstractValue.createAbstractObject(this.realm, "context.relay.environment"), f2 = a.AbstractValue.createAbstractObject(this.realm, "context.relay.environment.unstable_internal");
        l.Properties.Set(this.realm, r2, "relay", s2, true), l.Properties.Set(this.realm, s2, "environment", c2, true), l.Properties.Set(this.realm, c2, "unstable_internal", f2, true);
      }
      return this.componentTreeState.contextTypes.add("relay"), this._resolveComponent(e3.firstRenderValue, t2, r2, n2, i2);
    } }, { key: "_resolveComponent", value: function(e3, t2, r2, n2, i2) {
      if ((0, o.doNotOptimizeComponent)(this.realm, e3)) throw new h.DoNotOptimize("__reactCompilerDoNotOptimize flag detected");
      if (this.statistics.componentsEvaluated++, (0, o.valueIsKnownReactAbstraction)(this.realm, e3)) {
        (0, u.default)(e3 instanceof a.AbstractValue);
        var s2 = this.realm.react.abstractHints.get(e3);
        if ((0, u.default)(s2), "string" != typeof s2 && s2.object === this.realm.fbLibraries.reactRelay && this.componentTreeConfig.firstRenderOnly) return this._resolveRelayContainer(s2, t2, r2, n2, i2);
        throw this._queueNewComponentTree(e3, i2), i2.status = "NEW_TREE", i2.message = "RelayContainer", new h.NewComponentTreeBranch(i2);
      }
      var l2;
      (0, u.default)(e3 instanceof a.ECMAScriptSourceFunctionValue || e3 instanceof a.BoundFunctionValue);
      var c2 = r2;
      if ((0, o.valueIsLegacyCreateClassComponent)(this.realm, e3)) throw new h.ExpectedBailOut("components created with create-react-class are not supported");
      if ((0, o.valueIsClassComponent)(this.realm, e3)) l2 = this.componentTreeConfig.firstRenderOnly ? this._resolveClassComponentForFirstRenderOnly(e3, t2, r2, n2, i2) : this._resolveClassComponent(e3, t2, r2, n2, i2);
      else if (l2 = this._resolveFunctionalComponent(e3, t2, r2, i2), (0, o.valueIsFactoryClassComponent)(this.realm, l2)) {
        if ((0, u.default)(l2 instanceof a.ObjectValue), "ROOT" !== n2) throw new h.ExpectedBailOut("non-root factory class components are not suppoted");
        return { result: l2, childContext: c2 };
      }
      return (0, u.default)(void 0 !== l2), { result: this._resolveDeeply(e3, l2, r2, "ROOT" === n2 ? "NO_BRANCH" : n2, i2), childContext: c2 };
    } }, { key: "_createComponentTreeState", value: function() {
      return { componentType: void 0, contextTypes: /* @__PURE__ */ new Set(), deadEnds: 0, status: "SIMPLE", contextNodeReferences: /* @__PURE__ */ new Map() };
    } }, { key: "_getComponentResolutionStrategy", value: function(e3) {
      if (void 0 !== this.realm.fbLibraries.reactRelay && e3 === (0, o.getProperty)(this.realm, this.realm.fbLibraries.reactRelay, "QueryRenderer")) return "RELAY_QUERY_RENDERER";
      if (e3 === (0, o.getReactSymbol)("react.fragment", this.realm)) return "FRAGMENT";
      if ((e3 instanceof a.ObjectValue || e3 instanceof a.AbstractObjectValue) && "conditional" !== e3.kind) {
        var t2 = (0, o.getProperty)(this.realm, e3, "$$typeof");
        if (t2 === (0, o.getReactSymbol)("react.context", this.realm)) return "CONTEXT_CONSUMER";
        if (t2 === (0, o.getReactSymbol)("react.provider", this.realm)) return "CONTEXT_PROVIDER";
        if (t2 === (0, o.getReactSymbol)("react.forward_ref", this.realm)) return "FORWARD_REF";
      }
      return "NORMAL";
    } }, { key: "_resolveReactDomPortal", value: function(e3, t2, r2, i2, s2, l2) {
      var c2 = n(t2, 2), f2 = c2[0], p2 = c2[1], d2 = (0, o.createReactEvaluatedNode)("INLINED", "ReactDOM.createPortal"), h2 = this._resolveDeeply(r2, f2, i2, s2, d2);
      if (l2.children.push(d2), h2 !== f2) {
        this.statistics.inlinedComponents++;
        var v2 = this.realm.fbLibraries.reactDom;
        (0, u.default)(v2 instanceof a.ObjectValue);
        var y2 = (0, o.getProperty)(this.realm, v2, "createPortal");
        return a.AbstractValue.createTemporalFromBuildFunction(this.realm, a.ObjectValue, [y2, h2, p2], (0, m.createOperationDescriptor)("REACT_TEMPORAL_FUNC"), { skipInvariant: true, isPure: true });
      }
      return e3;
    } }, { key: "_resolveAbstractConditionalValue", value: function(e3, t2, r2, n2, i2, o2) {
      var s2 = this, u2 = this.realm.evaluateWithAbstractConditional(t2, function() {
        return s2.realm.evaluateForEffects(function() {
          return (0, f.wrapReactElementInBranchOrReturnValue)(s2.realm, s2._resolveDeeply(e3, r2, i2, "NEW_BRANCH", o2));
        }, null, "_resolveAbstractConditionalValue consequent");
      }, function() {
        return s2.realm.evaluateForEffects(function() {
          return (0, f.wrapReactElementInBranchOrReturnValue)(s2.realm, s2._resolveDeeply(e3, n2, i2, "NEW_BRANCH", o2));
        }, null, "_resolveAbstractConditionalValue alternate");
      });
      return u2 instanceof a.AbstractValue && "conditional" === u2.kind ? (0, f.getValueWithBranchingLogicApplied)(this.realm, r2, n2, u2) : u2;
    } }, { key: "_resolveAbstractLogicalValue", value: function(e3, t2, r2, i2) {
      var o2 = n(t2.args, 2), s2 = o2[0], l2 = o2[1], c2 = t2.kind;
      return (0, u.default)(s2 instanceof a.AbstractValue), "||" === c2 ? this._resolveAbstractConditionalValue(e3, s2, s2, l2, r2, i2) : this._resolveAbstractConditionalValue(e3, s2, l2, s2, r2, i2);
    } }, { key: "_resolveAbstractValue", value: function(e3, t2, r2, i2, o2) {
      if ((0, u.default)(this.realm.generator), "conditional" === t2.kind) {
        var s2 = n(t2.args, 3), l2 = s2[0], c2 = s2[1], f2 = s2[2];
        return (0, u.default)(l2 instanceof a.AbstractValue), this._resolveAbstractConditionalValue(e3, l2, c2, f2, r2, o2);
      }
      if ("||" === t2.kind || "&&" === t2.kind) return this._resolveAbstractLogicalValue(e3, t2, r2, o2);
      if (t2 instanceof a.AbstractValue && this.realm.react.abstractHints.has(t2)) {
        var p2 = this.realm.react.abstractHints.get(t2);
        if ((0, u.default)(void 0 !== p2), p2.object === this.realm.fbLibraries.reactDom && "createPortal" === p2.propertyName) return this._resolveReactDomPortal(t2, p2.args, e3, r2, i2, o2);
      }
      return this.componentTreeState.deadEnds++, t2;
    } }, { key: "_resolveUnknownComponentType", value: function(e3, t2, r2, n2, i2) {
      var s2 = (0, o.getProperty)(this.realm, t2, "type"), u2 = (0, o.getProperty)(this.realm, t2, "props");
      if (this._findReactComponentTrees(u2, i2, "NORMAL_FUNCTIONS", e3, r2, n2), s2 instanceof a.AbstractValue) return this._findReactComponentTrees(s2, i2, "FUNCTIONAL_COMPONENTS", e3, r2, n2), t2;
      var l2 = (0, o.createReactEvaluatedNode)("BAIL-OUT", (0, o.getComponentName)(this.realm, s2));
      i2.children.push(l2);
      var c2 = "type on <Component /> was not a ECMAScriptSourceFunctionValue";
      return l2.message = c2, this._assignBailOutMessage(t2, c2), this.componentTreeState.deadEnds++, t2;
    } }, { key: "_resolveReactElementBadRef", value: function(e3, t2, r2, n2, i2) {
      var a2 = (0, o.getProperty)(this.realm, t2, "type"), s2 = (0, o.getProperty)(this.realm, t2, "props"), u2 = (0, o.createReactEvaluatedNode)("BAIL-OUT", (0, o.getComponentName)(this.realm, a2));
      i2.children.push(u2);
      return u2.message = "refs are not supported on <Components />", this._queueNewComponentTree(a2, u2), this._findReactComponentTrees(s2, i2, "NORMAL_FUNCTIONS", e3, r2, n2), this._assignBailOutMessage(t2, "refs are not supported on <Components />"), t2;
    } }, { key: "_resolveReactElementUndefinedRender", value: function(e3, t2, r2, n2, i2) {
      var a2 = (0, o.getProperty)(this.realm, t2, "type"), s2 = (0, o.getProperty)(this.realm, t2, "props"), u2 = (0, o.createReactEvaluatedNode)("BAIL-OUT", (0, o.getComponentName)(this.realm, a2));
      i2.children.push(u2);
      return u2.message = "undefined was returned from render", this._assignBailOutMessage(t2, "undefined was returned from render"), this._findReactComponentTrees(s2, i2, "NORMAL_FUNCTIONS", e3, r2, n2), t2;
    } }, { key: "_resolveReactElementHostChildren", value: function(e3, t2, r2, n2, i2) {
      var u2 = (0, o.getProperty)(this.realm, t2, "props");
      if (u2 instanceof a.ObjectValue && u2.properties.has("children")) {
        var l2 = (0, s.Get)(this.realm, u2, "children");
        if (l2 instanceof a.Value) {
          var c2 = this._resolveDeeply(e3, l2, r2, n2, i2, false);
          if (c2 instanceof a.ArrayValue && !c2.intrinsicName && (c2 = (0, o.flattenChildren)(this.realm, c2)), c2 !== l2) {
            var f2 = (0, o.cloneProps)(this.realm, u2, c2);
            (0, o.hardModifyReactObjectPropertyBinding)(this.realm, t2, "props", f2);
          }
        }
      }
      return t2;
    } }, { key: "_resolveFragmentComponent", value: function(e3, t2, r2, n2, i2) {
      if (this.statistics.componentsEvaluated++, this.componentTreeConfig.firstRenderOnly) {
        var a2 = (0, o.createReactEvaluatedNode)("INLINED", "React.Fragment");
        return i2.children.push(a2), this.statistics.inlinedComponents++, this._resolveReactElementHostChildren(e3, t2, r2, n2, a2);
      }
      var s2 = (0, o.createReactEvaluatedNode)("NORMAL", "React.Fragment");
      return i2.children.push(s2), this._resolveReactElementHostChildren(e3, t2, r2, n2, s2);
    } }, { key: "_resolveReactElement", value: function(e3, t2, r2, n2, i2, s2) {
      t2 = (0, o.cloneReactElement)(this.realm, t2, false);
      var l2 = (0, o.getProperty)(this.realm, t2, "type"), c2 = (0, o.getProperty)(this.realm, t2, "props"), f2 = (0, o.getProperty)(this.realm, t2, "ref"), d2 = (0, o.getProperty)(this.realm, t2, "key");
      if ((0, u.default)(!(l2 instanceof a.AbstractValue && "conditional" === l2.kind), 'the reconciler should never encounter a ReactElement "type" that is conditional abstract value'), (0, u.default)(!(c2 instanceof a.AbstractValue && "conditional" === c2.kind), 'the reconciler should never encounter a ReactElement "props" that is conditional abstract value'), l2 instanceof a.StringValue) return this._resolveReactElementHostChildren(e3, t2, r2, n2, i2);
      if (!(c2 instanceof a.ObjectValue || c2 instanceof a.AbstractObjectValue)) return this._assignBailOutMessage(t2, "props on <Component /> was not not an ObjectValue or an AbstractObjectValue"), t2;
      var h2 = this._getComponentResolutionStrategy(l2);
      this.componentTreeConfig.firstRenderOnly || f2 instanceof a.NullValue || "FORWARD_REF" === h2 || f2 instanceof a.AbstractValue || this._resolveReactElementBadRef(e3, t2, r2, n2, i2);
      try {
        var y2;
        switch (h2) {
          case "NORMAL":
            if (!(l2 instanceof a.ECMAScriptSourceFunctionValue || l2 instanceof a.BoundFunctionValue || (0, o.valueIsKnownReactAbstraction)(this.realm, l2))) return this._resolveUnknownComponentType(e3, t2, r2, n2, i2);
            var m2 = (0, o.createReactEvaluatedNode)("INLINED", (0, o.getComponentName)(this.realm, l2)), b2 = this._resolveComponent(l2, c2, r2, "NEW_BRANCH" === n2 ? "BRANCH" : n2, m2);
            void 0 !== this.logger && this.realm.react.verbose && "INLINED" === m2.status && this.logger.logInformation("    \u2714 ".concat(m2.name, " (inlined)")), i2.children.push(m2), y2 = b2.result, this.statistics.inlinedComponents++;
            break;
          case "FRAGMENT":
            y2 = this._resolveFragmentComponent(e3, t2, r2, n2, i2);
            break;
          case "RELAY_QUERY_RENDERER":
            (0, u.default)(l2 instanceof a.AbstractObjectValue), y2 = this._resolveRelayQueryRendererComponent(e3, t2, r2, n2, i2);
            break;
          case "CONTEXT_PROVIDER":
            y2 = this._resolveContextProviderComponent(e3, t2, r2, n2, i2);
            break;
          case "CONTEXT_CONSUMER":
            y2 = this._resolveContextConsumerComponent(e3, t2, r2, n2, i2);
            break;
          case "FORWARD_REF":
            y2 = this._resolveForwardRefComponent(e3, t2, r2, n2, i2);
            break;
          default:
            (0, u.default)(false, "unsupported component resolution strategy");
        }
        return void 0 === y2 && (y2 = t2), y2 instanceof a.UndefinedValue ? this._resolveReactElementUndefinedRender(e3, t2, r2, n2, i2) : (!this.componentTreeConfig.firstRenderOnly && s2 && d2.mightNotBeNull() && (y2 = (0, v.wrapReactElementWithKeyedFragment)(this.realm, d2, y2)), y2);
      } catch (a2) {
        if (a2 instanceof p.AbruptCompletion) throw a2;
        return this._resolveComponentResolutionFailure(e3, a2, t2, r2, i2, n2);
      }
    } }, { key: "_handleComponentTreeRootFailure", value: function(e3, t2) {
      if ("Invariant Violation" === e3.name) throw e3;
      if (e3 instanceof h.ReconcilerFatalError) throw new h.ReconcilerFatalError(e3.message, t2);
      if (e3 instanceof h.UnsupportedSideEffect || e3 instanceof h.DoNotOptimize) throw new h.ReconcilerFatalError('Failed to render React component root "'.concat(t2.name, '" due to ').concat(e3.message), t2);
      var r2;
      if (e3 instanceof h.ExpectedBailOut) r2 = 'Failed to optimize React component tree for "'.concat(t2.name, '" due to an expected bail-out: ').concat(e3.message);
      else {
        if (!(e3 instanceof c.FatalError)) throw e3;
        r2 = 'Failed to optimize React component tree for "'.concat(t2.name, '" due to a fatal error during evaluation: ').concat(e3.message);
      }
      throw new h.ReconcilerFatalError(r2, t2);
    } }, { key: "_resolveComponentResolutionFailure", value: function(e3, t2, r2, n2, i2, a2) {
      if ("Invariant Violation" === t2.name) throw t2;
      if (t2 instanceof h.ReconcilerFatalError) throw t2;
      if (t2 instanceof h.UnsupportedSideEffect) throw new h.ReconcilerFatalError('Failed to render React component "'.concat(i2.name, '" due to ').concat(t2.message), i2);
      if (t2 instanceof h.DoNotOptimize) return r2;
      var s2 = (0, o.getProperty)(this.realm, r2, "type"), u2 = (0, o.getProperty)(this.realm, r2, "props");
      if (t2 instanceof h.NewComponentTreeBranch) this._findReactComponentTrees(u2, i2, "NORMAL_FUNCTIONS", e3, n2, a2), i2.children.push(t2.evaluatedNode);
      else {
        var l2 = (0, o.createReactEvaluatedNode)("BAIL-OUT", (0, o.getComponentName)(this.realm, s2));
        if (void 0 !== this.logger && this.realm.react.verbose && this.logger.logInformation("    \u2716 ".concat(l2.name, " (bail-out)")), i2.children.push(l2), this._queueNewComponentTree(s2, l2), this._findReactComponentTrees(u2, i2, "NORMAL_FUNCTIONS", e3, n2, a2), t2 instanceof h.ExpectedBailOut) l2.message = t2.message, this._assignBailOutMessage(r2, t2.message);
        else {
          if (!(t2 instanceof c.FatalError)) throw l2.message = "unknown error", t2;
          l2.message = "evaluation failed", this._assignBailOutMessage(r2, "evaluation failed");
        }
      }
      return r2;
    } }, { key: "_resolveDeeply", value: function(e3, t2, r2, n2, i2, s2) {
      return t2 instanceof a.StringValue || t2 instanceof a.NumberValue || t2 instanceof a.BooleanValue || t2 instanceof a.NullValue || t2 instanceof a.UndefinedValue ? t2 : ((0, u.default)(!(t2 instanceof a.ObjectValue) || void 0 !== t2._isFinal, "An object value was detected during React reconcilation without its bindings properly applied"), t2 instanceof a.AbstractValue ? this._resolveAbstractValue(e3, t2, r2, n2, i2) : t2 instanceof a.ArrayValue ? this._resolveArray(e3, t2, r2, n2, i2, s2) : t2 instanceof a.ObjectValue && (0, o.isReactElement)(t2) ? this._resolveReactElement(e3, t2, r2, n2, i2, s2) : t2);
    } }, { key: "_assignBailOutMessage", value: function(e3, t2) {
      t2 = "Bail-out: ".concat(t2), void 0 !== e3.$BailOutReason ? e3.$BailOutReason += ", ".concat(t2) : e3.$BailOutReason = t2;
    } }, { key: "_resolveArray", value: function(e3, t2, r2, i2, s2, l2) {
      var c2 = this;
      if (a.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(t2)) {
        var f2 = t2.nestedOptimizedFunctionEffects;
        if (void 0 !== f2) {
          var d2 = true, h2 = false, v2 = void 0;
          try {
            for (var m2, b2 = function() {
              var t3, o2 = n(m2.value, 2), d3 = o2[0], h3 = o2[1], v3 = function() {
                var t4 = h3.result;
                return c2.realm.applyEffects(h3), t4 instanceof p.SimpleNormalCompletion ? t4 = t4.value : (0, u.default)(false, "TODO support other types of completion"), (0, u.default)(t4 instanceof a.Value), c2._resolveDeeply(e3, t4, r2, i2, s2, l2);
              };
              t3 = c2.realm.evaluateForEffects(function() {
                return c2.realm.evaluatePure(v3, true, function(e4, t4, r3) {
                  return (0, y.handleReportedSideEffect)(w, e4, t4, r3);
                });
              }, null, "react resolve nested optimized closure"), c2.statistics.optimizedNestedClosures++, f2.set(d3, t3), c2.realm.collectedNestedOptimizedFunctionEffects.set(d3, t3);
            }, g2 = f2[Symbol.iterator](); !(d2 = (m2 = g2.next()).done); d2 = true) b2();
          } catch (e4) {
            h2 = true, v2 = e4;
          } finally {
            try {
              d2 || null == g2.return || g2.return();
            } finally {
              if (h2) throw v2;
            }
          }
        }
        return t2;
      }
      false !== l2 && (l2 = true);
      var E2 = (0, o.mapArrayValue)(this.realm, t2, function(t3) {
        return c2._resolveDeeply(e3, t3, r2, "NEW_BRANCH", s2, l2);
      });
      return E2.makeFinal(), E2;
    } }, { key: "_findReactComponentTrees", value: function(e3, t2, r2, i2, s2, l2) {
      if (e3 instanceof a.AbstractValue) if (e3.args.length > 0) {
        var c2 = true, f2 = false, p2 = void 0;
        try {
          for (var d2, h2 = e3.args[Symbol.iterator](); !(c2 = (d2 = h2.next()).done); c2 = true) {
            var v2 = d2.value;
            this._findReactComponentTrees(v2, t2, r2, i2, s2, l2);
          }
        } catch (e4) {
          f2 = true, p2 = e4;
        } finally {
          try {
            c2 || null == h2.return || h2.return();
          } finally {
            if (f2) throw p2;
          }
        }
      } else this.componentTreeState.deadEnds++;
      else if ((0, o.valueIsKnownReactAbstraction)(this.realm, e3)) {
        var y2 = (0, o.createReactEvaluatedNode)("NEW_TREE", (0, o.getComponentName)(this.realm, e3));
        t2.children.push(y2), this._queueNewComponentTree(e3, y2);
      } else if (e3 instanceof a.ECMAScriptSourceFunctionValue || e3 instanceof a.BoundFunctionValue) {
        if ((0, o.valueIsClassComponent)(this.realm, e3) || "FUNCTIONAL_COMPONENTS" === r2) {
          var m2 = (0, o.createReactEvaluatedNode)("NEW_TREE", (0, o.getComponentName)(this.realm, e3));
          t2.children.push(m2), this._queueNewComponentTree(e3, m2);
        } else if ("NESTED_CLOSURES" === r2) {
          (0, u.default)(i2 && s2);
          var g2 = (0, o.createReactEvaluatedNode)("RENDER_PROPS", (0, o.getComponentName)(this.realm, e3));
          this._evaluateNestedOptimizedFunctionAndStoreEffects(i2, s2, l2, g2, e3);
        }
      } else if (e3 instanceof a.ObjectValue) if ((0, o.isReactElement)(e3)) {
        var w2 = (0, o.getProperty)(this.realm, e3, "type"), E2 = (0, o.getProperty)(this.realm, e3, "ref"), S = (0, o.getProperty)(this.realm, e3, "props");
        if ((0, o.valueIsKnownReactAbstraction)(this.realm, w2) || w2 instanceof a.ECMAScriptSourceFunctionValue) {
          var T = (0, o.createReactEvaluatedNode)("NEW_TREE", (0, o.getComponentName)(this.realm, w2));
          t2.children.push(T), this._queueNewComponentTree(w2, T);
        }
        this._findReactComponentTrees(E2, t2, r2, i2, s2, l2), this._findReactComponentTrees(S, t2, r2, i2, s2, l2);
      } else {
        var A = true, C = false, P = void 0;
        try {
          for (var O, x = e3.properties[Symbol.iterator](); !(A = (O = x.next()).done); A = true) {
            var _ = n(O.value, 2), V = _[0], D = _[1];
            D && D.descriptor && ((0, u.default)(D.descriptor instanceof b.PropertyDescriptor), D.descriptor.enumerable && this._findReactComponentTrees((0, o.getProperty)(this.realm, e3, V), t2, r2, i2, s2, l2));
          }
        } catch (e4) {
          C = true, P = e4;
        } finally {
          try {
            A || null == x.return || x.return();
          } finally {
            if (C) throw P;
          }
        }
      }
    } }, { key: "_evaluateNestedOptimizedFunctionAndStoreEffects", value: function(e3, t2, r2, n2, i2) {
      var o2 = this, s2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : this.realm.intrinsics.undefined;
      if (this.realm.react.optimizeNestedFunctions) {
        var f2 = i2;
        i2 instanceof a.BoundFunctionValue && (f2 = i2.$BoundTargetFunction, s2 = i2.$BoundThis), (0, u.default)(f2 instanceof a.ECMAScriptSourceFunctionValue);
        var p2, d2 = l.Utils.createModelledFunctionCall(this.realm, f2, void 0, s2);
        try {
          p2 = this.realm.evaluateForEffects(function() {
            var i3 = o2.realm.evaluatePure(d2, false, function() {
              throw new c.NestedOptimizedFunctionSideEffect();
            });
            return o2._resolveDeeply(e3, i3, t2, r2, n2, false);
          }, null, "React nestedOptimizedFunction");
        } catch (e4) {
          if (e4 instanceof c.NestedOptimizedFunctionSideEffect) return void l.Leak.value(this.realm, i2);
          throw e4;
        }
        this.statistics.optimizedNestedClosures++, this.realm.collectedNestedOptimizedFunctionEffects.set(f2, p2);
      }
    } }]), e2;
  })();
  t.Reconciler = E;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function s(e2) {
    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var l = r(4), c = r(0), f = r(12), p = r(3), d = r(2), h = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), v = r(9), y = r(8), m = r(7), b = r(6);
  var g = (function(e2) {
    function t2(e3, r2, n2, i2, a2, u2, l2) {
      var f2;
      if ((function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), f2 = o(this, s(t2).call(this, e3, r2, n2, i2, a2, u2, l2)), !n2.isTop()) {
        var p2 = true, d2 = false, v2 = void 0;
        try {
          for (var y2, m2 = f2.values.getElements()[Symbol.iterator](); !(p2 = (y2 = m2.next()).done); p2 = true) {
            var b2 = y2.value;
            (0, h.default)(b2 instanceof c.ObjectValue);
          }
        } catch (e4) {
          d2 = true, v2 = e4;
        } finally {
          try {
            p2 || null == m2.return || m2.return();
          } finally {
            if (d2) throw v2;
          }
        }
      }
      return f2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && u(e3, t3);
    })(t2, c.AbstractValue), (function(e3, t3, r2) {
      t3 && a(e3.prototype, t3), r2 && a(e3, r2);
    })(t2, [{ key: "getTemplate", value: function() {
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.values.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value;
          if ((0, h.default)(a2 instanceof c.ObjectValue), a2.isPartialObject()) return a2;
          break;
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
      throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
    } }, { key: "hasStringOrSymbolProperties", value: function() {
      if (this.values.isTop()) return false;
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.values.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value;
          if ((0, h.default)(a2 instanceof c.ObjectValue), a2.hasStringOrSymbolProperties()) return true;
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
      return false;
    } }, { key: "isPartialObject", value: function() {
      return true;
    } }, { key: "isSimpleObject", value: function() {
      return void 0 === this.cachedIsSimpleObject && (this.cachedIsSimpleObject = this._elementsAreSimpleObjects()), this.cachedIsSimpleObject;
    } }, { key: "_elementsAreSimpleObjects", value: function() {
      if (this.values.isTop()) return false;
      var e3, t3 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this.values.getElements()[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
          var o2 = i2.value;
          if ((0, h.default)(o2 instanceof c.ObjectValue), void 0 === e3) e3 = o2.isSimpleObject();
          else if (e3 !== o2.isSimpleObject()) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t3 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      if (void 0 === e3) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
      return e3;
    } }, { key: "mightBeFinalObject", value: function() {
      if (this.shape) return true;
      if (this.values.isTop()) return false;
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.values.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value;
          if ((0, h.default)(a2 instanceof c.ObjectValue), a2.mightBeFinalObject()) return true;
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
      return false;
    } }, { key: "mightNotBeFinalObject", value: function() {
      if (this.shape) return false;
      if (this.values.isTop()) return false;
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.values.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value;
          if ((0, h.default)(a2 instanceof c.ObjectValue), a2.mightNotBeFinalObject()) return true;
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
      return false;
    } }, { key: "mightBeFalse", value: function() {
      return false;
    } }, { key: "mightNotBeFalse", value: function() {
      return true;
    } }, { key: "makePartial", value: function() {
      if (this.values.isTop()) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.values.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value;
          (0, h.default)(a2 instanceof c.ObjectValue), a2.makePartial();
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
    } }, { key: "makeSimple", value: function(e3) {
      if (this.values.isTop() && this.getType() === c.ObjectValue) {
        var t3 = new c.ObjectValue(this.$Realm, this.$Realm.intrinsics.ObjectPrototype);
        t3.intrinsicName = this.intrinsicName, t3.intrinsicNameGenerated = true, t3.makePartial(), t3._templateFor = this, this.values = new f.ValuesDomain(t3);
      }
      if (!this.values.isTop()) {
        var r2 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = this.values.getElements()[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            (0, h.default)(s2 instanceof c.ObjectValue), s2.makeSimple(e3);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r2 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
      }
      this.cachedIsSimpleObject = true;
    } }, { key: "getSnapshot", value: function(e3) {
      if (this.isIntrinsic()) return this;
      if (this.values.isTop()) return this;
      if ("conditional" === this.kind) {
        var r2 = i(this.args, 3), n2 = r2[0], a2 = r2[1], o2 = r2[2];
        (0, h.default)(a2 instanceof c.ObjectValue || a2 instanceof t2);
        var s2 = a2.getSnapshot(e3);
        (0, h.default)(o2 instanceof c.ObjectValue || o2 instanceof t2);
        var u2 = o2.getSnapshot(e3);
        (0, h.default)(n2 instanceof c.AbstractValue);
        var l2 = c.AbstractValue.createFromConditionalOp(this.$Realm, n2, s2, u2, this.expressionLocation);
        return (0, h.default)(l2 instanceof t2), l2;
      }
      return this.makeFinal(), this;
    } }, { key: "makeFinal", value: function() {
      if (!this.shape) {
        if (this.values.isTop()) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
        var e3 = true, t3 = false, r2 = void 0;
        try {
          for (var n2, i2 = this.values.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
            var a2 = n2.value;
            (0, h.default)(a2 instanceof c.ObjectValue), a2.makeFinal();
          }
        } catch (e4) {
          t3 = true, r2 = e4;
        } finally {
          try {
            e3 || null == i2.return || i2.return();
          } finally {
            if (t3) throw r2;
          }
        }
      }
    } }, { key: "throwIfNotObject", value: function() {
      return this;
    } }, { key: "usesOrdinaryObjectInternalPrototypeMethods", value: function() {
      return true;
    } }, { key: "$GetPrototypeOf", value: function() {
      var e3 = this.$Realm;
      if (this.values.isTop()) {
        var r2 = new l.CompilerDiagnostic("prototype access on unknown object", this.$Realm.currentLocation, "PP0032", "FatalError");
        throw this.$Realm.handleError(r2), new l.FatalError();
      }
      (0, h.default)("widened" !== this.kind, "widening currently always leads to top values");
      var n2 = this.values.getElements();
      if (1 !== n2.size) {
        if ("conditional" === this.kind) {
          var a2 = i(this.args, 3), o2 = a2[0], s2 = a2[1], u2 = a2[2];
          (0, h.default)(o2 instanceof c.AbstractValue), (0, h.default)(s2 instanceof c.ObjectValue || s2 instanceof t2), (0, h.default)(u2 instanceof c.ObjectValue || u2 instanceof t2);
          var f2 = s2.$GetPrototypeOf(), p2 = u2.$GetPrototypeOf(), d2 = c.AbstractValue.createFromConditionalOp(e3, o2, f2, p2);
          return (0, h.default)(d2 instanceof t2 || d2 instanceof c.ObjectValue || d2 instanceof c.NullValue), d2;
        }
        if ("explicit conversion to object" === this.kind) {
          var y2 = this.args[0];
          (0, h.default)(!c.Value.isTypeCompatibleWith(y2.getType(), c.PrimitiveValue));
          var m2 = c.AbstractValue.createFromBuildFunction(e3, c.ObjectValue, [y2], (0, v.createOperationDescriptor)("ABSTRACT_OBJECT_GET_PROTO_OF"));
          return (0, h.default)(m2 instanceof t2), m2;
        }
        var b2, g2 = true, w = false, E = void 0;
        try {
          for (var S, T = n2[Symbol.iterator](); !(g2 = (S = T.next()).done); g2 = true) {
            var A = S.value;
            (0, h.default)(A instanceof c.ObjectValue);
            var C = A.$GetPrototypeOf();
            if (void 0 === b2) b2 = C;
            else {
              var P = c.AbstractValue.createFromBinaryOp(e3, "===", this, A, this.expressionLocation);
              b2 = c.AbstractValue.createFromConditionalOp(e3, P, C, b2);
            }
          }
        } catch (e4) {
          w = true, E = e4;
        } finally {
          try {
            g2 || null == T.return || T.return();
          } finally {
            if (w) throw E;
          }
        }
        return (0, h.default)(b2 instanceof t2 || b2 instanceof c.ObjectValue || b2 instanceof c.NullValue), b2;
      }
      var O = true, x = false, _ = void 0;
      try {
        for (var V, D = n2[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
          var N = V.value;
          return (0, h.default)(N instanceof c.ObjectValue), N.$GetPrototypeOf();
        }
      } catch (e4) {
        x = true, _ = e4;
      } finally {
        try {
          O || null == D.return || D.return();
        } finally {
          if (x) throw _;
        }
      }
      (0, h.default)(false);
    } }, { key: "$IsExtensible", value: function() {
      return false;
    } }, { key: "$GetOwnProperty", value: function(e3) {
      var r2 = e3;
      if (r2 instanceof c.StringValue && (r2 = r2.value), this.values.isTop()) {
        var n2 = new l.CompilerDiagnostic("property access on unknown object", this.$Realm.currentLocation, "PP0031", "FatalError");
        throw this.$Realm.handleError(n2), new l.FatalError();
      }
      var a2 = this.values.getElements();
      if (1 !== a2.size) {
        if ("conditional" === this.kind) {
          var o2 = i(this.args, 3), s2 = o2[0], u2 = o2[1], f2 = o2[2];
          (0, h.default)(s2 instanceof c.AbstractValue), (0, h.default)(u2 instanceof c.ObjectValue || u2 instanceof t2), (0, h.default)(f2 instanceof c.ObjectValue || f2 instanceof t2);
          var v2 = u2.$GetOwnProperty(r2), y2 = f2.$GetOwnProperty(r2);
          return d.Join.joinDescriptors(this.$Realm, s2, v2, y2);
        }
        if ("widened" === this.kind) {
          var m2 = i(this.args, 2), g2 = m2[0], w = m2[1];
          (0, h.default)(g2 instanceof c.ObjectValue), (0, h.default)(w instanceof c.ObjectValue);
          var E = g2.$GetOwnProperty(r2), S = w.$GetOwnProperty(r2);
          if (void 0 === E || void 0 === S) throw c.AbstractValue.reportIntrospectionError(this, r2), new l.FatalError();
          if (E = E.throwIfNotConcrete(this.$Realm), S = S.throwIfNotConcrete(this.$Realm), !(0, b.equalDescriptors)(E, S)) throw c.AbstractValue.reportIntrospectionError(this, r2), new l.FatalError();
          var T = (0, b.cloneDescriptor)(E);
          if ((0, h.default)(void 0 !== T), (0, p.IsDataDescriptor)(this.$Realm, T)) {
            var A = E.value;
            (0, h.default)(A instanceof c.Value);
            var C = S.value;
            (0, h.default)(C instanceof c.Value);
            var P = d.Widen.widenValues(this.$Realm, A, C);
            (0, h.default)(P instanceof c.Value), T.value = P;
          }
          return T;
        }
        var O, x = true, _ = true, V = false, D = void 0;
        try {
          for (var N, I = a2[Symbol.iterator](); !(_ = (N = I.next()).done); _ = true) {
            var k = N.value;
            (0, h.default)(k instanceof c.ObjectValue);
            var j = k.$GetOwnProperty(r2);
            if (x) x = false, O = j;
            else {
              var F = c.AbstractValue.createFromBinaryOp(this.$Realm, "===", this, k, this.expressionLocation);
              (0, h.default)(F instanceof c.AbstractValue), O = d.Join.joinDescriptors(this.$Realm, F, j, O);
            }
          }
        } catch (e4) {
          V = true, D = e4;
        } finally {
          try {
            _ || null == I.return || I.return();
          } finally {
            if (V) throw D;
          }
        }
        return O;
      }
      var R = true, M = false, B = void 0;
      try {
        for (var L, $ = a2[Symbol.iterator](); !(R = (L = $.next()).done); R = true) {
          var G = L.value;
          return (0, h.default)(G instanceof c.ObjectValue), G.$GetOwnProperty(r2);
        }
      } catch (e4) {
        M = true, B = e4;
      } finally {
        try {
          R || null == $.return || $.return();
        } finally {
          if (M) throw B;
        }
      }
      (0, h.default)(false);
    } }, { key: "$DefineOwnProperty", value: function(e3, r2) {
      var n2 = e3;
      if (n2 instanceof c.StringValue && (n2 = n2.value), this.values.isTop()) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
      var a2 = this.values.getElements();
      if (1 !== a2.size) {
        var o2, s2 = r2.throwIfNotConcrete(this.$Realm);
        if (!(0, p.IsDataDescriptor)(this.$Realm, s2)) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
        var u2 = true, f2 = false, d2 = void 0;
        try {
          for (var v2, y2 = a2[Symbol.iterator](); !(u2 = (v2 = y2.next()).done); u2 = true) {
            var m2 = v2.value;
            if ((0, h.default)(m2 instanceof c.ObjectValue), o2 = m2.$GetOwnProperty(n2)) break;
          }
        } catch (e4) {
          f2 = true, d2 = e4;
        } finally {
          try {
            u2 || null == y2.return || y2.return();
          } finally {
            if (f2) throw d2;
          }
        }
        o2 && (o2 = o2.throwIfNotConcrete(this.$Realm));
        var g2 = new b.PropertyDescriptor({ value: void 0 !== s2.value ? s2.value : this.$Realm.intrinsics.undefined, writable: void 0 !== s2.writable ? s2.writable : !!o2 && o2.writable, enumerable: void 0 !== s2.enumerable ? s2.enumerable : !!o2 && o2.enumerable, configurable: void 0 !== s2.configurable ? s2.configurable : !!o2 && o2.configurable }), w = g2.value;
        if ("conditional" === this.kind) {
          var E = i(this.args, 3), S = E[0], T = E[1], A = E[2];
          (0, h.default)(S instanceof c.AbstractValue), (0, h.default)(T instanceof c.ObjectValue || T instanceof t2), (0, h.default)(A instanceof c.ObjectValue || A instanceof t2);
          var C = T.$GetOwnProperty(n2), P = A.$GetOwnProperty(n2);
          if (void 0 !== C && (C = C.throwIfNotConcrete(this.$Realm), !(0, b.equalDescriptors)(C, g2))) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
          if (void 0 !== P && (P = P.throwIfNotConcrete(this.$Realm), !(0, b.equalDescriptors)(P, g2))) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
          var O = void 0 === C || void 0 === C.value ? this.$Realm.intrinsics.empty : C.value, x = void 0 === P || void 0 === P.value ? this.$Realm.intrinsics.empty : P.value;
          (0, h.default)(O instanceof c.Value), (0, h.default)(x instanceof c.Value);
          var _ = c.AbstractValue.createFromConditionalOp(this.$Realm, S, w, O), V = c.AbstractValue.createFromConditionalOp(this.$Realm, S, x, w);
          g2.value = _;
          var D = T.$DefineOwnProperty(n2, g2);
          if (g2.value = V, D !== A.$DefineOwnProperty(n2, g2)) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
          return D;
        }
        (0, h.default)(w instanceof c.Value);
        var N = false, I = false, k = true, j = false, F = void 0;
        try {
          for (var R, M = a2[Symbol.iterator](); !(k = (R = M.next()).done); k = true) {
            var B = R.value;
            (0, h.default)(B instanceof c.ObjectValue);
            var L = B.$GetOwnProperty(n2);
            if (void 0 !== L && (L = L.throwIfNotConcrete(this.$Realm), !(0, b.equalDescriptors)(L, g2))) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
            var $ = void 0 === L || void 0 === L.value ? this.$Realm.intrinsics.empty : L.value;
            (0, h.default)($ instanceof c.Value);
            var G = c.AbstractValue.createFromBinaryOp(this.$Realm, "===", this, B, this.expressionLocation);
            g2.value = c.AbstractValue.createFromConditionalOp(this.$Realm, G, w, $), B.$DefineOwnProperty(n2, g2) ? N = true : I = true;
          }
        } catch (e4) {
          j = true, F = e4;
        } finally {
          try {
            k || null == M.return || M.return();
          } finally {
            if (j) throw F;
          }
        }
        if (N && I) throw c.AbstractValue.reportIntrospectionError(this, n2), new l.FatalError();
        return N;
      }
      var z = true, U = false, W = void 0;
      try {
        for (var q, H = a2[Symbol.iterator](); !(z = (q = H.next()).done); z = true) {
          var K = q.value;
          return (0, h.default)(K instanceof c.ObjectValue), K.$DefineOwnProperty(n2, r2);
        }
      } catch (e4) {
        U = true, W = e4;
      } finally {
        try {
          z || null == H.return || H.return();
        } finally {
          if (U) throw W;
        }
      }
      (0, h.default)(false);
    } }, { key: "$HasProperty", value: function(e3) {
      var t3 = e3;
      if (t3 instanceof c.StringValue && (t3 = t3.value), this.values.isTop()) {
        var r2 = new l.CompilerDiagnostic("property access on unknown object", this.$Realm.currentLocation, "PP0031", "FatalError");
        throw this.$Realm.handleError(r2), new l.FatalError();
      }
      var n2 = this.values.getElements();
      if (1 !== n2.size) {
        var i2 = false, a2 = false, o2 = true, s2 = false, u2 = void 0;
        try {
          for (var f2, p2 = n2[Symbol.iterator](); !(o2 = (f2 = p2.next()).done); o2 = true) {
            var d2 = f2.value;
            (0, h.default)(d2 instanceof c.ObjectValue), d2.$HasProperty(t3) ? i2 = true : a2 = true;
          }
        } catch (e4) {
          s2 = true, u2 = e4;
        } finally {
          try {
            o2 || null == p2.return || p2.return();
          } finally {
            if (s2) throw u2;
          }
        }
        if (i2 && a2) throw c.AbstractValue.reportIntrospectionError(this, t3), new l.FatalError();
        return i2;
      }
      var v2 = true, y2 = false, m2 = void 0;
      try {
        for (var b2, g2 = n2[Symbol.iterator](); !(v2 = (b2 = g2.next()).done); v2 = true) {
          var w = b2.value;
          return (0, h.default)(w instanceof c.ObjectValue), w.$HasProperty(t3);
        }
      } catch (e4) {
        y2 = true, m2 = e4;
      } finally {
        try {
          v2 || null == g2.return || g2.return();
        } finally {
          if (y2) throw m2;
        }
      }
      (0, h.default)(false);
    } }, { key: "$Get", value: function(e3, r2) {
      var a2 = this, o2 = e3;
      if (o2 instanceof c.StringValue && (o2 = o2.value), this.values.isTop()) {
        var s2 = function() {
          var e4 = r2;
          "explicit conversion to object" === a2.kind && (e4 = a2.args[0]);
          var t3 = c.Value;
          "length" === o2 && c.Value.isTypeCompatibleWith(a2.getType(), c.ArrayValue) && (t3 = c.NumberValue);
          var n2 = "explicit conversion to object" === a2.kind ? a2.args[0] : a2;
          (0, h.default)(n2 instanceof c.AbstractValue);
          var i2, s3, u3 = a2.$Realm, l2 = n2.shape;
          return (u3.instantRender.enabled || u3.react.enabled) && void 0 !== l2 && ("string" == typeof o2 || o2 instanceof c.StringValue) && void 0 !== (i2 = l2.getPropertyShape(o2 instanceof c.StringValue ? o2.value : o2)) && (t3 = i2.getAbstractType(), s3 = i2.getGetter()), "string" == typeof o2 && (o2 = new c.StringValue(a2.$Realm, o2)), t3 === c.ArrayValue ? c.ArrayValue.createTemporalWithWidenedNumericProperty(u3, [e4, o2], (0, v.createOperationDescriptor)("ABSTRACT_OBJECT_GET", { propertyGetter: s3 })) : c.AbstractValue.createTemporalFromBuildFunction(u3, t3, [e4, o2], (0, v.createOperationDescriptor)("ABSTRACT_OBJECT_GET", { propertyGetter: s3 }), { skipInvariant: true, isPure: true, shape: i2 });
        };
        if (this.isSimpleObject() && this.isIntrinsic()) return s2();
        if (this.$Realm.isInPureScope()) return d.Leak.value(this.$Realm, r2), this.$Realm.evaluateWithPossibleThrowCompletion(s2, f.TypesDomain.topVal, f.ValuesDomain.topVal);
        var u2 = new l.CompilerDiagnostic("property access on unknown object", this.$Realm.currentLocation, "PP0031", "FatalError");
        throw this.$Realm.handleError(u2), new l.FatalError();
      }
      var p2 = this.$Realm, b2 = this.values.getElements();
      if (1 === b2.size) {
        var g2 = true, w = false, E = void 0;
        try {
          for (var S, T = b2[Symbol.iterator](); !(g2 = (S = T.next()).done); g2 = true) {
            var A = S.value;
            return (0, h.default)(A instanceof c.ObjectValue), A.$Get(o2, r2);
          }
        } catch (e4) {
          w = true, E = e4;
        } finally {
          try {
            g2 || null == T.return || T.return();
          } finally {
            if (w) throw E;
          }
        }
        (0, h.default)(false);
      } else {
        if ("conditional" === this.kind) {
          var C = i(this.args, 3), P = C[0], O = C[1], x = C[2];
          return (0, h.default)(P instanceof c.AbstractValue), (0, h.default)(O instanceof c.ObjectValue || O instanceof t2), (0, h.default)(x instanceof c.ObjectValue || x instanceof t2), p2.evaluateWithAbstractConditional(P, function() {
            return p2.evaluateForEffects(function() {
              return O.$Get(o2, r2);
            }, void 0, "ConditionalGet/1");
          }, function() {
            return p2.evaluateForEffects(function() {
              return x.$Get(o2, r2);
            }, void 0, "ConditionalGet/2");
          });
        }
        var _ = (function() {
          var e4, t3 = true, n2 = false, i2 = void 0;
          try {
            for (var s3, u3 = function() {
              var t4 = s3.value;
              (0, h.default)(t4 instanceof c.ObjectValue);
              var n3 = c.AbstractValue.createFromBinaryOp(a2.$Realm, "===", a2, t4, a2.expressionLocation);
              (0, h.default)(n3 instanceof c.AbstractValue), e4 = p2.evaluateWithAbstractConditional(n3, function() {
                return p2.evaluateForEffects(function() {
                  return t4.$Get(o2, r2);
                }, void 0, "AbstractGet");
              }, function() {
                return (0, y.construct_empty_effects)(p2, void 0 === e4 ? void 0 : new m.SimpleNormalCompletion(e4));
              });
            }, l2 = b2[Symbol.iterator](); !(t3 = (s3 = l2.next()).done); t3 = true) u3();
          } catch (e5) {
            n2 = true, i2 = e5;
          } finally {
            try {
              t3 || null == l2.return || l2.return();
            } finally {
              if (n2) throw i2;
            }
          }
          return (0, h.default)(void 0 !== e4), { v: e4 };
        })();
        if ("object" === n(_)) return _.v;
      }
    } }, { key: "$GetPartial", value: function(e3, r2) {
      var a2 = this;
      if (!(e3 instanceof c.AbstractValue)) return this.$Get(e3, r2);
      if (this.values.isTop() || !this.isSimpleObject()) {
        if (this.isSimpleObject() && this.isIntrinsic()) return c.AbstractValue.createTemporalFromBuildFunction(this.$Realm, c.Value, [this, e3], (0, v.createOperationDescriptor)("ABSTRACT_OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
        if (this.$Realm.isInPureScope()) return d.Leak.value(this.$Realm, r2), d.Leak.value(this.$Realm, e3), c.AbstractValue.createTemporalFromBuildFunction(this.$Realm, c.Value, [r2, e3], (0, v.createOperationDescriptor)("ABSTRACT_OBJECT_GET_PARTIAL"), { skipInvariant: true, isPure: true });
        var o2 = new l.CompilerDiagnostic("property access on unknown object", this.$Realm.currentLocation, "PP0031", "FatalError");
        throw this.$Realm.handleError(o2), new l.FatalError();
      }
      var s2 = this.$Realm, u2 = this.values.getElements();
      if (1 === u2.size) {
        var f2 = true, p2 = false, b2 = void 0;
        try {
          for (var g2, w = u2[Symbol.iterator](); !(f2 = (g2 = w.next()).done); f2 = true) {
            var E = g2.value;
            return (0, h.default)(E instanceof c.ObjectValue), E.$GetPartial(e3, r2);
          }
        } catch (e4) {
          p2 = true, b2 = e4;
        } finally {
          try {
            f2 || null == w.return || w.return();
          } finally {
            if (p2) throw b2;
          }
        }
        (0, h.default)(false);
      } else {
        if ("conditional" === this.kind) {
          var S = i(this.args, 3), T = S[0], A = S[1], C = S[2];
          return (0, h.default)(T instanceof c.AbstractValue), (0, h.default)(A instanceof c.ObjectValue || A instanceof t2), (0, h.default)(C instanceof c.ObjectValue || C instanceof t2), s2.evaluateWithAbstractConditional(T, function() {
            return s2.evaluateForEffects(function() {
              return A.$GetPartial(e3, r2);
            }, void 0, "ConditionalGet/1");
          }, function() {
            return s2.evaluateForEffects(function() {
              return C.$GetPartial(e3, r2);
            }, void 0, "ConditionalGet/2");
          });
        }
        var P = (function() {
          var t3, n2 = true, i2 = false, o3 = void 0;
          try {
            for (var l2, f3 = function() {
              var n3 = l2.value;
              (0, h.default)(n3 instanceof c.ObjectValue);
              var i3 = c.AbstractValue.createFromBinaryOp(a2.$Realm, "===", a2, n3, a2.expressionLocation);
              (0, h.default)(i3 instanceof c.AbstractValue), t3 = s2.evaluateWithAbstractConditional(i3, function() {
                return s2.evaluateForEffects(function() {
                  return n3.$GetPartial(e3, r2);
                }, void 0, "AbstractGet");
              }, function() {
                return (0, y.construct_empty_effects)(s2, void 0 === t3 ? void 0 : new m.SimpleNormalCompletion(t3));
              });
            }, p3 = u2[Symbol.iterator](); !(n2 = (l2 = p3.next()).done); n2 = true) f3();
          } catch (e4) {
            i2 = true, o3 = e4;
          } finally {
            try {
              n2 || null == p3.return || p3.return();
            } finally {
              if (i2) throw o3;
            }
          }
          return (0, h.default)(void 0 !== t3), { v: t3 };
        })();
        if ("object" === n(P)) return P.v;
      }
    } }, { key: "$Set", value: function(e3, r2, n2) {
      var a2 = this;
      if (this.values.isTop()) return this.$SetPartial(e3, r2, n2);
      var o2 = this.$Realm, s2 = this.values.getElements();
      if (1 !== s2.size) {
        if ("conditional" === this.kind) {
          var u2 = i(this.args, 3), f2 = u2[0], p2 = u2[1], d2 = u2[2];
          (0, h.default)(f2 instanceof c.AbstractValue), (0, h.default)(p2 instanceof c.ObjectValue || p2 instanceof t2), (0, h.default)(d2 instanceof c.ObjectValue || d2 instanceof t2);
          var v2 = o2.evaluateWithAbstractConditional(f2, function() {
            return o2.evaluateForEffects(function() {
              return new c.BooleanValue(o2, p2.$Set(e3, r2, n2));
            }, void 0, "ConditionalSet/1");
          }, function() {
            return o2.evaluateForEffects(function() {
              return new c.BooleanValue(o2, d2.$Set(e3, r2, n2));
            }, void 0, "ConditionalSet/2");
          });
          if (!(v2 instanceof c.BooleanValue)) {
            var m2 = new l.CompilerDiagnostic("object could have both succeeded and failed updating", o2.currentLocation, "PP0041", "RecoverableError");
            if ("Recover" === o2.handleError(m2)) return true;
            throw new l.FatalError();
          }
          return v2.value;
        }
        var b2 = false, g2 = false, w = true, E = false, S = void 0;
        try {
          for (var T, A = function() {
            var t3 = T.value;
            (0, h.default)(t3 instanceof c.ObjectValue);
            var i2 = c.AbstractValue.createFromBinaryOp(a2.$Realm, "===", a2, t3, a2.expressionLocation);
            (0, h.default)(i2 instanceof c.AbstractValue), o2.evaluateWithAbstractConditional(i2, function() {
              return o2.evaluateForEffects(function() {
                return t3.$Set(e3, r2, n2) ? b2 = true : g2 = true, o2.intrinsics.empty;
              }, void 0, "AbstractSet");
            }, function() {
              return (0, y.construct_empty_effects)(o2);
            });
          }, C = s2[Symbol.iterator](); !(w = (T = C.next()).done); w = true) A();
        } catch (e4) {
          E = true, S = e4;
        } finally {
          try {
            w || null == C.return || C.return();
          } finally {
            if (E) throw S;
          }
        }
        if (b2 && g2) {
          var P = new l.CompilerDiagnostic("object could have both succeeded and failed updating", o2.currentLocation, "PP0041", "RecoverableError");
          if ("Recover" === o2.handleError(P)) return true;
        }
        return b2;
      }
      var O = true, x = false, _ = void 0;
      try {
        for (var V, D = s2[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
          var N = V.value;
          return (0, h.default)(N instanceof c.ObjectValue), N.$Set(e3, r2, n2);
        }
      } catch (e4) {
        x = true, _ = e4;
      } finally {
        try {
          O || null == D.return || D.return();
        } finally {
          if (x) throw _;
        }
      }
      (0, h.default)(false);
    } }, { key: "$SetPartial", value: function(e3, r2, n2) {
      var a2 = this, o2 = e3;
      if (!(this.values.isTop() || o2 instanceof c.AbstractValue)) return this.$Set(o2, r2, n2);
      if (this.values.isTop()) {
        if (this.$Realm.isInPureScope()) return d.Leak.value(this.$Realm, n2), d.Leak.value(this.$Realm, r2), this.$Realm.evaluateWithPossibleThrowCompletion(function() {
          var e4 = a2.$Realm.generator;
          return (0, h.default)(e4), "string" == typeof o2 || o2 instanceof c.StringValue || d.Leak.value(a2.$Realm, o2), e4.emitPropertyAssignment(n2, o2, r2), a2.$Realm.intrinsics.undefined;
        }, f.TypesDomain.topVal, f.ValuesDomain.topVal), true;
        var s2 = new l.CompilerDiagnostic("property access on unknown object", this.$Realm.currentLocation, "PP0031", "FatalError");
        throw this.$Realm.handleError(s2), new l.FatalError();
      }
      var u2 = this.$Realm, p2 = this.values.getElements();
      if (1 !== p2.size) {
        if ("conditional" === this.kind) {
          var v2 = i(this.args, 3), m2 = v2[0], b2 = v2[1], g2 = v2[2];
          (0, h.default)(m2 instanceof c.AbstractValue), (0, h.default)(b2 instanceof c.ObjectValue || b2 instanceof t2), (0, h.default)(g2 instanceof c.ObjectValue || g2 instanceof t2);
          var w = u2.evaluateWithAbstractConditional(m2, function() {
            return u2.evaluateForEffects(function() {
              return new c.BooleanValue(u2, b2.$SetPartial(o2, r2, n2));
            }, void 0, "ConditionalSet/1");
          }, function() {
            return u2.evaluateForEffects(function() {
              return new c.BooleanValue(u2, g2.$SetPartial(o2, r2, n2));
            }, void 0, "ConditionalSet/2");
          });
          if (!(w instanceof c.BooleanValue)) {
            var E = new l.CompilerDiagnostic("object could have both succeeded and failed updating", u2.currentLocation, "PP0041", "RecoverableError");
            if ("Recover" === u2.handleError(E)) return true;
            throw new l.FatalError();
          }
          return w.value;
        }
        var S = false, T = false, A = true, C = false, P = void 0;
        try {
          for (var O, x = function() {
            var e4 = O.value;
            (0, h.default)(e4 instanceof c.ObjectValue);
            var t3 = c.AbstractValue.createFromBinaryOp(a2.$Realm, "===", a2, e4, a2.expressionLocation);
            (0, h.default)(t3 instanceof c.AbstractValue), u2.evaluateWithAbstractConditional(t3, function() {
              return u2.evaluateForEffects(function() {
                return e4.$SetPartial(o2, r2, n2) ? S = true : T = true, u2.intrinsics.empty;
              }, void 0, "AbstractSet");
            }, function() {
              return (0, y.construct_empty_effects)(u2);
            });
          }, _ = p2[Symbol.iterator](); !(A = (O = _.next()).done); A = true) x();
        } catch (e4) {
          C = true, P = e4;
        } finally {
          try {
            A || null == _.return || _.return();
          } finally {
            if (C) throw P;
          }
        }
        if (S && T) {
          var V = new l.CompilerDiagnostic("object could have both succeeded and failed updating", u2.currentLocation, "PP0041", "RecoverableError");
          if ("Recover" === u2.handleError(V)) return true;
        }
        return S;
      }
      var D = true, N = false, I = void 0;
      try {
        for (var k, j = p2[Symbol.iterator](); !(D = (k = j.next()).done); D = true) {
          var F = k.value;
          return (0, h.default)(F instanceof c.ObjectValue), F.$SetPartial(o2, r2, n2);
        }
      } catch (e4) {
        N = true, I = e4;
      } finally {
        try {
          D || null == j.return || j.return();
        } finally {
          if (N) throw I;
        }
      }
      (0, h.default)(false);
    } }, { key: "$Delete", value: function(e3) {
      var r2 = e3;
      if (r2 instanceof c.StringValue && (r2 = r2.value), this.values.isTop()) throw c.AbstractValue.reportIntrospectionError(this, r2), new l.FatalError();
      var n2 = this.values.getElements();
      if (1 !== n2.size) {
        if ("conditional" === this.kind) {
          var a2 = i(this.args, 3), o2 = a2[0], s2 = a2[1], u2 = a2[2];
          (0, h.default)(o2 instanceof c.AbstractValue), (0, h.default)(s2 instanceof c.ObjectValue || s2 instanceof t2), (0, h.default)(u2 instanceof c.ObjectValue || u2 instanceof t2);
          var f2 = s2.$GetOwnProperty(r2), d2 = u2.$GetOwnProperty(r2), v2 = void 0 === f2 ? this.$Realm.intrinsics.empty : (0, p.IsDataDescriptor)(this.$Realm, f2) ? f2.value : void 0, y2 = void 0 === d2 ? this.$Realm.intrinsics.empty : (0, p.IsDataDescriptor)(this.$Realm, d2) ? d2.value : void 0;
          if (void 0 === v2 || void 0 === y2) throw c.AbstractValue.reportIntrospectionError(this, r2), new l.FatalError();
          (0, h.default)(v2 instanceof c.Value), (0, h.default)(y2 instanceof c.Value);
          var m2 = c.AbstractValue.createFromConditionalOp(this.$Realm, o2, this.$Realm.intrinsics.empty, v2), g2 = c.AbstractValue.createFromConditionalOp(this.$Realm, o2, y2, this.$Realm.intrinsics.empty), w = true, E = true;
          if (void 0 !== f2) {
            f2 = f2.throwIfNotConcrete(this.$Realm);
            var S = (0, b.cloneDescriptor)(f2);
            (0, h.default)(S), (S = S.throwIfNotConcrete(this.$Realm)).value = m2, w = s2.$DefineOwnProperty(r2, S);
          }
          if (void 0 !== d2) {
            d2 = d2.throwIfNotConcrete(this.$Realm);
            var T = (0, b.cloneDescriptor)(d2);
            (0, h.default)(T), (T = T.throwIfNotConcrete(this.$Realm)).value = g2, E = u2.$DefineOwnProperty(r2, T);
          }
          if (w !== E) throw c.AbstractValue.reportIntrospectionError(this, r2), new l.FatalError();
          return w;
        }
        var A = false, C = false, P = true, O = false, x = void 0;
        try {
          for (var _, V = n2[Symbol.iterator](); !(P = (_ = V.next()).done); P = true) {
            var D = _.value;
            (0, h.default)(D instanceof c.ObjectValue);
            var N = D.$GetOwnProperty(r2);
            if (void 0 !== N) {
              if (!(0, p.IsDataDescriptor)(this.$Realm, N)) throw c.AbstractValue.reportIntrospectionError(this, r2), new l.FatalError();
              var I = c.AbstractValue.createFromBinaryOp(this.$Realm, "===", this, D, this.expressionLocation), k = N.value;
              (0, h.default)(k instanceof c.Value);
              var j = c.AbstractValue.createFromConditionalOp(this.$Realm, I, this.$Realm.intrinsics.empty, k), F = (0, b.cloneDescriptor)(N);
              (0, h.default)(F), F.value = j, D.$DefineOwnProperty(r2, F) ? A = true : C = true;
            }
          }
        } catch (e4) {
          O = true, x = e4;
        } finally {
          try {
            P || null == V.return || V.return();
          } finally {
            if (O) throw x;
          }
        }
        if (A && C) {
          var R = new l.CompilerDiagnostic("object could have both succeeded and failed updating", this.$Realm.currentLocation, "PP0041", "RecoverableError");
          if ("Recover" === this.$Realm.handleError(R)) return true;
        }
        return A;
      }
      var M = true, B = false, L = void 0;
      try {
        for (var $, G = n2[Symbol.iterator](); !(M = ($ = G.next()).done); M = true) {
          var z = $.value;
          return (0, h.default)(z instanceof c.ObjectValue), z.$Delete(r2);
        }
      } catch (e4) {
        B = true, L = e4;
      } finally {
        try {
          M || null == G.return || G.return();
        } finally {
          if (B) throw L;
        }
      }
      (0, h.default)(false);
    } }, { key: "$OwnPropertyKeys", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      if (this.values.isTop()) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
      var t3 = this.values.getElements();
      if (1 !== t3.size) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = t3[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var s2 = a2.value;
          return (0, h.default)(s2 instanceof c.ObjectValue), s2.$OwnPropertyKeys(e3);
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
      (0, h.default)(false);
    } }, { key: "temporalAlias", set: function(e3) {
      if (this.values.isTop()) throw c.AbstractValue.reportIntrospectionError(this), new l.FatalError();
      var t3 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this.values.getElements()[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
          var o2 = i2.value;
          (0, h.default)(o2 instanceof c.ObjectValue), o2.temporalAlias = e3;
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t3 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }]), t2;
  })();
  t.default = g;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    function t2() {
      return (function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).apply(this, arguments));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.UndefinedValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "getHash", value: function() {
      return 4523845144584502;
    } }, { key: "equals", value: function(e3) {
      return e3 instanceof t2;
    } }]), t2;
  })();
  t.default = l;
}, function(e, t, r) {
  "use strict";
  var n = r(151), i = r(61);
  e.exports = function(e2, t2, r2) {
    var a = t2(e2);
    return i(e2) ? a : n(a, r2(e2));
  };
}, function(e, t, r) {
  "use strict";
  var n = r(170)(Object.getPrototypeOf, Object);
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = t2.length, i = e2.length; ++r2 < n; ) e2[i + r2] = t2[r2];
    return e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(151), i = r(150), a = r(103), o = r(153), s = Object.getOwnPropertySymbols ? function(e2) {
    for (var t2 = []; e2; ) n(t2, a(e2)), e2 = i(e2);
    return t2;
  } : o;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
    return [];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(166);
  e.exports = function(e2, t2, r2) {
    "__proto__" == t2 && n ? n(e2, t2, { configurable: true, enumerable: true, value: r2, writable: true }) : e2[t2] = r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(154), i = r(79), a = Object.prototype.hasOwnProperty;
  e.exports = function(e2, t2, r2) {
    var o = e2[t2];
    a.call(e2, t2) && i(o, r2) && (void 0 !== r2 || t2 in e2) || n(e2, t2, r2);
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  function i(e2) {
    if (e2.declaration) {
      var t2 = e2.declaration;
      this.print(t2, e2), n().isStatement(t2) || this.semicolon();
    } else {
      "type" === e2.exportKind && (this.word("type"), this.space());
      for (var r2 = e2.specifiers.slice(0), i2 = false; ; ) {
        var a = r2[0];
        if (!n().isExportDefaultSpecifier(a) && !n().isExportNamespaceSpecifier(a)) break;
        i2 = true, this.print(r2.shift(), e2), r2.length && (this.token(","), this.space());
      }
      (r2.length || !r2.length && !i2) && (this.token("{"), r2.length && (this.space(), this.printList(r2, e2), this.space()), this.token("}")), e2.source && (this.space(), this.word("from"), this.space(), this.print(e2.source, e2)), this.semicolon();
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ImportSpecifier = function(e2) {
    "type" !== e2.importKind && "typeof" !== e2.importKind || (this.word(e2.importKind), this.space());
    this.print(e2.imported, e2), e2.local && e2.local.name !== e2.imported.name && (this.space(), this.word("as"), this.space(), this.print(e2.local, e2));
  }, t.ImportDefaultSpecifier = function(e2) {
    this.print(e2.local, e2);
  }, t.ExportDefaultSpecifier = function(e2) {
    this.print(e2.exported, e2);
  }, t.ExportSpecifier = function(e2) {
    this.print(e2.local, e2), e2.exported && e2.local.name !== e2.exported.name && (this.space(), this.word("as"), this.space(), this.print(e2.exported, e2));
  }, t.ExportNamespaceSpecifier = function(e2) {
    this.token("*"), this.space(), this.word("as"), this.space(), this.print(e2.exported, e2);
  }, t.ExportAllDeclaration = function(e2) {
    this.word("export"), this.space(), "type" === e2.exportKind && (this.word("type"), this.space());
    this.token("*"), this.space(), this.word("from"), this.space(), this.print(e2.source, e2), this.semicolon();
  }, t.ExportNamedDeclaration = function(e2) {
    this.format.decoratorsBeforeExport && n().isClassDeclaration(e2.declaration) && this.printJoin(e2.declaration.decorators, e2);
    this.word("export"), this.space(), i.apply(this, arguments);
  }, t.ExportDefaultDeclaration = function(e2) {
    this.format.decoratorsBeforeExport && n().isClassDeclaration(e2.declaration) && this.printJoin(e2.declaration.decorators, e2);
    this.word("export"), this.space(), this.word("default"), this.space(), i.apply(this, arguments);
  }, t.ImportDeclaration = function(e2) {
    this.word("import"), this.space(), ("type" === e2.importKind || "typeof" === e2.importKind) && (this.word(e2.importKind), this.space());
    var t2 = e2.specifiers.slice(0);
    if (t2 && t2.length) {
      for (; ; ) {
        var r2 = t2[0];
        if (!n().isImportDefaultSpecifier(r2) && !n().isImportNamespaceSpecifier(r2)) break;
        this.print(t2.shift(), e2), t2.length && (this.token(","), this.space());
      }
      t2.length && (this.token("{"), this.space(), this.printList(t2, e2), this.space(), this.token("}")), this.space(), this.word("from"), this.space();
    }
    this.print(e2.source, e2), this.semicolon();
  }, t.ImportNamespaceSpecifier = function(e2) {
    this.token("*"), this.space(), this.word("as"), this.space(), this.print(e2.local, e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.needsWhitespace = p, t.needsWhitespaceBefore = function(e2, t2) {
    return p(e2, t2, "before");
  }, t.needsWhitespaceAfter = function(e2, t2) {
    return p(e2, t2, "after");
  }, t.needsParens = function(e2, t2, r2) {
    if (!t2) return false;
    if (a().isNewExpression(t2) && t2.callee === e2 && (function e3(t3) {
      if (a().isCallExpression(t3)) return true;
      return !!a().isMemberExpression(t3) && (e3(t3.object) || !t3.computed && e3(t3.property));
    })(e2)) return true;
    return f(u, e2, t2, r2);
  };
  var i = o(r(542));
  function a() {
    var e2 = o(r(5));
    return a = function() {
      return e2;
    }, e2;
  }
  function o(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  function s(e2) {
    var t2 = {};
    function r2(e3, r3) {
      var n3 = t2[e3];
      t2[e3] = n3 ? function(e4, t3, i3) {
        var a2 = n3(e4, t3, i3);
        return null == a2 ? r3(e4, t3, i3) : a2;
      } : r3;
    }
    for (var n2 = Object.keys(e2), i2 = 0; i2 < n2.length; i2++) {
      var o2 = n2[i2], s2 = a().FLIPPED_ALIAS_KEYS[o2];
      if (s2) {
        var u2 = true, l2 = false, c2 = void 0;
        try {
          for (var f2, p2 = s2[Symbol.iterator](); !(u2 = (f2 = p2.next()).done); u2 = true) {
            r2(f2.value, e2[o2]);
          }
        } catch (e3) {
          l2 = true, c2 = e3;
        } finally {
          try {
            u2 || null == p2.return || p2.return();
          } finally {
            if (l2) throw c2;
          }
        }
      } else r2(o2, e2[o2]);
    }
    return t2;
  }
  var u = s(o(r(541))), l = s(i.nodes), c = s(i.list);
  function f(e2, t2, r2, n2) {
    var i2 = e2[t2.type];
    return i2 ? i2(t2, r2, n2) : null;
  }
  function p(e2, t2, r2) {
    if (!e2) return 0;
    a().isExpressionStatement(e2) && (e2 = e2.expression);
    var i2 = f(l, e2, t2);
    if (!i2) {
      var o2 = f(c, e2, t2);
      if (o2) for (var s2 = 0; s2 < o2.length && !(i2 = p(o2[s2], e2, r2)); s2++) ;
    }
    return "object" === n(i2) && null !== i2 && i2[r2] || 0;
  }
}, function(e, t, r) {
  "use strict";
  var n = r(106), i = r(559), a = r(558), o = "[object Null]", s = "[object Undefined]", u = n ? n.toStringTag : void 0;
  e.exports = function(e2) {
    return null == e2 ? void 0 === e2 ? s : o : u && u in Object(e2) ? i(e2) : a(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(158), a = r(557), o = "[object Symbol]";
  e.exports = function(e2) {
    return "symbol" == n(e2) || a(e2) && i(e2) == o;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(563);
  e.exports = function(e2) {
    var t2 = n(e2), r2 = t2 % 1;
    return t2 == t2 ? r2 ? t2 - r2 : t2 : 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(60), i = Object.prototype.hasOwnProperty, a = "undefined" != typeof Map;
  function o() {
    this._array = [], this._set = a ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);
  }
  o.fromArray = function(e2, t2) {
    for (var r2 = new o(), n2 = 0, i2 = e2.length; n2 < i2; n2++) r2.add(e2[n2], t2);
    return r2;
  }, o.prototype.size = function() {
    return a ? this._set.size : Object.getOwnPropertyNames(this._set).length;
  }, o.prototype.add = function(e2, t2) {
    var r2 = a ? e2 : n.toSetString(e2), o2 = a ? this.has(e2) : i.call(this._set, r2), s = this._array.length;
    o2 && !t2 || this._array.push(e2), o2 || (a ? this._set.set(e2, s) : this._set[r2] = s);
  }, o.prototype.has = function(e2) {
    if (a) return this._set.has(e2);
    var t2 = n.toSetString(e2);
    return i.call(this._set, t2);
  }, o.prototype.indexOf = function(e2) {
    if (a) {
      var t2 = this._set.get(e2);
      if (t2 >= 0) return t2;
    } else {
      var r2 = n.toSetString(e2);
      if (i.call(this._set, r2)) return this._set[r2];
    }
    throw new Error('"' + e2 + '" is not in the set.');
  }, o.prototype.at = function(e2) {
    if (e2 >= 0 && e2 < this._array.length) return this._array[e2];
    throw new Error("No element indexed by " + e2);
  }, o.prototype.toArray = function() {
    return this._array.slice();
  }, t.ArraySet = o;
}, function(e, t, r) {
  "use strict";
  var n = r(571);
  t.encode = function(e2) {
    var t2, r2 = "", i = (function(e3) {
      return e3 < 0 ? 1 + (-e3 << 1) : 0 + (e3 << 1);
    })(e2);
    do {
      t2 = 31 & i, (i >>>= 5) > 0 && (t2 |= 32), r2 += n.encode(t2);
    } while (i > 0);
    return r2;
  }, t.decode = function(e2, t2, r2) {
    var i, a, o = e2.length, s = 0, u = 0;
    do {
      if (t2 >= o) throw new Error("Expected more digits in base 64 VLQ value.");
      if (-1 === (a = n.decode(e2.charCodeAt(t2++)))) throw new Error("Invalid base64 digit: " + e2.charAt(t2 - 1));
      i = !!(32 & a), s += (a &= 31) << u, u += 5;
    } while (i);
    r2.value = (function(e3) {
      var t3 = e3 >> 1;
      return 1 == (1 & e3) ? -t3 : t3;
    })(s), r2.rest = t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(162), i = r(60), a = r(161).ArraySet, o = r(570).MappingList;
  function s(e2) {
    e2 || (e2 = {}), this._file = i.getArg(e2, "file", null), this._sourceRoot = i.getArg(e2, "sourceRoot", null), this._skipValidation = i.getArg(e2, "skipValidation", false), this._sources = new a(), this._names = new a(), this._mappings = new o(), this._sourcesContents = null;
  }
  s.prototype._version = 3, s.fromSourceMap = function(e2) {
    var t2 = e2.sourceRoot, r2 = new s({ file: e2.file, sourceRoot: t2 });
    return e2.eachMapping(function(e3) {
      var n2 = { generated: { line: e3.generatedLine, column: e3.generatedColumn } };
      null != e3.source && (n2.source = e3.source, null != t2 && (n2.source = i.relative(t2, n2.source)), n2.original = { line: e3.originalLine, column: e3.originalColumn }, null != e3.name && (n2.name = e3.name)), r2.addMapping(n2);
    }), e2.sources.forEach(function(t3) {
      var n2 = e2.sourceContentFor(t3);
      null != n2 && r2.setSourceContent(t3, n2);
    }), r2;
  }, s.prototype.addMapping = function(e2) {
    var t2 = i.getArg(e2, "generated"), r2 = i.getArg(e2, "original", null), n2 = i.getArg(e2, "source", null), a2 = i.getArg(e2, "name", null);
    this._skipValidation || this._validateMapping(t2, r2, n2, a2), null != n2 && (n2 = String(n2), this._sources.has(n2) || this._sources.add(n2)), null != a2 && (a2 = String(a2), this._names.has(a2) || this._names.add(a2)), this._mappings.add({ generatedLine: t2.line, generatedColumn: t2.column, originalLine: null != r2 && r2.line, originalColumn: null != r2 && r2.column, source: n2, name: a2 });
  }, s.prototype.setSourceContent = function(e2, t2) {
    var r2 = e2;
    null != this._sourceRoot && (r2 = i.relative(this._sourceRoot, r2)), null != t2 ? (this._sourcesContents || (this._sourcesContents = /* @__PURE__ */ Object.create(null)), this._sourcesContents[i.toSetString(r2)] = t2) : this._sourcesContents && (delete this._sourcesContents[i.toSetString(r2)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
  }, s.prototype.applySourceMap = function(e2, t2, r2) {
    var n2 = t2;
    if (null == t2) {
      if (null == e2.file) throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`);
      n2 = e2.file;
    }
    var o2 = this._sourceRoot;
    null != o2 && (n2 = i.relative(o2, n2));
    var s2 = new a(), u = new a();
    this._mappings.unsortedForEach(function(t3) {
      if (t3.source === n2 && null != t3.originalLine) {
        var a2 = e2.originalPositionFor({ line: t3.originalLine, column: t3.originalColumn });
        null != a2.source && (t3.source = a2.source, null != r2 && (t3.source = i.join(r2, t3.source)), null != o2 && (t3.source = i.relative(o2, t3.source)), t3.originalLine = a2.line, t3.originalColumn = a2.column, null != a2.name && (t3.name = a2.name));
      }
      var l = t3.source;
      null == l || s2.has(l) || s2.add(l);
      var c = t3.name;
      null == c || u.has(c) || u.add(c);
    }, this), this._sources = s2, this._names = u, e2.sources.forEach(function(t3) {
      var n3 = e2.sourceContentFor(t3);
      null != n3 && (null != r2 && (t3 = i.join(r2, t3)), null != o2 && (t3 = i.relative(o2, t3)), this.setSourceContent(t3, n3));
    }, this);
  }, s.prototype._validateMapping = function(e2, t2, r2, n2) {
    if (t2 && "number" != typeof t2.line && "number" != typeof t2.column) throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
    if ((!(e2 && "line" in e2 && "column" in e2 && e2.line > 0 && e2.column >= 0) || t2 || r2 || n2) && !(e2 && "line" in e2 && "column" in e2 && t2 && "line" in t2 && "column" in t2 && e2.line > 0 && e2.column >= 0 && t2.line > 0 && t2.column >= 0 && r2)) throw new Error("Invalid mapping: " + JSON.stringify({ generated: e2, source: r2, original: t2, name: n2 }));
  }, s.prototype._serializeMappings = function() {
    for (var e2, t2, r2, a2, o2 = 0, s2 = 1, u = 0, l = 0, c = 0, f = 0, p = "", d = this._mappings.toArray(), h = 0, v = d.length; h < v; h++) {
      if (e2 = "", (t2 = d[h]).generatedLine !== s2) for (o2 = 0; t2.generatedLine !== s2; ) e2 += ";", s2++;
      else if (h > 0) {
        if (!i.compareByGeneratedPositionsInflated(t2, d[h - 1])) continue;
        e2 += ",";
      }
      e2 += n.encode(t2.generatedColumn - o2), o2 = t2.generatedColumn, null != t2.source && (a2 = this._sources.indexOf(t2.source), e2 += n.encode(a2 - f), f = a2, e2 += n.encode(t2.originalLine - 1 - l), l = t2.originalLine - 1, e2 += n.encode(t2.originalColumn - u), u = t2.originalColumn, null != t2.name && (r2 = this._names.indexOf(t2.name), e2 += n.encode(r2 - c), c = r2)), p += e2;
    }
    return p;
  }, s.prototype._generateSourcesContent = function(e2, t2) {
    return e2.map(function(e3) {
      if (!this._sourcesContents) return null;
      null != t2 && (e3 = i.relative(t2, e3));
      var r2 = i.toSetString(e3);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, r2) ? this._sourcesContents[r2] : null;
    }, this);
  }, s.prototype.toJSON = function() {
    var e2 = { version: this._version, sources: this._sources.toArray(), names: this._names.toArray(), mappings: this._serializeMappings() };
    return null != this._file && (e2.file = this._file), null != this._sourceRoot && (e2.sourceRoot = this._sourceRoot), this._sourcesContents && (e2.sourcesContent = this._generateSourcesContent(e2.sources, e2.sourceRoot)), e2;
  }, s.prototype.toString = function() {
    return JSON.stringify(this.toJSON());
  }, t.SourceMapGenerator = s;
}, function(e, t, r) {
  "use strict";
  t.SourceMapGenerator = r(163).SourceMapGenerator, t.SourceMapConsumer = r(569).SourceMapConsumer, t.SourceNode = r(566).SourceNode;
}, function(e, t, r) {
  "use strict";
  var n = Function.prototype.toString;
  e.exports = function(e2) {
    if (null != e2) {
      try {
        return n.call(e2);
      } catch (e3) {
      }
      try {
        return e2 + "";
      } catch (e3) {
      }
    }
    return "";
  };
}, function(e, t, r) {
  "use strict";
  var n = r(40), i = (function() {
    try {
      var e2 = n(Object, "defineProperty");
      return e2({}, "", {}), e2;
    } catch (e3) {
    }
  })();
  e.exports = i;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return e2;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var i = (function() {
    function e2(t2) {
      var r2 = t2.identifier, n2 = t2.scope, i2 = t2.path, a = t2.kind;
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.identifier = r2, this.scope = n2, this.path = i2, this.kind = a, this.constantViolations = [], this.constant = true, this.referencePaths = [], this.referenced = false, this.references = 0, this.clearValue();
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "deoptValue", value: function() {
      this.clearValue(), this.hasDeoptedValue = true;
    } }, { key: "setValue", value: function(e3) {
      this.hasDeoptedValue || (this.hasValue = true, this.value = e3);
    } }, { key: "clearValue", value: function() {
      this.hasDeoptedValue = false, this.hasValue = false, this.value = null;
    } }, { key: "reassign", value: function(e3) {
      this.constant = false, -1 === this.constantViolations.indexOf(e3) && this.constantViolations.push(e3);
    } }, { key: "reference", value: function(e3) {
      -1 === this.referencePaths.indexOf(e3) && (this.referenced = true, this.references++, this.referencePaths.push(e3));
    } }, { key: "dereference", value: function() {
      this.references--, this.referenced = !!this.references;
    } }]), e2;
  })();
  t.default = i;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(79), a = r(82), o = r(171), s = r(42);
  e.exports = function(e2, t2, r2) {
    if (!s(r2)) return false;
    var u = n(t2);
    return !!("number" == u ? a(r2) && o(t2, r2.length) : "string" == u && t2 in r2) && i(r2[t2], e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return function(r2) {
      return e2(t2(r2));
    };
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = 9007199254740991, a = /^(?:0|[1-9]\d*)$/;
  e.exports = function(e2, t2) {
    var r2 = n(e2);
    return !!(t2 = null == t2 ? i : t2) && ("number" == r2 || "symbol" != r2 && a.test(e2)) && e2 > -1 && e2 % 1 == 0 && e2 < t2;
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3) {
      return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var i = r(27), a = r(599), o = "object" == n(t) && t && !t.nodeType && t, s = o && "object" == n(e2) && e2 && !e2.nodeType && e2, u = s && s.exports === o ? i.Buffer : void 0, l = (u ? u.isBuffer : void 0) || a;
    e2.exports = l;
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  var n = r(602), i = r(601), a = r(61), o = r(172), s = r(171), u = r(598), l = Object.prototype.hasOwnProperty;
  e.exports = function(e2, t2) {
    var r2 = a(e2), c = !r2 && i(e2), f = !r2 && !c && o(e2), p = !r2 && !c && !f && u(e2), d = r2 || c || f || p, h = d ? n(e2.length, String) : [], v = h.length;
    for (var y in e2) !t2 && !l.call(e2, y) || d && ("length" == y || f && ("offset" == y || "parent" == y) || p && ("buffer" == y || "byteLength" == y || "byteOffset" == y) || s(y, v)) || h.push(y);
    return h;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = null == e2 ? 0 : e2.length, i = Array(n); ++r2 < n; ) i[r2] = t2(e2[r2], r2, e2);
    return i;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(51), a = r(41), o = "[object Symbol]";
  e.exports = function(e2) {
    return "symbol" == n(e2) || a(e2) && i(e2) == o;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(606);
  e.exports = function(e2) {
    var t2 = n(e2), r2 = t2 % 1;
    return t2 == t2 ? r2 ? t2 - r2 : t2 : 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = 9007199254740991;
  e.exports = function(e2) {
    return "number" == typeof e2 && e2 > -1 && e2 % 1 == 0 && e2 <= n;
  };
}, function(e, t, r) {
  "use strict";
  (function(t2) {
    function r2(e2) {
      return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
        return typeof e3;
      } : function(e3) {
        return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
      })(e2);
    }
    var n = "object" == (void 0 === t2 ? "undefined" : r2(t2)) && t2 && t2.Object === Object && t2;
    e.exports = n;
  }).call(this, r(55));
}, function(e, t, r) {
  "use strict";
  var n = r(51), i = r(42), a = "[object AsyncFunction]", o = "[object Function]", s = "[object GeneratorFunction]", u = "[object Proxy]";
  e.exports = function(e2) {
    if (!i(e2)) return false;
    var t2 = n(e2);
    return t2 == o || t2 == s || t2 == a || t2 == u;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a() {
    var e2 = h(r(113));
    return a = function() {
      return e2;
    }, e2;
  }
  function o() {
    var e2 = h(r(594));
    return o = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var s = h(r(590)), u = h(r(28));
  function l() {
    var e2 = h(r(588));
    return l = function() {
      return e2;
    }, e2;
  }
  var c = h(r(168));
  function f() {
    var e2 = h(r(574));
    return f = function() {
      return e2;
    }, e2;
  }
  function p() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return p = function() {
      return e2;
    }, e2;
  }
  var d = r(78);
  function h(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var v = { For: function(e2) {
    var t2 = true, r2 = false, n2 = void 0;
    try {
      for (var i2, a2 = p().FOR_INIT_KEYS[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
        var o2 = i2.value, s2 = e2.get(o2);
        if (s2.isVar()) (e2.scope.getFunctionParent() || e2.scope.getProgramParent()).registerBinding("var", s2);
      }
    } catch (e3) {
      r2 = true, n2 = e3;
    } finally {
      try {
        t2 || null == a2.return || a2.return();
      } finally {
        if (r2) throw n2;
      }
    }
  }, Declaration: function(e2) {
    e2.isBlockScoped() || (e2.isExportDeclaration() && e2.get("declaration").isDeclaration() || (e2.scope.getFunctionParent() || e2.scope.getProgramParent()).registerDeclaration(e2));
  }, ReferencedIdentifier: function(e2, t2) {
    t2.references.push(e2);
  }, ForXStatement: function(e2, t2) {
    var r2 = e2.get("left");
    (r2.isPattern() || r2.isIdentifier()) && t2.constantViolations.push(e2);
  }, ExportDeclaration: { exit: function(e2) {
    var t2 = e2.node, r2 = e2.scope, n2 = t2.declaration;
    if (p().isClassDeclaration(n2) || p().isFunctionDeclaration(n2)) {
      var i2 = n2.id;
      if (!i2) return;
      var a2 = r2.getBinding(i2.name);
      a2 && a2.reference(e2);
    } else if (p().isVariableDeclaration(n2)) {
      var o2 = true, s2 = false, u2 = void 0;
      try {
        for (var l2, c2 = n2.declarations[Symbol.iterator](); !(o2 = (l2 = c2.next()).done); o2 = true) {
          var f2 = l2.value, d2 = p().getBindingIdentifiers(f2);
          for (var h2 in d2) {
            var v2 = r2.getBinding(h2);
            v2 && v2.reference(e2);
          }
        }
      } catch (e3) {
        s2 = true, u2 = e3;
      } finally {
        try {
          o2 || null == c2.return || c2.return();
        } finally {
          if (s2) throw u2;
        }
      }
    }
  } }, LabeledStatement: function(e2) {
    e2.scope.getProgramParent().addGlobal(e2.node), e2.scope.getBlockParent().registerDeclaration(e2);
  }, AssignmentExpression: function(e2, t2) {
    t2.assignments.push(e2);
  }, UpdateExpression: function(e2, t2) {
    t2.constantViolations.push(e2);
  }, UnaryExpression: function(e2, t2) {
    "delete" === e2.node.operator && t2.constantViolations.push(e2);
  }, BlockScoped: function(e2) {
    var t2 = e2.scope;
    t2.path === e2 && (t2 = t2.parent), t2.getBlockParent().registerDeclaration(e2);
  }, ClassDeclaration: function(e2) {
    var t2 = e2.node.id;
    if (t2) {
      var r2 = t2.name;
      e2.scope.bindings[r2] = e2.scope.getBinding(r2);
    }
  }, Block: function(e2) {
    var t2 = e2.get("body"), r2 = true, n2 = false, i2 = void 0;
    try {
      for (var a2, o2 = t2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
        var s2 = a2.value;
        s2.isFunctionDeclaration() && e2.scope.getBlockParent().registerDeclaration(s2);
      }
    } catch (e3) {
      n2 = true, i2 = e3;
    } finally {
      try {
        r2 || null == o2.return || o2.return();
      } finally {
        if (n2) throw i2;
      }
    }
  } }, y = 0, m = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
      var r2 = t2.node, n2 = d.scope.get(r2);
      if (n2 && n2.path === t2) return n2;
      d.scope.set(r2, this), this.uid = y++, this.block = r2, this.path = t2, this.labels = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "traverse", value: function(e3, t2, r2) {
      (0, u.default)(e3, t2, this, r2, this.path);
    } }, { key: "generateDeclaredUidIdentifier", value: function(e3) {
      var t2 = this.generateUidIdentifier(e3);
      return this.push({ id: t2 }), p().cloneNode(t2);
    } }, { key: "generateUidIdentifier", value: function(e3) {
      return p().identifier(this.generateUid(e3));
    } }, { key: "generateUid", value: function() {
      var e3, t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp";
      t2 = p().toIdentifier(t2).replace(/^_+/, "").replace(/[0-9]+$/g, "");
      var r2 = 0;
      do {
        e3 = this._generateUid(t2, r2), r2++;
      } while (this.hasLabel(e3) || this.hasBinding(e3) || this.hasGlobal(e3) || this.hasReference(e3));
      var n2 = this.getProgramParent();
      return n2.references[e3] = true, n2.uids[e3] = true, e3;
    } }, { key: "_generateUid", value: function(e3, t2) {
      var r2 = e3;
      return t2 > 1 && (r2 += t2), "_".concat(r2);
    } }, { key: "generateUidBasedOnNode", value: function(e3, t2) {
      var r2 = e3;
      p().isAssignmentExpression(e3) ? r2 = e3.left : p().isVariableDeclarator(e3) ? r2 = e3.id : (p().isObjectProperty(r2) || p().isObjectMethod(r2)) && (r2 = r2.key);
      var n2 = [];
      !(function e4(t3, r3) {
        if (p().isModuleDeclaration(t3)) if (t3.source) e4(t3.source, r3);
        else if (t3.specifiers && t3.specifiers.length) {
          var n3 = true, i3 = false, a2 = void 0;
          try {
            for (var o2, s2 = t3.specifiers[Symbol.iterator](); !(n3 = (o2 = s2.next()).done); n3 = true) e4(o2.value, r3);
          } catch (e5) {
            i3 = true, a2 = e5;
          } finally {
            try {
              n3 || null == s2.return || s2.return();
            } finally {
              if (i3) throw a2;
            }
          }
        } else t3.declaration && e4(t3.declaration, r3);
        else if (p().isModuleSpecifier(t3)) e4(t3.local, r3);
        else if (p().isMemberExpression(t3)) e4(t3.object, r3), e4(t3.property, r3);
        else if (p().isIdentifier(t3)) r3.push(t3.name);
        else if (p().isLiteral(t3)) r3.push(t3.value);
        else if (p().isCallExpression(t3)) e4(t3.callee, r3);
        else if (p().isObjectExpression(t3) || p().isObjectPattern(t3)) {
          var u2 = true, l2 = false, c2 = void 0;
          try {
            for (var f2, d2 = t3.properties[Symbol.iterator](); !(u2 = (f2 = d2.next()).done); u2 = true) {
              var h2 = f2.value;
              e4(h2.key || h2.argument, r3);
            }
          } catch (e5) {
            l2 = true, c2 = e5;
          } finally {
            try {
              u2 || null == d2.return || d2.return();
            } finally {
              if (l2) throw c2;
            }
          }
        } else p().isPrivateName(t3) ? e4(t3.id, r3) : p().isThisExpression(t3) ? r3.push("this") : p().isSuper(t3) && r3.push("super");
      })(r2, n2);
      var i2 = n2.join("$");
      return i2 = i2.replace(/^_/, "") || t2 || "ref", this.generateUid(i2.slice(0, 20));
    } }, { key: "generateUidIdentifierBasedOnNode", value: function(e3, t2) {
      return p().identifier(this.generateUidBasedOnNode(e3, t2));
    } }, { key: "isStatic", value: function(e3) {
      if (p().isThisExpression(e3) || p().isSuper(e3)) return true;
      if (p().isIdentifier(e3)) {
        var t2 = this.getBinding(e3.name);
        return t2 ? t2.constant : this.hasBinding(e3.name);
      }
      return false;
    } }, { key: "maybeGenerateMemoised", value: function(e3, t2) {
      if (this.isStatic(e3)) return null;
      var r2 = this.generateUidIdentifierBasedOnNode(e3);
      return t2 ? r2 : (this.push({ id: r2 }), p().cloneNode(r2));
    } }, { key: "checkBlockScopedCollisions", value: function(e3, t2, r2, n2) {
      if ("param" !== t2 && ("local" !== e3.kind && !("hoisted" === t2 && "let" === e3.kind || "let" !== t2 && "let" !== e3.kind && "const" !== e3.kind && "module" !== e3.kind && ("param" !== e3.kind || "let" !== t2 && "const" !== t2)))) throw this.hub.buildError(n2, 'Duplicate declaration "'.concat(r2, '"'), TypeError);
    } }, { key: "rename", value: function(e3, t2, r2) {
      var n2 = this.getBinding(e3);
      if (n2) return t2 = t2 || this.generateUidIdentifier(e3).name, new s.default(n2, e3, t2).rename(r2);
    } }, { key: "_renameFromMap", value: function(e3, t2, r2, n2) {
      e3[t2] && (e3[r2] = n2, e3[t2] = null);
    } }, { key: "dump", value: function() {
      var e3 = (0, o().default)("-", 60);
      console.log(e3);
      var t2 = this;
      do {
        for (var r2 in console.log("#", t2.block.type), t2.bindings) {
          var n2 = t2.bindings[r2];
          console.log(" -", r2, { constant: n2.constant, references: n2.references, violations: n2.constantViolations.length, kind: n2.kind });
        }
      } while (t2 = t2.parent);
      console.log(e3);
    } }, { key: "toArray", value: function(e3, t2) {
      if (p().isIdentifier(e3)) {
        var r2 = this.getBinding(e3.name);
        if (r2 && r2.constant && r2.path.isGenericType("Array")) return e3;
      }
      if (p().isArrayExpression(e3)) return e3;
      if (p().isIdentifier(e3, { name: "arguments" })) return p().callExpression(p().memberExpression(p().memberExpression(p().memberExpression(p().identifier("Array"), p().identifier("prototype")), p().identifier("slice")), p().identifier("call")), [e3]);
      var n2, i2 = [e3];
      return true === t2 ? n2 = "toConsumableArray" : t2 ? (i2.push(p().numericLiteral(t2)), n2 = "slicedToArray") : n2 = "toArray", p().callExpression(this.hub.addHelper(n2), i2);
    } }, { key: "hasLabel", value: function(e3) {
      return !!this.getLabel(e3);
    } }, { key: "getLabel", value: function(e3) {
      return this.labels.get(e3);
    } }, { key: "registerLabel", value: function(e3) {
      this.labels.set(e3.node.label.name, e3);
    } }, { key: "registerDeclaration", value: function(e3) {
      if (e3.isLabeledStatement()) this.registerLabel(e3);
      else if (e3.isFunctionDeclaration()) this.registerBinding("hoisted", e3.get("id"), e3);
      else if (e3.isVariableDeclaration()) {
        var t2 = e3.get("declarations"), r2 = true, n2 = false, i2 = void 0;
        try {
          for (var a2, o2 = t2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
            var s2 = a2.value;
            this.registerBinding(e3.node.kind, s2);
          }
        } catch (e4) {
          n2 = true, i2 = e4;
        } finally {
          try {
            r2 || null == o2.return || o2.return();
          } finally {
            if (n2) throw i2;
          }
        }
      } else if (e3.isClassDeclaration()) this.registerBinding("let", e3);
      else if (e3.isImportDeclaration()) {
        var u2 = e3.get("specifiers"), l2 = true, c2 = false, f2 = void 0;
        try {
          for (var p2, d2 = u2[Symbol.iterator](); !(l2 = (p2 = d2.next()).done); l2 = true) {
            var h2 = p2.value;
            this.registerBinding("module", h2);
          }
        } catch (e4) {
          c2 = true, f2 = e4;
        } finally {
          try {
            l2 || null == d2.return || d2.return();
          } finally {
            if (c2) throw f2;
          }
        }
      } else if (e3.isExportDeclaration()) {
        var v2 = e3.get("declaration");
        (v2.isClassDeclaration() || v2.isFunctionDeclaration() || v2.isVariableDeclaration()) && this.registerDeclaration(v2);
      } else this.registerBinding("unknown", e3);
    } }, { key: "buildUndefinedNode", value: function() {
      return this.hasBinding("undefined") ? p().unaryExpression("void", p().numericLiteral(0), true) : p().identifier("undefined");
    } }, { key: "registerConstantViolation", value: function(e3) {
      var t2 = e3.getBindingIdentifiers();
      for (var r2 in t2) {
        var n2 = this.getBinding(r2);
        n2 && n2.reassign(e3);
      }
    } }, { key: "registerBinding", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t2;
      if (!e3) throw new ReferenceError("no `kind`");
      if (t2.isVariableDeclaration()) {
        var n2 = t2.get("declarations"), i2 = true, a2 = false, o2 = void 0;
        try {
          for (var s2, u2 = n2[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
            var l2 = s2.value;
            this.registerBinding(e3, l2);
          }
        } catch (e4) {
          a2 = true, o2 = e4;
        } finally {
          try {
            i2 || null == u2.return || u2.return();
          } finally {
            if (a2) throw o2;
          }
        }
      } else {
        var f2 = this.getProgramParent(), p2 = t2.getBindingIdentifiers(true);
        for (var d2 in p2) {
          var h2 = true, v2 = false, y2 = void 0;
          try {
            for (var m2, b = p2[d2][Symbol.iterator](); !(h2 = (m2 = b.next()).done); h2 = true) {
              var g = m2.value, w = this.getOwnBinding(d2);
              if (w) {
                if (w.identifier === g) continue;
                this.checkBlockScopedCollisions(w, e3, d2, g);
              }
              f2.references[d2] = true, w ? this.registerConstantViolation(r2) : this.bindings[d2] = new c.default({ identifier: g, scope: this, path: r2, kind: e3 });
            }
          } catch (e4) {
            v2 = true, y2 = e4;
          } finally {
            try {
              h2 || null == b.return || b.return();
            } finally {
              if (v2) throw y2;
            }
          }
        }
      }
    } }, { key: "addGlobal", value: function(e3) {
      this.globals[e3.name] = e3;
    } }, { key: "hasUid", value: function(e3) {
      var t2 = this;
      do {
        if (t2.uids[e3]) return true;
      } while (t2 = t2.parent);
      return false;
    } }, { key: "hasGlobal", value: function(e3) {
      var t2 = this;
      do {
        if (t2.globals[e3]) return true;
      } while (t2 = t2.parent);
      return false;
    } }, { key: "hasReference", value: function(e3) {
      var t2 = this;
      do {
        if (t2.references[e3]) return true;
      } while (t2 = t2.parent);
      return false;
    } }, { key: "isPure", value: function(e3, t2) {
      if (p().isIdentifier(e3)) {
        var r2 = this.getBinding(e3.name);
        return !!r2 && (!t2 || r2.constant);
      }
      if (p().isClass(e3)) return !(e3.superClass && !this.isPure(e3.superClass, t2)) && this.isPure(e3.body, t2);
      if (p().isClassBody(e3)) {
        var n2 = true, i2 = false, a2 = void 0;
        try {
          for (var o2, s2 = e3.body[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
            var u2 = o2.value;
            if (!this.isPure(u2, t2)) return false;
          }
        } catch (e4) {
          i2 = true, a2 = e4;
        } finally {
          try {
            n2 || null == s2.return || s2.return();
          } finally {
            if (i2) throw a2;
          }
        }
        return true;
      }
      if (p().isBinary(e3)) return this.isPure(e3.left, t2) && this.isPure(e3.right, t2);
      if (p().isArrayExpression(e3)) {
        var l2 = true, c2 = false, f2 = void 0;
        try {
          for (var d2, h2 = e3.elements[Symbol.iterator](); !(l2 = (d2 = h2.next()).done); l2 = true) {
            var v2 = d2.value;
            if (!this.isPure(v2, t2)) return false;
          }
        } catch (e4) {
          c2 = true, f2 = e4;
        } finally {
          try {
            l2 || null == h2.return || h2.return();
          } finally {
            if (c2) throw f2;
          }
        }
        return true;
      }
      if (p().isObjectExpression(e3)) {
        var y2 = true, m2 = false, b = void 0;
        try {
          for (var g, w = e3.properties[Symbol.iterator](); !(y2 = (g = w.next()).done); y2 = true) {
            var E = g.value;
            if (!this.isPure(E, t2)) return false;
          }
        } catch (e4) {
          m2 = true, b = e4;
        } finally {
          try {
            y2 || null == w.return || w.return();
          } finally {
            if (m2) throw b;
          }
        }
        return true;
      }
      if (p().isClassMethod(e3)) return !(e3.computed && !this.isPure(e3.key, t2)) && ("get" !== e3.kind && "set" !== e3.kind);
      if (p().isProperty(e3)) return !(e3.computed && !this.isPure(e3.key, t2)) && this.isPure(e3.value, t2);
      if (p().isUnaryExpression(e3)) return this.isPure(e3.argument, t2);
      if (p().isTaggedTemplateExpression(e3)) return p().matchesPattern(e3.tag, "String.raw") && !this.hasBinding("String", true) && this.isPure(e3.quasi, t2);
      if (p().isTemplateLiteral(e3)) {
        var S = true, T = false, A = void 0;
        try {
          for (var C, P = e3.expressions[Symbol.iterator](); !(S = (C = P.next()).done); S = true) {
            var O = C.value;
            if (!this.isPure(O, t2)) return false;
          }
        } catch (e4) {
          T = true, A = e4;
        } finally {
          try {
            S || null == P.return || P.return();
          } finally {
            if (T) throw A;
          }
        }
        return true;
      }
      return p().isPureish(e3);
    } }, { key: "setData", value: function(e3, t2) {
      return this.data[e3] = t2;
    } }, { key: "getData", value: function(e3) {
      var t2 = this;
      do {
        var r2 = t2.data[e3];
        if (null != r2) return r2;
      } while (t2 = t2.parent);
    } }, { key: "removeData", value: function(e3) {
      var t2 = this;
      do {
        null != t2.data[e3] && (t2.data[e3] = null);
      } while (t2 = t2.parent);
    } }, { key: "init", value: function() {
      this.references || this.crawl();
    } }, { key: "crawl", value: function() {
      var e3 = this.path;
      if (this.references = /* @__PURE__ */ Object.create(null), this.bindings = /* @__PURE__ */ Object.create(null), this.globals = /* @__PURE__ */ Object.create(null), this.uids = /* @__PURE__ */ Object.create(null), this.data = /* @__PURE__ */ Object.create(null), e3.isLoop()) {
        var t2 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = p().FOR_INIT_KEYS[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
            var o2 = i2.value, s2 = e3.get(o2);
            s2.isBlockScoped() && this.registerBinding(s2.node.kind, s2);
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t2 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
      }
      if (e3.isFunctionExpression() && e3.has("id") && (e3.get("id").node[p().NOT_LOCAL_BINDING] || this.registerBinding("local", e3.get("id"), e3)), e3.isClassExpression() && e3.has("id") && (e3.get("id").node[p().NOT_LOCAL_BINDING] || this.registerBinding("local", e3)), e3.isFunction()) {
        var u2 = e3.get("params"), l2 = true, c2 = false, f2 = void 0;
        try {
          for (var d2, h2 = u2[Symbol.iterator](); !(l2 = (d2 = h2.next()).done); l2 = true) {
            var y2 = d2.value;
            this.registerBinding("param", y2);
          }
        } catch (e4) {
          c2 = true, f2 = e4;
        } finally {
          try {
            l2 || null == h2.return || h2.return();
          } finally {
            if (c2) throw f2;
          }
        }
      }
      if (e3.isCatchClause() && this.registerBinding("let", e3), !this.getProgramParent().crawling) {
        var m2 = { references: [], constantViolations: [], assignments: [] };
        this.crawling = true, e3.traverse(v, m2), this.crawling = false;
        var b = true, g = false, w = void 0;
        try {
          for (var E, S = m2.assignments[Symbol.iterator](); !(b = (E = S.next()).done); b = true) {
            var T = E.value, A = T.getBindingIdentifiers(), C = void 0;
            for (var P in A) T.scope.getBinding(P) || (C = C || T.scope.getProgramParent()).addGlobal(A[P]);
            T.scope.registerConstantViolation(T);
          }
        } catch (e4) {
          g = true, w = e4;
        } finally {
          try {
            b || null == S.return || S.return();
          } finally {
            if (g) throw w;
          }
        }
        var O = true, x = false, _ = void 0;
        try {
          for (var V, D = m2.references[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
            var N = V.value, I = N.scope.getBinding(N.node.name);
            I ? I.reference(N) : N.scope.getProgramParent().addGlobal(N.node);
          }
        } catch (e4) {
          x = true, _ = e4;
        } finally {
          try {
            O || null == D.return || D.return();
          } finally {
            if (x) throw _;
          }
        }
        var k = true, j = false, F = void 0;
        try {
          for (var R, M = m2.constantViolations[Symbol.iterator](); !(k = (R = M.next()).done); k = true) {
            var B = R.value;
            B.scope.registerConstantViolation(B);
          }
        } catch (e4) {
          j = true, F = e4;
        } finally {
          try {
            k || null == M.return || M.return();
          } finally {
            if (j) throw F;
          }
        }
      }
    } }, { key: "push", value: function(e3) {
      var t2 = this.path;
      t2.isBlockStatement() || t2.isProgram() || (t2 = this.getBlockParent().path), t2.isSwitchStatement() && (t2 = (this.getFunctionParent() || this.getProgramParent()).path), (t2.isLoop() || t2.isCatchClause() || t2.isFunction()) && (t2.ensureBlock(), t2 = t2.get("body"));
      var r2 = e3.unique, i2 = e3.kind || "var", a2 = null == e3._blockHoist ? 2 : e3._blockHoist, o2 = "declaration:".concat(i2, ":").concat(a2), s2 = !r2 && t2.getData(o2);
      if (!s2) {
        var u2 = p().variableDeclaration(i2, []);
        u2._blockHoist = a2, s2 = n(t2.unshiftContainer("body", [u2]), 1)[0], r2 || t2.setData(o2, s2);
      }
      var l2 = p().variableDeclarator(e3.id, e3.init);
      s2.node.declarations.push(l2), this.registerBinding(i2, s2.get("declarations").pop());
    } }, { key: "getProgramParent", value: function() {
      var e3 = this;
      do {
        if (e3.path.isProgram()) return e3;
      } while (e3 = e3.parent);
      throw new Error("Couldn't find a Program");
    } }, { key: "getFunctionParent", value: function() {
      var e3 = this;
      do {
        if (e3.path.isFunctionParent()) return e3;
      } while (e3 = e3.parent);
      return null;
    } }, { key: "getBlockParent", value: function() {
      var e3 = this;
      do {
        if (e3.path.isBlockParent()) return e3;
      } while (e3 = e3.parent);
      throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
    } }, { key: "getAllBindings", value: function() {
      var e3 = /* @__PURE__ */ Object.create(null), t2 = this;
      do {
        (0, l().default)(e3, t2.bindings), t2 = t2.parent;
      } while (t2);
      return e3;
    } }, { key: "getAllBindingsOfKind", value: function() {
      var e3 = /* @__PURE__ */ Object.create(null), t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = arguments[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value, s2 = this;
          do {
            for (var u2 in s2.bindings) {
              var l2 = s2.bindings[u2];
              l2.kind === o2 && (e3[u2] = l2);
            }
            s2 = s2.parent;
          } while (s2);
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      return e3;
    } }, { key: "bindingIdentifierEquals", value: function(e3, t2) {
      return this.getBindingIdentifier(e3) === t2;
    } }, { key: "getBinding", value: function(e3) {
      var t2 = this;
      do {
        var r2 = t2.getOwnBinding(e3);
        if (r2) return r2;
      } while (t2 = t2.parent);
    } }, { key: "getOwnBinding", value: function(e3) {
      return this.bindings[e3];
    } }, { key: "getBindingIdentifier", value: function(e3) {
      var t2 = this.getBinding(e3);
      return t2 && t2.identifier;
    } }, { key: "getOwnBindingIdentifier", value: function(e3) {
      var t2 = this.bindings[e3];
      return t2 && t2.identifier;
    } }, { key: "hasOwnBinding", value: function(e3) {
      return !!this.getOwnBinding(e3);
    } }, { key: "hasBinding", value: function(t2, r2) {
      return !!t2 && (!!this.hasOwnBinding(t2) || (!!this.parentHasBinding(t2, r2) || (!!this.hasUid(t2) || (!(r2 || !(0, a().default)(e2.globals, t2)) || !(r2 || !(0, a().default)(e2.contextVariables, t2))))));
    } }, { key: "parentHasBinding", value: function(e3, t2) {
      return this.parent && this.parent.hasBinding(e3, t2);
    } }, { key: "moveBindingTo", value: function(e3, t2) {
      var r2 = this.getBinding(e3);
      r2 && (r2.scope.removeOwnBinding(e3), r2.scope = t2, t2.bindings[e3] = r2);
    } }, { key: "removeOwnBinding", value: function(e3) {
      delete this.bindings[e3];
    } }, { key: "removeBinding", value: function(e3) {
      var t2 = this.getBinding(e3);
      t2 && t2.scope.removeOwnBinding(e3);
      var r2 = this;
      do {
        r2.uids[e3] && (r2.uids[e3] = false);
      } while (r2 = r2.parent);
    } }, { key: "parent", get: function() {
      var e3 = this.path.findParent(function(e4) {
        return e4.isScope();
      });
      return e3 && e3.scope;
    } }, { key: "parentBlock", get: function() {
      return this.path.parent;
    } }, { key: "hub", get: function() {
      return this.path.hub;
    } }]), e2;
  })();
  t.default = m, m.globals = Object.keys(f().default.builtin), m.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ForAwaitStatement = t.NumericLiteralTypeAnnotation = t.ExistentialTypeParam = t.SpreadProperty = t.RestProperty = t.Flow = t.Pure = t.Generated = t.User = t.Var = t.BlockScoped = t.Referenced = t.Scope = t.Expression = t.Statement = t.BindingIdentifier = t.ReferencedMemberExpression = t.ReferencedIdentifier = void 0;
  var i = { types: ["Identifier", "JSXIdentifier"], checkPath: function(e2, t2) {
    var r2 = e2.node, i2 = e2.parent;
    if (!n().isIdentifier(r2, t2) && !n().isJSXMemberExpression(i2, t2)) {
      if (!n().isJSXIdentifier(r2, t2)) return false;
      if (n().react.isCompatTag(r2.name)) return false;
    }
    return n().isReferenced(r2, i2);
  } };
  t.ReferencedIdentifier = i;
  var a = { types: ["MemberExpression"], checkPath: function(e2) {
    var t2 = e2.node, r2 = e2.parent;
    return n().isMemberExpression(t2) && n().isReferenced(t2, r2);
  } };
  t.ReferencedMemberExpression = a;
  var o = { types: ["Identifier"], checkPath: function(e2) {
    var t2 = e2.node, r2 = e2.parent;
    return n().isIdentifier(t2) && n().isBinding(t2, r2);
  } };
  t.BindingIdentifier = o;
  var s = { types: ["Statement"], checkPath: function(e2) {
    var t2 = e2.node, r2 = e2.parent;
    if (n().isStatement(t2)) {
      if (n().isVariableDeclaration(t2)) {
        if (n().isForXStatement(r2, { left: t2 })) return false;
        if (n().isForStatement(r2, { init: t2 })) return false;
      }
      return true;
    }
    return false;
  } };
  t.Statement = s;
  var u = { types: ["Expression"], checkPath: function(e2) {
    return e2.isIdentifier() ? e2.isReferencedIdentifier() : n().isExpression(e2.node);
  } };
  t.Expression = u;
  var l = { types: ["Scopable"], checkPath: function(e2) {
    return n().isScope(e2.node, e2.parent);
  } };
  t.Scope = l;
  var c = { checkPath: function(e2) {
    return n().isReferenced(e2.node, e2.parent);
  } };
  t.Referenced = c;
  var f = { checkPath: function(e2) {
    return n().isBlockScoped(e2.node);
  } };
  t.BlockScoped = f;
  var p = { types: ["VariableDeclaration"], checkPath: function(e2) {
    return n().isVar(e2.node);
  } };
  t.Var = p;
  t.User = { checkPath: function(e2) {
    return e2.node && !!e2.node.loc;
  } };
  t.Generated = { checkPath: function(e2) {
    return !e2.isUser();
  } };
  t.Pure = { checkPath: function(e2, t2) {
    return e2.scope.isPure(e2.node, t2);
  } };
  var d = { types: ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"], checkPath: function(e2) {
    var t2 = e2.node;
    return !!n().isFlow(t2) || (n().isImportDeclaration(t2) ? "type" === t2.importKind || "typeof" === t2.importKind : n().isExportDeclaration(t2) ? "type" === t2.exportKind : !!n().isImportSpecifier(t2) && ("type" === t2.importKind || "typeof" === t2.importKind));
  } };
  t.Flow = d;
  t.RestProperty = { types: ["RestElement"], checkPath: function(e2) {
    return e2.parentPath && e2.parentPath.isObjectPattern();
  } };
  t.SpreadProperty = { types: ["RestElement"], checkPath: function(e2) {
    return e2.parentPath && e2.parentPath.isObjectExpression();
  } };
  t.ExistentialTypeParam = { types: ["ExistsTypeAnnotation"] };
  t.NumericLiteralTypeAnnotation = { types: ["NumberLiteralTypeAnnotation"] };
  t.ForAwaitStatement = { types: ["ForOfStatement"], checkPath: function(e2) {
    return true === e2.node.await;
  } };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.GetOwnPropertyKeys = function(e2, t2, r2) {
    var n2 = a.To.ToObject(e2, t2).$OwnPropertyKeys(), i2 = [], o2 = true, s = false, u = void 0;
    try {
      for (var l, c = n2[Symbol.iterator](); !(o2 = (l = c.next()).done); o2 = true) {
        var f = l.value;
        f instanceof r2 && i2.push(f);
      }
    } catch (e3) {
      s = true, u = e3;
    } finally {
      try {
        o2 || null == c.return || c.return();
      } finally {
        if (s) throw u;
      }
    }
    return a.Create.CreateArrayFromList(e2, i2);
  }, t.OrdinaryOwnPropertyKeys = function(e2, t2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o2 = [], s = a.Properties.GetOwnPropertyKeysArray(e2, t2, false, r2), u = true, l = false, c = void 0;
    try {
      for (var f, p = s.filter(function(t3) {
        return (0, n.IsArrayIndex)(e2, t3);
      }).map(function(e3) {
        return parseInt(e3, 10);
      }).sort(function(e3, t3) {
        return e3 - t3;
      })[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
        var d = f.value;
        o2.push(new i.StringValue(e2, d + ""));
      }
    } catch (e3) {
      l = true, c = e3;
    } finally {
      try {
        u || null == p.return || p.return();
      } finally {
        if (l) throw c;
      }
    }
    var h = true, v = false, y = void 0;
    try {
      for (var m, b = s.filter(function(t3) {
        return !(0, n.IsArrayIndex)(e2, t3);
      })[Symbol.iterator](); !(h = (m = b.next()).done); h = true) {
        var g = m.value;
        o2.push(new i.StringValue(e2, g));
      }
    } catch (e3) {
      v = true, y = e3;
    } finally {
      try {
        h || null == b.return || b.return();
      } finally {
        if (v) throw y;
      }
    }
    var w = true, E = false, S = void 0;
    try {
      for (var T, A = t2.symbols.keys()[Symbol.iterator](); !(w = (T = A.next()).done); w = true) {
        var C = T.value;
        o2.push(C);
      }
    } catch (e3) {
      E = true, S = e3;
    } finally {
      try {
        w || null == A.return || A.return();
      } finally {
        if (E) throw S;
      }
    }
    return o2;
  }, t.EnumerableOwnProperties = function(e2, t2, r2) {
    var s = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
    (0, o.default)(t2 instanceof i.ObjectValue, "expected object");
    var u = t2.$OwnPropertyKeys(s), l = [], c = true, f = false, p = void 0;
    try {
      for (var d, h = u[Symbol.iterator](); !(c = (d = h.next()).done); c = true) {
        var v = d.value;
        if (v instanceof i.StringValue) {
          var y = t2.$GetOwnProperty(v);
          if (y && y.throwIfNotConcrete(e2).enumerable) if (a.Properties.ThrowIfMightHaveBeenDeleted(y), "key" === r2) l.push(v);
          else {
            var m = (0, n.Get)(e2, t2, v);
            if ("value" === r2) l.push(m);
            else {
              (0, o.default)("key+value" === r2, "expected kind to be key+value");
              var b = a.Create.CreateArrayFromList(e2, [v, m]);
              l.push(b);
            }
          }
        }
      }
    } catch (e3) {
      f = true, p = e3;
    } finally {
      try {
        c || null == h.return || h.return();
      } finally {
        if (f) throw p;
      }
    }
    return l;
  };
  var n = r(3), i = r(0), a = r(2), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.Day = h, t.TimeWithinDay = function(e2, t2) {
    return t2 % p;
  }, t.DaysInYear = v, t.DayFromYear = y, t.TimeFromYear = m, t.YearFromTime = b, t.InLeapYear = g, t.MonthFromTime = function(e2, t2) {
    var r2, n2 = w(e2, t2);
    return n2 < (r2 = 31) ? 0 : (r2 += g(e2, t2) ? 29 : 28, n2 < r2 ? 1 : n2 < (r2 += 31) ? 2 : n2 < (r2 += 30) ? 3 : n2 < (r2 += 31) ? 4 : n2 < (r2 += 30) ? 5 : n2 < (r2 += 31) ? 6 : n2 < (r2 += 31) ? 7 : n2 < (r2 += 30) ? 8 : n2 < (r2 += 31) ? 9 : n2 < (r2 += 30) ? 10 : 11);
  }, t.DayWithinYear = w, t.DateFromTime = function(e2, t2) {
    var r2, n2, i2 = w(e2, t2);
    return i2 <= (n2 = 30) ? i2 + 1 : (r2 = n2, n2 += g(e2, t2) ? 29 : 28, i2 <= n2 ? i2 - r2 : (r2 = n2, i2 <= (n2 += 31) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 30) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 31) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 30) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 31) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 31) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 30) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 31) ? i2 - r2 : (r2 = n2, i2 <= (n2 += 30) ? i2 - r2 : i2 - (r2 = n2)))))))))));
  }, t.WeekDay = function(e2, t2) {
    return (h(e2, t2) + 4) % 7;
  }, t.DaylightSavingTA = E, t.LocalTime = function(e2, t2) {
    return t2 + d + 0;
  }, t.UTC = function(e2, t2) {
    var r2 = t2;
    r2 instanceof n.Value && (r2 = r2.throwIfNotConcreteNumber().value);
    return new n.NumberValue(e2, r2 - d - 0);
  }, t.HourFromTime = function(e2, t2) {
    return Math.floor(t2 / f) % u;
  }, t.MinFromTime = function(e2, t2) {
    return Math.floor(t2 / c) % s;
  }, t.SecFromTime = function(e2, t2) {
    return Math.floor(t2 / l) % o;
  }, t.msFromTime = function(e2, t2) {
    return t2 % l;
  }, t.MakeTime = function(e2, t2, r2, a2, o2) {
    if (!(isFinite(t2) && isFinite(r2) && isFinite(a2) && isFinite(o2))) return NaN;
    var s2 = i.To.ToInteger(e2, new n.NumberValue(e2, t2)), u2 = i.To.ToInteger(e2, new n.NumberValue(e2, r2)), p2 = i.To.ToInteger(e2, new n.NumberValue(e2, a2)), d2 = i.To.ToInteger(e2, new n.NumberValue(e2, o2));
    return s2 * f + u2 * c + p2 * l + d2;
  }, t.MakeDay = function(e2, t2, r2, a2) {
    if (!isFinite(t2) || !isFinite(r2) || !isFinite(a2)) return NaN;
    var o2 = i.To.ToInteger(e2, new n.NumberValue(e2, t2)), s2 = i.To.ToInteger(e2, new n.NumberValue(e2, r2)), u2 = i.To.ToInteger(e2, new n.NumberValue(e2, a2)), l2 = o2 + Math.floor(s2 / 12), c2 = s2 < 0 ? s2 % 12 + 12 : s2 % 12;
    if (Math.abs(l2) >= 1e6 || Math.abs(c2) >= 1e6) return NaN;
    var f2 = 146718685 + Math.floor(401969 / 4) - Math.floor(4019.69) + Math.floor(1004.9225), p2 = 365 * (l2 + 399999) + Math.floor((l2 + 399999) / 4) - Math.floor((l2 + 399999) / 100) + Math.floor((l2 + 399999) / 400) - f2;
    p2 += l2 % 4 != 0 || l2 % 100 == 0 && l2 % 400 != 0 ? [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][c2] : [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335][c2];
    return p2 + u2 - 1;
  }, t.MakeDate = function(e2, t2, r2) {
    return isFinite(t2) && isFinite(r2) ? t2 * p + r2 : NaN;
  }, t.TimeClip = function(e2, t2) {
    var r2 = t2;
    r2 instanceof n.Value && (r2 = r2.throwIfNotConcreteNumber().value);
    if (!isFinite(r2)) return e2.intrinsics.NaN;
    if (Math.abs(r2) > 864e13) return e2.intrinsics.NaN;
    var a2 = i.To.ToInteger(e2, new n.NumberValue(e2, r2));
    Object.is(a2, -0) && (a2 = 0);
    return new n.NumberValue(e2, a2);
  }, t.thisTimeValue = function(e2, t2) {
    if (t2 instanceof n.ObjectValue && void 0 !== t2.$DateValue) return t2.$DateValue;
    throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
  }, t.ToDateString = function(e2, t2) {
    return (0, a.default)("number" == typeof t2, "expected tv to be a number"), isNaN(t2) ? "Invalid Date" : new Date(t2).toString();
  }, t.msPerDay = t.msPerHour = t.msPerMinute = t.msPerSecond = t.HoursPerDay = t.MinutesPerHour = t.SecondsPerMinute = void 0;
  var n = r(0), i = r(2), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var o = 60;
  t.SecondsPerMinute = o;
  var s = 60;
  t.MinutesPerHour = s;
  var u = 24;
  t.HoursPerDay = u;
  var l = 1e3;
  t.msPerSecond = l;
  var c = l * o;
  t.msPerMinute = c;
  var f = c * s;
  t.msPerHour = f;
  var p = f * u;
  t.msPerDay = p;
  var d = -(/* @__PURE__ */ new Date(0)).getTimezoneOffset() * c;
  function h(e2, t2) {
    return Math.floor(t2 / p);
  }
  function v(e2, t2) {
    return t2 % 4 != 0 ? 365 : t2 % 4 == 0 && t2 % 100 != 0 ? 366 : t2 % 100 == 0 && t2 % 400 != 0 ? 365 : t2 % 400 == 0 ? 366 : void (0, a.default)(false, "Invalid condition");
  }
  function y(e2, t2) {
    return 365 * (t2 - 1970) + Math.floor((t2 - 1969) / 4) - Math.floor((t2 - 1901) / 100) + Math.floor((t2 - 1601) / 400);
  }
  function m(e2, t2) {
    return p * y(0, t2);
  }
  function b(e2, t2) {
    var r2 = Math.floor(t2 / (365.2425 * p)) + 1970, n2 = m(0, r2);
    return n2 > t2 ? r2-- : n2 + p * v(0, r2) <= t2 && r2++, r2;
  }
  function g(e2, t2) {
    var r2 = v(0, b(0, t2));
    return 365 === r2 ? 0 : 366 === r2 ? 1 : void (0, a.default)(false, "invalid condition");
  }
  function w(e2, t2) {
    return h(0, t2) - y(0, b(0, t2));
  }
  function E(e2, t2) {
    return 0;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.OrdinaryPreventExtensions = function(e2, t2) {
    if (t2.mightBeLeakedObject() && t2.getExtensible()) throw new o.FatalError();
    return t2.setExtensible(false), true;
  }, t.SetIntegrityLevel = function(e2, t2, r2) {
    if ((0, s.default)(t2 instanceof n.ObjectValue, "expected an object"), (0, s.default)("sealed" === r2 || "frozen" === r2, "invalid level"), false === t2.$PreventExtensions()) return false;
    var o2 = t2.$OwnPropertyKeys();
    if ("sealed" === r2) {
      var l = true, c = false, f = void 0;
      try {
        for (var p, d = o2[Symbol.iterator](); !(l = (p = d.next()).done); l = true) {
          var h = p.value;
          a.Properties.DefinePropertyOrThrow(e2, t2, h, new u.PropertyDescriptor({ configurable: false }));
        }
      } catch (e3) {
        c = true, f = e3;
      } finally {
        try {
          l || null == d.return || d.return();
        } finally {
          if (c) throw f;
        }
      }
    } else if ("frozen" === r2) {
      var v = true, y = false, m = void 0;
      try {
        for (var b, g = o2[Symbol.iterator](); !(v = (b = g.next()).done); v = true) {
          var w = b.value, E = t2.$GetOwnProperty(w);
          if (E) {
            a.Properties.ThrowIfMightHaveBeenDeleted(E);
            var S = void 0;
            S = (0, i.IsAccessorDescriptor)(e2, E) ? new u.PropertyDescriptor({ configurable: false }) : new u.PropertyDescriptor({ configurable: false, writable: false }), a.Properties.DefinePropertyOrThrow(e2, t2, w, S);
          }
        }
      } catch (e3) {
        y = true, m = e3;
      } finally {
        try {
          v || null == g.return || g.return();
        } finally {
          if (y) throw m;
        }
      }
    }
    return true;
  }, t.TestIntegrityLevel = function(e2, t2, r2) {
    if ((0, s.default)(t2 instanceof n.ObjectValue, "expected an object"), (0, s.default)("sealed" === r2 || "frozen" === r2, "invalid level"), true === (0, i.IsExtensible)(e2, t2)) return false;
    var o2 = t2.$OwnPropertyKeys(), u2 = true, l = false, c = void 0;
    try {
      for (var f, p = o2[Symbol.iterator](); !(u2 = (f = p.next()).done); u2 = true) {
        var d = f.value, h = t2.$GetOwnProperty(d);
        if (h) {
          if (a.Properties.ThrowIfMightHaveBeenDeleted(h), true === (h = h.throwIfNotConcrete(e2)).configurable) return false;
          if ("frozen" === r2 && true === (0, i.IsDataDescriptor)(e2, h) && true === h.writable) return false;
        }
      }
    } catch (e3) {
      l = true, c = e3;
    } finally {
      try {
        u2 || null == p.return || p.return();
      } finally {
        if (l) throw c;
      }
    }
    return true;
  };
  var n = r(0), i = r(3), a = r(2), o = r(4), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.GeneratorStart = function(e2, t2, r2) {
    (0, a.default)(e2.isNewObject(t2)), (0, a.default)(t2 instanceof n.ObjectValue && void 0 === t2.$GeneratorState, "The value of generator.[[GeneratorState]] is undefined");
    var i2 = e2.getRunningContext();
    return t2.$GeneratorContext = i2, t2.$GeneratorState = "suspendedStart", e2.intrinsics.undefined;
  }, t.GeneratorValidate = o, t.GeneratorResume = function(e2, t2, r2) {
    var s = o(e2, t2);
    if ((0, a.default)(t2 instanceof n.ObjectValue), "completed" === s) return i.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
    (0, a.default)("suspendedStart" === s || "suspendedYield" === s, "state is either 'suspendedStart' or 'suspendedYield'");
    var u = t2.$GeneratorContext;
    (0, a.default)(u);
    var l = e2.getRunningContext();
    l.suspend(), i.Properties.ThrowIfInternalSlotNotWritable(e2, t2, "$GeneratorState").$GeneratorState = "executing", e2.pushContext(u);
    var c = u.resume();
    return (0, a.default)(e2.getRunningContext() === l), c;
  }, t.GeneratorResumeAbrupt = function(e2, t2, r2) {
    return e2.intrinsics.undefined;
  }, t.GeneratorYield = function(e2, t2) {
    return e2.intrinsics.undefined;
  };
  r(7);
  var n = r(0), i = r(2), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function o(e2, t2) {
    if (!(t2 instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "Type(generator) is not Object");
    if (!("$GeneratorState" in t2)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "Type(generator) is not Object");
    (0, a.default)("$GeneratorContext" in t2);
    var r2 = t2.$GeneratorState;
    if ("executing" === r2) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, "Type(generator) is not Object");
    return r2;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2) {
    return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function a() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return a = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    var r2 = a().cloneNode(e2.ast);
    t2 && (e2.placeholders.forEach(function(e3) {
      if (!Object.prototype.hasOwnProperty.call(t2, e3.name)) {
        var r3 = e3.name;
        throw new Error('Error: No substitution given for "'.concat(r3, `". If this is not meant to be a
            placeholder you may want to consider passing one of the following options to @babel/template:
            - { placeholderPattern: false, placeholderWhitelist: new Set(['`).concat(r3, "'])}\n            - { placeholderPattern: /^").concat(r3, "$/ }"));
      }
    }), Object.keys(t2).forEach(function(t3) {
      if (!e2.placeholderNames.has(t3)) throw new Error('Unknown substitution "'.concat(t3, '" given'));
    }));
    return e2.placeholders.slice().reverse().forEach(function(e3) {
      try {
        !(function(e4, t3, r3) {
          e4.isDuplicate && (Array.isArray(r3) ? r3 = r3.map(function(e5) {
            return a().cloneNode(e5);
          }) : "object" === i(r3) && (r3 = a().cloneNode(r3)));
          var o = e4.resolve(t3), s = o.parent, u = o.key, l = o.index;
          if ("string" === e4.type) {
            if ("string" == typeof r3 && (r3 = a().stringLiteral(r3)), !r3 || !a().isStringLiteral(r3)) throw new Error("Expected string substitution");
          } else if ("statement" === e4.type) void 0 === l ? r3 ? Array.isArray(r3) ? r3 = a().blockStatement(r3) : "string" == typeof r3 ? r3 = a().expressionStatement(a().identifier(r3)) : a().isStatement(r3) || (r3 = a().expressionStatement(r3)) : r3 = a().emptyStatement() : r3 && !Array.isArray(r3) && ("string" == typeof r3 && (r3 = a().identifier(r3)), a().isStatement(r3) || (r3 = a().expressionStatement(r3)));
          else if ("param" === e4.type) {
            if ("string" == typeof r3 && (r3 = a().identifier(r3)), void 0 === l) throw new Error("Assertion failure.");
          } else if ("string" == typeof r3 && (r3 = a().identifier(r3)), Array.isArray(r3)) throw new Error("Cannot replace single expression with an array.");
          if (void 0 === l) a().validate(s, u, r3), s[u] = r3;
          else {
            var c = s[u].slice();
            "statement" === e4.type || "param" === e4.type ? null == r3 ? c.splice(l, 1) : Array.isArray(r3) ? c.splice.apply(c, [l, 1].concat(n(r3))) : c[l] = r3 : c[l] = r3, a().validate(s, u, c), s[u] = c;
          }
        })(e3, r2, t2 && t2[e3.name] || null);
      } catch (t3) {
        throw t3.message = '@babel/template placeholder "'.concat(e3.name, '": ').concat(t3.message), t3;
      }
    }), r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(624), i = {};
  for (var a in n) n.hasOwnProperty(a) && (i[n[a]] = a);
  var o = e.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
  for (var s in o) if (o.hasOwnProperty(s)) {
    if (!("channels" in o[s])) throw new Error("missing channels property: " + s);
    if (!("labels" in o[s])) throw new Error("missing channel labels property: " + s);
    if (o[s].labels.length !== o[s].channels) throw new Error("channel and label counts mismatch: " + s);
    var u = o[s].channels, l = o[s].labels;
    delete o[s].channels, delete o[s].labels, Object.defineProperty(o[s], "channels", { value: u }), Object.defineProperty(o[s], "labels", { value: l });
  }
  function c(e2, t2) {
    return Math.pow(e2[0] - t2[0], 2) + Math.pow(e2[1] - t2[1], 2) + Math.pow(e2[2] - t2[2], 2);
  }
  o.rgb.hsl = function(e2) {
    var t2, r2, n2 = e2[0] / 255, i2 = e2[1] / 255, a2 = e2[2] / 255, o2 = Math.min(n2, i2, a2), s2 = Math.max(n2, i2, a2), u2 = s2 - o2;
    return s2 === o2 ? t2 = 0 : n2 === s2 ? t2 = (i2 - a2) / u2 : i2 === s2 ? t2 = 2 + (a2 - n2) / u2 : a2 === s2 && (t2 = 4 + (n2 - i2) / u2), (t2 = Math.min(60 * t2, 360)) < 0 && (t2 += 360), r2 = (o2 + s2) / 2, [t2, 100 * (s2 === o2 ? 0 : r2 <= 0.5 ? u2 / (s2 + o2) : u2 / (2 - s2 - o2)), 100 * r2];
  }, o.rgb.hsv = function(e2) {
    var t2, r2, n2 = e2[0], i2 = e2[1], a2 = e2[2], o2 = Math.min(n2, i2, a2), s2 = Math.max(n2, i2, a2), u2 = s2 - o2;
    return r2 = 0 === s2 ? 0 : u2 / s2 * 1e3 / 10, s2 === o2 ? t2 = 0 : n2 === s2 ? t2 = (i2 - a2) / u2 : i2 === s2 ? t2 = 2 + (a2 - n2) / u2 : a2 === s2 && (t2 = 4 + (n2 - i2) / u2), (t2 = Math.min(60 * t2, 360)) < 0 && (t2 += 360), [t2, r2, s2 / 255 * 1e3 / 10];
  }, o.rgb.hwb = function(e2) {
    var t2 = e2[0], r2 = e2[1], n2 = e2[2];
    return [o.rgb.hsl(e2)[0], 100 * (1 / 255 * Math.min(t2, Math.min(r2, n2))), 100 * (n2 = 1 - 1 / 255 * Math.max(t2, Math.max(r2, n2)))];
  }, o.rgb.cmyk = function(e2) {
    var t2, r2 = e2[0] / 255, n2 = e2[1] / 255, i2 = e2[2] / 255;
    return [100 * ((1 - r2 - (t2 = Math.min(1 - r2, 1 - n2, 1 - i2))) / (1 - t2) || 0), 100 * ((1 - n2 - t2) / (1 - t2) || 0), 100 * ((1 - i2 - t2) / (1 - t2) || 0), 100 * t2];
  }, o.rgb.keyword = function(e2) {
    var t2 = i[e2];
    if (t2) return t2;
    var r2, a2 = 1 / 0;
    for (var o2 in n) if (n.hasOwnProperty(o2)) {
      var s2 = c(e2, n[o2]);
      s2 < a2 && (a2 = s2, r2 = o2);
    }
    return r2;
  }, o.keyword.rgb = function(e2) {
    return n[e2];
  }, o.rgb.xyz = function(e2) {
    var t2 = e2[0] / 255, r2 = e2[1] / 255, n2 = e2[2] / 255;
    return [100 * (0.4124 * (t2 = t2 > 0.04045 ? Math.pow((t2 + 0.055) / 1.055, 2.4) : t2 / 12.92) + 0.3576 * (r2 = r2 > 0.04045 ? Math.pow((r2 + 0.055) / 1.055, 2.4) : r2 / 12.92) + 0.1805 * (n2 = n2 > 0.04045 ? Math.pow((n2 + 0.055) / 1.055, 2.4) : n2 / 12.92)), 100 * (0.2126 * t2 + 0.7152 * r2 + 0.0722 * n2), 100 * (0.0193 * t2 + 0.1192 * r2 + 0.9505 * n2)];
  }, o.rgb.lab = function(e2) {
    var t2 = o.rgb.xyz(e2), r2 = t2[0], n2 = t2[1], i2 = t2[2];
    return n2 /= 100, i2 /= 108.883, r2 = (r2 /= 95.047) > 8856e-6 ? Math.pow(r2, 1 / 3) : 7.787 * r2 + 16 / 116, [116 * (n2 = n2 > 8856e-6 ? Math.pow(n2, 1 / 3) : 7.787 * n2 + 16 / 116) - 16, 500 * (r2 - n2), 200 * (n2 - (i2 = i2 > 8856e-6 ? Math.pow(i2, 1 / 3) : 7.787 * i2 + 16 / 116))];
  }, o.hsl.rgb = function(e2) {
    var t2, r2, n2, i2, a2, o2 = e2[0] / 360, s2 = e2[1] / 100, u2 = e2[2] / 100;
    if (0 === s2) return [a2 = 255 * u2, a2, a2];
    t2 = 2 * u2 - (r2 = u2 < 0.5 ? u2 * (1 + s2) : u2 + s2 - u2 * s2), i2 = [0, 0, 0];
    for (var l2 = 0; l2 < 3; l2++) (n2 = o2 + 1 / 3 * -(l2 - 1)) < 0 && n2++, n2 > 1 && n2--, a2 = 6 * n2 < 1 ? t2 + 6 * (r2 - t2) * n2 : 2 * n2 < 1 ? r2 : 3 * n2 < 2 ? t2 + (r2 - t2) * (2 / 3 - n2) * 6 : t2, i2[l2] = 255 * a2;
    return i2;
  }, o.hsl.hsv = function(e2) {
    var t2 = e2[0], r2 = e2[1] / 100, n2 = e2[2] / 100, i2 = r2, a2 = Math.max(n2, 0.01);
    return r2 *= (n2 *= 2) <= 1 ? n2 : 2 - n2, i2 *= a2 <= 1 ? a2 : 2 - a2, [t2, 100 * (0 === n2 ? 2 * i2 / (a2 + i2) : 2 * r2 / (n2 + r2)), 100 * ((n2 + r2) / 2)];
  }, o.hsv.rgb = function(e2) {
    var t2 = e2[0] / 60, r2 = e2[1] / 100, n2 = e2[2] / 100, i2 = Math.floor(t2) % 6, a2 = t2 - Math.floor(t2), o2 = 255 * n2 * (1 - r2), s2 = 255 * n2 * (1 - r2 * a2), u2 = 255 * n2 * (1 - r2 * (1 - a2));
    switch (n2 *= 255, i2) {
      case 0:
        return [n2, u2, o2];
      case 1:
        return [s2, n2, o2];
      case 2:
        return [o2, n2, u2];
      case 3:
        return [o2, s2, n2];
      case 4:
        return [u2, o2, n2];
      case 5:
        return [n2, o2, s2];
    }
  }, o.hsv.hsl = function(e2) {
    var t2, r2, n2, i2 = e2[0], a2 = e2[1] / 100, o2 = e2[2] / 100, s2 = Math.max(o2, 0.01);
    return n2 = (2 - a2) * o2, r2 = a2 * s2, [i2, 100 * (r2 = (r2 /= (t2 = (2 - a2) * s2) <= 1 ? t2 : 2 - t2) || 0), 100 * (n2 /= 2)];
  }, o.hwb.rgb = function(e2) {
    var t2, r2, n2, i2, a2, o2, s2, u2 = e2[0] / 360, l2 = e2[1] / 100, c2 = e2[2] / 100, f = l2 + c2;
    switch (f > 1 && (l2 /= f, c2 /= f), n2 = 6 * u2 - (t2 = Math.floor(6 * u2)), 0 != (1 & t2) && (n2 = 1 - n2), i2 = l2 + n2 * ((r2 = 1 - c2) - l2), t2) {
      default:
      case 6:
      case 0:
        a2 = r2, o2 = i2, s2 = l2;
        break;
      case 1:
        a2 = i2, o2 = r2, s2 = l2;
        break;
      case 2:
        a2 = l2, o2 = r2, s2 = i2;
        break;
      case 3:
        a2 = l2, o2 = i2, s2 = r2;
        break;
      case 4:
        a2 = i2, o2 = l2, s2 = r2;
        break;
      case 5:
        a2 = r2, o2 = l2, s2 = i2;
    }
    return [255 * a2, 255 * o2, 255 * s2];
  }, o.cmyk.rgb = function(e2) {
    var t2 = e2[0] / 100, r2 = e2[1] / 100, n2 = e2[2] / 100, i2 = e2[3] / 100;
    return [255 * (1 - Math.min(1, t2 * (1 - i2) + i2)), 255 * (1 - Math.min(1, r2 * (1 - i2) + i2)), 255 * (1 - Math.min(1, n2 * (1 - i2) + i2))];
  }, o.xyz.rgb = function(e2) {
    var t2, r2, n2, i2 = e2[0] / 100, a2 = e2[1] / 100, o2 = e2[2] / 100;
    return r2 = -0.9689 * i2 + 1.8758 * a2 + 0.0415 * o2, n2 = 0.0557 * i2 + -0.204 * a2 + 1.057 * o2, t2 = (t2 = 3.2406 * i2 + -1.5372 * a2 + -0.4986 * o2) > 31308e-7 ? 1.055 * Math.pow(t2, 1 / 2.4) - 0.055 : 12.92 * t2, r2 = r2 > 31308e-7 ? 1.055 * Math.pow(r2, 1 / 2.4) - 0.055 : 12.92 * r2, n2 = n2 > 31308e-7 ? 1.055 * Math.pow(n2, 1 / 2.4) - 0.055 : 12.92 * n2, [255 * (t2 = Math.min(Math.max(0, t2), 1)), 255 * (r2 = Math.min(Math.max(0, r2), 1)), 255 * (n2 = Math.min(Math.max(0, n2), 1))];
  }, o.xyz.lab = function(e2) {
    var t2 = e2[0], r2 = e2[1], n2 = e2[2];
    return r2 /= 100, n2 /= 108.883, t2 = (t2 /= 95.047) > 8856e-6 ? Math.pow(t2, 1 / 3) : 7.787 * t2 + 16 / 116, [116 * (r2 = r2 > 8856e-6 ? Math.pow(r2, 1 / 3) : 7.787 * r2 + 16 / 116) - 16, 500 * (t2 - r2), 200 * (r2 - (n2 = n2 > 8856e-6 ? Math.pow(n2, 1 / 3) : 7.787 * n2 + 16 / 116))];
  }, o.lab.xyz = function(e2) {
    var t2, r2, n2, i2 = e2[0];
    t2 = e2[1] / 500 + (r2 = (i2 + 16) / 116), n2 = r2 - e2[2] / 200;
    var a2 = Math.pow(r2, 3), o2 = Math.pow(t2, 3), s2 = Math.pow(n2, 3);
    return r2 = a2 > 8856e-6 ? a2 : (r2 - 16 / 116) / 7.787, t2 = o2 > 8856e-6 ? o2 : (t2 - 16 / 116) / 7.787, n2 = s2 > 8856e-6 ? s2 : (n2 - 16 / 116) / 7.787, [t2 *= 95.047, r2 *= 100, n2 *= 108.883];
  }, o.lab.lch = function(e2) {
    var t2, r2 = e2[0], n2 = e2[1], i2 = e2[2];
    return (t2 = 360 * Math.atan2(i2, n2) / 2 / Math.PI) < 0 && (t2 += 360), [r2, Math.sqrt(n2 * n2 + i2 * i2), t2];
  }, o.lch.lab = function(e2) {
    var t2, r2 = e2[0], n2 = e2[1];
    return t2 = e2[2] / 360 * 2 * Math.PI, [r2, n2 * Math.cos(t2), n2 * Math.sin(t2)];
  }, o.rgb.ansi16 = function(e2) {
    var t2 = e2[0], r2 = e2[1], n2 = e2[2], i2 = 1 in arguments ? arguments[1] : o.rgb.hsv(e2)[2];
    if (0 === (i2 = Math.round(i2 / 50))) return 30;
    var a2 = 30 + (Math.round(n2 / 255) << 2 | Math.round(r2 / 255) << 1 | Math.round(t2 / 255));
    return 2 === i2 && (a2 += 60), a2;
  }, o.hsv.ansi16 = function(e2) {
    return o.rgb.ansi16(o.hsv.rgb(e2), e2[2]);
  }, o.rgb.ansi256 = function(e2) {
    var t2 = e2[0], r2 = e2[1], n2 = e2[2];
    return t2 === r2 && r2 === n2 ? t2 < 8 ? 16 : t2 > 248 ? 231 : Math.round((t2 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t2 / 255 * 5) + 6 * Math.round(r2 / 255 * 5) + Math.round(n2 / 255 * 5);
  }, o.ansi16.rgb = function(e2) {
    var t2 = e2 % 10;
    if (0 === t2 || 7 === t2) return e2 > 50 && (t2 += 3.5), [t2 = t2 / 10.5 * 255, t2, t2];
    var r2 = 0.5 * (1 + ~~(e2 > 50));
    return [(1 & t2) * r2 * 255, (t2 >> 1 & 1) * r2 * 255, (t2 >> 2 & 1) * r2 * 255];
  }, o.ansi256.rgb = function(e2) {
    if (e2 >= 232) {
      var t2 = 10 * (e2 - 232) + 8;
      return [t2, t2, t2];
    }
    var r2;
    return e2 -= 16, [Math.floor(e2 / 36) / 5 * 255, Math.floor((r2 = e2 % 36) / 6) / 5 * 255, r2 % 6 / 5 * 255];
  }, o.rgb.hex = function(e2) {
    var t2 = (((255 & Math.round(e2[0])) << 16) + ((255 & Math.round(e2[1])) << 8) + (255 & Math.round(e2[2]))).toString(16).toUpperCase();
    return "000000".substring(t2.length) + t2;
  }, o.hex.rgb = function(e2) {
    var t2 = e2.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!t2) return [0, 0, 0];
    var r2 = t2[0];
    3 === t2[0].length && (r2 = r2.split("").map(function(e3) {
      return e3 + e3;
    }).join(""));
    var n2 = parseInt(r2, 16);
    return [n2 >> 16 & 255, n2 >> 8 & 255, 255 & n2];
  }, o.rgb.hcg = function(e2) {
    var t2, r2 = e2[0] / 255, n2 = e2[1] / 255, i2 = e2[2] / 255, a2 = Math.max(Math.max(r2, n2), i2), o2 = Math.min(Math.min(r2, n2), i2), s2 = a2 - o2;
    return t2 = s2 <= 0 ? 0 : a2 === r2 ? (n2 - i2) / s2 % 6 : a2 === n2 ? 2 + (i2 - r2) / s2 : 4 + (r2 - n2) / s2 + 4, t2 /= 6, [360 * (t2 %= 1), 100 * s2, 100 * (s2 < 1 ? o2 / (1 - s2) : 0)];
  }, o.hsl.hcg = function(e2) {
    var t2 = e2[1] / 100, r2 = e2[2] / 100, n2 = 1, i2 = 0;
    return (n2 = r2 < 0.5 ? 2 * t2 * r2 : 2 * t2 * (1 - r2)) < 1 && (i2 = (r2 - 0.5 * n2) / (1 - n2)), [e2[0], 100 * n2, 100 * i2];
  }, o.hsv.hcg = function(e2) {
    var t2 = e2[1] / 100, r2 = e2[2] / 100, n2 = t2 * r2, i2 = 0;
    return n2 < 1 && (i2 = (r2 - n2) / (1 - n2)), [e2[0], 100 * n2, 100 * i2];
  }, o.hcg.rgb = function(e2) {
    var t2 = e2[0] / 360, r2 = e2[1] / 100, n2 = e2[2] / 100;
    if (0 === r2) return [255 * n2, 255 * n2, 255 * n2];
    var i2, a2 = [0, 0, 0], o2 = t2 % 1 * 6, s2 = o2 % 1, u2 = 1 - s2;
    switch (Math.floor(o2)) {
      case 0:
        a2[0] = 1, a2[1] = s2, a2[2] = 0;
        break;
      case 1:
        a2[0] = u2, a2[1] = 1, a2[2] = 0;
        break;
      case 2:
        a2[0] = 0, a2[1] = 1, a2[2] = s2;
        break;
      case 3:
        a2[0] = 0, a2[1] = u2, a2[2] = 1;
        break;
      case 4:
        a2[0] = s2, a2[1] = 0, a2[2] = 1;
        break;
      default:
        a2[0] = 1, a2[1] = 0, a2[2] = u2;
    }
    return i2 = (1 - r2) * n2, [255 * (r2 * a2[0] + i2), 255 * (r2 * a2[1] + i2), 255 * (r2 * a2[2] + i2)];
  }, o.hcg.hsv = function(e2) {
    var t2 = e2[1] / 100, r2 = t2 + e2[2] / 100 * (1 - t2), n2 = 0;
    return r2 > 0 && (n2 = t2 / r2), [e2[0], 100 * n2, 100 * r2];
  }, o.hcg.hsl = function(e2) {
    var t2 = e2[1] / 100, r2 = e2[2] / 100 * (1 - t2) + 0.5 * t2, n2 = 0;
    return r2 > 0 && r2 < 0.5 ? n2 = t2 / (2 * r2) : r2 >= 0.5 && r2 < 1 && (n2 = t2 / (2 * (1 - r2))), [e2[0], 100 * n2, 100 * r2];
  }, o.hcg.hwb = function(e2) {
    var t2 = e2[1] / 100, r2 = t2 + e2[2] / 100 * (1 - t2);
    return [e2[0], 100 * (r2 - t2), 100 * (1 - r2)];
  }, o.hwb.hcg = function(e2) {
    var t2 = e2[1] / 100, r2 = 1 - e2[2] / 100, n2 = r2 - t2, i2 = 0;
    return n2 < 1 && (i2 = (r2 - n2) / (1 - n2)), [e2[0], 100 * n2, 100 * i2];
  }, o.apple.rgb = function(e2) {
    return [e2[0] / 65535 * 255, e2[1] / 65535 * 255, e2[2] / 65535 * 255];
  }, o.rgb.apple = function(e2) {
    return [e2[0] / 255 * 65535, e2[1] / 255 * 65535, e2[2] / 255 * 65535];
  }, o.gray.rgb = function(e2) {
    return [e2[0] / 100 * 255, e2[0] / 100 * 255, e2[0] / 100 * 255];
  }, o.gray.hsl = o.gray.hsv = function(e2) {
    return [0, 0, e2[0]];
  }, o.gray.hwb = function(e2) {
    return [0, 100, e2[0]];
  }, o.gray.cmyk = function(e2) {
    return [0, 0, 0, e2[0]];
  }, o.gray.lab = function(e2) {
    return [e2[0], 0, 0];
  }, o.gray.hex = function(e2) {
    var t2 = 255 & Math.round(e2[0] / 100 * 255), r2 = ((t2 << 16) + (t2 << 8) + t2).toString(16).toUpperCase();
    return "000000".substring(r2.length) + r2;
  }, o.rgb.gray = function(e2) {
    return [(e2[0] + e2[1] + e2[2]) / 3 / 255 * 100];
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n() {
      var e3 = (function(e4) {
        if (e4 && e4.__esModule) return e4;
        var t2 = {};
        if (null != e4) {
          for (var r2 in e4) if (Object.prototype.hasOwnProperty.call(e4, r2)) {
            var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e4, r2) : {};
            n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e4[r2];
          }
        }
        return t2.default = e4, t2;
      })(r(630));
      return n = function() {
        return e3;
      }, e3;
    }
    Object.defineProperty(t, "__esModule", { value: true }), t.codeFrameColumns = o, t.default = function(t2, r2, n2) {
      var a2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
      if (!i) {
        i = true;
        var s = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
        if (e2.emitWarning) e2.emitWarning(s, "DeprecationWarning");
        else {
          var u = new Error(s);
          u.name = "DeprecationWarning", console.warn(new Error(s));
        }
      }
      return n2 = Math.max(n2, 0), o(t2, { start: { column: n2, line: r2 } }, a2);
    };
    var i = false;
    var a = /\r\n|[\n\r\u2028\u2029]/;
    function o(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i2 = (r2.highlightCode || r2.forceColor) && (0, n().shouldHighlight)(r2), o2 = (0, n().getChalk)(r2), s = (function(e4) {
        return { gutter: e4.grey, marker: e4.red.bold, message: e4.red.bold };
      })(o2), u = function(e4, t3) {
        return i2 ? e4(t3) : t3;
      };
      i2 && (e3 = (0, n().default)(e3, r2));
      var l = e3.split(a), c = (function(e4, t3, r3) {
        var n2 = Object.assign({ column: 0, line: -1 }, e4.start), i3 = Object.assign({}, n2, e4.end), a2 = r3 || {}, o3 = a2.linesAbove, s2 = void 0 === o3 ? 2 : o3, u2 = a2.linesBelow, l2 = void 0 === u2 ? 3 : u2, c2 = n2.line, f2 = n2.column, p2 = i3.line, d2 = i3.column, h2 = Math.max(c2 - (s2 + 1), 0), v2 = Math.min(t3.length, p2 + l2);
        -1 === c2 && (h2 = 0), -1 === p2 && (v2 = t3.length);
        var y2 = p2 - c2, m = {};
        if (y2) for (var b = 0; b <= y2; b++) {
          var g = b + c2;
          if (f2) if (0 === b) {
            var w = t3[g - 1].length;
            m[g] = [f2, w - f2];
          } else if (b === y2) m[g] = [0, d2];
          else {
            var E = t3[g - b].length;
            m[g] = [0, E];
          }
          else m[g] = true;
        }
        else m[c2] = f2 === d2 ? !f2 || [f2, 0] : [f2, d2 - f2];
        return { start: h2, end: v2, markerLines: m };
      })(t2, l, r2), f = c.start, p = c.end, d = c.markerLines, h = t2.start && "number" == typeof t2.start.column, v = String(p).length, y = l.slice(f, p).map(function(e4, t3) {
        var n2 = f + 1 + t3, i3 = " ".concat(n2).slice(-v), a2 = " ".concat(i3, " | "), o3 = d[n2], l2 = !d[n2 + 1];
        if (o3) {
          var c2 = "";
          if (Array.isArray(o3)) {
            var p2 = e4.slice(0, Math.max(o3[0] - 1, 0)).replace(/[^\t]/g, " "), h2 = o3[1] || 1;
            c2 = ["\n ", u(s.gutter, a2.replace(/\d/g, " ")), p2, u(s.marker, "^").repeat(h2)].join(""), l2 && r2.message && (c2 += " " + u(s.message, r2.message));
          }
          return [u(s.marker, ">"), u(s.gutter, a2), e4, c2].join("");
        }
        return " ".concat(u(s.gutter, a2)).concat(e4);
      }).join("\n");
      return r2.message && !h && (y = "".concat(" ".repeat(v + 1)).concat(r2.message, "\n").concat(y)), i2 ? o2.reset(y) : y;
    }
  }).call(this, r(115));
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  function i() {
    var e2 = r(34);
    return i = function() {
      return e2;
    }, e2;
  }
  function a() {
    var e2 = r(188);
    return a = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    var u = (function(e3, t3) {
      t3 = Object.assign({ allowReturnOutsideFunction: true, allowSuperOutsideMethod: true, sourceType: "module" }, t3);
      try {
        return (0, i().parse)(e3, t3);
      } catch (t4) {
        var r3 = t4.loc;
        throw r3 && (t4.message += "\n" + (0, a().codeFrameColumns)(e3, { start: r3 }), t4.code = "BABEL_TEMPLATE_PARSE_ERROR"), t4;
      }
    })(t2, r2.parser), l = r2.placeholderWhitelist, c = r2.placeholderPattern, f = void 0 === c ? o : c, p = r2.preserveComments;
    n().removePropertiesDeep(u, { preserveComments: p }), e2.validate(u);
    var d = [], h = /* @__PURE__ */ new Set();
    return n().traverse(u, s, { placeholders: d, placeholderNames: h, placeholderWhitelist: l, placeholderPattern: f }), { ast: u, placeholders: d, placeholderNames: h };
  };
  var o = /^[_$A-Z0-9]+$/;
  function s(e2, t2, r2) {
    var i2;
    if (n().isIdentifier(e2) || n().isJSXIdentifier(e2)) i2 = e2.name;
    else {
      if (!n().isStringLiteral(e2)) return;
      i2 = e2.value;
    }
    if (r2.placeholderPattern && r2.placeholderPattern.test(i2) || r2.placeholderWhitelist && r2.placeholderWhitelist.has(i2)) {
      var a2, o2 = (t2 = t2.slice())[t2.length - 1], s2 = o2.node, u = o2.key;
      n().isStringLiteral(e2) ? a2 = "string" : n().isNewExpression(s2) && "arguments" === u || n().isCallExpression(s2) && "arguments" === u || n().isFunction(s2) && "params" === u ? a2 = "param" : n().isExpressionStatement(s2) ? (a2 = "statement", t2 = t2.slice(0, -1)) : a2 = "other", r2.placeholders.push({ name: i2, type: a2, resolve: function(e3) {
        return (function(e4, t3) {
          for (var r3 = e4, n2 = 0; n2 < t3.length - 1; n2++) {
            var i3 = t3[n2], a3 = i3.key, o3 = i3.index;
            r3 = void 0 === o3 ? r3[a3] : r3[a3][o3];
          }
          var s3 = t3[t3.length - 1], u2 = s3.key, l = s3.index;
          return { parent: r3, key: u2, index: l };
        })(e3, t2);
      }, isDuplicate: r2.placeholderNames.has(i2) }), r2.placeholderNames.add(i2);
    }
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = t.program = t.expression = t.statements = t.statement = t.smart = void 0;
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(633)), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(632));
  var a = (0, i.default)(n.smart);
  t.smart = a;
  var o = (0, i.default)(n.statement);
  t.statement = o;
  var s = (0, i.default)(n.statements);
  t.statements = s;
  var u = (0, i.default)(n.expression);
  t.expression = u;
  var l = (0, i.default)(n.program);
  t.program = l;
  var c = Object.assign(a.bind(void 0), { smart: a, statement: o, statements: s, expression: u, program: l, ast: a.ast });
  t.default = c;
}, function(e, t, r) {
  "use strict";
  var n = r(641), i = r(640), a = r(639), o = r(638), s = r(637), u = r(636), l = r(635);
  l.alea = n, l.xor128 = i, l.xorwow = a, l.xorshift7 = o, l.xor4096 = s, l.tychei = u, e.exports = l;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var c = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (0, l.default)(e3, "realm required"), a(this, o(t2).call(this, e3, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.ConcreteValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "throwIfNotConcretePrimitive", value: function() {
      return this;
    } }, { key: "toDisplayString", value: function() {
      (0, l.default)(false, "abstract method; please override");
    } }]), t2;
  })();
  t.default = c;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  r(0);
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var a = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), (0, i.default)(t2, "realm required"), this.$Realm = t2, this.intrinsicName = r2, this.expressionLocation = t2.currentLocation;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "toDisplayString", value: function() {
      return "[" + this.constructor.name + " originally; " + (this.__originalName ? this.__originalName : "undefined") + "]";
    } }, { key: "equals", value: function(e3) {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "getHash", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "getType", value: function() {
      return this.constructor;
    } }, { key: "implies", value: function(e3) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      return !this.mightNotBeFalse() || !!this.equals(e3);
    } }, { key: "impliesNot", value: function(e3) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      return !this.mightNotBeFalse() || (this.equals(e3), false);
    } }, { key: "isIntrinsic", value: function() {
      return !!this.intrinsicName;
    } }, { key: "isTemporal", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "isPartialObject", value: function() {
      return false;
    } }, { key: "isSimpleObject", value: function() {
      return false;
    } }, { key: "mightBeFalse", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightNotBeFalse", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightBeNull", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightNotBeNull", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightBeNumber", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightNotBeNumber", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightNotBeObject", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightBeObject", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightBeString", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightNotBeString", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightBeTrue", value: function() {
      return this.mightNotBeFalse();
    } }, { key: "mightNotBeTrue", value: function() {
      return this.mightBeFalse();
    } }, { key: "mightBeUndefined", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightNotBeUndefined", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "mightHaveBeenDeleted", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "promoteEmptyToUndefined", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "throwIfNotConcrete", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "throwIfNotConcreteNumber", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "throwIfNotConcreteString", value: function() {
      throw new Error("abstract method; please override");
    } }, { key: "throwIfNotConcreteBoolean", value: function() {
      throw new Error("abstract method; please override");
    } }, { key: "throwIfNotConcreteSymbol", value: function() {
      throw new Error("abstract method; please override");
    } }, { key: "throwIfNotConcreteObject", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "throwIfNotConcretePrimitive", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "throwIfNotObject", value: function() {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "serialize", value: function() {
      var e3 = this, t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : /* @__PURE__ */ new Map();
      if (t2.has(this)) return t2.get(this);
      var r2 = function(r3) {
        return t2.set(e3, r3), r3;
      };
      return r2(this._serialize(r2, t2));
    } }, { key: "_serialize", value: function(e3, t2) {
      (0, i.default)(false, "abstract method; please override");
    } }, { key: "getDebugName", value: function() {
      return this.intrinsicName || this.__originalName;
    } }], [{ key: "isTypeCompatibleWith", value: function(e3, t2) {
      return e3.prototype instanceof t2 || e3.prototype === t2.prototype;
    } }]), e2;
  })();
  t.default = a;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.isVariableDeclaration)(e2) && ("var" !== e2.kind || e2[i.BLOCK_SCOPED_SYMBOL]);
  };
  var n = r(17), i = r(45);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).preserveComments ? i : a, r2 = true, n2 = false, o = void 0;
    try {
      for (var s, u = t2[Symbol.iterator](); !(r2 = (s = u.next()).done); r2 = true) {
        var l = s.value;
        null != e2[l] && (e2[l] = void 0);
      }
    } catch (e3) {
      n2 = true, o = e3;
    } finally {
      try {
        r2 || null == u.return || u.return();
      } finally {
        if (n2) throw o;
      }
    }
    for (var c in e2) "_" === c[0] && null != e2[c] && (e2[c] = void 0);
    var f = Object.getOwnPropertySymbols(e2), p = true, d = false, h = void 0;
    try {
      for (var v, y = f[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
        var m = v.value;
        e2[m] = null;
      }
    } catch (e3) {
      d = true, h = e3;
    } finally {
      try {
        p || null == y.return || y.return();
      } finally {
        if (d) throw h;
      }
    }
  };
  var n = r(45), i = ["tokens", "start", "end", "loc", "raw", "rawValue"], a = n.COMMENT_KEYS.concat(["comments"]).concat(i);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2, r2, i) {
    if (!t2) return;
    var a = n.VISITOR_KEYS[t2.type];
    if (!a) return;
    i = i || {};
    r2(t2, i);
    var o = true;
    var s = false;
    var u = void 0;
    try {
      for (var l, c = a[Symbol.iterator](); !(o = (l = c.next()).done); o = true) {
        var f = l.value, p = t2[f];
        if (Array.isArray(p)) {
          var d = true, h = false, v = void 0;
          try {
            for (var y, m = p[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
              var b = y.value;
              e2(b, r2, i);
            }
          } catch (e3) {
            h = true, v = e3;
          } finally {
            try {
              d || null == m.return || m.return();
            } finally {
              if (h) throw v;
            }
          }
        } else e2(p, r2, i);
      }
    } catch (e3) {
      s = true, u = e3;
    } finally {
      try {
        o || null == c.return || c.return();
      } finally {
        if (s) throw u;
      }
    }
  };
  var n = r(29);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    return (0, n.default)(e2, i.default, t2), e2;
  };
  var n = a(r(196)), i = a(r(195));
  function a(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    e2 = (e2 = (e2 = (e2 += "").replace(/[^a-zA-Z0-9$_]/g, "-")).replace(/^[-0-9]+/, "")).replace(/[-\s]+(.)?/g, function(e3, t2) {
      return t2 ? t2.toUpperCase() : "";
    }), (0, n.default)(e2) || (e2 = "_".concat(e2));
    return e2 || "_";
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(66));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if ((0, n.isBlockStatement)(e2)) return e2;
    var r2 = [];
    (0, n.isEmptyStatement)(e2) ? r2 = [] : ((0, n.isStatement)(e2) || (e2 = (0, n.isFunction)(t2) ? (0, i.returnStatement)(e2) : (0, i.expressionStatement)(e2)), r2 = [e2]);
    return (0, i.blockStatement)(r2);
  };
  var n = r(17), i = r(23);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.default)("trailingComments", e2, t2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(118));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    return (0, n.default)(e2, t2), (0, i.default)(e2, t2), (0, a.default)(e2, t2), e2;
  };
  var n = o(r(200)), i = o(r(202)), a = o(r(204));
  function o(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.default)("leadingComments", e2, t2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(118));
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = -1, r2 = Array(e2.size);
    return e2.forEach(function(e3) {
      r2[++t2] = e3;
    }), r2;
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.default)("innerComments", e2, t2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(118));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    if (!r2 || !e2) return e2;
    var n = "".concat(t2, "Comments");
    e2[n] ? e2[n] = "leading" === t2 ? r2.concat(e2[n]) : e2[n].concat(r2) : e2[n] = r2;
    return e2;
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.default)(e2, false);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(65));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2) {
    var r2 = {};
    var i = {};
    var a = [];
    var o = [];
    for (var s = 0; s < t2.length; s++) {
      var u = t2[s];
      if (u && !(o.indexOf(u) >= 0)) {
        if ((0, n.isAnyTypeAnnotation)(u)) return [u];
        if ((0, n.isFlowBaseAnnotation)(u)) i[u.type] = u;
        else if ((0, n.isUnionTypeAnnotation)(u)) a.indexOf(u.types) < 0 && (t2 = t2.concat(u.types), a.push(u.types));
        else if ((0, n.isGenericTypeAnnotation)(u)) {
          var l = u.id.name;
          if (r2[l]) {
            var c = r2[l];
            c.typeParameters ? u.typeParameters && (c.typeParameters.params = e2(c.typeParameters.params.concat(u.typeParameters.params))) : c = u.typeParameters;
          } else r2[l] = u;
        } else o.push(u);
      }
    }
    for (var f in i) o.push(i[f]);
    for (var p in r2) o.push(r2[p]);
    return o;
  };
  var n = r(17);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return !(!e2 || !n.VISITOR_KEYS[e2.type]);
  };
  var n = r(29);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    if (!e2) return;
    var i = n.NODE_FIELDS[e2.type];
    if (!i) return;
    var a = i[t2];
    if (!a || !a.validate) return;
    if (a.optional && null == r2) return;
    a.validate(e2, t2, r2);
  };
  var n = r(29);
}, function(e, t, r) {
  "use strict";
  !(function() {
    var t2, r2, n, i, a, o;
    function s(e2) {
      return e2 <= 65535 ? String.fromCharCode(e2) : String.fromCharCode(Math.floor((e2 - 65536) / 1024) + 55296) + String.fromCharCode((e2 - 65536) % 1024 + 56320);
    }
    for (r2 = { NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/, NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/ }, t2 = { NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/, NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/ }, n = [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279], i = new Array(128), o = 0; o < 128; ++o) i[o] = o >= 97 && o <= 122 || o >= 65 && o <= 90 || 36 === o || 95 === o;
    for (a = new Array(128), o = 0; o < 128; ++o) a[o] = o >= 97 && o <= 122 || o >= 65 && o <= 90 || o >= 48 && o <= 57 || 36 === o || 95 === o;
    e.exports = { isDecimalDigit: function(e2) {
      return 48 <= e2 && e2 <= 57;
    }, isHexDigit: function(e2) {
      return 48 <= e2 && e2 <= 57 || 97 <= e2 && e2 <= 102 || 65 <= e2 && e2 <= 70;
    }, isOctalDigit: function(e2) {
      return e2 >= 48 && e2 <= 55;
    }, isWhiteSpace: function(e2) {
      return 32 === e2 || 9 === e2 || 11 === e2 || 12 === e2 || 160 === e2 || e2 >= 5760 && n.indexOf(e2) >= 0;
    }, isLineTerminator: function(e2) {
      return 10 === e2 || 13 === e2 || 8232 === e2 || 8233 === e2;
    }, isIdentifierStartES5: function(e2) {
      return e2 < 128 ? i[e2] : r2.NonAsciiIdentifierStart.test(s(e2));
    }, isIdentifierPartES5: function(e2) {
      return e2 < 128 ? a[e2] : r2.NonAsciiIdentifierPart.test(s(e2));
    }, isIdentifierStartES6: function(e2) {
      return e2 < 128 ? i[e2] : t2.NonAsciiIdentifierStart.test(s(e2));
    }, isIdentifierPartES6: function(e2) {
      return e2 < 128 ? a[e2] : t2.NonAsciiIdentifierPart.test(s(e2));
    } };
  })();
}, function(e, t, r) {
  "use strict";
  t.ast = r(701), t.code = r(210), t.keyword = r(700);
}, function(e, t, r) {
  "use strict";
  var n = r(47)(r(30), "Set");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(214), i = r(128);
  e.exports = function(e2, t2, r2) {
    var a = t2(e2);
    return i(e2) ? a : n(a, r2(e2));
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = t2.length, i = e2.length; ++r2 < n; ) e2[i + r2] = t2[r2];
    return e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(214), i = r(125), a = r(126), o = r(216), s = Object.getOwnPropertySymbols ? function(e2) {
    for (var t2 = []; e2; ) n(t2, a(e2)), e2 = i(e2);
    return t2;
  } : o;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
    return [];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(222), i = r(727), a = r(218);
  e.exports = function(e2) {
    return a(e2) ? n(e2, true) : i(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(228), i = r(220);
  e.exports = function(e2) {
    return null != e2 && i(e2.length) && !n(e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return function(r2) {
      return e2(t2(r2));
    };
  };
}, function(e, t, r) {
  "use strict";
  var n = 9007199254740991;
  e.exports = function(e2) {
    return "number" == typeof e2 && e2 > -1 && e2 % 1 == 0 && e2 <= n;
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3) {
      return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var i = r(30), a = r(734), o = "object" == n(t) && t && !t.nodeType && t, s = o && "object" == n(e2) && e2 && !e2.nodeType && e2, u = s && s.exports === o ? i.Buffer : void 0, l = (u ? u.isBuffer : void 0) || a;
    e2.exports = l;
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  var n = r(737), i = r(736), a = r(128), o = r(221), s = r(733), u = r(732), l = Object.prototype.hasOwnProperty;
  e.exports = function(e2, t2) {
    var r2 = a(e2), c = !r2 && i(e2), f = !r2 && !c && o(e2), p = !r2 && !c && !f && u(e2), d = r2 || c || f || p, h = d ? n(e2.length, String) : [], v = h.length;
    for (var y in e2) !t2 && !l.call(e2, y) || d && ("length" == y || f && ("offset" == y || "parent" == y) || p && ("buffer" == y || "byteLength" == y || "byteOffset" == y) || s(y, v)) || h.push(y);
    return h;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(739);
  e.exports = function(e2, t2, r2) {
    "__proto__" == t2 && n ? n(e2, t2, { configurable: true, enumerable: true, value: r2, writable: true }) : e2[t2] = r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(223), i = r(229), a = Object.prototype.hasOwnProperty;
  e.exports = function(e2, t2, r2) {
    var o = e2[t2];
    a.call(e2, t2) && i(o, r2) && (void 0 !== r2 || t2 in e2) || n(e2, t2, r2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(752), i = r(745), a = r(743), o = r(742), s = r(741);
  function u(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e2[t2];
      this.set(n2[0], n2[1]);
    }
  }
  u.prototype.clear = n, u.prototype.delete = i, u.prototype.get = a, u.prototype.has = o, u.prototype.set = s, e.exports = u;
}, function(e, t, r) {
  "use strict";
  var n = Function.prototype.toString;
  e.exports = function(e2) {
    if (null != e2) {
      try {
        return n.call(e2);
      } catch (e3) {
      }
      try {
        return e2 + "";
      } catch (e3) {
      }
    }
    return "";
  };
}, function(e, t, r) {
  "use strict";
  (function(t2) {
    function r2(e2) {
      return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
        return typeof e3;
      } : function(e3) {
        return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
      })(e2);
    }
    var n = "object" == (void 0 === t2 ? "undefined" : r2(t2)) && t2 && t2.Object === Object && t2;
    e.exports = n;
  }).call(this, r(55));
}, function(e, t, r) {
  "use strict";
  var n = r(56), i = r(67), a = "[object AsyncFunction]", o = "[object Function]", s = "[object GeneratorFunction]", u = "[object Proxy]";
  e.exports = function(e2) {
    if (!i(e2)) return false;
    var t2 = n(e2);
    return t2 == o || t2 == s || t2 == a || t2 == u;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return e2 === t2 || e2 != e2 && t2 != t2;
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    if (!(0, n.isMemberExpression)(e2)) return false;
    var i, a = Array.isArray(t2) ? t2 : t2.split("."), o = [];
    for (i = e2; (0, n.isMemberExpression)(i); i = i.object) o.push(i.property);
    if (o.push(i), o.length < a.length) return false;
    if (!r2 && o.length > a.length) return false;
    for (var s = 0, u = o.length - 1; s < a.length; s++, u--) {
      var l = o[u], c = void 0;
      if ((0, n.isIdentifier)(l)) c = l.name;
      else {
        if (!(0, n.isStringLiteral)(l)) return false;
        c = l.value;
      }
      if (a[s] !== c) return false;
    }
    return true;
  };
  var n = r(17);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    var r2 = e2.split(".");
    return function(e3) {
      return (0, n.default)(e3, r2, t2);
    };
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(230));
}, function(e) {
  e.exports = { name: "prepack", version: "0.2.54-alpha.0", description: "Execute a JS bundle, serialize global state and side effects to a snapshot that can be quickly restored.", homepage: "https://github.com/facebook/prepack", repository: { type: "git", url: "git://github.com/facebook/prepack.git" }, bugs: { url: "https://github.com/facebook/prepack/issues" }, files: ["LICENSE", "PATENTS", "/bin/", "/lib/"], bin: { prepack: "bin/prepack.js", "prepack-repl": "bin/prepack-repl.js" }, main: "lib/prepack-node.js", browser: "lib/prepack-standalone.js", scripts: { build: "yarn build-prepack && yarn build-bundle", "build-scripts": "babel scripts --out-dir lib --source-maps", "build-bundle": "webpack-cli --silent", "build-prepack": "babel src --out-dir lib --source-maps", watch: "babel src scripts --out-dir lib --watch --source-maps --verbose", lint: "eslint src scripts", flow: "flow", "flow-ci": "flow version; flow check", "test-serializer": "babel-node --stack_trace_limit=200 --stack_size=10000 scripts/test-runner.js", "test-serializer-single": "yarn test-serializer --debugNames --verbose --fast --filter", "test-serializer-with-coverage": "./node_modules/.bin/istanbul cover ./lib/test-error-handler.js --dir coverage.error && node --stack_trace_limit=200 --stack_size=10000 ./node_modules/istanbul/lib/cli.js cover ./lib/test-runner.js && ./node_modules/.bin/remap-istanbul -i coverage.error/coverage.json -i coverage/coverage.json -o coverage-sourcemapped -t html", "test-sourcemaps": "babel-node scripts/generate-sourcemaps-test.js && bash < scripts/test-sourcemaps.sh", "test-test262": "babel-node scripts/test262-runner.js", "test-test262-nightly": "NIGHTLY_BUILD=true babel-node scripts/test262-runner.js", "test-test262-new": "babel-node scripts/test262.js", "test-internal": "babel-node --stack_size=10000 --stack_trace_limit=200 --max_old_space_size=32768 scripts/test-internal.js", "test-internal-react": "babel-node --stack_size=10000 --stack_trace_limit=200 --max_old_space_size=32768 scripts/test-internal-react.js", "test-error-handler": "babel-node scripts/test-error-handler.js", "test-error-handler-with-coverage": "./node_modules/.bin/istanbul cover ./lib/test-error-handler.js --dir coverage.error && ./node_modules/.bin/remap-istanbul -i coverage.error/coverage.json -o coverage-sourcemapped.error -t html", "test-std-in": "bash < scripts/test-std-in.sh", "test-react": "jest", "test-react-fast": "SKIP_REACT_JSX_TESTS=true jest", test: "yarn test-serializer && yarn test-sourcemaps && yarn test-error-handler && yarn test-std-in && yarn test-test262 && yarn test-internal && yarn test-internal-react && yarn test-react", "test-coverage-most": "./node_modules/.bin/istanbul --stack_size=10000 --max_old_space_size=16384 cover ./lib/multi-runner.js --dir coverage.most && ./node_modules/.bin/remap-istanbul -i coverage.most/coverage.json -o coverage-sourcemapped -t html", "test-all-coverage": "./node_modules/.bin/istanbul --stack_size=10000 --max_old_space_size=16384 cover ./lib/multi-runner.js --dir coverage.most && ./node_modules/.bin/istanbul --stack_size=10000 --max_old_space_size=16384 cover ./lib/test262-runner.js --timeout 50 --singleThreaded && ./node_modules/.bin/remap-istanbul -i coverage/coverage.json -i coverage.most/coverage.json -o coverage-sourcemapped -t html", repl: "node lib/repl-cli.js", precheck: "yarn prepack-cli --check", "prepack-cli": "node --stack_size=10000 --stack_trace_limit=200 --max_old_space_size=16384 lib/prepack-cli.js --compatibility jsc-600-1-4-17 --mathRandomSeed 0", validate: "yarn install --frozen-lockfile && yarn build && yarn build-scripts && yarn lint && yarn depcheck && yarn flow && yarn test", prepublishOnly: "yarn build", depcheck: "babel-node scripts/detect_bad_deps.js", prettier: "node ./scripts/prettier.js write-changed", "prettier-all": "node ./scripts/prettier.js write", "prettier-ci": "node ./scripts/prettier.js", "debug-fb-www": "node --stack_trace_limit=200 --stack_size=10000 --max_old_space_size=16384 ./scripts/debug-fb-www.js", fuzz: "cd fuzzer && yarn && yarn test", "fuzz-sample": "cd fuzzer && yarn && yarn sample", "fuzz-overnight": "cd fuzzer && yarn && yarn overnight" }, dependencies: { "@babel/core": "^7.0.0", "@babel/generator": "^7.0.0", "@babel/node": "^7.0.0", "@babel/parser": "^7.0.0", "@babel/preset-flow": "^7.0.0", "@babel/template": "^7.0.0", "@babel/traverse": "^7.0.0", "@babel/types": "^7.0.0", fbjs: "^0.8.16", "node-zip": "^1.1.1", "queue-fifo": "^0.2.3", seedrandom: "^2.4.2", "source-map": "^0.5.6", "vscode-debugadapter": "^1.24.0", "vscode-debugprotocol": "^1.24.0", "zip-dir": "^1.0.2" }, devDependencies: { "@babel/cli": "^7.0.0", "@babel/plugin-proposal-class-properties": "^7.0.0", "@babel/plugin-proposal-export-default-from": "^7.0.0", "@babel/plugin-proposal-object-rest-spread": "^7.0.0", "@babel/plugin-syntax-flow": "^7.0.0", "@babel/plugin-transform-flow-strip-types": "^7.0.0", "@babel/plugin-transform-modules-commonjs": "^7.0.0", "@babel/plugin-transform-react-display-name": "^7.0.0", "@babel/plugin-transform-react-jsx": "^7.0.0", "@babel/preset-env": "^7.0.0", "@babel/preset-flow": "^7.0.0", "@babel/preset-react": "^7.0.0", "@babel/register": "^7.0.0", "babel-core": "7.0.0-bridge.0", "babel-eslint": "^8.2.6", "babel-jest": "^23.4.0", "babel-loader": "^8.0.0-beta", "babel-plugin-jest-hoist": "^23.2.0", chalk: "^1.1.3", eslint: "^4.18.2", "eslint-plugin-babel": "^3.3.0", "eslint-plugin-flow-header": "^0.1.1", "eslint-plugin-flowtype": "^2.40.0", "eslint-plugin-header": "^1.0.0", "eslint-plugin-prettier": "^2.1.2", "flow-bin": "^0.80.0", "flow-typed": "^2.3.0", "graceful-fs": "^4.1.11", invariant: "^2.2.0", istanbul: "^0.4.5", jest: "^23.4.1", "js-beautify": "^1.7.5", "js-yaml": "^3.6.1", jsdom: "^9.2.1", madge: "^1.6.0", minimist: "^1.2.0", prettier: "1.13.6", "prop-types": "^15.6.0", react: "16.3.1", "react-dom": "16.3.1", "react-native": "^0.55.4", "react-relay": "^1.4.1", "react-test-renderer": "16.3.1", "regenerator-runtime": "^0.12.0", "remap-istanbul": "^0.9.1", "source-map-support": "^0.4.6", "test262-integrator": "^1.2.0", webpack: "^4.16.0", "webpack-cli": "^3.0.8" }, optionalDependencies: { "v8-profiler-node8": "^6.0.1" }, engines: { node: ">=6.1.0" }, keywords: ["prepack"], license: "BSD-3-Clause", author: "Facebook", jest: { preset: "react-native", roots: ["<rootDir>/node_modules/react-native/", "<rootDir>/lib/", "<rootDir>/test/react/", "<rootDir>/fb-www/"], testEnvironment: "jsdom", testMatch: ["**/test/react/*-test.js", "**/fb-www/**/*-test.js"], transformIgnorePatterns: ["/node_modules/(?!react-native).+\\.js$"] } };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.defaultOptions = t.ReactOutputValues = t.DiagnosticSeverityValues = t.InvariantModeValues = t.CompatibilityValues = void 0;
  t.CompatibilityValues = ["browser", "jsc-600-1-4-17", "mobile", "node-source-maps", "fb-www", "node-react"];
  t.InvariantModeValues = ["throw", "console.info", "console.warn", "console.error", "nativeLoggingHook+0", "nativeLoggingHook+1", "nativeLoggingHook+2", "nativeLoggingHook+3"];
  t.DiagnosticSeverityValues = ["FatalError", "RecoverableError", "Warning", "Information"];
  t.ReactOutputValues = ["create-element", "jsx", "bytecode"];
  t.defaultOptions = {};
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.getRealmOptions = function(e2) {
    var t2 = e2.compatibility, r2 = void 0 === t2 ? "browser" : t2, n = e2.debugNames, i = void 0 !== n && n, a = e2.errorHandler, o = e2.mathRandomSeed, s = e2.invariantLevel, u = void 0 === s ? 0 : s, l = e2.invariantMode, c = void 0 === l ? "throw" : l, f = e2.emitConcreteModel, p = void 0 !== f && f, d = e2.uniqueSuffix, h = e2.instantRender, v = e2.reactEnabled, y = e2.reactOutput, m = e2.reactVerbose, b = e2.reactOptimizeNestedFunctions, g = e2.serialize, w = void 0 === g || g, E = e2.check, S = e2.strictlyMonotonicDateNow, T = e2.stripFlow, A = e2.timeout, C = e2.maxStackDepth, P = e2.abstractValueImpliesMax, O = e2.debuggerConfigArgs, x = e2.debugReproArgs, _ = e2.arrayNestedOptimizedFunctionsEnabled, V = e2.reactFailOnUnsupportedSideEffects;
    return { compatibility: r2, debugNames: i, errorHandler: a, mathRandomSeed: o, invariantLevel: u, invariantMode: c, emitConcreteModel: p, uniqueSuffix: d, instantRender: h, reactEnabled: v, reactOutput: y, reactVerbose: m, reactOptimizeNestedFunctions: b, serialize: w, check: E, strictlyMonotonicDateNow: S, stripFlow: T, timeout: A, maxStackDepth: C, abstractValueImpliesMax: P, debuggerConfigArgs: O, debugReproArgs: x, arrayNestedOptimizedFunctionsEnabled: _, reactFailOnUnsupportedSideEffects: V };
  }, t.getSerializerOptions = function(e2) {
    var t2 = e2.lazyObjectsRuntime, r2 = e2.heapGraphFormat, n = e2.delayInitializations, i = void 0 !== n && n, a = e2.internalDebug, o = void 0 !== a && a, s = e2.debugScopes, u = void 0 !== s && s, l = e2.debugIdentifiers, c = e2.logStatistics, f = void 0 !== c && c, p = e2.logModules, d = void 0 !== p && p, h = e2.profile, v = void 0 !== h && h, y = e2.inlineExpressions, m = void 0 !== y && y, b = e2.initializeMoreModules, g = void 0 !== b && b, w = e2.trace, E = { delayInitializations: i, initializeMoreModules: g, internalDebug: o, debugScopes: u, debugIdentifiers: l, logStatistics: f, logModules: d, profile: v, inlineExpressions: m, trace: void 0 !== w && w };
    void 0 !== t2 && (E.lazyObjectsRuntime = t2);
    void 0 !== r2 && (E.heapGraphFormat = r2);
    return E;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createFbMocks = function(e2, t2) {
    t2.$DefineOwnProperty("__DEV__", new p.PropertyDescriptor({ value: e2.intrinsics.false, writable: true, enumerable: false, configurable: true })), (function(e3, t3) {
      var r3 = new o.ObjectValue(e3, e3.intrinsics.ObjectPrototype, "babelHelpers", true), n3 = (0, u.Get)(e3, e3.intrinsics.Object, "assign"), d2 = (0, u.Get)(e3, e3.intrinsics.Object, "create"), h2 = new o.NativeFunctionValue(e3, void 0, "inherits", 2, function(t4, r4) {
        var a2 = i(r4, 2), c2 = a2[0], f2 = a2[1];
        (0, l.default)(n3 instanceof o.NativeFunctionValue);
        var p2 = n3.$Call;
        (0, l.default)(void 0 !== p2), p2(e3.intrinsics.undefined, [c2, f2]), (0, l.default)(f2 instanceof o.ObjectValue);
        var h3 = (0, u.Get)(e3, f2, "prototype");
        (0, l.default)(d2 instanceof o.NativeFunctionValue);
        var v3 = d2.$Call;
        (0, l.default)("function" == typeof v3);
        var y3 = v3(e3.intrinsics.undefined, [h3]);
        return (0, l.default)(c2 instanceof o.ObjectValue), (0, l.default)(y3 instanceof o.ObjectValue), s.Properties.Set(e3, c2, "prototype", y3, true), s.Properties.Set(e3, y3, "constructor", c2, true), s.Properties.Set(e3, c2, "__superConstructor__", f2, true), f2;
      });
      r3.defineNativeProperty("inherits", h2, { writable: false, enumerable: false, configurable: true }), h2.intrinsicName = "babelHelpers.inherits";
      var v2 = function(t4, r4) {
        var n4 = /* @__PURE__ */ new Set();
        (0, c.forEachArrayValue)(e3, r4, function(e4) {
          (e4 instanceof o.StringValue || e4 instanceof o.NumberValue) && n4.add(e4.value);
        });
        var a2 = s.Create.ObjectCreate(e3, e3.intrinsics.ObjectPrototype), l2 = true, f2 = false, p2 = void 0;
        try {
          for (var d3, h3 = t4.properties[Symbol.iterator](); !(l2 = (d3 = h3.next()).done); l2 = true) {
            var v3 = i(d3.value, 2), y3 = v3[0], m3 = v3[1];
            if (!n4.has(y3) && m3 && m3.descriptor && m3.descriptor.throwIfNotConcrete(e3).enumerable) {
              var b3 = (0, u.Get)(e3, t4, y3);
              s.Properties.Set(e3, a2, y3, b3, true);
            }
          }
        } catch (e4) {
          f2 = true, p2 = e4;
        } finally {
          try {
            l2 || null == h3.return || h3.return();
          } finally {
            if (f2) throw p2;
          }
        }
        return a2;
      }, y2 = new o.NativeFunctionValue(e3, void 0, "objectWithoutProperties", 2, function(t4, r4) {
        var n4 = i(r4, 2), s2 = n4[0], u2 = n4[1];
        if ((0, l.default)(s2 instanceof o.ObjectValue || s2 instanceof o.AbstractObjectValue || s2 instanceof o.AbstractValue), (0, l.default)(u2 instanceof o.ArrayValue), s2.mightBeObject() && (s2 instanceof o.AbstractValue && s2.values.isTop() || s2.isPartialObject())) {
          var c2 = [y2, s2, u2], p2 = o.AbstractValue.createTemporalFromBuildFunction(e3, o.ObjectValue, c2, (0, f.createOperationDescriptor)("BABEL_HELPERS_OBJECT_WITHOUT_PROPERTIES"), { skipInvariant: true, isPure: true });
          if ((0, l.default)(p2 instanceof o.AbstractObjectValue), s2 instanceof o.ObjectValue) {
            var d3 = v2(s2, u2);
            p2.values = new a.ValuesDomain(d3);
          }
          return p2.makeSimple(), p2;
        }
        return (0, l.default)(s2 instanceof o.ObjectValue), v2(s2, u2);
      });
      r3.defineNativeProperty("objectWithoutProperties", y2, { writable: false, enumerable: false, configurable: true }), y2.intrinsicName = "babelHelpers.objectWithoutProperties";
      var m2 = new o.NativeFunctionValue(e3, void 0, "taggedTemplateLiteralLoose", 2, function(t4, r4) {
        var n4 = i(r4, 2), a2 = n4[0], u2 = n4[1];
        return (0, l.default)(a2 instanceof o.ObjectValue), s.Properties.Set(e3, a2, "raw", u2, true), a2;
      });
      r3.defineNativeProperty("taggedTemplateLiteralLoose", m2, { writable: false, enumerable: false, configurable: true }), m2.intrinsicName = "babelHelpers.taggedTemplateLiteralLoose", r3.defineNativeProperty("extends", n3, { writable: true, enumerable: true, configurable: true }), r3.defineNativeProperty("_extends", n3, { writable: true, enumerable: true, configurable: true });
      var b2 = (0, u.Get)(e3, e3.intrinsics.FunctionPrototype, "bind");
      r3.defineNativeProperty("bind", b2, { writable: true, enumerable: true, configurable: true }), t3.$DefineOwnProperty("babelHelpers", new p.PropertyDescriptor({ value: r3, writable: true, enumerable: true, configurable: true })), r3.refuseSerialization = false;
    })(e2, t2);
    for (var r2 = 0; r2 < d.length; r2++) {
      var n2 = d[r2];
      v(e2, t2, n2);
    }
    for (var m = 0; m < h.length; m++) {
      var b = h[m];
      y(e2, t2, b);
    }
    !(function(e3, t3) {
      var r3 = new o.ObjectValue(e3, e3.intrinsics.ObjectPrototype), n3 = new o.NativeFunctionValue(e3, "loadModules", "loadModules", 1, function(t4, r4) {
        (0, l.default)(t4.$Realm.generator);
        var n4 = o.AbstractValue.createTemporalFromBuildFunction(e3, o.FunctionValue, r4, (0, f.createOperationDescriptor)("FB_MOCKS_BOOTLOADER_LOAD_MODULES"), { skipInvariant: true });
        return (0, l.default)(n4 instanceof o.AbstractValue), n4;
      });
      s.Properties.Set(e3, r3, "loadModules", n3, false), t3.$DefineOwnProperty("Bootloader", new p.PropertyDescriptor({ value: r3, writable: true, enumerable: false, configurable: true })), o.AbstractValue.createAbstractObject(e3, "Bootloader", r3);
    })(e2, t2);
  };
  var a = r(12), o = r(0), s = r(2), u = r(3), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(14), f = r(9), p = r(6);
  var d = ["asset", "cx", "cssVar", "csx", "errorDesc", "errorHelpCenterID", "errorSummary", "gkx", "glyph", "ifRequired", "ix", "fbglyph", "requireWeak", "xuiglyph"], h = ["JSResource", "fbt"];
  function v(e2, t2, r2) {
    t2.$DefineOwnProperty(r2, new p.PropertyDescriptor({ value: new o.NativeFunctionValue(e2, r2, r2, 0, function(t3, i2) {
      var a2 = o.AbstractValue.createTemporalFromBuildFunction(e2, o.FunctionValue, [new o.StringValue(e2, r2)].concat(n(i2)), (0, f.createOperationDescriptor)("FB_MOCKS_MAGIC_GLOBAL_FUNCTION"), { skipInvariant: true, isPure: true });
      return (0, l.default)(a2 instanceof o.AbstractValue), a2;
    }), writable: true, enumerable: false, configurable: true }));
  }
  function y(e2, t2, r2) {
    var n2 = o.AbstractValue.createAbstractObject(e2, r2);
    n2.kind = "resolved", t2.$DefineOwnProperty(r2, new p.PropertyDescriptor({ value: n2, writable: true, enumerable: false, configurable: true }));
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createMockReactRelay = function(e2, t2) {
    var r2 = a.Environment.GetValue(e2, e2.$GlobalEnv.evaluate(d, false));
    (0, u.default)(r2 instanceof i.ECMAScriptSourceFunctionValue);
    var n2 = r2.$Call;
    (0, u.default)(void 0 !== n2), (0, u.default)(e2.fbLibraries.react instanceof i.ObjectValue, "mock ReactRelay cannot be required before mock React");
    var s2 = n2(e2.intrinsics.undefined, [e2.fbLibraries.react]);
    (0, u.default)(s2 instanceof i.ObjectValue);
    var l2 = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype, 'require("'.concat(t2, '")'), true), c2 = (0, o.createAbstract)(e2, "function", 'require("'.concat(t2, '").QueryRenderer'));
    a.Create.CreateDataPropertyOrThrow(e2, l2, "QueryRenderer", c2);
    var f2 = (0, o.createAbstract)(e2, "function", 'require("'.concat(t2, '").graphql'));
    a.Create.CreateDataPropertyOrThrow(e2, l2, "graphql", f2);
    for (var p2 = ["createFragmentContainer", "createPaginationContainer", "createRefetchContainer"], v = 0; v < p2.length; v++) {
      var y = p2[v];
      h(e2, l2, y, s2, t2);
    }
    var m = (0, o.createAbstract)(e2, "function", 'require("'.concat(t2, '").commitLocalUpdate'));
    a.Create.CreateDataPropertyOrThrow(e2, l2, "commitLocalUpdate", m);
    var b = (0, o.createAbstract)(e2, "function", 'require("'.concat(t2, '").commitMutation'));
    a.Create.CreateDataPropertyOrThrow(e2, l2, "commitMutation", b);
    var g = (0, o.createAbstract)(e2, "function", 'require("'.concat(t2, '").fetchQuery'));
    a.Create.CreateDataPropertyOrThrow(e2, l2, "fetchQuery", g);
    var w = (0, o.createAbstract)(e2, "function", 'require("'.concat(t2, '").requestSubscription'));
    return a.Create.CreateDataPropertyOrThrow(e2, l2, "requestSubscription", w), l2.refuseSerialization = false, l2.makeFinal(), l2;
  };
  var i = r(0), a = r(2), o = r(68), s = r(3), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(14), c = r(34), f = r(92), p = r(9);
  var d = (0, c.parseExpression)("\n  function createReactRelay(React) {\n\n   function mapObject(obj, func) {\n     var newObj = {};\n\n      Object.keys(obj).forEach(function(key) {\n        newObj[key] = func(obj[key]);\n      });\n\n      return newObj;\n   }\n\n    function isReactComponent(component) {\n      return !!(\n        component &&\n        typeof component.prototype === 'object' &&\n        component.prototype &&\n        component.prototype.isReactComponent\n      );\n    }\n\n    function getReactComponent(Component) {\n      if (isReactComponent(Component)) {\n        return Component;\n      } else {\n        return null;\n      }\n    }\n\n    function getComponentName(Component) {\n      let name;\n      const ComponentClass = getReactComponent(Component);\n      if (ComponentClass) {\n        name = ComponentClass.displayName || ComponentClass.name;\n      } else if (typeof Component === 'function') {\n        name = Component.displayName || Component.name || 'StatelessComponent';\n      } else {\n        name = 'ReactElement';\n      }\n      return String(name);\n    }\n\n    function createFragmentContainer(Component, fragmentSpec) {\n      var componentName = getComponentName(Component);\n      var containerName = `Relay(${componentName})`;\n\n      return function(props, context) {\n        var relay = context.relay;\n        var {\n          createFragmentSpecResolver,\n          getFragment: getFragmentFromTag,\n        } = relay.environment.unstable_internal;\n        var fragments = mapObject(fragmentSpec, getFragmentFromTag);\n        var resolver = createFragmentSpecResolver(\n          relay,\n          containerName,\n          fragments,\n          props,\n        );\n        var relayProp = {\n          isLoading: resolver.isLoading(),\n          environment: relay.environment,\n        };\n        var newProps = Object.assign({}, props, resolver.resolve(), {\n          relay: relayProp,\n        });\n        return React.createElement(Component, newProps);\n      };\n    }\n\n    return {\n      createFragmentContainer,\n    };\n  }\n", { plugins: ["flow"] });
  function h(e2, t2, r2, a2, o2) {
    (0, f.addMockFunctionToObject)(e2, t2, o2, r2, function(o3, c2) {
      var f2 = i.AbstractValue.createTemporalFromBuildFunction(e2, i.FunctionValue, [t2, new i.StringValue(e2, r2)].concat(n(c2)), (0, p.createOperationDescriptor)("REACT_RELAY_MOCK_CONTAINER"), { skipInvariant: true, isPure: true });
      (0, u.default)(f2 instanceof i.AbstractValue);
      var d2 = (0, s.Get)(e2, a2, r2), h2 = e2.intrinsics.undefined;
      if (d2 instanceof i.ECMAScriptSourceFunctionValue) {
        var v = d2.$Call;
        (0, u.default)(void 0 !== v), h2 = v(e2.intrinsics.undefined, c2), (0, u.default)(h2 instanceof i.ECMAScriptSourceFunctionValue);
      }
      return e2.react.abstractHints.set(f2, (0, l.createReactHintObject)(t2, r2, c2, h2)), f2;
    });
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.createMockReactNative = function(e2, t2) {
    var r2 = i.Environment.GetValue(e2, e2.$GlobalEnv.evaluate(u, false));
    (0, a.default)(r2 instanceof n.ECMAScriptSourceFunctionValue);
    var o2 = r2.$Call;
    (0, a.default)(void 0 !== o2);
    var l = n.AbstractValue.createTemporalFromBuildFunction(e2, n.StringValue, [new n.StringValue(e2, "RCTView")], (0, s.createOperationDescriptor)("REACT_NATIVE_STRING_LITERAL"), { skipInvariant: true, isPure: true });
    (0, a.default)(l instanceof n.AbstractValue), e2.react.reactElementStringTypeReferences.set("RCTView", l);
    var c = n.AbstractValue.createTemporalFromBuildFunction(e2, n.StringValue, [new n.StringValue(e2, "RCTText")], (0, s.createOperationDescriptor)("REACT_NATIVE_STRING_LITERAL"), { skipInvariant: true, isPure: true });
    (0, a.default)(c instanceof n.AbstractValue), e2.react.reactElementStringTypeReferences.set("RCTText", c);
    var f = e2.fbLibraries.react;
    (0, a.default)(void 0 !== f, "Could not find React library in sourcecode. Ensure React is bundled or required.");
    var p = o2(e2.intrinsics.undefined, [f, new n.StringValue(e2, t2)]);
    return (0, a.default)(p instanceof n.ObjectValue), p.refuseSerialization = true, p.intrinsicName = 'require("'.concat(t2, '")'), p.refuseSerialization = false, p;
  };
  var n = r(0), i = r(2), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), o = r(34), s = r(9);
  var u = (0, o.parseExpression)(`
  function createReactNative(React, reactNameRequireName) {
    var Platform = __abstract("object", 'require("' + reactNameRequireName + '").Platform');

    var NativeModules = __abstract({
      nativePerformanceNow: __abstract("function"),
      nativeTraceBeginAsyncSection: __abstract("function"),
      nativeTraceEndAsyncSection: __abstract("function"),
      UIManager: __abstract({
        customBubblingEventTypes: __abstract(),
        customDirectEventTypes: __abstract(),
        ViewManagerNames: __abstract(),
        __takeSnapshot: undefined,
        takeSnapshot: undefined,
        RCTVirtualText: null,
      }),
      DeviceInfo: __abstract({
        Dimensions: __abstract({
          window: undefined,
          screen: undefined,
          windowPhysicalPixels: __abstract({
            width: __abstract("number"),
            height: __abstract("number"),
            scale: __abstract("number"),
            fontScale: __abstract("number"),
          }),
          screenPhysicalPixels: __abstract({
            width: __abstract("number"),
            height: __abstract("number"),
            scale: __abstract("number"),
            fontScale: __abstract("number"),
          }),
        }),
      }),
      I18n: __abstract({
        localeCountryCode: __abstract(),
        localeIdentifier: __abstract(),
        fbLocaleIdentifier: __abstract(),
        AdsCountriesConfig: __abstract({}),
        exports: __abstract({}),
      }),
      I18nManager: __abstract({
        isRTL: __abstract("boolean"),
        isRTLForced: __abstract("boolean"),
        doLeftAndRightSwapInRTL: __abstract("boolean"),
        allowRTL: function(allowRTL) {
          return __residual("void", function(allowRTL, global) {
            global.nativeModuleProxy.I18nManager.allowRTL(allowRTL);
          }, allowRTL, global);
        },
        forceRTL: function(forceRTL) {
          return __residual("void", function(forceRTL, global) {
            global.nativeModuleProxy.I18nManager.forceRTL(forceRTL);
          }, forceRTL, global);
        },
        swapLeftAndRightInRTL: function(flipStyles) {
          return __residual("void", function(flipStyles, global) {
            global.nativeModuleProxy.I18nManager.swapLeftAndRightInRTL(flipStyles);
          }, flipStyles, global);
        },
        exports: __abstract({}),
      }),
      DeviceEventManager: __abstract({}),
      Timing: __abstract({
        createTimer: function(id, duration, time, recurring) {
          return __residual("object", function(id, duration, time, recurring, global, Object) {
            global.nativeModuleProxy.Timing.createTimer(id, duration, time, recurring);
            return Object.create(null);
          }, id, duration, time, recurring, global, Object);
        }
      }),
      ExceptionsManager: __abstract({
        reportFatalException: function(message, stack, id) {
          console.log("nativeModuleProxy.ExceptionsManager.reportFatalException");
          console.log(message);
          for (var i = 0; i < stack.length; i++) {
            var s = stack[i];
            console.log("  at " + s.methodName + " (" + s.file + ":" + s.lineNumber + ":" + s.column + ")");
          }
        }
      }),
      PlatformConstants: __abstract({
        isTesting: false,
        reactNativeVersion: __abstract({
          major: 0,
          minor: 0,
          patch: 0,
          prerelease: null,
        }),
        Version: __abstract("number"),
        forceTouchAvailable: undefined,
        uiMode: __abstract(),
      }),
      RelayAPIConfig: __abstract({
        graphBatchURI: __abstract(),
      }),
      SourceCode: __abstract({
        scriptURL: __abstract("string"),
      }),
    }, 'require("' + reactNameRequireName + '").NativeModules');

    const {UIManager} = NativeModules;

    const ReactNativeViewAttributes = {};
    const viewConfigCallbacks = new Map();

    const TextAncestor = React.createContext(false);

    const ReactNativeStyleAttributes = {};

    const dummySize = {width: undefined, height: undefined};

    const sizesDiffer = function(one, two) {
      one = one || dummySize;
      two = two || dummySize;
      return one !== two && (one.width !== two.width || one.height !== two.height);
    };

    ReactNativeStyleAttributes.transform = {process: processTransform};
    ReactNativeStyleAttributes.shadowOffset = {diff: sizesDiffer};

    const colorAttributes = {process: processColor};
    ReactNativeStyleAttributes.backgroundColor = colorAttributes;
    ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
    ReactNativeStyleAttributes.borderColor = colorAttributes;
    ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
    ReactNativeStyleAttributes.borderRightColor = colorAttributes;
    ReactNativeStyleAttributes.borderTopColor = colorAttributes;
    ReactNativeStyleAttributes.borderStartColor = colorAttributes;
    ReactNativeStyleAttributes.borderEndColor = colorAttributes;
    ReactNativeStyleAttributes.color = colorAttributes;
    ReactNativeStyleAttributes.shadowColor = colorAttributes;
    ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
    ReactNativeStyleAttributes.tintColor = colorAttributes;
    ReactNativeStyleAttributes.textShadowColor = colorAttributes;
    ReactNativeStyleAttributes.overlayColor = colorAttributes;

    ReactNativeViewAttributes.UIView = {
      pointerEvents: true,
      accessible: true,
      accessibilityActions: true,
      accessibilityLabel: true,
      accessibilityComponentType: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityTraits: true,
      importantForAccessibility: true,
      nativeID: true,
      testID: true,
      renderToHardwareTextureAndroid: true,
      shouldRasterizeIOS: true,
      onLayout: true,
      onAccessibilityAction: true,
      onAccessibilityTap: true,
      onMagicTap: true,
      collapsable: true,
      needsOffscreenAlphaCompositing: true,
      style: ReactNativeStyleAttributes,
    };

    ReactNativeViewAttributes.RCTView = Object.assign({},
      ReactNativeViewAttributes.UIView,
      { removeClippedSubviews: true }
    );

    var viewConfig = {
      validAttributes: Object.assign({}, ReactNativeViewAttributes.UIView, {
        isHighlighted: true,
        numberOfLines: true,
        ellipsizeMode: true,
        allowFontScaling: true,
        disabled: true,
        selectable: true,
        selectionColor: true,
        adjustsFontSizeToFit: true,
        minimumFontScale: true,
        textBreakStrategy: true
      }),
      uiViewClassName: 'RCTText'
    };

    var MatrixMath = {
      createIdentityMatrix: function() {
        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      },

      createCopy: function(m) {
        return [
          m[0],
          m[1],
          m[2],
          m[3],
          m[4],
          m[5],
          m[6],
          m[7],
          m[8],
          m[9],
          m[10],
          m[11],
          m[12],
          m[13],
          m[14],
          m[15],
        ];
      },

      createOrthographic: function(left, right, bottom, top, near, far) {
        const a = 2 / (right - left);
        const b = 2 / (top - bottom);
        const c = -2 / (far - near);

        const tx = -(right + left) / (right - left);
        const ty = -(top + bottom) / (top - bottom);
        const tz = -(far + near) / (far - near);

        return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
      },

      createFrustum: function(left, right, bottom, top, near, far) {
        const r_width = 1 / (right - left);
        const r_height = 1 / (top - bottom);
        const r_depth = 1 / (near - far);
        const x = 2 * (near * r_width);
        const y = 2 * (near * r_height);
        const A = (right + left) * r_width;
        const B = (top + bottom) * r_height;
        const C = (far + near) * r_depth;
        const D = 2 * (far * near * r_depth);
        return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
      },

      /**
       * This create a perspective projection towards negative z
       * Clipping the z range of [-near, -far]
       *
       * @param fovInRadians - field of view in randians
       */
      createPerspective: function(fovInRadians, aspect, near, far) {
        const h = 1 / Math.tan(fovInRadians / 2);
        const r_depth = 1 / (near - far);
        const C = (far + near) * r_depth;
        const D = 2 * (far * near * r_depth);
        return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
      },

      createTranslate2d: function(x, y) {
        const mat = MatrixMath.createIdentityMatrix();
        MatrixMath.reuseTranslate2dCommand(mat, x, y);
        return mat;
      },

      reuseTranslate2dCommand: function(matrixCommand, x, y) {
        matrixCommand[12] = x;
        matrixCommand[13] = y;
      },

      reuseTranslate3dCommand: function(matrixCommand, x, y, z) {
        matrixCommand[12] = x;
        matrixCommand[13] = y;
        matrixCommand[14] = z;
      },

      createScale: function(factor) {
        const mat = MatrixMath.createIdentityMatrix();
        MatrixMath.reuseScaleCommand(mat, factor);
        return mat;
      },

      reuseScaleCommand: function(matrixCommand, factor) {
        matrixCommand[0] = factor;
        matrixCommand[5] = factor;
      },

      reuseScale3dCommand: function(matrixCommand, x, y, z) {
        matrixCommand[0] = x;
        matrixCommand[5] = y;
        matrixCommand[10] = z;
      },

      reusePerspectiveCommand: function(matrixCommand, p) {
        matrixCommand[11] = -1 / p;
      },

      reuseScaleXCommand(matrixCommand, factor) {
        matrixCommand[0] = factor;
      },

      reuseScaleYCommand(matrixCommand, factor) {
        matrixCommand[5] = factor;
      },

      reuseScaleZCommand(matrixCommand, factor) {
        matrixCommand[10] = factor;
      },

      reuseRotateXCommand: function(matrixCommand, radians) {
        matrixCommand[5] = Math.cos(radians);
        matrixCommand[6] = Math.sin(radians);
        matrixCommand[9] = -Math.sin(radians);
        matrixCommand[10] = Math.cos(radians);
      },

      reuseRotateYCommand: function(matrixCommand, amount) {
        matrixCommand[0] = Math.cos(amount);
        matrixCommand[2] = -Math.sin(amount);
        matrixCommand[8] = Math.sin(amount);
        matrixCommand[10] = Math.cos(amount);
      },

      // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix
      reuseRotateZCommand: function(matrixCommand, radians) {
        matrixCommand[0] = Math.cos(radians);
        matrixCommand[1] = Math.sin(radians);
        matrixCommand[4] = -Math.sin(radians);
        matrixCommand[5] = Math.cos(radians);
      },

      createRotateZ: function(radians) {
        const mat = MatrixMath.createIdentityMatrix();
        MatrixMath.reuseRotateZCommand(mat, radians);
        return mat;
      },

      reuseSkewXCommand: function(matrixCommand, radians) {
        matrixCommand[4] = Math.tan(radians);
      },

      reuseSkewYCommand: function(matrixCommand, radians) {
        matrixCommand[1] = Math.tan(radians);
      },

      multiplyInto: function(out, a, b) {
        const a00 = a[0],
          a01 = a[1],
          a02 = a[2],
          a03 = a[3],
          a10 = a[4],
          a11 = a[5],
          a12 = a[6],
          a13 = a[7],
          a20 = a[8],
          a21 = a[9],
          a22 = a[10],
          a23 = a[11],
          a30 = a[12],
          a31 = a[13],
          a32 = a[14],
          a33 = a[15];

        let b0 = b[0],
          b1 = b[1],
          b2 = b[2],
          b3 = b[3];
        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

        b0 = b[4];
        b1 = b[5];
        b2 = b[6];
        b3 = b[7];
        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

        b0 = b[8];
        b1 = b[9];
        b2 = b[10];
        b3 = b[11];
        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

        b0 = b[12];
        b1 = b[13];
        b2 = b[14];
        b3 = b[15];
        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
      },

      determinant(matrix) {
        const [
          m00,
          m01,
          m02,
          m03,
          m10,
          m11,
          m12,
          m13,
          m20,
          m21,
          m22,
          m23,
          m30,
          m31,
          m32,
          m33,
        ] = matrix;
        return (
          m03 * m12 * m21 * m30 -
          m02 * m13 * m21 * m30 -
          m03 * m11 * m22 * m30 +
          m01 * m13 * m22 * m30 +
          m02 * m11 * m23 * m30 -
          m01 * m12 * m23 * m30 -
          m03 * m12 * m20 * m31 +
          m02 * m13 * m20 * m31 +
          m03 * m10 * m22 * m31 -
          m00 * m13 * m22 * m31 -
          m02 * m10 * m23 * m31 +
          m00 * m12 * m23 * m31 +
          m03 * m11 * m20 * m32 -
          m01 * m13 * m20 * m32 -
          m03 * m10 * m21 * m32 +
          m00 * m13 * m21 * m32 +
          m01 * m10 * m23 * m32 -
          m00 * m11 * m23 * m32 -
          m02 * m11 * m20 * m33 +
          m01 * m12 * m20 * m33 +
          m02 * m10 * m21 * m33 -
          m00 * m12 * m21 * m33 -
          m01 * m10 * m22 * m33 +
          m00 * m11 * m22 * m33
        );
      },

      /**
       * Inverse of a matrix. Multiplying by the inverse is used in matrix math
       * instead of division.
       *
       * Formula from:
       * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
       */
      inverse(matrix: Array<number>): Array<number> {
        const det = MatrixMath.determinant(matrix);
        if (!det) {
          return matrix;
        }
        const [
          m00,
          m01,
          m02,
          m03,
          m10,
          m11,
          m12,
          m13,
          m20,
          m21,
          m22,
          m23,
          m30,
          m31,
          m32,
          m33,
        ] = matrix;
        return [
          (m12 * m23 * m31 -
            m13 * m22 * m31 +
            m13 * m21 * m32 -
            m11 * m23 * m32 -
            m12 * m21 * m33 +
            m11 * m22 * m33) /
            det,
          (m03 * m22 * m31 -
            m02 * m23 * m31 -
            m03 * m21 * m32 +
            m01 * m23 * m32 +
            m02 * m21 * m33 -
            m01 * m22 * m33) /
            det,
          (m02 * m13 * m31 -
            m03 * m12 * m31 +
            m03 * m11 * m32 -
            m01 * m13 * m32 -
            m02 * m11 * m33 +
            m01 * m12 * m33) /
            det,
          (m03 * m12 * m21 -
            m02 * m13 * m21 -
            m03 * m11 * m22 +
            m01 * m13 * m22 +
            m02 * m11 * m23 -
            m01 * m12 * m23) /
            det,
          (m13 * m22 * m30 -
            m12 * m23 * m30 -
            m13 * m20 * m32 +
            m10 * m23 * m32 +
            m12 * m20 * m33 -
            m10 * m22 * m33) /
            det,
          (m02 * m23 * m30 -
            m03 * m22 * m30 +
            m03 * m20 * m32 -
            m00 * m23 * m32 -
            m02 * m20 * m33 +
            m00 * m22 * m33) /
            det,
          (m03 * m12 * m30 -
            m02 * m13 * m30 -
            m03 * m10 * m32 +
            m00 * m13 * m32 +
            m02 * m10 * m33 -
            m00 * m12 * m33) /
            det,
          (m02 * m13 * m20 -
            m03 * m12 * m20 +
            m03 * m10 * m22 -
            m00 * m13 * m22 -
            m02 * m10 * m23 +
            m00 * m12 * m23) /
            det,
          (m11 * m23 * m30 -
            m13 * m21 * m30 +
            m13 * m20 * m31 -
            m10 * m23 * m31 -
            m11 * m20 * m33 +
            m10 * m21 * m33) /
            det,
          (m03 * m21 * m30 -
            m01 * m23 * m30 -
            m03 * m20 * m31 +
            m00 * m23 * m31 +
            m01 * m20 * m33 -
            m00 * m21 * m33) /
            det,
          (m01 * m13 * m30 -
            m03 * m11 * m30 +
            m03 * m10 * m31 -
            m00 * m13 * m31 -
            m01 * m10 * m33 +
            m00 * m11 * m33) /
            det,
          (m03 * m11 * m20 -
            m01 * m13 * m20 -
            m03 * m10 * m21 +
            m00 * m13 * m21 +
            m01 * m10 * m23 -
            m00 * m11 * m23) /
            det,
          (m12 * m21 * m30 -
            m11 * m22 * m30 -
            m12 * m20 * m31 +
            m10 * m22 * m31 +
            m11 * m20 * m32 -
            m10 * m21 * m32) /
            det,
          (m01 * m22 * m30 -
            m02 * m21 * m30 +
            m02 * m20 * m31 -
            m00 * m22 * m31 -
            m01 * m20 * m32 +
            m00 * m21 * m32) /
            det,
          (m02 * m11 * m30 -
            m01 * m12 * m30 -
            m02 * m10 * m31 +
            m00 * m12 * m31 +
            m01 * m10 * m32 -
            m00 * m11 * m32) /
            det,
          (m01 * m12 * m20 -
            m02 * m11 * m20 +
            m02 * m10 * m21 -
            m00 * m12 * m21 -
            m01 * m10 * m22 +
            m00 * m11 * m22) /
            det,
        ];
      },

      /**
       * Turns columns into rows and rows into columns.
       */
      transpose(m: Array<number>): Array<number> {
        return [
          m[0],
          m[4],
          m[8],
          m[12],
          m[1],
          m[5],
          m[9],
          m[13],
          m[2],
          m[6],
          m[10],
          m[14],
          m[3],
          m[7],
          m[11],
          m[15],
        ];
      },

      /**
       * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
       */
      multiplyVectorByMatrix(v: Array<number>, m: Array<number>): Array<number> {
        const [vx, vy, vz, vw] = v;
        return [
          vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
          vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
          vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
          vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15],
        ];
      },

      /**
       * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
       */
      v3Length(a: Array<number>): number {
        return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
      },

      /**
       * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
       */
      v3Normalize(vector: Array<number>, v3Length: number): Array<number> {
        const im = 1 / (v3Length || MatrixMath.v3Length(vector));
        return [vector[0] * im, vector[1] * im, vector[2] * im];
      },

      /**
       * The dot product of a and b, two 3-element vectors.
       * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js
       */
      v3Dot(a, b) {
        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
      },

      /**
       * From:
       * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
       */
      v3Combine(
        a: Array<number>,
        b: Array<number>,
        aScale: number,
        bScale: number,
      ): Array<number> {
        return [
          aScale * a[0] + bScale * b[0],
          aScale * a[1] + bScale * b[1],
          aScale * a[2] + bScale * b[2],
        ];
      },

      /**
       * From:
       * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp
       */
      v3Cross(a: Array<number>, b: Array<number>): Array<number> {
        return [
          a[1] * b[2] - a[2] * b[1],
          a[2] * b[0] - a[0] * b[2],
          a[0] * b[1] - a[1] * b[0],
        ];
      },

      /**
       * Based on:
       * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/
       * and:
       * http://quat.zachbennett.com/
       *
       * Note that this rounds degrees to the thousandth of a degree, due to
       * floating point errors in the creation of the quaternion.
       *
       * Also note that this expects the qw value to be last, not first.
       *
       * Also, when researching this, remember that:
       * yaw   === heading            === z-axis
       * pitch === elevation/attitude === y-axis
       * roll  === bank               === x-axis
       */
      quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {
        const [qx, qy, qz, qw] = q;
        const qw2 = qw * qw;
        const qx2 = qx * qx;
        const qy2 = qy * qy;
        const qz2 = qz * qz;
        const test = qx * qy + qz * qw;
        const unit = qw2 + qx2 + qy2 + qz2;
        const conv = 180 / Math.PI;

        if (test > 0.49999 * unit) {
          return [0, 2 * Math.atan2(qx, qw) * conv, 90];
        }
        if (test < -0.49999 * unit) {
          return [0, -2 * Math.atan2(qx, qw) * conv, -90];
        }

        return [
          MatrixMath.roundTo3Places(
            Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv,
          ),
          MatrixMath.roundTo3Places(
            Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv,
          ),
          MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv),
        ];
      },

      /**
       * Based on:
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
       */
      roundTo3Places(n: number): number {
        const arr = n.toString().split('e');
        return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
      },

      /**
       * Decompose a matrix into separate transform values, for use on platforms
       * where applying a precomposed matrix is not possible, and transforms are
       * applied in an inflexible ordering (e.g. Android).
       *
       * Implementation based on
       * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix
       * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix
       * which was based on
       * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c
       */
      decomposeMatrix(transformMatrix: Array<number>): ?Object {

        // output values
        var perspective = [];
        const quaternion = [];
        const scale = [];
        const skew = [];
        const translation = [];

        // create normalized, 2d array matrix
        // and normalized 1d array perspectiveMatrix with redefined 4th column
        if (!transformMatrix[15]) {
          return;
        }
        const matrix = [];
        const perspectiveMatrix = [];
        for (var i = 0; i < 4; i++) {
          matrix.push([]);
          for (let j = 0; j < 4; j++) {
            const value = transformMatrix[i * 4 + j] / transformMatrix[15];
            matrix[i].push(value);
            perspectiveMatrix.push(j === 3 ? 0 : value);
          }
        }
        perspectiveMatrix[15] = 1;

        // test for singularity of upper 3x3 part of the perspective matrix
        if (!MatrixMath.determinant(perspectiveMatrix)) {
          return;
        }

        // isolate perspective
        if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
          // rightHandSide is the right hand side of the equation.
          // rightHandSide is a vector, or point in 3d space relative to the origin.
          const rightHandSide = [
            matrix[0][3],
            matrix[1][3],
            matrix[2][3],
            matrix[3][3],
          ];

          // Solve the equation by inverting perspectiveMatrix and multiplying
          // rightHandSide by the inverse.
          const inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
          const transposedInversePerspectiveMatrix = MatrixMath.transpose(
            inversePerspectiveMatrix,
          );
          var perspective = MatrixMath.multiplyVectorByMatrix(
            rightHandSide,
            transposedInversePerspectiveMatrix,
          );
        } else {
          // no perspective
          perspective[0] = perspective[1] = perspective[2] = 0;
          perspective[3] = 1;
        }

        // translation is simple
        for (var i = 0; i < 3; i++) {
          translation[i] = matrix[3][i];
        }

        // Now get scale and shear.
        // 'row' is a 3 element array of 3 component vectors
        const row = [];
        for (i = 0; i < 3; i++) {
          row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
        }

        // Compute X scale factor and normalize first row.
        scale[0] = MatrixMath.v3Length(row[0]);
        row[0] = MatrixMath.v3Normalize(row[0], scale[0]);

        // Compute XY shear factor and make 2nd row orthogonal to 1st.
        skew[0] = MatrixMath.v3Dot(row[0], row[1]);
        row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

        // Compute XY shear factor and make 2nd row orthogonal to 1st.
        skew[0] = MatrixMath.v3Dot(row[0], row[1]);
        row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

        // Now, compute Y scale and normalize 2nd row.
        scale[1] = MatrixMath.v3Length(row[1]);
        row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
        skew[0] /= scale[1];

        // Compute XZ and YZ shears, orthogonalize 3rd row
        skew[1] = MatrixMath.v3Dot(row[0], row[2]);
        row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
        skew[2] = MatrixMath.v3Dot(row[1], row[2]);
        row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);

        // Next, get Z scale and normalize 3rd row.
        scale[2] = MatrixMath.v3Length(row[2]);
        row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
        skew[1] /= scale[2];
        skew[2] /= scale[2];

        // At this point, the matrix (in rows) is orthonormal.
        // Check for a coordinate system flip.  If the determinant
        // is -1, then negate the matrix and the scaling factors.
        const pdum3 = MatrixMath.v3Cross(row[1], row[2]);
        if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
          for (i = 0; i < 3; i++) {
            scale[i] *= -1;
            row[i][0] *= -1;
            row[i][1] *= -1;
            row[i][2] *= -1;
          }
        }

        // Now, get the rotations out
        quaternion[0] =
          0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
        quaternion[1] =
          0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
        quaternion[2] =
          0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
        quaternion[3] =
          0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

        if (row[2][1] > row[1][2]) {
          quaternion[0] = -quaternion[0];
        }
        if (row[0][2] > row[2][0]) {
          quaternion[1] = -quaternion[1];
        }
        if (row[1][0] > row[0][1]) {
          quaternion[2] = -quaternion[2];
        }

        // correct for occasional, weird Euler synonyms for 2d rotation
        let rotationDegrees;
        if (
          quaternion[0] < 0.001 &&
          quaternion[0] >= 0 &&
          quaternion[1] < 0.001 &&
          quaternion[1] >= 0
        ) {
          // this is a 2d rotation on the z-axis
          rotationDegrees = [
            0,
            0,
            MatrixMath.roundTo3Places(
              Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI,
            ),
          ];
        } else {
          rotationDegrees = MatrixMath.quaternionToDegreesXYZ(
            quaternion,
            matrix,
            row,
          );
        }

        // expose both base data and convenience names
        return {
          rotationDegrees,
          perspective,
          quaternion,
          scale,
          skew,
          translation,

          rotate: rotationDegrees[2],
          rotateX: rotationDegrees[0],
          rotateY: rotationDegrees[1],
          scaleX: scale[0],
          scaleY: scale[1],
          translateX: translation[0],
          translateY: translation[1],
        };
      },
    };

    function _multiplyTransform(result, matrixMathFunction, args): void {
      const matrixToApply = MatrixMath.createIdentityMatrix();
      const argsWithIdentity = [matrixToApply].concat(args);
      matrixMathFunction.apply(this, argsWithIdentity);
      MatrixMath.multiplyInto(result, result, matrixToApply);
    }

    function _convertToRadians(value: string): number {
      const floatValue = parseFloat(value);
      return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
    }

    function processTransform(transform) {
      // Android & iOS implementations of transform property accept the list of
      // transform properties as opposed to a transform Matrix. This is necessary
      // to control transform property updates completely on the native thread.
      if (Platform.OS === 'android' || Platform.OS === 'ios') {
        return transform;
      }

      const result = MatrixMath.createIdentityMatrix();

      transform.forEach(transformation => {
        const key = Object.keys(transformation)[0];
        const value = transformation[key];

        switch (key) {
          case 'matrix':
            MatrixMath.multiplyInto(result, result, value);
            break;
          case 'perspective':
            _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
            break;
          case 'rotateX':
            _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'rotateY':
            _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'rotate':
          case 'rotateZ':
            _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'scale':
            _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
            break;
          case 'scaleX':
            _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
            break;
          case 'scaleY':
            _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
            break;
          case 'translate':
            _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [
              value[0],
              value[1],
              value[2] || 0,
            ]);
            break;
          case 'translateX':
            _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [
              value,
              0,
            ]);
            break;
          case 'translateY':
            _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [
              0,
              value,
            ]);
            break;
          case 'skewX':
            _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [
              _convertToRadians(value),
            ]);
            break;
          case 'skewY':
            _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [
              _convertToRadians(value),
            ]);
            break;
          default:
            throw new Error('Invalid transform name: ' + key);
        }
      });

      return result;
    }

    function register(name, callback) {
      viewConfigCallbacks.set(name, callback);
      return name;
    };

    const createReactNativeComponentClass = function(name, callback) {
      return register(name, callback);
    };

    const RCTText = createReactNativeComponentClass(
      viewConfig.uiViewClassName,
      function () { return viewConfig }
    );

    const RCTVirtualText = UIManager.RCTVirtualText == null
      ? RCTText
      : createReactNativeComponentClass('RCTVirtualText', () => ({
            validAttributes: Object.assign({},
              ReactNativeViewAttributes.UIView,
              { isHighlighted: true }
            ),
            uiViewClassName: 'RCTVirtualText',
          }));

    function normalizeColor(color) {
      const matchers = getMatchers();
      let match;

      if (typeof color === 'number') {
        if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
          return color;
        }
        return null;
      }

      // Ordered based on occurrences on Facebook codebase
      if ((match = matchers.hex6.exec(color))) {
        return parseInt(match[1] + 'ff', 16) >>> 0;
      }

      if (names.hasOwnProperty(color)) {
        return names[color];
      }

      if ((match = matchers.rgb.exec(color))) {
        return (
          // b
          ((parse255(match[1]) << 24) | // r
          (parse255(match[2]) << 16) | // g
            (parse255(match[3]) << 8) |
            0x000000ff) >>> // a
          0
        );
      }

      if ((match = matchers.rgba.exec(color))) {
        return (
          // b
          ((parse255(match[1]) << 24) | // r
          (parse255(match[2]) << 16) | // g
            (parse255(match[3]) << 8) |
            parse1(match[4])) >>> // a
          0
        );
      }

      if ((match = matchers.hex3.exec(color))) {
        return (
          parseInt(
            match[1] +
            match[1] + // r
            match[2] +
            match[2] + // g
            match[3] +
            match[3] + // b
              'ff', // a
            16,
          ) >>> 0
        );
      }

      // https://drafts.csswg.org/css-color-4/#hex-notation
      if ((match = matchers.hex8.exec(color))) {
        return parseInt(match[1], 16) >>> 0;
      }

      if ((match = matchers.hex4.exec(color))) {
        return (
          parseInt(
            match[1] +
            match[1] + // r
            match[2] +
            match[2] + // g
            match[3] +
            match[3] + // b
              match[4] +
              match[4], // a
            16,
          ) >>> 0
        );
      }

      if ((match = matchers.hsl.exec(color))) {
        return (
          (hslToRgb(
            parse360(match[1]), // h
            parsePercentage(match[2]), // s
            parsePercentage(match[3]), // l
          ) |
            0x000000ff) >>> // a
          0
        );
      }

      if ((match = matchers.hsla.exec(color))) {
        return (
          (hslToRgb(
            parse360(match[1]), // h
            parsePercentage(match[2]), // s
            parsePercentage(match[3]), // l
          ) |
            parse1(match[4])) >>> // a
          0
        );
      }

      return null;
    }

    function hue2rgb(p, q, t) {
      if (t < 0) {
        t += 1;
      }
      if (t > 1) {
        t -= 1;
      }
      if (t < 1 / 6) {
        return p + (q - p) * 6 * t;
      }
      if (t < 1 / 2) {
        return q;
      }
      if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
      }
      return p;
    }

    function hslToRgb(h, s, l) {
      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      const p = 2 * l - q;
      const r = hue2rgb(p, q, h + 1 / 3);
      const g = hue2rgb(p, q, h);
      const b = hue2rgb(p, q, h - 1 / 3);

      return (
        (Math.round(r * 255) << 24) |
        (Math.round(g * 255) << 16) |
        (Math.round(b * 255) << 8)
      );
    }

    // var INTEGER = '[-+]?\\d+';
    const NUMBER = '[-+]?\\d*\\.?\\d+';
    const PERCENTAGE = NUMBER + '%';

    function call(...args) {
      return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
    }

    function getMatchers() {
      var cachedMatchers = {
          rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
          rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
          hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
          hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
          hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex6: /^#([0-9a-fA-F]{6})$/,
          hex8: /^#([0-9a-fA-F]{8})$/,
        };
      return cachedMatchers;
    }

    function parse255(str) {
      const int = parseInt(str, 10);
      if (int < 0) {
        return 0;
      }
      if (int > 255) {
        return 255;
      }
      return int;
    }

    function parse360(str) {
      const int = parseFloat(str);
      return (((int % 360) + 360) % 360) / 360;
    }

    function parse1(str) {
      const num = parseFloat(str);
      if (num < 0) {
        return 0;
      }
      if (num > 1) {
        return 255;
      }
      return Math.round(num * 255);
    }

    function parsePercentage(str) {
      // parseFloat conveniently ignores the final %
      const int = parseFloat(str);
      if (int < 0) {
        return 0;
      }
      if (int > 100) {
        return 1;
      }
      return int / 100;
    }

    const names = {
      transparent: 0x00000000,

      // http://www.w3.org/TR/css3-color/#svg-color
      aliceblue: 0xf0f8ffff,
      antiquewhite: 0xfaebd7ff,
      aqua: 0x00ffffff,
      aquamarine: 0x7fffd4ff,
      azure: 0xf0ffffff,
      beige: 0xf5f5dcff,
      bisque: 0xffe4c4ff,
      black: 0x000000ff,
      blanchedalmond: 0xffebcdff,
      blue: 0x0000ffff,
      blueviolet: 0x8a2be2ff,
      brown: 0xa52a2aff,
      burlywood: 0xdeb887ff,
      burntsienna: 0xea7e5dff,
      cadetblue: 0x5f9ea0ff,
      chartreuse: 0x7fff00ff,
      chocolate: 0xd2691eff,
      coral: 0xff7f50ff,
      cornflowerblue: 0x6495edff,
      cornsilk: 0xfff8dcff,
      crimson: 0xdc143cff,
      cyan: 0x00ffffff,
      darkblue: 0x00008bff,
      darkcyan: 0x008b8bff,
      darkgoldenrod: 0xb8860bff,
      darkgray: 0xa9a9a9ff,
      darkgreen: 0x006400ff,
      darkgrey: 0xa9a9a9ff,
      darkkhaki: 0xbdb76bff,
      darkmagenta: 0x8b008bff,
      darkolivegreen: 0x556b2fff,
      darkorange: 0xff8c00ff,
      darkorchid: 0x9932ccff,
      darkred: 0x8b0000ff,
      darksalmon: 0xe9967aff,
      darkseagreen: 0x8fbc8fff,
      darkslateblue: 0x483d8bff,
      darkslategray: 0x2f4f4fff,
      darkslategrey: 0x2f4f4fff,
      darkturquoise: 0x00ced1ff,
      darkviolet: 0x9400d3ff,
      deeppink: 0xff1493ff,
      deepskyblue: 0x00bfffff,
      dimgray: 0x696969ff,
      dimgrey: 0x696969ff,
      dodgerblue: 0x1e90ffff,
      firebrick: 0xb22222ff,
      floralwhite: 0xfffaf0ff,
      forestgreen: 0x228b22ff,
      fuchsia: 0xff00ffff,
      gainsboro: 0xdcdcdcff,
      ghostwhite: 0xf8f8ffff,
      gold: 0xffd700ff,
      goldenrod: 0xdaa520ff,
      gray: 0x808080ff,
      green: 0x008000ff,
      greenyellow: 0xadff2fff,
      grey: 0x808080ff,
      honeydew: 0xf0fff0ff,
      hotpink: 0xff69b4ff,
      indianred: 0xcd5c5cff,
      indigo: 0x4b0082ff,
      ivory: 0xfffff0ff,
      khaki: 0xf0e68cff,
      lavender: 0xe6e6faff,
      lavenderblush: 0xfff0f5ff,
      lawngreen: 0x7cfc00ff,
      lemonchiffon: 0xfffacdff,
      lightblue: 0xadd8e6ff,
      lightcoral: 0xf08080ff,
      lightcyan: 0xe0ffffff,
      lightgoldenrodyellow: 0xfafad2ff,
      lightgray: 0xd3d3d3ff,
      lightgreen: 0x90ee90ff,
      lightgrey: 0xd3d3d3ff,
      lightpink: 0xffb6c1ff,
      lightsalmon: 0xffa07aff,
      lightseagreen: 0x20b2aaff,
      lightskyblue: 0x87cefaff,
      lightslategray: 0x778899ff,
      lightslategrey: 0x778899ff,
      lightsteelblue: 0xb0c4deff,
      lightyellow: 0xffffe0ff,
      lime: 0x00ff00ff,
      limegreen: 0x32cd32ff,
      linen: 0xfaf0e6ff,
      magenta: 0xff00ffff,
      maroon: 0x800000ff,
      mediumaquamarine: 0x66cdaaff,
      mediumblue: 0x0000cdff,
      mediumorchid: 0xba55d3ff,
      mediumpurple: 0x9370dbff,
      mediumseagreen: 0x3cb371ff,
      mediumslateblue: 0x7b68eeff,
      mediumspringgreen: 0x00fa9aff,
      mediumturquoise: 0x48d1ccff,
      mediumvioletred: 0xc71585ff,
      midnightblue: 0x191970ff,
      mintcream: 0xf5fffaff,
      mistyrose: 0xffe4e1ff,
      moccasin: 0xffe4b5ff,
      navajowhite: 0xffdeadff,
      navy: 0x000080ff,
      oldlace: 0xfdf5e6ff,
      olive: 0x808000ff,
      olivedrab: 0x6b8e23ff,
      orange: 0xffa500ff,
      orangered: 0xff4500ff,
      orchid: 0xda70d6ff,
      palegoldenrod: 0xeee8aaff,
      palegreen: 0x98fb98ff,
      paleturquoise: 0xafeeeeff,
      palevioletred: 0xdb7093ff,
      papayawhip: 0xffefd5ff,
      peachpuff: 0xffdab9ff,
      peru: 0xcd853fff,
      pink: 0xffc0cbff,
      plum: 0xdda0ddff,
      powderblue: 0xb0e0e6ff,
      purple: 0x800080ff,
      rebeccapurple: 0x663399ff,
      red: 0xff0000ff,
      rosybrown: 0xbc8f8fff,
      royalblue: 0x4169e1ff,
      saddlebrown: 0x8b4513ff,
      salmon: 0xfa8072ff,
      sandybrown: 0xf4a460ff,
      seagreen: 0x2e8b57ff,
      seashell: 0xfff5eeff,
      sienna: 0xa0522dff,
      silver: 0xc0c0c0ff,
      skyblue: 0x87ceebff,
      slateblue: 0x6a5acdff,
      slategray: 0x708090ff,
      slategrey: 0x708090ff,
      snow: 0xfffafaff,
      springgreen: 0x00ff7fff,
      steelblue: 0x4682b4ff,
      tan: 0xd2b48cff,
      teal: 0x008080ff,
      thistle: 0xd8bfd8ff,
      tomato: 0xff6347ff,
      turquoise: 0x40e0d0ff,
      violet: 0xee82eeff,
      wheat: 0xf5deb3ff,
      white: 0xffffffff,
      whitesmoke: 0xf5f5f5ff,
      yellow: 0xffff00ff,
      yellowgreen: 0x9acd32ff,
    };

    function processColor(color) {
      if (color === undefined || color === null) {
        return color;
      }

      var int32Color = normalizeColor(color);
      if (int32Color === null || int32Color === undefined) {
        return undefined;
      }

      // Converts 0xrrggbbaa into 0xaarrggbb
      int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;

      if (Platform.OS === 'android') {
        // Android use 32 bit *signed* integer to represent the color
        // We utilize the fact that bitwise operations in JS also operates on
        // signed 32 bit integers, so that we can use those to convert from
        // *unsigned* to *signed* 32bit int that way.
        int32Color = int32Color | 0x0;
      }
      return int32Color;
    }

    const isTouchable = props =>
      props.onPress != null ||
      props.onLongPress != null ||
      props.onStartShouldSetResponder != null;

    // this is not a full implementation, but just for a hack
    function TouchableText(props) {
      var newProps = props;
      if (isTouchable(newProps)) {
        throw new Error("TODO: mocked TouchableText does not handle touch events");
      }
      if (props.selectionColor != null) {
        newProps = Object.assign({}, props, {
          selectionColor: processColor(props.selectionColor)
        });
      }
      return (
        React.createElement(
          TextAncestor.Consumer,
          null,
          function (hasTextAncestor) {
            return (
              hasTextAncestor ? (
                React.createElement(
                  RCTVirtualText,
                  Object.assign(
                    {},
                    newProps,
                    { ref: newProps.forwardedRef }
                  )
                )
              ) : (
                React.createElement(
                  TextAncestor.Provider,
                  { value: true },
                  React.createElement(
                    RCTText,
                    Object.assign(
                      {},
                      newProps,
                      { ref: newProps.forwardedRef }
                    )
                  )
                )
              )
            );
          }
        )
      );
    }

    TouchableText.defaultProps = {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail',
    };

    function getDifferForType(typeName: string) {
      switch (typeName) {
        // iOS Types
        case 'CATransform3D':
          return matricesDiffer;
        case 'CGPoint':
          return pointsDiffer;
        case 'CGSize':
          return sizesDiffer;
        case 'UIEdgeInsets':
          return insetsDiffer;
        // Android Types
        // (not yet implemented)
      }
      return null;
    }

    function getProcessorForType(typeName) {
      switch (typeName) {
        // iOS Types
        case 'CGColor':
        case 'UIColor':
          return processColor;
        case 'CGColorArray':
        case 'UIColorArray':
          return processColorArray;
        case 'CGImage':
        case 'UIImage':
        case 'RCTImageSource':
          return resolveAssetSource;
        // Android Types
        case 'Color':
          return processColor;
        case 'ColorArray':
          return processColorArray;
      }
      return null;
    }

    function merge(destination, source) {
      if (!source) {
        return destination;
      }
      if (!destination) {
        return source;
      }

      for (const key in source) {
        if (!source.hasOwnProperty(key)) {
          continue;
        }

        let sourceValue = source[key];
        if (destination.hasOwnProperty(key)) {
          const destinationValue = destination[key];
          if (
            typeof sourceValue === 'object' &&
            typeof destinationValue === 'object'
          ) {
            sourceValue = merge(destinationValue, sourceValue);
          }
        }
        destination[key] = sourceValue;
      }
      return destination;
    }

    function requireNativeComponent(uiViewClassName) {
      return createReactNativeComponentClass(uiViewClassName, function() {
        const viewConfig = UIManager[viewName];

        let {baseModuleName, bubblingEventTypes, directEventTypes} = viewConfig;
        let nativeProps = viewConfig.NativeProps;

        while (baseModuleName) {
          const baseModule = UIManager[baseModuleName];
          if (!baseModule) {
            baseModuleName = null;
          } else {
            bubblingEventTypes = Object.assign({}, baseModule.bubblingEventTypes, bubblingEventTypes);
            directEventTypes = Object.assign({}, baseModule.directEventTypes, directEventTypes);
            nativeProps = Object.assign({}, baseModule.NativeProps, nativeProps);
            baseModuleName = baseModule.baseModuleName;
          }
        }

        const viewAttributes = {};

        for (const key in nativeProps) {
          const typeName = nativeProps[key];
          const diff = getDifferForType(typeName);
          const process = getProcessorForType(typeName);

          viewAttributes[key] =
            diff == null && process == null ? true : {diff, process};
        }
        viewAttributes.style = ReactNativeStyleAttributes;

        Object.assign(viewConfig, {
          uiViewClassName: viewName,
          validAttributes: viewAttributes,
          bubblingEventTypes,
          directEventTypes,
        });

        if (!hasAttachedDefaultEventTypes) {
          attachDefaultEventTypes(viewConfig);
          hasAttachedDefaultEventTypes = true;
        }

        return viewConfig;
      });
    }

    var hasAttachedDefaultEventTypes = false;

    function attachDefaultEventTypes(viewConfig) {
      // This is supported on UIManager platforms (ex: Android),
      // as lazy view managers are not implemented for all platforms.
      // See [UIManager] for details on constants and implementations.
      if (UIManager.ViewManagerNames) {
        // Lazy view managers enabled.
        viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
      } else {
        viewConfig.bubblingEventTypes = merge(
          viewConfig.bubblingEventTypes,
          UIManager.genericBubblingEventTypes,
        );
        viewConfig.directEventTypes = merge(
          viewConfig.directEventTypes,
          UIManager.genericDirectEventTypes,
        );
      }
    }

    const Text = React.forwardRef(function(props, ref) {
      return React.createElement(
        TouchableText,
        Object.assign(
          {},
          props
          // { forwardedRef: ref }
        )
      );
    });

    const StyleSheet = {
      create(obj){
        return obj;
      },
    };

    const RCTView = requireNativeComponent(
      'RCTView',
      {},
      {
        nativeOnly: {
          nativeBackgroundAndroid: true,
          nativeForegroundAndroid: true,
        },
      },
    );

    return {
      StyleSheet,
      Text,
      View: RCTView,
    };
  }
`, { plugins: ["flow"] });
}, function(e, t, r) {
  "use strict";
  var n = /([A-Z])/g;
  e.exports = function(e2) {
    return e2.replace(n, "-$1").toLowerCase();
  };
}, function(e, t, r) {
  "use strict";
  var n = r(238), i = /^ms-/;
  e.exports = function(e2) {
    return n(e2).replace(i, "-ms-");
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.createMarkupForRoot = function() {
    return s.ROOT_ATTRIBUTE_NAME + '=""';
  }, t.isCustomComponent = function(e2, t2, r2) {
    if (-1 === t2.indexOf("-")) {
      var n2 = (0, a.getProperty)(e2, r2, "is");
      return n2 instanceof i.StringValue;
    }
    switch (t2) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return false;
      default:
        return true;
    }
  }, t.escapeHtml = l, t.normalizeNode = function(e2, t2) {
    if (Array.isArray(t2)) {
      var r2, n2 = true, a2 = false, s2 = void 0;
      try {
        for (var u2, l2 = t2[Symbol.iterator](); !(n2 = (u2 = l2.next()).done); n2 = true) {
          var c = u2.value;
          if ("string" == typeof c) if (void 0 === r2) r2 = c;
          else if ("string" == typeof r2) r2 += c;
          else {
            var f = r2[r2.length - 1];
            "string" == typeof f ? r2[r2.length - 1] += c : r2.push(c);
          }
          else void 0 === r2 ? r2 = [c] : "string" == typeof r2 ? r2 = [r2, c] : r2.push(c);
        }
      } catch (e3) {
        a2 = true, s2 = e3;
      } finally {
        try {
          n2 || null == l2.return || l2.return();
        } finally {
          if (a2) throw s2;
        }
      }
      return (0, o.default)(void 0 !== r2), r2;
    }
    if ("string" == typeof t2 || t2 instanceof i.AbstractValue) return t2;
    (0, o.default)(false, "TODO");
  }, t.convertValueToNode = function(e2) {
    if (e2 instanceof i.AbstractValue) return e2;
    if (e2 instanceof i.StringValue || e2 instanceof i.NumberValue) return e2.value + "";
    (0, o.default)(false, "TODO");
  }, t.createHtmlEscapeHelper = function(e2) {
    var t2 = (0, n.parseExpression)(l.toString(), { plugins: ["flow"] }), r2 = new i.ECMAScriptSourceFunctionValue(e2);
    return r2.initialize(t2.params, t2.body), r2;
  }, t.createArrayHelper = function(e2) {
    var t2 = (0, n.parseExpression)('\n    function arrayHelper(array) {\n      let length = array.length;\n      let i = 0;\n      let str = "";\n      let item;\n\n      while (i < length) {\n        item = array[i++];\n        if (previousWasTextNode === true) {\n          str += "<!-- -->" + item;\n        } else {\n          str += item;\n        }\n        previousWasTextNode = item[0] !== "<";\n      }\n      return str;\n    }\n  ', { plugins: ["flow"] }), r2 = new i.ECMAScriptSourceFunctionValue(e2);
    return r2.initialize(t2.params, t2.body), r2;
  }, t.getNonChildrenInnerMarkup = function(e2, t2) {
    var r2 = (0, a.getProperty)(e2, t2, "dangerouslySetInnerHTML");
    if (r2 instanceof i.ObjectValue) {
      var n2 = (0, a.getProperty)(e2, r2, "dangerouslySetInnerHTML");
      if (n2 instanceof i.StringValue) return n2.value;
    } else {
      var o2 = (0, a.getProperty)(e2, t2, "children");
      if (o2 instanceof i.StringValue || o2 instanceof i.NumberValue) return l(o2.value);
    }
    return null;
  }, t.quoteAttributeValueForBrowser = function(e2) {
    return '"' + l(e2) + '"';
  };
  var n = r(34), i = r(0), a = r(14), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(133);
  var u = /["'&<>]/;
  function l(e2) {
    if ("boolean" == typeof e2 || "number" == typeof e2) return "" + e2;
    var t2, r2 = "" + e2, n2 = u.exec(r2);
    if (!n2) return r2;
    var i2 = "", a2 = 0, o2 = 0;
    for (a2 = n2.index; a2 < r2.length; a2++) {
      switch (r2.charCodeAt(a2)) {
        case 34:
          t2 = "&quot;";
          break;
        case 38:
          t2 = "&amp;";
          break;
        case 39:
          t2 = "&#x27;";
          break;
        case 60:
          t2 = "&lt;";
          break;
        case 62:
          t2 = "&gt;";
          break;
        default:
          continue;
      }
      o2 !== a2 && (i2 += r2.substring(o2, a2)), o2 = a2 + 1, i2 += t2;
    }
    return o2 !== a2 ? i2 + r2.substring(o2, a2) : i2;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function a(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createMarkupForCustomAttribute = E, t.renderToString = function(e2, t2, r2) {
    var n2 = new o.ReactStatistics(), i2 = /* @__PURE__ */ new Map(), a2 = new l.Reconciler(e2, { firstRenderOnly: true, isRoot: true, modelString: void 0 }, i2, n2), f2 = (0, c.getProperty)(e2, t2, "type"), d2 = (0, c.getProperty)(e2, t2, "props"), h2 = (0, c.createReactEvaluatedNode)("ROOT", (0, c.getComponentName)(e2, f2));
    (0, p.default)(f2 instanceof u.ECMAScriptSourceFunctionValue), d2 instanceof u.AbstractValue && !(d2 instanceof u.AbstractObjectValue) && (d2 = y.To.ToObject(e2, d2));
    (0, p.default)(d2 instanceof u.ObjectValue || d2 instanceof u.AbstractObjectValue);
    var v2 = a2.resolveReactComponentTree(f2, d2, null, h2);
    return (0, p.default)(e2.generator), e2.generator.emitStatement([], (0, m.createOperationDescriptor)("REACT_SSR_REGEX_CONSTANT")), (0, p.default)(e2.generator), e2.generator.emitStatement([], (0, m.createOperationDescriptor)("REACT_SSR_PREV_TEXT_NODE")), (0, p.default)(v2), e2.applyEffects(v2), (0, p.default)(v2.result instanceof s.SimpleNormalCompletion), new C(e2, r2).render(v2.result.value);
  };
  var o = r(33), s = r(7), u = r(0), l = r(146), c = r(14), f = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), p = b(r(1)), d = r(240), h = r(133), v = b(r(239)), y = r(2), m = r(9);
  function b(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function g(e2, t2, r2) {
    var n2 = u.AbstractValue.createFromBuildFunction(e2, u.Value, [r2, t2], (0, m.createOperationDescriptor)("REACT_SSR_RENDER_VALUE_HELPER"));
    return (0, p.default)(n2 instanceof u.AbstractValue), n2;
  }
  function w(e2, t2, r2, n2) {
    return r2 === e2.intrinsics.null || r2 === e2.intrinsics.undefined || r2 instanceof u.BooleanValue || r2 instanceof u.StringValue && "" === r2.value ? "" : n2 || !(r2 instanceof u.NumberValue) || 0 === r2.value || h.isUnitlessNumber.hasOwnProperty(t2) && h.isUnitlessNumber[t2] ? r2 instanceof u.StringValue || r2 instanceof u.NumberValue ? ("" + r2.value).trim() : void (0, p.default)(false, "TODO") : r2.value + "px";
  }
  function E(e2, t2, r2) {
    return (0, h.isAttributeNameSafe)(t2) && null != r2 ? r2 instanceof u.StringValue || r2 instanceof u.NumberValue ? t2 + "=" + (0, d.quoteAttributeValueForBrowser)(r2.value + "") : void (0, p.default)(false, "TODO") : "";
  }
  function S(e2, t2, r2, n2) {
    var i2 = (0, h.getPropertyInfo)(t2);
    if ("style" !== t2 && (0, h.shouldIgnoreAttribute)(t2, i2, false)) return "";
    if ((0, h.shouldRemoveAttribute)(e2, t2, r2, i2, false)) return "";
    if (null !== i2) {
      var a2 = i2.attributeName, o2 = i2.type;
      if (o2 === h.BOOLEAN || o2 === h.OVERLOADED_BOOLEAN && true === r2) return a2 + '=""';
      if (r2 instanceof u.StringValue || r2 instanceof u.NumberValue) return a2 + "=" + (0, d.quoteAttributeValueForBrowser)(r2.value + "");
      if (r2 instanceof u.AbstractValue) return [a2 + "=", g(e2, r2, n2)];
    } else {
      if (r2 instanceof u.StringValue || r2 instanceof u.NumberValue) return t2 + "=" + (0, d.quoteAttributeValueForBrowser)(r2.value + "");
      if (r2 instanceof u.AbstractValue) return [t2 + '="', g(e2, r2, n2), '"'];
    }
    (0, p.default)(false, "TODO");
  }
  function T(e2, t2) {
    var r2 = [], n2 = "";
    if (t2 instanceof u.ObjectValue && !t2.isPartialObject()) {
      var i2 = true, o2 = false, s2 = void 0;
      try {
        for (var l2, f2 = t2.properties[Symbol.iterator](); !(i2 = (l2 = f2.next()).done); i2 = true) {
          var p2 = a(l2.value, 2), d2 = p2[0];
          if (void 0 !== p2[1].descriptor) {
            var h2 = 0 === d2.indexOf("--"), y2 = (0, c.getProperty)(e2, t2, d2);
            y2 !== e2.intrinsics.null && y2 !== e2.intrinsics.undefined && (r2.push(n2 + (0, v.default)(d2) + ":"), r2.push(w(e2, d2, y2, h2)), n2 = ";");
          }
        }
      } catch (e3) {
        o2 = true, s2 = e3;
      } finally {
        try {
          i2 || null == f2.return || f2.return();
        } finally {
          if (o2) throw s2;
        }
      }
    }
    return r2.length > 0 ? A(e2, r2) : e2.intrinsics.null;
  }
  function A(e2, t2) {
    var r2 = (0, d.normalizeNode)(e2, t2);
    if ("string" == typeof r2) return new u.StringValue(e2, r2);
    if (r2 instanceof u.AbstractValue) return r2;
    (0, p.default)(Array.isArray(r2));
    var n2 = [], i2 = [], a2 = false, o2 = true, s2 = false, l2 = void 0;
    try {
      for (var c2, h2 = r2[Symbol.iterator](); !(o2 = (c2 = h2.next()).done); o2 = true) {
        var v2 = c2.value;
        "string" == typeof v2 ? (a2 = false, i2.push(f.templateElement({ raw: v2, cooked: v2 }))) : (a2 && i2.push(f.templateElement({ raw: "", cooked: "" })), a2 = true, (0, p.default)(v2 instanceof u.Value), n2.push(v2));
      }
    } catch (e3) {
      s2 = true, l2 = e3;
    } finally {
      try {
        o2 || null == h2.return || h2.return();
      } finally {
        if (s2) throw l2;
      }
    }
    var y2 = u.AbstractValue.createFromBuildFunction(e2, u.StringValue, n2, (0, m.createOperationDescriptor)("REACT_SSR_TEMPLATE_LITERAL", { quasis: i2 }));
    return (0, p.default)(y2 instanceof u.AbstractValue), y2;
  }
  var C = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.makeStaticMarkup = r2, this.previousWasTextNode = false, this.htmlEscapeHelper = (0, d.createHtmlEscapeHelper)(t2), this.arrayHelper = (0, d.createArrayHelper)(t2);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "render", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "html", r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n2 = this._renderValue(e3, t2, r2);
      return A(this.realm, n2);
    } }, { key: "_renderText", value: function(e3) {
      var t2 = e3.value + "";
      return "" === t2 ? "" : this.makeStaticMarkup ? (0, d.escapeHtml)(t2) : this.previousWasTextNode ? "<!-- -->" + (0, d.escapeHtml)(t2) : (this.previousWasTextNode = true, (0, d.escapeHtml)(t2));
    } }, { key: "_renderAbstractConditionalValue", value: function(e3, t2, r2, n2, i2) {
      var a2 = this, o2 = this.realm.evaluateWithAbstractConditional(e3, function() {
        return a2.realm.evaluateForEffects(function() {
          return a2.render(t2, n2, i2);
        }, null, "_renderAbstractConditionalValue consequent");
      }, function() {
        return a2.realm.evaluateForEffects(function() {
          return a2.render(r2, n2, i2);
        }, null, "_renderAbstractConditionalValue consequent");
      });
      return (0, d.convertValueToNode)(o2);
    } }, { key: "_renderAbstractValue", value: function(e3, t2, r2) {
      if ("conditional" === e3.kind) {
        var n2 = a(e3.args, 3), i2 = n2[0], o2 = n2[1], s2 = n2[2];
        return (0, p.default)(i2 instanceof u.AbstractValue), this._renderAbstractConditionalValue(i2, o2, s2, t2, r2);
      }
      return g(this.realm, e3, this.htmlEscapeHelper);
    } }, { key: "_renderArrayValue", value: function(e3, t2, r2) {
      var n2 = this;
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(e3)) {
        var o2 = e3.nestedOptimizedFunctionEffects;
        if (void 0 !== o2) {
          var l2 = true, f2 = false, d2 = void 0;
          try {
            for (var h2, v2 = function() {
              var e4, i2 = a(h2.value, 2), l3 = i2[0], c2 = i2[1], f3 = function() {
                var e5 = c2.result;
                return n2.realm.applyEffects(c2), e5 instanceof s.SimpleNormalCompletion && (e5 = e5.value), (0, p.default)(e5 instanceof u.Value), n2.render(e5, t2, r2);
              };
              e4 = n2.realm.evaluateForEffects(function() {
                return n2.realm.evaluatePure(f3, true, function() {
                  (0, p.default)(false, "SSR _renderArrayValue side-effect should have been caught in main React reconciler");
                });
              }, null, "react SSR resolve nested optimized closure"), o2.set(l3, e4), n2.realm.collectedNestedOptimizedFunctionEffects.set(l3, e4);
            }, y2 = o2[Symbol.iterator](); !(l2 = (h2 = y2.next()).done); l2 = true) v2();
          } catch (e4) {
            f2 = true, d2 = e4;
          } finally {
            try {
              l2 || null == y2.return || y2.return();
            } finally {
              if (f2) throw d2;
            }
          }
          return g(this.realm, e3, this.arrayHelper);
        }
      }
      var m2 = [];
      return (0, c.forEachArrayValue)(this.realm, e3, function(e4) {
        var a2 = n2._renderValue(e4, t2, r2);
        Array.isArray(a2) ? m2.push.apply(m2, i(a2)) : m2.push(a2);
      }), m2;
    } }, { key: "_renderReactElement", value: function(e3, t2, r2) {
      var n2 = (0, c.getProperty)(this.realm, e3, "type"), o2 = (0, c.getProperty)(this.realm, e3, "props");
      if ((0, p.default)(o2 instanceof u.AbstractObjectValue || o2 instanceof u.ObjectValue), n2 instanceof u.StringValue) {
        var s2 = n2.value, l2 = s2.toLowerCase();
        "input" === l2 ? (0, p.default)(false, "TODO") : "textarea" === l2 ? (0, p.default)(false, "TODO") : "select" === l2 ? (0, p.default)(false, "TODO") : "option" === l2 && (0, p.default)(false, "TODO");
        var f2 = (function(e4, t3, r3, n3, o3, s3, l3, f3) {
          var v3 = ["<" + t3];
          if (n3 instanceof u.ObjectValue && !n3.isPartialObject()) {
            var y3 = true, m3 = false, b3 = void 0;
            try {
              for (var g3, w3 = n3.properties[Symbol.iterator](); !(y3 = (g3 = w3.next()).done); y3 = true) {
                var A3 = a(g3.value, 2), C2 = A3[0];
                if (void 0 !== A3[1].descriptor) {
                  var P = (0, c.getProperty)(e4, n3, C2);
                  if (P === e4.intrinsics.null || P === e4.intrinsics.undefined) continue;
                  C2 === h.STYLE && (P = T(e4, P));
                  var O = void 0;
                  (0, d.isCustomComponent)(e4, r3, n3) ? h.RESERVED_PROPS.has(C2) || (O = E(0, C2, P)) : O = S(e4, C2, P, f3), Array.isArray(O) ? v3.push.apply(v3, [" "].concat(i(O))) : "string" == typeof O && "" !== O ? v3.push(" " + O) : O && v3.push(" ", O);
                }
              }
            } catch (e5) {
              m3 = true, b3 = e5;
            } finally {
              try {
                y3 || null == w3.return || w3.return();
              } finally {
                if (m3) throw b3;
              }
            }
          } else (0, p.default)(false, "TODO");
          return s3 ? v3 : (l3 && v3.push(" " + (0, d.createMarkupForRoot)()), v3);
        })(this.realm, s2, l2, o2, 0, this.makeStaticMarkup, 0 === r2, this.htmlEscapeHelper), v2 = "";
        h.omittedCloseTags.has(l2) ? f2.push("/>") : (f2.push(">"), v2 = "</" + s2 + ">");
        var y2 = (0, d.getNonChildrenInnerMarkup)(this.realm, o2);
        if (y2 instanceof u.StringValue) h.newlineEatingTags[l2] && "\n" === y2.value.charAt(0) && f2.push("\n"), f2.push(y2.value);
        else if (y2 instanceof u.ObjectValue) (0, p.default)(false, "TODO");
        else {
          this.previousWasTextNode = false;
          var m2 = (0, c.getProperty)(this.realm, o2, "children"), b2 = this._renderValue(m2, t2, r2 + 1);
          Array.isArray(b2) ? f2.push.apply(f2, i(b2)) : f2.push(b2);
        }
        return f2.push(v2), this.previousWasTextNode = false, f2;
      }
      if (n2 instanceof u.SymbolValue && n2 === (0, c.getReactSymbol)("react.fragment", this.realm)) {
        var g2 = (0, c.getProperty)(this.realm, o2, "children"), w2 = this._renderValue(g2, t2, r2 + 1), A2 = [];
        return Array.isArray(w2) ? A2.push.apply(A2, i(w2)) : A2.push(w2), this.previousWasTextNode = false, A2;
      }
      (0, p.default)(false, "TODO");
    } }, { key: "_renderValue", value: function(e3, t2, r2) {
      return e3 instanceof u.StringValue || e3 instanceof u.NumberValue ? this._renderText(e3) : e3 instanceof u.ObjectValue && (0, c.isReactElement)(e3) ? this._renderReactElement(e3, t2, r2) : e3 instanceof u.AbstractValue ? this._renderAbstractValue(e3, t2, r2) : e3 instanceof u.ArrayValue ? this._renderArrayValue(e3, t2, r2) : e3 instanceof u.BooleanValue || e3 instanceof u.UndefinedValue || e3 instanceof u.NullValue ? "" : void (0, p.default)(false, "TODO");
    } }]), e2;
  })();
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createMockReactDOM = function(e2, t2) {
    var r2 = new a.ObjectValue(e2, e2.intrinsics.ObjectPrototype);
    r2.refuseSerialization = true, (0, u.updateIntrinsicNames)(e2, r2, t2);
    var l2 = function(t3, r3) {
      var n2 = a.AbstractValue.createTemporalFromBuildFunction(e2, a.FunctionValue, [t3].concat(i(r3)), (0, c.createOperationDescriptor)("REACT_TEMPORAL_FUNC"), { skipInvariant: true, isPure: true });
      return (0, s.default)(n2 instanceof a.AbstractObjectValue), n2;
    };
    (0, u.addMockFunctionToObject)(e2, r2, t2, "render", l2), (0, u.addMockFunctionToObject)(e2, r2, t2, "hydrate", l2), (0, u.addMockFunctionToObject)(e2, r2, t2, "findDOMNode", l2), (0, u.addMockFunctionToObject)(e2, r2, t2, "unmountComponentAtNode", l2);
    return (0, u.addMockFunctionToObject)(e2, r2, t2, "createPortal", function(t3, i2) {
      var u2 = n(i2, 2), l3 = u2[0], f = u2[1], p = a.AbstractValue.createTemporalFromBuildFunction(e2, a.ObjectValue, [t3, l3, f], (0, c.createOperationDescriptor)("REACT_TEMPORAL_FUNC"), { skipInvariant: true, isPure: true });
      return (0, s.default)(p instanceof a.AbstractObjectValue), e2.react.abstractHints.set(p, (0, o.createReactHintObject)(r2, "createPortal", [l3, f], e2.intrinsics.undefined)), p;
    }), r2.refuseSerialization = false, r2.makeFinal(), r2;
  }, t.createMockReactDOMServer = function(e2, t2) {
    var r2 = new a.ObjectValue(e2, e2.intrinsics.ObjectPrototype);
    r2.refuseSerialization = true, (0, u.updateIntrinsicNames)(e2, r2, t2);
    var f = function(t3, r3) {
      var n2 = a.AbstractValue.createTemporalFromBuildFunction(e2, a.FunctionValue, [t3].concat(i(r3)), (0, c.createOperationDescriptor)("REACT_TEMPORAL_FUNC"), { skipInvariant: true, isPure: true });
      return (0, s.default)(n2 instanceof a.AbstractObjectValue), n2;
    };
    return (0, u.addMockFunctionToObject)(e2, r2, t2, "renderToString", function(t3, r3) {
      var i2 = n(r3, 1)[0];
      return i2 instanceof a.ObjectValue && (0, o.isReactElement)(i2) ? (0, l.renderToString)(e2, i2, false) : f(t3, [i2]);
    }), (0, u.addMockFunctionToObject)(e2, r2, t2, "renderToStaticMarkup", function(t3, r3) {
      var i2 = n(r3, 1)[0];
      return i2 instanceof a.ObjectValue && (0, o.isReactElement)(i2) ? (0, l.renderToString)(e2, i2, true) : f(t3, [i2]);
    }), (0, u.addMockFunctionToObject)(e2, r2, t2, "renderToNodeStream", f), (0, u.addMockFunctionToObject)(e2, r2, t2, "renderToStaticNodeStream", f), r2.refuseSerialization = false, r2.makeFinal(), r2;
  };
  var a = r(0), o = r(14), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(92), l = r(241), c = r(9);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return o(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || a();
  }
  function i(e2, t2) {
    return o(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || a();
  }
  function a() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function o(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createMockReact = function(e2, t2) {
    var r2 = c.Environment.GetValue(e2, e2.$GlobalEnv.evaluate(y, false));
    (0, d.default)(r2 instanceof l.ECMAScriptSourceFunctionValue);
    var a2 = e2.react.currentOwner = new l.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "currentOwner"), o2 = r2.$Call;
    (0, d.default)(void 0 !== o2);
    var s2 = new l.NativeFunctionValue(e2, void 0, "ReactElement", 0, function(t3, r3) {
      var n2 = i(r3, 4), a3 = n2[0], o3 = n2[1], s3 = n2[2], u2 = n2[3];
      return (0, d.default)(u2 instanceof l.ObjectValue), (0, f.createInternalReactElement)(e2, a3, o3, s3, u2);
    }), m = o2(e2.intrinsics.undefined, [(0, f.getReactSymbol)("react.element", e2), (0, f.getReactSymbol)("react.fragment", e2), (0, f.getReactSymbol)("react.portal", e2), (0, f.getReactSymbol)("react.forward_ref", e2), s2, a2]);
    return (0, d.default)(m instanceof l.ObjectValue), m.refuseSerialization = true, (0, h.updateIntrinsicNames)(e2, m, t2, ["PropTypes", "Children", "isValidElement", { name: "Component", updatePrototype: true }, { name: "PureComponent", updatePrototype: true }]), (0, h.addMockFunctionToObject)(e2, m, t2, "createElement", function(t3, r3) {
      var i2 = n(r3), a3 = i2[0], o3 = i2[1], s3 = i2.slice(2);
      if ((0, d.default)(a3 instanceof l.Value), o3 !== e2.intrinsics.undefined && o3 !== e2.intrinsics.null && void 0 !== o3 || (o3 = new l.ObjectValue(e2, e2.intrinsics.ObjectPrototype)), o3 instanceof l.AbstractValue && !(o3 instanceof l.AbstractObjectValue) && (o3 = c.To.ToObject(e2, o3)), (0, d.default)(o3 instanceof l.ObjectValue || o3 instanceof l.AbstractObjectValue), Array.isArray(s3)) if (0 === s3.length) s3 = void 0;
      else if (1 === s3.length) s3 = s3[0];
      else {
        for (var u2 = c.Create.ArrayCreate(e2, 0), f2 = s3.length, h2 = 0; h2 < f2; h2++) c.Create.CreateDataPropertyOrThrow(e2, u2, "" + h2, s3[h2]);
        (s3 = u2).makeFinal();
      }
      return (0, p.createReactElement)(e2, a3, o3, s3);
    }), (0, h.addMockFunctionToObject)(e2, m, t2, "cloneElement", function(t3, r3) {
      var i2 = n(r3), a3 = i2[0], o3 = i2[1], s3 = i2.slice(2);
      if ((0, d.default)(a3 instanceof l.ObjectValue), o3 !== e2.intrinsics.undefined && o3 !== e2.intrinsics.null && void 0 !== o3 || (o3 = e2.intrinsics.null), o3 instanceof l.AbstractValue && !(o3 instanceof l.AbstractObjectValue) && (o3 = c.To.ToObject(e2, o3)), (0, d.default)(o3 instanceof l.ObjectValue || o3 instanceof l.AbstractObjectValue || o3 instanceof l.NullValue), Array.isArray(s3)) if (0 === s3.length) s3 = void 0;
      else if (1 === s3.length) s3 = s3[0];
      else {
        for (var u2 = c.Create.ArrayCreate(e2, 0), f2 = s3.length, h2 = 0; h2 < f2; h2++) c.Create.CreateDataPropertyOrThrow(e2, u2, "" + h2, s3[h2]);
        (s3 = u2).makeFinal();
      }
      return (0, p.cloneReactElement)(e2, a3, o3, s3);
    }), (0, h.addMockFunctionToObject)(e2, m, t2, "createContext", function(t3, r3) {
      var n2 = i(r3, 1)[0], a3 = void 0 === n2 ? e2.intrinsics.undefined : n2;
      (0, d.default)(a3 instanceof l.Value);
      var o3 = new l.ObjectValue(e2, e2.intrinsics.ObjectPrototype), s3 = new l.ObjectValue(e2, e2.intrinsics.ObjectPrototype), p2 = l.AbstractValue.createTemporalFromBuildFunction(e2, l.ObjectValue, [t3, a3], (0, v.createOperationDescriptor)("REACT_TEMPORAL_FUNC"), { skipInvariant: true, isPure: true });
      (0, d.default)(p2 instanceof l.AbstractObjectValue), p2.values = new u.ValuesDomain(/* @__PURE__ */ new Set([o3]));
      var h2 = l.AbstractValue.createTemporalFromBuildFunction(e2, l.ObjectValue, [p2], (0, v.createOperationDescriptor)("REACT_CREATE_CONTEXT_PROVIDER"), { skipInvariant: true, isPure: true });
      return (0, d.default)(h2 instanceof l.AbstractObjectValue), h2.values = new u.ValuesDomain(/* @__PURE__ */ new Set([s3])), c.Properties.Set(e2, o3, "$$typeof", (0, f.getReactSymbol)("react.context", e2), true), c.Properties.Set(e2, o3, "currentValue", a3, true), c.Properties.Set(e2, o3, "defaultValue", a3, true), c.Properties.Set(e2, o3, "changedBits", new l.NumberValue(e2, 0), true), c.Properties.Set(e2, o3, "Consumer", p2, true), c.Properties.Set(e2, s3, "$$typeof", (0, f.getReactSymbol)("react.provider", e2), true), c.Properties.Set(e2, s3, "context", p2, true), c.Properties.Set(e2, o3, "Provider", h2, true), p2;
    }), (0, h.addMockFunctionToObject)(e2, m, t2, "createRef", function(t3) {
      var r3 = l.AbstractValue.createTemporalFromBuildFunction(e2, l.FunctionValue, [t3], (0, v.createOperationDescriptor)("REACT_TEMPORAL_FUNC"), { skipInvariant: true, isPure: true });
      return (0, d.default)(r3 instanceof l.AbstractObjectValue), r3;
    }), m.refuseSerialization = false, m.makeFinal(), m;
  };
  var s = r(34), u = r(12), l = r(0), c = r(2), f = r(14), p = r(59), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), h = r(92), v = r(9);
  var y = (0, s.parseExpression)("\n  function createReact(\n    REACT_ELEMENT_TYPE,\n    REACT_FRAGMENT_TYPE,\n    REACT_PORTAL_TYPE,\n    REACT_FORWARD_REF_TYPE,\n    ReactElement,\n    ReactCurrentOwner\n  ) {\n    function makeEmptyFunction(arg) {\n      return function() {\n        return arg;\n      };\n    }\n    var emptyFunction = function() {};\n\n    emptyFunction.thatReturns = makeEmptyFunction;\n    emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n    emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n    emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n    emptyFunction.thatReturnsThis = function() { return this; };\n    emptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true,\n    };\n\n    function hasValidRef(config) {\n      return config.ref !== undefined;\n    }\n\n    function hasValidKey(config) {\n      return config.key !== undefined;\n    }\n\n    function Component(props, context) {\n      this.props = props;\n      this.context = context;\n      this.refs = {};\n      this.setState = function () {}; // NO-OP\n      this.setState.__PREPACK_MOCK__ = true;\n    }\n\n    Component.prototype.isReactComponent = {};\n\n    function PureComponent(props, context) {\n      this.props = props;\n      this.context = context;\n      this.refs = {};\n      this.setState = function () {}; // NO-OP\n      this.setState.__PREPACK_MOCK__ = true;\n    }\n\n    PureComponent.prototype.isReactComponent = {};\n    PureComponent.prototype.isPureReactComponent = true;\n\n    function forwardRef(render) {\n      // NOTE: In development there are a bunch of warnings which will be logged to validate the `render` function.\n      // Since Prepack is a production only tool (for now) we don\u2019t include these warnings.\n      //\n      // https://github.com/facebook/react/blob/f9358c51c8de93abe3cdd0f4720b489befad8c48/packages/react/src/forwardRef.js\n      return {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render,\n      };\n    }\n\n    var userProvidedKeyEscapeRegex = //+/g;\n\n    function escapeUserProvidedKey(text) {\n      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n\n    function escape(key) {\n      const escapeRegex = /[=:]/g;\n      const escaperLookup = {\n        '=': '=0',\n        ':': '=2',\n      };\n      const escapedString = ('' + key).replace(escapeRegex, function(match) {\n        return escaperLookup[match];\n      });\n\n      return '$' + escapedString;\n    }\n\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    var POOL_SIZE = 10;\n    function getPooledTraverseContext(\n      mapResult,\n      keyPrefix,\n      mapFunction,\n      mapContext,\n    ) {\n      return {\n        result: mapResult,\n        keyPrefix: keyPrefix,\n        func: mapFunction,\n        context: mapContext,\n        count: 0,\n      };\n    }\n\n    function releaseTraverseContext(traverseContext) {\n      traverseContext.result = null;\n      traverseContext.keyPrefix = null;\n      traverseContext.func = null;\n      traverseContext.context = null;\n      traverseContext.count = 0;\n    }\n\n    function traverseAllChildren(children, callback, traverseContext) {\n      if (children == null) {\n        return 0;\n      }\n\n      return traverseAllChildrenImpl(children, '', callback, traverseContext);\n    }\n\n    function getComponentKey(component, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (\n        typeof component === 'object' &&\n        component !== null &&\n        component.key != null\n      ) {\n        // Explicit key\n        return escape(component.key);\n      }\n      // Implicit key determined by the index in the set\n      return index.toString(36);\n    }\n\n    function traverseAllChildrenImpl(\n      children,\n      nameSoFar,\n      callback,\n      traverseContext,\n    ) {\n      const type = typeof children;\n\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n\n      let invokeCallback = false;\n\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n        }\n      }\n\n      if (invokeCallback) {\n        callback(\n          traverseContext,\n          children,\n          // If it's the only child, treat the name as if it was wrapped in an array\n          // so that it's consistent if the number of children grows.\n          nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n        );\n        return 1;\n      }\n\n      let child;\n      let nextName;\n      let subtreeCount = 0; // Count of children found in the current subtree.\n      const nextNamePrefix =\n        nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n      if (Array.isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getComponentKey(child, i);\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            callback,\n            traverseContext,\n          );\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          var iterator = iteratorFn.call(children);\n          let step;\n          let ii = 0;\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getComponentKey(child, ii++);\n            subtreeCount += traverseAllChildrenImpl(\n              child,\n              nextName,\n              callback,\n              traverseContext,\n            );\n          }\n        } else if (type === 'object') {\n          let addendum = '';\n          var childrenString = '' + children;\n        }\n      }\n\n      return subtreeCount;\n    }\n\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(\n        oldElement.type,\n        newKey,\n        oldElement.ref,\n        oldElement.props,\n      );\n    \n      return newElement;\n    }\n\n    function mapSingleChildIntoContext(bookKeeping, child, childKey) {\n      var {result, keyPrefix, func, context} = bookKeeping;\n    \n      let mappedChild = func.call(context, child, bookKeeping.count++);\n      if (Array.isArray(mappedChild)) {\n        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, c => c);\n      } else if (mappedChild != null) {\n        if (isValidElement(mappedChild)) {\n          mappedChild = cloneAndReplaceKey(\n            mappedChild,\n            // Keep both the (mapped) and old keys if they differ, just as\n            // traverseAllChildren used to do for objects as children\n            keyPrefix +\n              (mappedChild.key && (!child || child.key !== mappedChild.key)\n                ? escapeUserProvidedKey(mappedChild.key) + '/'\n                : '') +\n              childKey,\n          );\n        }\n        result.push(mappedChild);\n      }\n    }\n\n    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n      var escapedPrefix = '';\n      if (prefix != null) {\n        escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n      }\n      const traverseContext = getPooledTraverseContext(\n        array,\n        escapedPrefix,\n        func,\n        context,\n      );\n      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n\n    function forEachSingleChild(bookKeeping, child, name) {\n      var {func, context} = bookKeeping;\n      func.call(context, child, bookKeeping.count++);\n    }\n\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      if (children == null) {\n        return children;\n      }\n      var traverseContext = getPooledTraverseContext(\n        null,\n        null,\n        forEachFunc,\n        forEachContext,\n      );\n      traverseAllChildren(children, forEachSingleChild, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n      return result;\n    }\n\n    function countChildren(children) {\n      return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n    }\n\n    function onlyChild(children) {\n      return children;\n    }\n\n    function toArray(children) {\n      var result = [];\n      mapIntoWithKeyPrefixInternal(\n        children,\n        result,\n        null,\n        emptyFunction.thatReturnsArgument,\n      );\n      return result;\n    }\n\n    function isValidElement(object) {\n      return (\n        typeof object === 'object' &&\n        object !== null &&\n        object.$$typeof === REACT_ELEMENT_TYPE\n      );\n    }\n\n    function shim() {\n\n    }\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    };\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim\n    };\n\n    ReactPropTypes.checkPropTypes = shim;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n\n    var ReactSharedInternals = {\n      ReactCurrentOwner,\n    };\n\n    return {\n      Children: {\n        forEach: forEachChildren,\n        map: mapChildren,\n        count: countChildren,\n        only: onlyChild,\n        toArray,\n      },\n      Component,\n      PureComponent,\n      forwardRef,\n      Fragment: REACT_FRAGMENT_TYPE,\n      isValidElement,\n      version: \"16.2.0\",\n      PropTypes: ReactPropTypes,\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals,\n    };\n  }\n", { plugins: ["flow"] });
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = e2.$GlobalObject;
    if (e2.react.enabled) {
      e2.react.defaultPropsHelper = (0, h.createDefaultPropsHelper)(e2);
      var r2 = new i.ArrayValue(e2);
      r2.makeFinal(), e2.react.emptyArray = r2;
      var y = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype);
      y.makeFinal(), e2.react.emptyObject = y;
    }
    var m = i.AbstractValue.createAbstractObject(e2, "module");
    m.kind = "resolved";
    var b = i.AbstractValue.createAbstractObject(e2, "module.exports");
    b.kind = "resolved", m.$DefineOwnProperty("exports", new v.PropertyDescriptor({ value: b, writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("module", new v.PropertyDescriptor({ value: m, writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("require", new v.PropertyDescriptor({ value: new i.NativeFunctionValue(e2, "require", "require", 0, function(t3, r3) {
      var c2 = n(r3, 1)[0];
      (0, d.default)(c2 instanceof i.StringValue);
      var h2, v2 = c2.value;
      if ("react" === v2 || "React" === v2) {
        if (void 0 === e2.fbLibraries.react) {
          var y2 = (0, a.createMockReact)(e2, v2);
          return e2.fbLibraries.react = y2, y2;
        }
        return e2.fbLibraries.react;
      }
      if ("react-dom" === v2 || "ReactDOM" === v2) {
        if (void 0 === e2.fbLibraries.reactDom) {
          var m2 = (0, o.createMockReactDOM)(e2, v2);
          return e2.fbLibraries.reactDom = m2, m2;
        }
        return e2.fbLibraries.reactDom;
      }
      if ("react-dom/server" === v2 || "ReactDOMServer" === v2) {
        if (void 0 === e2.fbLibraries.reactDomServer) {
          var b2 = (0, o.createMockReactDOMServer)(e2, v2);
          return e2.fbLibraries.reactDomServer = b2, b2;
        }
        return e2.fbLibraries.reactDomServer;
      }
      if ("react-native" === v2 || "ReactNative" === v2) {
        if (void 0 === e2.fbLibraries.reactNative) {
          var g = (0, s.createMockReactNative)(e2, v2);
          return e2.fbLibraries.reactNative = g, g;
        }
        return e2.fbLibraries.reactNative;
      }
      if ("react-relay" === v2 || "RelayModern" === v2) {
        if (void 0 === e2.fbLibraries.reactRelay) {
          var w = (0, u.createMockReactRelay)(e2, v2);
          return e2.fbLibraries.reactRelay = w, w;
        }
        return e2.fbLibraries.reactRelay;
      }
      if ("prop-types" === v2 || "PropTypes" === v2) {
        if (void 0 === e2.fbLibraries.react) throw new f.FatalError("unable to require PropTypes due to React not being referenced in scope");
        var E = (0, p.Get)(e2, e2.fbLibraries.react, "PropTypes");
        return (0, d.default)(E instanceof i.ObjectValue), E;
      }
      return e2.fbLibraries.other.has(v2) ? h2 = e2.fbLibraries.other.get(v2) : (h2 = (0, l.createAbstract)(e2, "function", 'require("'.concat(v2, '")')), e2.fbLibraries.other.set(v2, h2)), (0, d.default)(h2 instanceof i.AbstractValue), h2;
    }), writable: true, enumerable: false, configurable: true })), e2.isCompatibleWith("fb-www") && (0, c.createFbMocks)(e2, t2);
  };
  var i = r(0), a = r(243), o = r(242), s = r(237), u = r(236), l = r(68), c = r(235), f = r(4), p = r(3), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), h = r(14), v = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = e2.$GlobalObject;
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.$DefineOwnProperty("console", new i.PropertyDescriptor({ value: (0, n.default)(e2), writable: true, enumerable: false, configurable: true }));
    for (var r2 = ["document", "setTimeout", "setInterval", "window", "process", "setImmediate", "clearTimeout", "clearInterval", "clearImmediate", "alert", "navigator", "module", "requestAnimationFrame", "cancelAnimationFrame", "requestIdleCallback", "cancelIdleCallback", "Symbol", "Promise", "WeakSet", "Proxy", "WebSocket", "Request", "Response", "Headers", "FormData", "Worker", "Node", "Blob", "URLSearchParams", "FileReader", "XMLHttpRequest"], a = 0; a < r2.length; a++) {
      var o = r2[a];
      t2.$DefineOwnProperty(o, new i.PropertyDescriptor({ value: e2.intrinsics.undefined, writable: true, enumerable: false, configurable: true }));
    }
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(134)), i = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new n.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "document", false);
    if (e2.useAbstractInterpretation) {
      for (var r2 = 0; r2 < s.length; r2++) {
        var u = s[r2], l = (0, i.createAbstract)(e2, "function", "document.".concat(u));
        a.Properties.Set(e2, t2, u, l, false);
      }
      var c = new n.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "document.body");
      a.Properties.Set(e2, t2, "body", c, false);
      var f = (0, i.createAbstract)(e2, t2, "document");
      return (0, o.default)(f instanceof n.AbstractObjectValue), f;
    }
    return t2;
  };
  var n = r(0), i = r(68), a = r(2), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var s = ["getElementById", "getElementByTag", "getElementByClassName", "getElementByName", "getElementByTagName", "getElementByTagNameNS", "querySelector", "querySelectorAll", "createElement", "createDocumentFragment", "createTextNode"];
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = e2.$GlobalObject;
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.$DefineOwnProperty("console", new l.PropertyDescriptor({ value: (0, a.default)(e2), writable: true, enumerable: false, configurable: true }));
    t2.$DefineOwnProperty("self", new l.PropertyDescriptor({ value: t2, writable: true, enumerable: true, configurable: true })), t2.$DefineOwnProperty("window", new l.PropertyDescriptor({ value: t2, writable: true, enumerable: true, configurable: true })), t2.$DefineOwnProperty("document", new l.PropertyDescriptor({ value: (0, i.default)(e2), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("setTimeout", new l.PropertyDescriptor({ value: new n.NativeFunctionValue(e2, "global.setTimeout", "", 2, function(t3, r2) {
      var i2 = r2[0].throwIfNotConcrete();
      if (!(i2 instanceof n.FunctionValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "callback arguments must be function");
      if (!e2.useAbstractInterpretation) throw new o.FatalError("TODO #1003: implement global.setTimeout");
      (0, s.default)(void 0 !== e2.generator);
      var a2 = e2.generator;
      return a2.emitCallAndCaptureResult(u.TypesDomain.topVal, u.ValuesDomain.topVal, "global.setTimeout", r2);
    }), writable: true, enumerable: true, configurable: true })), t2.$DefineOwnProperty("clearTimeout", new l.PropertyDescriptor({ value: new n.NativeFunctionValue(e2, "global.clearTimeout", "", 2, function(t3, r2) {
      if (!e2.useAbstractInterpretation) throw new o.FatalError("TODO #1003: implement global.clearTimeout");
      (0, s.default)(void 0 !== e2.generator);
      var n2 = e2.generator;
      return n2.emitCall("global.clearTimeout", r2), e2.intrinsics.undefined;
    }), writable: true, enumerable: true, configurable: true })), t2.$DefineOwnProperty("setInterval", new l.PropertyDescriptor({ value: new n.NativeFunctionValue(e2, "global.setInterval", "", 2, function(t3, r2) {
      if (!e2.useAbstractInterpretation) throw new o.FatalError("TODO #1003: implement global.setInterval");
      var i2 = r2[0].throwIfNotConcrete();
      if (!(i2 instanceof n.FunctionValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "callback arguments must be function");
      (0, s.default)(void 0 !== e2.generator);
      var a2 = e2.generator;
      return a2.emitCallAndCaptureResult(u.TypesDomain.topVal, u.ValuesDomain.topVal, "global.setInterval", r2);
    }), writable: true, enumerable: true, configurable: true })), t2.$DefineOwnProperty("clearInterval", new l.PropertyDescriptor({ value: new n.NativeFunctionValue(e2, "global.clearInterval", "", 2, function(t3, r2) {
      if (!e2.useAbstractInterpretation) throw new o.FatalError("TODO #1003: implement global.clearInterval");
      (0, s.default)(void 0 !== e2.generator);
      var n2 = e2.generator;
      return n2.emitCall("global.clearInterval", r2), e2.intrinsics.undefined;
    }), writable: true, enumerable: true, configurable: true }));
  };
  var n = r(0), i = c(r(246)), a = c(r(134)), o = r(4), s = c(r(1)), u = r(12), l = r(6);
  function c(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return o(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || a();
  }
  function i(e2, t2) {
    return o(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || a();
  }
  function a() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function o(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.createAbstractFunction = w, t.default = function(e2) {
    var t2 = e2.$GlobalObject;
    if (t2.$DefineOwnProperty("__dump", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__dump", "__dump", 0, function(e3, t3) {
      return console.log("dump", t3.map(function(e4) {
        return e4.serialize();
      })), e3;
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__abstract", new g.PropertyDescriptor({ value: w(e2), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__abstractOrNull", new g.PropertyDescriptor({ value: w(e2, e2.intrinsics.null), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__abstractOrNullOrUndefined", new g.PropertyDescriptor({ value: w(e2, e2.intrinsics.null, e2.intrinsics.undefined), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__abstractOrUndefined", new g.PropertyDescriptor({ value: w(e2, e2.intrinsics.undefined), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__optimize", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__optimize", "__optimize", 1, function(t3, r3) {
      var n2, a3 = i(r3, 2), o3 = a3[0], u2 = a3[1];
      if (void 0 !== u2 && (n2 = (0, b.createAndValidateArgModel)(e2, u2)), !(o3 instanceof s.ECMAScriptSourceFunctionValue || o3 instanceof s.AbstractValue)) {
        var l2 = o3.expressionLocation ? "".concat(o3.expressionLocation.start.line, ":").concat(o3.expressionLocation.start.column, " ") + "".concat(o3.expressionLocation.end.line, ":").concat(o3.expressionLocation.end.line) : "location unknown";
        if ("Recover" !== e2.handleError(new v.CompilerDiagnostic("Optimized Function Value ".concat(l2, " is an not a function or react element"), e2.currentLocation, "PP0033", "Warning"))) throw new v.FatalError();
        return e2.intrinsics.undefined;
      }
      var c2 = e2.optimizedFunctions.get(o3);
      if (c2) {
        var f2 = u2 instanceof s.StringValue ? u2.value : u2;
        if (JSON.stringify(c2) !== f2) {
          var p2 = new v.CompilerDiagnostic("__optimize called twice with different argModelStrings", e2.currentLocation, "PP1008", "Warning");
          if ("Recover" !== e2.handleError(p2)) throw new v.FatalError();
          return e2.intrinsics.undefined;
        }
      }
      return e2.optimizedFunctions.set(o3, n2), o3;
    }), writable: true, enumerable: false, configurable: true })), e2.react.enabled) {
      t2.$DefineOwnProperty("__reactComponentTrees", new g.PropertyDescriptor({ value: new s.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "__reactComponentTrees", true), writable: true, enumerable: false, configurable: true }));
      var r2 = 0;
      t2.$DefineOwnProperty("__optimizeReactComponentTree", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__optimizeReactComponentTree", "__optimizeReactComponentTree", 0, function(t3, n2) {
        var a3 = i(n2, 2), o3 = a3[0], u2 = a3[1], l2 = o3 instanceof s.ECMAScriptSourceFunctionValue || o3 instanceof s.BoundFunctionValue || (0, h.valueIsKnownReactAbstraction)(e2, o3), c2 = u2 instanceof s.ObjectValue || u2 === e2.intrinsics.undefined || void 0 === u2;
        if (!l2 || !c2) {
          var f2 = new v.CompilerDiagnostic("__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments", e2.currentLocation, "PP0024", "FatalError");
          if (e2.handleError(f2), "Fail" === e2.handleError(f2)) throw new v.FatalError();
        }
        var p2 = new s.ObjectValue(e2, e2.intrinsics.ObjectPrototype);
        return p2.$Set("rootComponent", o3, p2), p2.$Set("config", u2 || e2.intrinsics.undefined, p2), e2.assignToGlobal(y.memberExpression(y.memberExpression(y.identifier("global"), y.identifier("__reactComponentTrees")), y.identifier("" + r2++)), p2), o3;
      }), writable: true, enumerable: false, configurable: true }));
    }
    function a2(t3) {
      return new s.NativeFunctionValue(e2, "global.__residual", "__residual", 2, function(r3, i2) {
        var a3 = n(i2), o3 = a3[0], u2 = a3[1], l2 = a3.slice(2);
        if (!e2.useAbstractInterpretation) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "realm is not partial");
        var d2 = (0, p.parseTypeNameOrTemplate)(e2, o3), h2 = d2.type, v2 = d2.template;
        if (!s.Value.isTypeCompatibleWith(u2.constructor, s.FunctionValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "cannot determine residual function");
        (0, f.default)(u2 instanceof s.FunctionValue), u2.isResidual = true, t3 && (u2.isUnsafeResidual = true);
        var y2 = s.AbstractValue.createTemporalFromBuildFunction(e2, h2, [u2].concat(l2), (0, m.createOperationDescriptor)("RESIDUAL_CALL"));
        return v2 && ((0, f.default)(y2 instanceof s.AbstractValue, "the nested properties should only be rebuilt for an abstract value"), v2.makePartial(), y2.values = new c.ValuesDomain(/* @__PURE__ */ new Set([v2])), (0, f.default)(e2.generator), e2.rebuildNestedProperties(y2, y2.getIdentifier())), y2;
      });
    }
    function o2(t3, r3, n2, i2) {
      return new s.NativeFunctionValue(e2, "global." + t3, t3, i2, function(t4, i3) {
        return r3(i3), (0, f.default)(void 0 !== e2.generator), e2.generator.emitStatement(i3, n2), e2.intrinsics.undefined;
      });
    }
    t2.$DefineOwnProperty("__evaluatePureFunction", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__evaluatePureFunction", "__evaluatePureFunction", 0, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      (0, f.default)(a3 instanceof s.ECMAScriptSourceFunctionValue), (0, f.default)("function" == typeof a3.$Call);
      var o3 = a3.$Call;
      return e2.evaluatePure(function() {
        return o3(e2.intrinsics.undefined, []);
      }, true, null);
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__initializedModules", new g.PropertyDescriptor({ value: new s.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "__initializedModules", true), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__checkedBindings", new g.PropertyDescriptor({ value: new s.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "__checkedBindings", true), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__assume", new g.PropertyDescriptor({ value: o2("__assume", function(t3) {
      var r3 = i(t3, 2), n2 = r3[0];
      r3[1];
      if (!n2.mightBeTrue()) {
        var a3 = new v.CompilerDiagnostic("Assumed condition cannot hold", e2.currentLocation, "PP0040", "FatalError");
        throw e2.handleError(a3), new v.FatalError();
      }
      u.Path.pushAndRefine(n2);
    }, (0, m.createOperationDescriptor)("ASSUME_CALL"), 2), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__debugValue", new g.PropertyDescriptor({ value: o2("__debugValue", function(e3) {
      var t3 = i(e3, 2);
      t3[0], t3[1];
    }, (0, m.createOperationDescriptor)("NOOP"), 2), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__residual", new g.PropertyDescriptor({ value: a2(false), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__residual_unsafe", new g.PropertyDescriptor({ value: a2(true), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__isAbstract", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__isAbstract", "__isAbstract", 1, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      return new s.BooleanValue(e2, a3 instanceof s.AbstractValue);
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__makePartial", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__makePartial", "__makePartial", 1, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      if (a3 instanceof s.AbstractObjectValue || a3 instanceof s.ObjectValue) return a3.makePartial(), a3;
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an (abstract) object");
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__makeFinal", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__makeFinal", "__makeFinal", 1, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      if (a3 instanceof s.ObjectValue || a3 instanceof s.AbstractObjectValue && !a3.values.isTop()) return a3.makeFinal(), a3;
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an object or abstract object value (non-top)");
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__makeSimple", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__makeSimple", "__makeSimple", 1, function(t3, r3) {
      var n2 = i(r3, 2), a3 = n2[0], o3 = n2[1];
      if (a3 instanceof s.AbstractObjectValue || a3 instanceof s.ObjectValue) return a3.makeSimple(o3), a3;
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an (abstract) object");
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__assumeDataProperty", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__assumeDataProperty", "__assumeDataProperty", 3, function(t3, r3) {
      var n2 = i(r3, 4), a3 = n2[0], o3 = n2[1], l2 = n2[2], c2 = n2[3];
      if (!e2.useAbstractInterpretation) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "realm is not partial");
      if (a3 instanceof s.AbstractObjectValue || a3 instanceof s.ObjectValue) {
        var p2 = e2.generator;
        (0, f.default)(p2);
        var d2 = u.To.ToStringPartial(e2, o3);
        if (e2.emitConcreteModel) p2.emitConcreteModel(d2, l2);
        else if (e2.invariantLevel >= 1) {
          var h2 = c2 ? u.To.ToStringPartial(e2, c2) : "FULL_INVARIANT";
          switch (h2) {
            case "VALUE_DEFINED_INVARIANT":
              p2.emitPropertyInvariant(a3, d2, l2.mightBeUndefined() ? "PRESENT" : "DEFINED");
              break;
            case "SKIP_INVARIANT":
              break;
            case "FULL_INVARIANT":
              p2.emitFullInvariant(a3, d2, l2);
              break;
            default:
              (0, f.default)(false, "Invalid invariantOption " + h2);
          }
          e2.neverCheckProperty(a3, d2) || e2.markPropertyAsChecked(a3, d2);
        }
        return e2.generator = void 0, a3.$Set(d2, l2, a3), e2.generator = p2, a3.intrinsicName && e2.rebuildObjectProperty(a3, d2, l2, a3.intrinsicName), t3.$Realm.intrinsics.undefined;
      }
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an (abstract) object");
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__replaceFunctionImplementation_unsafe", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__replaceFunctionImplementation_unsafe", "__replaceFunctionImplementation_unsafe", 2, function(t3, r3) {
      var n2 = i(r3, 2), a3 = n2[0], o3 = n2[1];
      if (!(a3 instanceof s.ECMAScriptSourceFunctionValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "first argument is not a function with source code");
      if (!(o3 instanceof s.ECMAScriptSourceFunctionValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "second argument is not a function with source code");
      return a3.$Environment = o3.$Environment, a3.$ScriptOrModule = o3.$ScriptOrModule, a3.$ConstructorKind = o3.$ConstructorKind, a3.$ThisMode = o3.$ThisMode, a3.$HomeObject = o3.$HomeObject, a3.$FunctionKind = o3.$FunctionKind, a3.$Strict = o3.$Strict, a3.$FormalParameters = o3.$FormalParameters, a3.$ECMAScriptCode = o3.$ECMAScriptCode, a3.$HasComputedName = o3.$HasComputedName, a3.$HasEmptyConstructor = o3.$HasEmptyConstructor, a3.loc = o3.loc, t3.$Realm.intrinsics.undefined;
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__IntrospectionError", new g.PropertyDescriptor({ value: e2.intrinsics.__IntrospectionError, writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__isIntegral", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__isIntegral", "__isIntegral", 1, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      return new s.BooleanValue(e2, a3 instanceof s.IntegralValue);
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__describe", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__describe", "__describe", 1, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      return new s.StringValue(e2, (0, d.describeValue)(a3));
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__fatal", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__fatal", "__fatal", 0, function(e3, t3) {
      n(t3);
      throw new v.FatalError();
    }), writable: true, enumerable: false, configurable: true })), t2.$DefineOwnProperty("__eagerlyRequireModuleDependencies", new g.PropertyDescriptor({ value: new s.NativeFunctionValue(e2, "global.__eagerlyRequireModuleDependencies", "__eagerlyRequireModuleDependencies", 1, function(t3, r3) {
      var n2 = i(r3, 1), a3 = n2[0];
      if (!((0, l.IsCallable)(e2, a3) && a3 instanceof s.FunctionValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "argument must be callable function");
      var o3 = a3.$Call;
      if ("function" != typeof o3) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "argument must be directly callable");
      var u2 = e2.eagerlyRequireModuleDependencies;
      e2.eagerlyRequireModuleDependencies = true;
      try {
        return o3(e2.intrinsics.undefined, []);
      } finally {
        e2.eagerlyRequireModuleDependencies = u2;
      }
    }), writable: true, enumerable: false, configurable: true }));
  };
  var s = r(0), u = r(2), l = r(3), c = r(12), f = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), p = r(68), d = r(94), h = r(14), v = r(4), y = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), m = r(9), b = r(100), g = r(6);
  function w(e2) {
    for (var t2 = arguments.length, r2 = new Array(t2 > 1 ? t2 - 1 : 0), n2 = 1; n2 < t2; n2++) r2[n2 - 1] = arguments[n2];
    return new s.NativeFunctionValue(e2, "global.__abstract", "__abstract", 0, function(t3, n3) {
      var a2 = i(n3, 3), o2 = a2[0], u2 = a2[1], l2 = a2[2], c2 = u2;
      if (c2 instanceof s.StringValue && (c2 = c2.value), void 0 !== c2 && "string" != typeof c2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "intrinsic name argument is not a string");
      if (l2 && !(l2 instanceof s.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "options must be an ObjectValue if provided");
      return p.createAbstract.apply(void 0, [e2, o2, c2, l2].concat(r2));
    });
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    (0, n.default)(e2), e2.isCompatibleWith("browser") && (0, i.default)(e2);
    (e2.isCompatibleWith("fb-www") || e2.isCompatibleWith("node-react")) && ((0, i.default)(e2), (0, o.default)(e2));
    (e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile")) && (0, a.default)(e2);
    return e2;
  };
  var n = s(r(248)), i = s(r(247)), a = s(r(245)), o = s(r(244));
  function s(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    if (void 0 !== r2.intrinsicName) return r2;
    var n2 = e2.errorHandler, a2 = e2.isReadOnly;
    e2.isReadOnly = true;
    var o2 = false;
    e2.statistics.simplificationAttempts++, e2.inSimplificationPath || (e2.inSimplificationPath = o2 = true);
    try {
      e2.errorHandler = function(e3) {
        if ("PP0029" === e3.errorCode) throw new i.FatalError("".concat(e3.errorCode, ": ").concat(e3.message));
        throw new i.FatalError();
      };
      var s2 = p(e2, r2, t2, 0);
      return s2 !== r2 && e2.statistics.simplifications++, s2;
    } catch (e3) {
      if ("Invariant Violation" === e3.name) throw e3;
      if (e3 instanceof i.FatalError && "string" == typeof e3.message && e3.message.includes("PP0029")) {
        if (o2) return r2;
        throw e3;
      }
      return r2;
    } finally {
      o2 && (e2.abstractValueImpliesCounter = 0, e2.inSimplificationPath = false), e2.errorHandler = n2, e2.isReadOnly = a2;
    }
  };
  var i = r(4), a = r(12), o = f(r(1)), s = (r(8), r(0)), u = r(2), l = f(r(148)), c = r(9);
  function f(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function p(e2, t2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a2 = arguments.length > 3 ? arguments[3] : void 0;
    if (t2 instanceof s.ConcreteValue || a2 > 5) return t2;
    if ((0, o.default)(t2 instanceof s.AbstractValue), r2 || t2.getType() === s.BooleanValue) {
      if (u.Path.implies(t2, a2 + 1)) return e2.intrinsics.true;
      if (u.Path.impliesNot(t2, a2 + 1)) return e2.intrinsics.false;
    }
    var f2 = t2.expressionLocation, v2 = t2.kind;
    switch (v2) {
      case "!":
        var m = n(t2.args, 1)[0];
        if ((0, o.default)(m instanceof s.AbstractValue), "!" === m.kind) {
          (0, o.default)(m instanceof s.AbstractValue);
          var b = n(m.args, 1)[0], g = p(e2, b, true, a2 + 1);
          if (r2 || g.getType() === s.BooleanValue) return g;
        }
        return y(e2, m, a2 + 1, f2, t2, r2);
      case "||":
      case "&&":
        var w = n(t2.args, 2), E = w[0], S = w[1], T = p(e2, E, r2, a2 + 1), A = p(e2, S, r2, a2 + 1);
        if (T instanceof s.AbstractValue && T.equals(A)) return T;
        if (!T.mightNotBeTrue()) return "&&" === v2 ? A : T;
        if (!T.mightNotBeFalse()) return "||" === v2 ? A : T;
        if (r2 || T.getType() === s.BooleanValue && A.getType() === s.BooleanValue) {
          if (!A.mightNotBeTrue()) return "&&" === v2 ? T : e2.intrinsics.true;
          if (!A.mightNotBeFalse()) return "||" === v2 ? T : e2.intrinsics.false;
        }
        if ("||" === v2 && A instanceof s.AbstractValue && "||" === A.kind) {
          if (T.equals(A.args[0])) return A;
          if (T instanceof s.AbstractValue && "!" === T.kind && r2 && T.args[0].equals(A.args[1])) return e2.intrinsics.true;
        }
        if ("&&" === v2) {
          if (T instanceof s.AbstractValue) {
            if ("&&" === T.kind) {
              if (r2 && T.args[0].equals(A)) return T;
              if (T.args[1].equals(A)) return T;
            } else if ("!" === T.kind && r2 && T.args[0].equals(A)) return e2.intrinsics.false;
          }
          if (A instanceof s.AbstractValue && "&&" === A.kind && (T.equals(A.args[0]) || T.equals(A.args[1]))) return A;
          if (A instanceof s.AbstractValue && "||" === A.kind) {
            var C, P, O = n(A.args, 2), x = O[0], _ = O[1];
            if (x instanceof s.AbstractValue && "&&" === x.kind && (T.equals(x.args[0]) ? C = x.args[1] : T.equals(x.args[1]) && (C = x.args[0])), _ instanceof s.AbstractValue && "&&" === _.kind && (T.equals(_.args[0]) ? P = _.args[1] : T.equals(_.args[1]) && (P = _.args[0])), void 0 !== C || void 0 !== P) {
              var V = s.AbstractValue.createFromLogicalOp(e2, "||", C || x, P || _, void 0, r2);
              return s.AbstractValue.createFromLogicalOp(e2, "&&", T, V, void 0, r2);
            }
          }
        }
        if (e2.instantRender.enabled && "||" === v2 && E instanceof s.AbstractValue && S instanceof s.AbstractValue && "===" === E.kind && "===" === S.kind) {
          var D = function(e3) {
            return !e3.mightNotBeNull() || !e3.mightNotBeUndefined();
          }, N = function(t3) {
            return s.AbstractValue.createFromBuildFunction(e2, s.BooleanValue, [k], (0, c.createOperationDescriptor)("CANNOT_BECOME_OBJECT"), { kind: "global.__cannotBecomeObject(A)" });
          }, I = n(E.args, 2), k = I[0], j = I[1], F = n(S.args, 2), R = F[0], M = F[1];
          if (k.equals(R) && !j.equals(M) && D(j) && D(M)) return N();
          if (j.equals(M) && !k.equals(R) && D(k) && D(R)) return N();
          if (k.equals(M) && !j.equals(R) && D(j) && D(R)) return N();
          if (j.equals(R) && !k.equals(M) && D(k) && D(M)) return N();
        }
        return T.equals(E) && A.equals(S) ? t2 : s.AbstractValue.createFromLogicalOp(e2, t2.kind, T, A, f2, r2, true);
      case "<":
      case "<=":
      case ">":
      case ">=":
        return (function(e3, t3, r3, n2) {
          var i2, a3 = t3.args, o2 = true, u2 = false, l2 = void 0;
          try {
            for (var c2, f3 = a3[Symbol.iterator](); !(o2 = (c2 = f3.next()).done); o2 = true) {
              var p2 = c2.value;
              if (p2 instanceof s.AbstractValue && "conditional" === p2.kind) {
                if (void 0 === i2) i2 = p2.args[0];
                else if (i2 !== p2.args[0]) return t3;
              }
            }
          } catch (e4) {
            u2 = true, l2 = e4;
          } finally {
            try {
              o2 || null == f3.return || f3.return();
            } finally {
              if (u2) throw l2;
            }
          }
          if (void 0 === i2) return t3;
          for (var d2 = a3.slice(0), h2 = a3.slice(0), v3 = 0; v3 < a3.length; v3++) {
            var y2 = a3[v3];
            y2 instanceof s.AbstractValue && "conditional" === y2.kind && (d2[v3] = y2.args[1], h2[v3] = y2.args[2]);
          }
          return s.AbstractValue.createFromConditionalOp(e3, i2, n2(d2), n2(h2), i2.expressionLocation, r3, true);
        })(e2, t2, r2, function(t3) {
          return s.AbstractValue.createFromBinaryOp(e2, v2, t3[0], t3[1], f2, void 0, r2, true);
        });
      case "==":
      case "!=":
      case "===":
      case "!==":
        return (function(e3, t3, r3) {
          var i2 = t3.expressionLocation, a3 = t3.kind, u2 = n(t3.args, 2), c2 = u2[0], f3 = u2[1];
          if (f3 instanceof l.default) return t3;
          c2 instanceof s.ConcreteValue && (f3 = c2 = f3);
          if ("===" === a3 || "==" === a3 || "!==" === a3 || "==" === a3) {
            if (!c2.mightNotBeNull()) {
              var p2 = d(e3, a3, f3, r3 + 1);
              if (void 0 !== p2) return p2;
            }
            if (!f3.mightNotBeNull()) {
              var v3 = d(e3, a3, c2, r3 + 1);
              if (void 0 !== v3) return v3;
            }
            if (!c2.mightNotBeUndefined()) {
              var m2 = h(e3, a3, f3, r3 + 1);
              if (void 0 !== m2) return m2;
            }
            if (!f3.mightNotBeUndefined()) {
              var b2 = h(e3, a3, c2, r3 + 1);
              if (void 0 !== b2) return b2;
            }
          }
          if ("===" === a3) {
            var g2 = c2.getType(), w2 = f3.getType();
            if (g2 !== w2) return g2 === s.Value || g2 === s.PrimitiveValue || w2 === s.Value || w2 === s.PrimitiveValue ? t3 : s.Value.isTypeCompatibleWith(g2, s.NumberValue) && s.Value.isTypeCompatibleWith(w2, s.NumberValue) || s.Value.isTypeCompatibleWith(g2, s.ObjectValue) && s.Value.isTypeCompatibleWith(w2, s.ObjectValue) ? t3 : e3.intrinsics.false;
            if (c2 instanceof s.AbstractValue && "conditional" === c2.kind) {
              var E2 = n(c2.args, 3), S2 = E2[0], T2 = E2[1], A2 = E2[2];
              if (T2.equals(f3) && !A2.equals(f3)) return S2;
              if (!T2.equals(f3) && A2.equals(f3)) return y(e3, S2, r3 + 1, i2);
            } else if (f3 instanceof s.AbstractValue && "conditional" === f3.kind) {
              var C2 = n(f3.args, 3), P2 = C2[0], O2 = C2[1], x2 = C2[2];
              if (O2.equals(c2) && !x2.equals(c2)) return P2;
              if (!c2.equals(O2) && c2.equals(x2)) return y(e3, P2, r3 + 1, i2);
            }
          } else if ("==" === a3) {
            var _2 = c2.getType(), V2 = _2 === s.NullValue || _2 === s.UndefinedValue, D2 = f3.getType(), N2 = D2 === s.NullValue || D2 === s.UndefinedValue;
            if ((0, o.default)(!V2 || !N2), V2) return D2 === s.Value || D2 === s.PrimitiveValue ? t3 : e3.intrinsics.false;
            if (N2) return _2 === s.Value || _2 === s.PrimitiveValue ? t3 : e3.intrinsics.false;
          }
          return t3;
        })(e2, t2, a2 + 1);
      case "conditional":
        var B, L, $ = n(t2.args, 3), G = $[0], z = $[1], U = $[2], W = p(e2, G, true, a2 + 1);
        if (G instanceof s.AbstractValue && W.mightBeFalse() && W.mightBeTrue()) {
          try {
            B = u.Path.withCondition(G, function() {
              return p(e2, z, r2, a2 + 1);
            });
          } catch (t3) {
            if (t3 instanceof i.InfeasiblePathError) return p(e2, U, r2, a2 + 1);
            throw t3;
          }
          try {
            L = u.Path.withInverseCondition(G, function() {
              return p(e2, U, r2, a2 + 1);
            });
          } catch (e3) {
            if (e3 instanceof i.InfeasiblePathError) return B;
            throw e3;
          }
        }
        var q = !W.mightNotBeFalse(), H = !W.mightNotBeTrue();
        if (void 0 !== B || q || (B = p(e2, z, r2, a2 + 1)), H) return (0, o.default)(void 0 !== B), B;
        if (void 0 === L && (L = p(e2, U, r2, a2 + 1)), q) return L;
        if ((0, o.default)(void 0 !== B), (0, o.default)(W instanceof s.AbstractValue), u.Path.implies(W, a2 + 1)) return B;
        var K = s.AbstractValue.createFromUnaryOp(e2, "!", W, true, f2, r2, true);
        if (!K.mightNotBeTrue()) return L;
        if (!K.mightNotBeFalse()) return B;
        if ((0, o.default)(K instanceof s.AbstractValue), u.Path.implies(K, a2 + 1)) return L;
        if (!r2) {
          if (u.Path.implies(s.AbstractValue.createFromBinaryOp(e2, "===", t2, B), a2 + 1)) return B;
          if (!B.mightBeNumber() && u.Path.implies(s.AbstractValue.createFromBinaryOp(e2, "!==", t2, B), a2 + 1)) return L;
          if (!L.mightBeNumber() && u.Path.implies(s.AbstractValue.createFromBinaryOp(e2, "!==", t2, L), a2 + 1)) return B;
          if (u.Path.implies(s.AbstractValue.createFromBinaryOp(e2, "===", t2, L), a2 + 1)) return L;
        }
        if (B.equals(L)) return B;
        var J = r2 ? W : p(e2, G, false, a2 + 1);
        if (J.equals(B)) return s.AbstractValue.createFromLogicalOp(e2, "||", B, L, f2, r2, true);
        if (J.equals(L)) return s.AbstractValue.createFromLogicalOp(e2, "&&", L, B, f2, r2, true);
        if (B instanceof s.AbstractValue && "conditional" === B.kind) {
          var Y = n(B.args, 2), X = Y[0], Q = Y[1];
          if (W.equals(X)) return s.AbstractValue.createFromConditionalOp(e2, W, Q, L, t2.expressionLocation, r2, true);
        }
        if (L instanceof s.AbstractValue && "conditional" === L.kind) {
          var Z = n(L.args, 3), ee = Z[0], te = Z[2];
          if (W.equals(ee)) return s.AbstractValue.createFromConditionalOp(e2, W, B, te, t2.expressionLocation, r2, true);
        }
        if (r2 || B.getType() === s.BooleanValue && L.getType() === s.BooleanValue) {
          if (!B.mightNotBeTrue() && !L.mightNotBeFalse()) return W;
          if (!B.mightNotBeFalse() && !L.mightNotBeTrue()) return s.AbstractValue.createFromUnaryOp(e2, "!", W, true, f2, true);
        }
        return W.equals(G) && B.equals(z) && L.equals(U) ? t2 : s.AbstractValue.createFromConditionalOp(e2, W, B, L, t2.expressionLocation, r2, true);
      case "abstractConcreteUnion":
        if (e2.pathConditions.isEmpty()) return t2;
        var re = n(s.AbstractValue.dischargeValuesFromUnion(e2, t2), 2), ne = re[0], ie = re[1];
        (0, o.default)(ne instanceof s.AbstractValue);
        var ae = [], oe = true, se = false, ue = void 0;
        try {
          for (var le, ce = ie[Symbol.iterator](); !(oe = (le = ce.next()).done); oe = true) {
            var fe = le.value;
            if (!u.Path.implies(s.AbstractValue.createFromBinaryOp(e2, "!==", t2, fe), a2 + 1)) {
              if (u.Path.implies(s.AbstractValue.createFromBinaryOp(e2, "===", t2, fe), a2 + 1)) return fe;
              ae.push(fe);
            }
          }
        } catch (e3) {
          se = true, ue = e3;
        } finally {
          try {
            oe || null == ce.return || ce.return();
          } finally {
            if (se) throw ue;
          }
        }
        return 0 === ae.length ? ne : ae.length === ie.length ? t2 : s.AbstractValue.createAbstractConcreteUnion(e2, ne, ae);
      default:
        return t2;
    }
  }
  function d(e2, t2, r2, i2, a2) {
    if ("==" === t2 || "!=" === t2) {
      if (!r2.mightNotBeNull() || !r2.mightNotBeUndefined()) return "==" === t2 ? e2.intrinsics.true : e2.intrinsics.false;
      if (!r2.mightBeNull() && !r2.mightBeUndefined()) return "==" === t2 ? e2.intrinsics.false : e2.intrinsics.true;
    } else {
      if (!r2.mightNotBeNull()) return "===" === t2 ? e2.intrinsics.true : e2.intrinsics.false;
      if (!r2.mightBeNull()) return "===" === t2 ? e2.intrinsics.false : e2.intrinsics.true;
    }
    if ((0, o.default)(r2 instanceof s.AbstractValue), "conditional" === r2.kind && i2 < 10) {
      var u2 = n(r2.args, 3), l2 = u2[0], c2 = u2[1], f2 = u2[2], p2 = d(e2, t2, c2, i2 + 1, a2), h2 = d(e2, t2, f2, i2 + 1, a2);
      if (void 0 !== p2 && void 0 !== h2) {
        if (!p2.mightNotBeTrue() && !h2.mightNotBeFalse()) return v(e2, l2, a2);
        if (!p2.mightNotBeFalse() && !h2.mightNotBeTrue()) return y(e2, l2, i2 + 1, a2);
      }
      if (void 0 !== p2 || void 0 !== h2) return void 0 === p2 && (p2 = s.AbstractValue.createFromBinaryOp(e2, t2, c2, e2.intrinsics.null, c2.expressionLocation, void 0, false, true)), void 0 === h2 && (h2 = s.AbstractValue.createFromBinaryOp(e2, t2, f2, e2.intrinsics.null, f2.expressionLocation, void 0, false, true)), s.AbstractValue.createFromConditionalOp(e2, l2, p2, h2, a2, true, true);
    }
  }
  function h(e2, t2, r2, i2, a2) {
    if ("==" === t2 || "!=" === t2) {
      if (!r2.mightNotBeNull() || !r2.mightNotBeUndefined()) return "==" === t2 ? e2.intrinsics.true : e2.intrinsics.false;
      if (!r2.mightBeNull() && !r2.mightBeUndefined()) return "==" === t2 ? e2.intrinsics.false : e2.intrinsics.true;
    } else {
      if (!r2.mightNotBeUndefined()) return "===" === t2 ? e2.intrinsics.true : e2.intrinsics.false;
      if (!r2.mightBeUndefined()) return "===" === t2 ? e2.intrinsics.false : e2.intrinsics.true;
    }
    if ((0, o.default)(r2 instanceof s.AbstractValue), "conditional" === r2.kind && i2 < 10) {
      var u2 = n(r2.args, 3), l2 = u2[0], c2 = u2[1], f2 = u2[2], p2 = h(e2, t2, c2, i2 + 1, a2), d2 = h(e2, t2, f2, i2 + 1, a2);
      if (void 0 !== p2 && void 0 !== d2) {
        if (!p2.mightNotBeTrue() && !d2.mightNotBeFalse()) return v(e2, l2, a2);
        if (!p2.mightNotBeFalse() && !d2.mightNotBeTrue()) return y(e2, l2, i2 + 1, a2);
      }
      if (void 0 !== p2 || void 0 !== d2) return void 0 === p2 && (p2 = s.AbstractValue.createFromBinaryOp(e2, t2, c2, e2.intrinsics.undefined, c2.expressionLocation, void 0, false, true)), void 0 === d2 && (d2 = s.AbstractValue.createFromBinaryOp(e2, t2, f2, e2.intrinsics.undefined, f2.expressionLocation, void 0, false, true)), s.AbstractValue.createFromConditionalOp(e2, l2, p2, d2, a2, true, true);
    }
  }
  function v(e2, t2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
    if (t2.getType() === s.BooleanValue) return t2;
    if (t2 instanceof s.ConcreteValue) return new s.BooleanValue(e2, u.To.ToBoolean(e2, t2));
    (0, o.default)(t2 instanceof s.AbstractValue);
    var n2 = s.AbstractValue.createFromUnaryOp(e2, "!", t2, true, t2.expressionLocation);
    return n2 instanceof s.ConcreteValue ? new s.BooleanValue(e2, !u.To.ToBoolean(e2, n2)) : ((0, o.default)(n2 instanceof s.AbstractValue), s.AbstractValue.createFromUnaryOp(e2, "!", n2, true, r2 || t2.expressionLocation));
  }
  function y(e2, t2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : void 0, u2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0, l2 = arguments.length > 5 ? arguments[5] : void 0;
    if (t2 instanceof s.ConcreteValue) return a.ValuesDomain.computeUnary(e2, "!", t2);
    if ((0, o.default)(t2 instanceof s.AbstractValue), !(t2 = p(e2, t2, true, r2 + 1)).mightNotBeTrue()) return e2.intrinsics.false;
    if (!t2.mightNotBeFalse()) return e2.intrinsics.true;
    if ((0, o.default)(t2 instanceof s.AbstractValue), "!" === t2.kind) {
      var c2 = n(t2.args, 1)[0];
      return l2 || c2.getType() === s.BooleanValue ? p(e2, c2, true, r2 + 1) : void 0 !== u2 ? u2 : v(e2, c2, i2);
    }
    if (2 === t2.args.length && !t2.args[0].mightBeNumber() && !t2.args[1].mightBeNumber()) {
      var f2, d2;
      switch (t2.kind) {
        case "===":
          f2 = "!==";
          break;
        case "==":
          f2 = "!=";
          break;
        case "!==":
          f2 = "===";
          break;
        case "!=":
          f2 = "==";
          break;
        case "<":
          f2 = ">=";
          break;
        case "<=":
          f2 = ">";
          break;
        case ">":
          f2 = "<=";
          break;
        case ">=":
          f2 = "<";
      }
      if (void 0 !== f2) {
        var h2 = p(e2, t2.args[0], false, r2 + 1), m = p(e2, t2.args[1], false, r2 + 1);
        return s.AbstractValue.createFromBinaryOp(e2, f2, h2, m, i2 || t2.expressionLocation);
      }
      switch (t2.kind) {
        case "&&":
          d2 = "||";
          break;
        case "||":
          d2 = "&&";
      }
      if (void 0 !== d2) {
        var b = y(e2, t2.args[0], r2 + 1), g = y(e2, t2.args[1], r2 + 1);
        return s.AbstractValue.createFromLogicalOp(e2, d2, b, g, i2 || t2.expressionLocation, true);
      }
    }
    return void 0 !== u2 ? u2 : s.AbstractValue.createFromUnaryOp(e2, "!", t2, true, i2 || t2.expressionLocation, true);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.StopEventManager = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(57)), a = r(93), o = r(135);
  r(5);
  var s = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getDebuggeeStopReason", value: function(e3, t2) {
      if (0 !== t2.length) {
        var r2, n2 = t2[0];
        return n2 instanceof a.Breakpoint ? r2 = "Breakpoint" : n2 instanceof o.StepIntoStepper ? r2 = "Step Into" : n2 instanceof o.StepOverStepper ? r2 = "Step Over" : n2 instanceof o.StepOutStepper ? r2 = "Step Out" : (0, i.default)(false, "Invalid stoppable object"), r2;
      }
    } }]), e2;
  })();
  t.StopEventManager = s;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.SteppingManager = void 0;
  r(5);
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(57)), a = r(135);
  var o = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._realm = t2, this._steppers = [], this._keepOldSteppers = false, true === r2 && (this._keepOldSteppers = true);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "processStepCommand", value: function(e3, t2) {
      "in" === e3 ? this._processStepIn(t2) : "over" === e3 ? this._processStepOver(t2) : "out" === e3 ? this._processStepOut(t2) : (0, i.default)(false, "Invalid step type: ".concat(e3));
    } }, { key: "_processStepIn", value: function(e3) {
      (0, i.default)(e3 && null !== e3.source), this._keepOldSteppers || (this._steppers = []), this._steppers.push(new a.StepIntoStepper(e3.source, e3.start.line, e3.start.column, this._realm.contextStack.length));
    } }, { key: "_processStepOver", value: function(e3) {
      (0, i.default)(e3 && null !== e3.source), this._keepOldSteppers || (this._steppers = []), this._steppers.push(new a.StepOverStepper(e3.source, e3.start.line, e3.start.column, this._realm.contextStack.length));
    } }, { key: "_processStepOut", value: function(e3) {
      (0, i.default)(e3 && null !== e3.source), this._keepOldSteppers || (this._steppers = []), this._steppers.push(new a.StepOutStepper(e3.source, e3.start.line, e3.start.column, this._realm.contextStack.length));
    } }, { key: "getAndDeleteCompletedSteppers", value: function(e3) {
      (0, i.default)(e3.loc && e3.loc.source);
      for (var t2 = 0, r2 = []; t2 < this._steppers.length; ) {
        var n2 = this._steppers[t2];
        n2.isComplete(e3, this._realm.contextStack.length) ? (r2.push(n2), this._steppers.splice(t2, 1)) : t2++;
      }
      return r2;
    } }]), e2;
  })();
  t.SteppingManager = o;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ReferenceMap = void 0;
  var i = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._counter = 0, this._mapping = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "add", value: function(e3) {
      return this._counter++, this._mapping.set(this._counter, e3), this._counter;
    } }, { key: "get", value: function(e3) {
      return this._mapping.get(e3);
    } }, { key: "clean", value: function() {
      this._counter = 0, this._mapping = /* @__PURE__ */ new Map();
    } }]), e2;
  })();
  t.ReferenceMap = i;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.VariableManager = void 0;
  var i = r(253), a = r(10), o = r(0), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(57)), u = r(11), l = r(136), c = r(2);
  var f = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._containerCache = /* @__PURE__ */ new Map(), this._referenceMap = new i.ReferenceMap(), this._realm = t2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getReferenceForValue", value: function(e3) {
      var t2 = this._containerCache.get(e3);
      if (void 0 !== t2) return t2;
      var r2 = this._referenceMap.add(e3);
      return this._containerCache.set(e3, r2), r2;
    } }, { key: "getVariablesByReference", value: function(e3) {
      var t2 = this._referenceMap.get(e3);
      return t2 ? t2 instanceof a.LexicalEnvironment ? this._getVariablesFromEnvRecord(t2.environmentRecord) : t2 instanceof o.ObjectValue ? this._getVariablesFromObject(t2) : t2 instanceof o.AbstractValue ? this._getAbstractValueContent(t2) : void (0, s.default)(false, "Invalid variable container") : [];
    } }, { key: "_getVariablesFromObject", value: function(e3) {
      var t2 = [], r2 = e3.properties.keys(), n2 = true, i2 = false, a2 = void 0;
      try {
        for (var l2, c2 = r2[Symbol.iterator](); !(n2 = (l2 = c2.next()).done); n2 = true) {
          var f2 = l2.value, p = e3.properties.get(f2);
          if ((0, s.default)(void 0 !== p), p.descriptor && (0, u.IsDataDescriptor)(this._realm, p.descriptor)) {
            var d = p.descriptor.value;
            if (d instanceof o.Value) {
              var h = this._getVariableFromValue(f2, d);
              t2.push(h);
            }
          }
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == c2.return || c2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return t2;
    } }, { key: "_getAbstractValueContent", value: function(e3) {
      var t2 = [{ name: "kind", value: e3.kind || "undefined", variablesReference: 0 }], r2 = 1, n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3.args[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
          var u2 = o2.value;
          t2.push(this._getVariableFromValue("arg-" + r2, u2)), r2++;
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return t2;
    } }, { key: "_getVariablesFromEnvRecord", value: function(e3) {
      if (e3 instanceof a.DeclarativeEnvironmentRecord) return this._getVariablesFromDeclarativeEnv(e3);
      if (e3 instanceof a.ObjectEnvironmentRecord) {
        if (e3.object instanceof o.ObjectValue) return this._getVariablesFromObject(e3.object);
        if (e3.object instanceof o.AbstractObjectValue) return [];
        (0, s.default)(false, "Invalid type of object environment record");
      } else {
        if (e3 instanceof a.GlobalEnvironmentRecord) {
          var t2 = this._getVariablesFromEnvRecord(e3.$DeclarativeRecord), r2 = this._getVariablesFromEnvRecord(e3.$ObjectRecord);
          return t2.concat(r2);
        }
        (0, s.default)(false, "Invalid type of environment record");
      }
    } }, { key: "_getVariablesFromDeclarativeEnv", value: function(e3) {
      var t2 = [], r2 = e3.bindings;
      for (var n2 in r2) {
        var i2 = r2[n2];
        if (i2.value) {
          var a2 = this._getVariableFromValue(n2, i2.value);
          t2.push(a2);
        }
      }
      return t2;
    } }, { key: "_getVariableFromValue", value: function(e3, t2) {
      return t2 instanceof o.ConcreteValue ? this._getVariableFromConcreteValue(e3, t2) : t2 instanceof o.AbstractValue ? this._getVariableFromAbstractValue(e3, t2) : void (0, s.default)(false, "Value is neither concrete nor abstract");
    } }, { key: "_getVariableFromAbstractValue", value: function(e3, t2) {
      return { name: e3, value: this._getAbstractValueDisplay(t2), variablesReference: this.getReferenceForValue(t2) };
    } }, { key: "_getAbstractValueDisplay", value: function(e3) {
      return void 0 === e3.intrinsicName || e3.intrinsicName.startsWith("_") ? "Abstract " + e3.types.getType().name : e3.intrinsicName;
    } }, { key: "_getVariableFromConcreteValue", value: function(e3, t2) {
      return t2 instanceof o.PrimitiveValue ? { name: e3, value: t2.toDisplayString(), variablesReference: 0 } : t2 instanceof o.ObjectValue ? { name: e3, value: t2.getKind(), variablesReference: this.getReferenceForValue(t2) } : void (0, s.default)(false, "Concrete value must be primitive or object");
    } }, { key: "evaluate", value: function(e3, t2) {
      var r2 = this._realm, n2 = false, i2 = false;
      if (void 0 !== e3) {
        if (e3 < 0 || e3 >= this._realm.contextStack.length) throw new l.DebuggerError("Invalid command", "Invalid value for frame ID");
        var a2 = this._realm.contextStack.length - 1 - e3;
        n2 = true, i2 = true, r2 = this._realm.contextStack[a2].realm;
      }
      var s2 = new o.StringValue(this._realm, t2);
      try {
        var u2 = c.Functions.PerformEval(this._realm, s2, r2, i2, n2), f2 = this._getVariableFromValue(t2, u2);
        return { kind: "evaluate", displayValue: f2.value, type: u2.getType().name, variablesReference: f2.variablesReference };
      } catch (e4) {
        return { kind: "evaluate", displayValue: "Failed to evaluate: ".concat(t2), type: "unknown", variablesReference: 0 };
      }
    } }, { key: "clean", value: function() {
      this._containerCache = /* @__PURE__ */ new Map(), this._referenceMap.clean();
    } }]), e2;
  })();
  t.VariableManager = f;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2, r2) {
    return t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.DebugMessage = void 0;
  var i = function e2() {
    !(function(e3, t2) {
      if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
    })(this, e2);
  };
  t.DebugMessage = i, n(i, "DEBUGGER_ATTACHED", "DebuggerAttached"), n(i, "PREPACK_RUN_COMMAND", "PrepackRun"), n(i, "BREAKPOINT_ADD_COMMAND", "Breakpoint-add-command"), n(i, "BREAKPOINT_REMOVE_COMMAND", "Breakpoint-remove-command"), n(i, "BREAKPOINT_ENABLE_COMMAND", "Breakpoint-enable-command"), n(i, "BREAKPOINT_DISABLE_COMMAND", "Breakpoint-disable-command"), n(i, "STACKFRAMES_COMMAND", "Stackframes-command"), n(i, "SCOPES_COMMAND", "Scopes-command"), n(i, "VARIABLES_COMMAND", "Variables-command"), n(i, "STEPINTO_COMMAND", "StepInto-command"), n(i, "STEPOVER_COMMAND", "StepOver-command"), n(i, "STEPOUT_COMMAND", "StepOut-command"), n(i, "EVALUATE_COMMAND", "Evaluate-command"), n(i, "PREPACK_READY_RESPONSE", "PrepackReady"), n(i, "PREPACK_FINISH_RESPONSE", "PrepackFinish"), n(i, "STOPPED_RESPONSE", "Stopped-response"), n(i, "STACKFRAMES_RESPONSE", "Stackframes-response"), n(i, "SCOPES_RESPONSE", "Scopes-response"), n(i, "VARIABLES_RESPONSE", "Variables-response"), n(i, "STEPINTO_RESPONSE", "StepInto-response"), n(i, "EVALUATE_RESPONSE", "Evaluate-response"), n(i, "BREAKPOINT_ADD_ACKNOWLEDGE", "Breakpoint-add-acknowledge"), n(i, "BREAKPOINT_REMOVE_ACKNOWLEDGE", "Breakpoint-remove-acknowledge"), n(i, "BREAKPOINT_ENABLE_ACKNOWLEDGE", "Breakpoint-enable-acknowledge"), n(i, "BREAKPOINT_DISABLE_ACKNOWLEDGE", "Breakpoint-disable-acknowledge");
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.PerFileBreakpointMap = void 0;
  var i = r(93), a = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._filePath = t2, this._breakpoints = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "addBreakpoint", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = arguments.length > 2 ? arguments[2] : void 0, n2 = arguments.length > 3 ? arguments[3] : void 0, a2 = new i.Breakpoint(this._filePath, e3, t2, r2, n2), o = this._getKey(e3, t2);
      this._breakpoints.set(o, a2);
    } }, { key: "getBreakpoint", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      if (0 !== t2) {
        var r2 = this._getKey(e3, t2);
        if (this._breakpoints.has(r2)) return this._breakpoints.get(r2);
        if (r2 = this._getKey(e3, 0), this._breakpoints.has(r2)) return this._breakpoints.get(r2);
      } else {
        var n2 = this._getKey(e3, 0);
        if (this._breakpoints.has(n2)) return this._breakpoints.get(n2);
      }
    } }, { key: "removeBreakpoint", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = this._getKey(e3, t2);
      this._breakpoints.has(r2) && this._breakpoints.delete(r2);
    } }, { key: "enableBreakpoint", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = this._getKey(e3, t2), n2 = this._breakpoints.get(r2);
      n2 && (n2.enabled = true);
    } }, { key: "disableBreakpoint", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = this._getKey(e3, t2), n2 = this._breakpoints.get(r2);
      n2 && (n2.enabled = false);
    } }, { key: "_getKey", value: function(e3, t2) {
      return "".concat(e3, ":").concat(t2);
    } }]), e2;
  })();
  t.PerFileBreakpointMap = a;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.BreakpointManager = void 0;
  var i = r(256), a = (r(93), r(5), (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._breakpointMaps = /* @__PURE__ */ new Map();
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getStoppableBreakpoint", value: function(e3) {
      if (e3.loc && null !== e3.loc.source) {
        var t2 = e3.loc, r2 = t2.source;
        if (null === r2) return;
        var n2 = t2.start.line, i2 = t2.start.column, a2 = this._findStoppableBreakpoint(r2, n2, i2);
        if (null === a2) return;
        return a2;
      }
    } }, { key: "_findStoppableBreakpoint", value: function(e3, t2, r2) {
      var n2 = this.getBreakpoint(e3, t2, r2);
      return n2 && n2.enabled ? n2 : null;
    } }, { key: "addBreakpointMulti", value: function(e3) {
      this._doBreakpointsAction(e3, this._addBreakpoint.bind(this));
    } }, { key: "_addBreakpoint", value: function(e3) {
      var t2 = this._breakpointMaps.get(e3.filePath);
      t2 || (t2 = new i.PerFileBreakpointMap(e3.filePath), this._breakpointMaps.set(e3.filePath, t2)), t2.addBreakpoint(e3.line, 0);
    } }, { key: "getBreakpoint", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n2 = this._breakpointMaps.get(e3);
      if (n2) return n2.getBreakpoint(t2, r2);
    } }, { key: "removeBreakpointMulti", value: function(e3) {
      this._doBreakpointsAction(e3, this._removeBreakpoint.bind(this));
    } }, { key: "_removeBreakpoint", value: function(e3) {
      var t2 = this._breakpointMaps.get(e3.filePath);
      t2 && t2.removeBreakpoint(e3.line, e3.column);
    } }, { key: "enableBreakpointMulti", value: function(e3) {
      this._doBreakpointsAction(e3, this._enableBreakpoint.bind(this));
    } }, { key: "_enableBreakpoint", value: function(e3) {
      var t2 = this._breakpointMaps.get(e3.filePath);
      t2 && t2.enableBreakpoint(e3.line, e3.column);
    } }, { key: "disableBreakpointMulti", value: function(e3) {
      this._doBreakpointsAction(e3, this._disableBreakpoint.bind(this));
    } }, { key: "_disableBreakpoint", value: function(e3) {
      var t2 = this._breakpointMaps.get(e3.filePath);
      t2 && t2.disableBreakpoint(e3.line, e3.column);
    } }, { key: "_doBreakpointsAction", value: function(e3, t2) {
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o = e3[Symbol.iterator](); !(r2 = (a2 = o.next()).done); r2 = true) {
          t2(a2.value);
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o.return || o.return();
        } finally {
          if (n2) throw i2;
        }
      }
    } }]), e2;
  })());
  t.BreakpointManager = a;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.DebugServer = void 0;
  var i = r(257), a = (r(5), (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(57))), o = r(255), s = r(136), u = r(8), l = r(254), c = r(252), f = r(251), p = r(10), d = (r(4), r(140));
  var h = (function() {
    function e2(t2, r2, n2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._channel = t2, this._realm = r2, this._breakpointManager = new i.BreakpointManager(), this._variableManager = new l.VariableManager(r2), this._stepManager = new c.SteppingManager(this._realm, false), this._stopEventManager = new f.StopEventManager(), this._diagnosticSeverity = n2.diagnosticSeverity || "FatalError", this._sourceMapManager = new d.SourceMapManager(n2.buckRoot, n2.sourcemaps), this.waitForRun(void 0);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "waitForRun", value: function(e3) {
      for (var t2, r2 = false; !r2; ) t2 = this._channel.readIn(), r2 = this.processDebuggerCommand(t2, e3);
    } }, { key: "checkForActions", value: function(e3) {
      if (this._checkAndUpdateLastExecuted(e3)) {
        var t2 = this._stepManager.getAndDeleteCompletedSteppers(e3), r2 = this._breakpointManager.getStoppableBreakpoint(e3);
        r2 && t2.push(r2);
        var n2 = this._stopEventManager.getDebuggeeStopReason(e3, t2);
        if (n2) {
          var i2 = e3.loc;
          (0, a.default)(i2 && null !== i2.source);
          var o2 = this._sourceMapManager.relativeToAbsolute(i2.source);
          this._channel.sendStoppedResponse(n2, o2, i2.start.line, i2.start.column), this.waitForRun(i2);
        }
      }
    } }, { key: "processDebuggerCommand", value: function(e3, t2) {
      var r2 = e3.id, n2 = e3.command, i2 = e3.arguments;
      if ("breakpoint" === i2.kind) {
        var u2 = true, l2 = false, c2 = void 0;
        try {
          for (var f2, p2 = i2.breakpoints[Symbol.iterator](); !(u2 = (f2 = p2.next()).done); u2 = true) {
            var d2 = f2.value;
            d2.filePath = this._sourceMapManager.absoluteToRelative(d2.filePath);
          }
        } catch (e4) {
          l2 = true, c2 = e4;
        } finally {
          try {
            u2 || null == p2.return || p2.return();
          } finally {
            if (l2) throw c2;
          }
        }
      }
      switch (n2) {
        case o.DebugMessage.BREAKPOINT_ADD_COMMAND:
          (0, a.default)("breakpoint" === i2.kind), this._breakpointManager.addBreakpointMulti(i2.breakpoints), this._channel.sendBreakpointsAcknowledge(o.DebugMessage.BREAKPOINT_ADD_ACKNOWLEDGE, r2, i2);
          break;
        case o.DebugMessage.BREAKPOINT_REMOVE_COMMAND:
          (0, a.default)("breakpoint" === i2.kind), this._breakpointManager.removeBreakpointMulti(i2.breakpoints), this._channel.sendBreakpointsAcknowledge(o.DebugMessage.BREAKPOINT_REMOVE_ACKNOWLEDGE, r2, i2);
          break;
        case o.DebugMessage.BREAKPOINT_ENABLE_COMMAND:
          (0, a.default)("breakpoint" === i2.kind), this._breakpointManager.enableBreakpointMulti(i2.breakpoints), this._channel.sendBreakpointsAcknowledge(o.DebugMessage.BREAKPOINT_ENABLE_ACKNOWLEDGE, r2, i2);
          break;
        case o.DebugMessage.BREAKPOINT_DISABLE_COMMAND:
          (0, a.default)("breakpoint" === i2.kind), this._breakpointManager.disableBreakpointMulti(i2.breakpoints), this._channel.sendBreakpointsAcknowledge(o.DebugMessage.BREAKPOINT_DISABLE_ACKNOWLEDGE, r2, i2);
          break;
        case o.DebugMessage.PREPACK_RUN_COMMAND:
          return (0, a.default)("run" === i2.kind), this._onDebuggeeResume(), true;
        case o.DebugMessage.STACKFRAMES_COMMAND:
          (0, a.default)("stackframe" === i2.kind), this.processStackframesCommand(r2, i2, t2);
          break;
        case o.DebugMessage.SCOPES_COMMAND:
          (0, a.default)("scopes" === i2.kind), this.processScopesCommand(r2, i2);
          break;
        case o.DebugMessage.VARIABLES_COMMAND:
          (0, a.default)("variables" === i2.kind), this.processVariablesCommand(r2, i2);
          break;
        case o.DebugMessage.STEPINTO_COMMAND:
          return (0, a.default)(void 0 !== t2), this._stepManager.processStepCommand("in", t2), this._onDebuggeeResume(), true;
        case o.DebugMessage.STEPOVER_COMMAND:
          return (0, a.default)(void 0 !== t2), this._stepManager.processStepCommand("over", t2), this._onDebuggeeResume(), true;
        case o.DebugMessage.STEPOUT_COMMAND:
          return (0, a.default)(void 0 !== t2), this._stepManager.processStepCommand("out", t2), this._onDebuggeeResume(), true;
        case o.DebugMessage.EVALUATE_COMMAND:
          (0, a.default)("evaluate" === i2.kind), this.processEvaluateCommand(r2, i2);
          break;
        default:
          throw new s.DebuggerError("Invalid command", "Invalid command from adapter: " + n2);
      }
      return false;
    } }, { key: "processStackframesCommand", value: function(e3, t2, r2) {
      for (var n2 = [], i2 = this._getFrameLocation(r2 || null), a2 = i2.fileName, o2 = i2.line, s2 = i2.column, u2 = this._realm.contextStack.length - 1; u2 >= 0; u2--) {
        var l2 = this._realm.contextStack[u2], c2 = "(anonymous function)";
        l2.function && void 0 !== l2.function.__originalName && (c2 = l2.function.__originalName);
        var f2 = { id: this._realm.contextStack.length - 1 - u2, functionName: c2, fileName: this._sourceMapManager.relativeToAbsolute(a2), line: o2, column: s2 };
        n2.push(f2), a2 = (i2 = this._getFrameLocation(l2.loc)).fileName, o2 = i2.line, s2 = i2.column;
      }
      this._channel.sendStackframeResponse(e3, n2);
    } }, { key: "_getFrameLocation", value: function(e3) {
      var t2 = "unknown", r2 = 0, n2 = 0;
      return e3 && null !== e3.source && (t2 = e3.source, r2 = e3.start.line, n2 = e3.start.column), { fileName: t2, line: r2, column: n2 };
    } }, { key: "processScopesCommand", value: function(e3, t2) {
      if (t2.frameId < 0 || t2.frameId >= this._realm.contextStack.length) throw new s.DebuggerError("Invalid command", "Invalid frame id for scopes request: " + t2.frameId);
      var r2 = this._realm.contextStack.length - 1 - t2.frameId, n2 = this._realm.contextStack[r2];
      (0, a.default)(n2 instanceof u.ExecutionContext);
      for (var i2 = [], o2 = n2.lexicalEnvironment; o2; ) {
        var l2 = { name: this._getScopeName(o2.environmentRecord), variablesReference: this._variableManager.getReferenceForValue(o2), expensive: false };
        i2.push(l2), o2 = o2.parent;
      }
      this._channel.sendScopesResponse(e3, i2);
    } }, { key: "_getScopeName", value: function(e3) {
      if (e3 instanceof p.GlobalEnvironmentRecord) return "Global";
      if (e3 instanceof p.DeclarativeEnvironmentRecord) {
        if (e3 instanceof p.FunctionEnvironmentRecord) {
          var t2 = e3.$FunctionObject.__originalName;
          return void 0 === t2 && (t2 = "anonymous function"), "Local: " + t2;
        }
        return "Block";
      }
      if (e3 instanceof p.ObjectEnvironmentRecord) return "With";
      (0, a.default)(false, "Invalid type of environment record");
    } }, { key: "processVariablesCommand", value: function(e3, t2) {
      var r2 = this._variableManager.getVariablesByReference(t2.variablesReference);
      this._channel.sendVariablesResponse(e3, r2);
    } }, { key: "processEvaluateCommand", value: function(e3, t2) {
      var r2 = this._variableManager.evaluate(t2.frameId, t2.expression);
      this._channel.sendEvaluateResponse(e3, r2);
    } }, { key: "_onDebuggeeResume", value: function() {
      this._variableManager.clean();
    } }, { key: "_checkAndUpdateLastExecuted", value: function(e3) {
      if (e3.loc && null !== e3.loc.source) {
        var t2 = e3.loc.source, r2 = e3.loc.start.line, n2 = e3.loc.start.column, i2 = this._realm.contextStack.length;
        return (!this._lastExecuted || t2 !== this._lastExecuted.filePath || r2 !== this._lastExecuted.line || i2 !== this._lastExecuted.stackSize) && (this._lastExecuted = { filePath: t2, line: r2, column: n2, stackSize: this._realm.contextStack.length }, true);
      }
      return false;
    } }, { key: "handlePrepackError", value: function(e3) {
      (0, a.default)(e3.location && null !== e3.location.source);
      var t2 = e3.location, r2 = "";
      null !== t2.source && (r2 = this._sourceMapManager.relativeToAbsolute(t2.source));
      var n2 = "".concat(e3.severity, " ").concat(e3.errorCode, ": ").concat(e3.message);
      console.log(n2), this._channel.sendStoppedResponse("Diagnostic", r2, t2.start.line, t2.start.column, n2), this.waitForRun(t2);
    } }, { key: "shouldStopForSeverity", value: function(e3) {
      switch (this._diagnosticSeverity) {
        case "Information":
          return true;
        case "Warning":
          return "Information" !== e3;
        case "RecoverableError":
          return "RecoverableError" === e3 || "FatalError" === e3;
        case "FatalError":
          return "FatalError" === e3;
        default:
          (0, a.default)(false, "Unexpected severity type");
      }
    } }, { key: "shutdown", value: function() {
      this._channel.shutdown();
    } }]), e2;
  })();
  t.DebugServer = h;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, h) {
    (0, u.default)(h.react.enabled, "JSXElements can only be evaluated with the reactEnabled option");
    var v = e2.openingElement, y = (function(e3, t3, r3, n2) {
      if ((function(e4) {
        return "JSXIdentifier" === e4.type && /^[a-z]|\-/.test(e4.name);
      })(e3)) return new i.StringValue(n2, e3.name);
      return (function(e4, t4, r4, n3) {
        switch (e4.type) {
          case "JSXIdentifier":
            return s.Environment.GetValue(n3, s.Environment.ResolveBinding(n3, e4.name, t4, r4));
          case "JSXMemberExpression":
            return s.Environment.GetValue(n3, r4.evaluate((0, a.convertJSXExpressionToIdentifier)(e4), t4));
          default:
            (0, u.default)(false, "Unknown JSX Identifier");
        }
      })(e3, t3, r3, n2);
    })(v.name, t2, r2, h), m = (function(e3, t3, r3, n2) {
      if (0 === e3.length) return;
      if (1 === e3.length) {
        var a2 = p(e3[0], t3, r3, n2);
        if (a2 instanceof i.StringValue) {
          var o2 = f(a2.value);
          null !== o2 && (a2.value = o2);
        }
        return a2;
      }
      for (var u2 = s.Create.ArrayCreate(n2, 0), l2 = e3.length, c2 = 0, d2 = n2.intrinsics.undefined, h2 = 0; h2 < e3.length; h2++) {
        var v2 = p(e3[h2], t3, r3, n2);
        if (v2 instanceof i.StringValue) {
          var y2 = f(v2.value);
          if (null === y2) {
            l2--;
            continue;
          }
          v2.value = y2;
        }
        d2 = v2, s.Create.CreateDataPropertyOrThrow(n2, u2, "" + c2, v2), c2++;
      }
      if (1 === l2) return d2;
      return s.Properties.Set(n2, u2, "length", new i.NumberValue(n2, l2), false), u2.makeFinal(), u2;
    })(e2.children, t2, r2, h), b = (function(e3, t3, r3, a2) {
      var l2, f2 = s.Create.ObjectCreate(a2, a2.intrinsics.ObjectPrototype), h2 = [], v2 = 0, y2 = 0, m2 = function(e4, t4) {
        (0, u.default)(f2 instanceof i.ObjectValue), s.Properties.Set(a2, f2, e4, t4, true);
      }, b2 = true, g = false, w = void 0;
      try {
        for (var E, S = e3[Symbol.iterator](); !(b2 = (E = S.next()).done); b2 = true) {
          var T = E.value;
          switch (T.type) {
            case "JSXAttribute":
              var A = T.name, C = T.value;
              (0, u.default)("JSXIdentifier" === A.type, "JSX attribute name type not supported: ".concat(T.type)), m2(A.name, p(C, t3, r3, a2));
              break;
            case "JSXSpreadAttribute":
              if ((l2 = s.Environment.GetValue(a2, r3.evaluate(T.argument, t3))) instanceof i.ObjectValue && !l2.isPartialObject()) {
                var P = true, O = false, x = void 0;
                try {
                  for (var _, V = l2.properties[Symbol.iterator](); !(P = (_ = V.next()).done); P = true) {
                    var D = n(_.value, 2), N = D[0], I = D[1];
                    I && I.descriptor && I.descriptor.throwIfNotConcrete(a2).enumerable && m2(N, (0, o.Get)(a2, l2, N));
                  }
                } catch (e4) {
                  O = true, x = e4;
                } finally {
                  try {
                    P || null == V.return || V.return();
                  } finally {
                    if (O) throw x;
                  }
                }
              } else v2++, l2 instanceof i.AbstractValue && !(l2 instanceof i.AbstractObjectValue) && (l2 = s.To.ToObject(a2, l2)), (0, u.default)(l2 instanceof i.AbstractObjectValue || l2 instanceof i.ObjectValue), (0, c.hasNoPartialKeyOrRef)(a2, l2) && y2++, d(a2, f2) || h2.push(f2), h2.push(l2), f2 = s.Create.ObjectCreate(a2, a2.intrinsics.ObjectPrototype);
              break;
            default:
              (0, u.default)(false, "Unknown JSX attribute type: ".concat(T.type));
          }
        }
      } catch (e4) {
        g = true, w = e4;
      } finally {
        try {
          b2 || null == S.return || S.return();
        } finally {
          if (g) throw w;
        }
      }
      if (v2 > 0) {
        if (1 === v2 && 1 === e3.length && (l2 instanceof i.ObjectValue || l2 instanceof i.AbstractObjectValue)) return l2;
        h2.push(f2), f2 = s.Create.ObjectCreate(a2, a2.intrinsics.ObjectPrototype), (0, c.applyObjectAssignConfigsForReactElement)(a2, f2, h2), y2 === v2 && (0, c.flagPropsWithNoPartialKeyOrRef)(a2, f2);
      }
      return (0, u.default)(f2 instanceof i.ObjectValue || f2 instanceof i.AbstractObjectValue), f2;
    })(v.attributes, t2, r2, h);
    return (0, u.default)(y instanceof i.Value), (0, l.createReactElement)(h, y, b, m);
  };
  var i = r(0), a = r(96), o = r(3), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(59), c = r(14);
  function f(e2) {
    for (var t2 = e2.split(/\r\n|\n|\r/), r2 = 0, n2 = 0; n2 < t2.length; n2++) t2[n2].match(/[^ \t]/) && (r2 = n2);
    for (var i2 = "", a2 = 0; a2 < t2.length; a2++) {
      var o2 = t2[a2], s2 = 0 === a2, u2 = a2 === t2.length - 1, l2 = a2 === r2, c2 = o2.replace(/\t/g, " ");
      s2 || (c2 = c2.replace(/^[ ]+/, "")), u2 || (c2 = c2.replace(/[ ]+$/, "")), c2 && (l2 || (c2 += " "), i2 += c2);
    }
    return i2 || null;
  }
  function p(e2, t2, r2, n2) {
    if (null != e2) switch (e2.type) {
      case "JSXText":
      case "StringLiteral":
        return new i.StringValue(n2, e2.value);
      case "JSXExpressionContainer":
        return s.Environment.GetValue(n2, r2.evaluate(e2.expression, t2));
      case "JSXElement":
        return s.Environment.GetValue(n2, r2.evaluate(e2, t2));
      default:
        (0, u.default)(false, "Unknown JSX value type: ".concat(e2.type));
    }
    (0, u.default)(false, "Null or undefined value passed when trying to evaluate JSX node value");
  }
  function d(e2, t2) {
    var r2 = 0, i2 = true, a2 = false, o2 = void 0;
    try {
      for (var s2, u2 = t2.properties[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
        var l2 = n(s2.value, 2)[1];
        l2 && l2.descriptor && l2.descriptor.throwIfNotConcrete(e2).enumerable && r2++;
      }
    } catch (e3) {
      a2 = true, o2 = e3;
    } finally {
      try {
        i2 || null == u2.return || u2.return();
      } finally {
        if (a2) throw o2;
      }
    }
    return 0 === r2;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    throw new n.FatalError("TODO: #712 YieldExpression");
  };
  var n = r(4);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, c) {
    var f = r2.evaluate(e2.object, t2);
    if ((f = u.Environment.GetValue(c, f)) instanceof o.AbstractValue || f instanceof o.ObjectValue && f.isPartialObject()) {
      var p = e2.object.loc, d = new i.CompilerDiagnostic("with object must be a known value", p, "PP0007", "RecoverableError");
      if ("Fail" === c.handleError(d)) throw new i.FatalError();
    }
    var h = u.To.ToObject(c, f), v = r2, y = u.Environment.NewObjectEnvironment(c, h, v);
    (0, l.default)(y.environmentRecord instanceof n.ObjectEnvironmentRecord), y.environmentRecord.withEnvironment = true, c.getRunningContext().lexicalEnvironment = y;
    try {
      var m = y.evaluateCompletion(e2.body, t2);
      (0, l.default)(m instanceof o.Value || m instanceof a.AbruptCompletion);
      var b = (0, s.UpdateEmpty)(c, m, c.intrinsics.undefined);
      if (b instanceof a.AbruptCompletion) throw b;
      return (0, l.default)(b instanceof o.Value), b;
    } finally {
      c.getRunningContext().lexicalEnvironment = v, c.onDestroyScope(y);
    }
  };
  var n = r(10), i = r(4), a = r(7), o = r(0), s = r(3), u = r(2), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a, o) {
    var s = r2.evaluate({ type: "ForStatement", init: null, test: e2.test, update: null, body: e2.body }, t2, o);
    return (0, i.default)(s instanceof n.Value), s;
  };
  var n = r(0), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, s) {
    if ("let" === e2.kind || "const" === e2.kind) return (function(e3, t3, r3, s2) {
      var u2 = true, l2 = false, c2 = void 0;
      try {
        for (var f2, p2 = e3.declarations[Symbol.iterator](); !(u2 = (f2 = p2.next()).done); u2 = true) {
          var d2 = f2.value, h2 = d2.init;
          if ("Identifier" !== d2.id.type || h2) if ("Identifier" === d2.id.type && h2) {
            var v2 = d2.id.name, y2 = a.Environment.ResolveBinding(s2, v2, t3), m2 = r3.evaluate(h2, t3), b2 = a.Environment.GetValue(s2, m2);
            if ((0, i.IsAnonymousFunctionDefinition)(s2, h2)) {
              (0, o.default)(b2 instanceof n.ObjectValue);
              var g2 = (0, i.HasOwnProperty)(s2, b2, "name");
              g2 || a.Functions.SetFunctionName(s2, b2, new n.StringValue(s2, v2));
            }
            a.Environment.InitializeReferencedBinding(s2, y2, b2);
          } else if ("ObjectPattern" !== d2.id.type && "ArrayPattern" !== d2.id.type || !h2) (0, o.default)(false, "unrecognized declaration");
          else {
            var w2 = r3.evaluate(h2, t3), E2 = a.Environment.GetValue(s2, w2);
            a.Environment.BindingInitialization(s2, d2.id, E2, t3, r3);
          }
          else {
            (0, o.default)("const" !== e3.kind, "const without an initializer");
            var S = d2.id.name, T = a.Environment.ResolveBinding(s2, S, t3);
            a.Environment.InitializeReferencedBinding(s2, T, s2.intrinsics.undefined);
          }
        }
      } catch (e4) {
        l2 = true, c2 = e4;
      } finally {
        try {
          u2 || null == p2.return || p2.return();
        } finally {
          if (l2) throw c2;
        }
      }
      return s2.intrinsics.empty;
    })(e2, t2, r2, s);
    var u = true, l = false, c = void 0;
    try {
      for (var f, p = e2.declarations[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
        var d = f.value, h = d.init;
        if ("Identifier" !== d.id.type || h) if ("Identifier" === d.id.type && h) {
          var v = d.id.name, y = a.Environment.ResolveBinding(s, v, t2), m = r2.evaluate(h, t2), b = a.Environment.GetValue(s, m);
          if (d.id && void 0 !== d.id.name && (b.__originalName = v), (0, i.IsAnonymousFunctionDefinition)(s, h)) {
            (0, o.default)(b instanceof n.ObjectValue);
            var g = (0, i.HasOwnProperty)(s, b, "name");
            g || a.Functions.SetFunctionName(s, b, new n.StringValue(s, v));
          }
          a.Properties.PutValue(s, y, b);
        } else if ("ObjectPattern" !== d.id.type && "ArrayPattern" !== d.id.type || !h) (0, o.default)(false, "unrecognized declaration");
        else {
          var w = r2.evaluate(h, t2), E = a.Environment.GetValue(s, w);
          a.Environment.BindingInitialization(s, d.id, E, t2, void 0);
        }
      }
    } catch (e3) {
      l = true, c = e3;
    } finally {
      try {
        u || null == p.return || p.return();
      } finally {
        if (l) throw c;
      }
    }
    return s.intrinsics.empty;
  };
  var n = r(0), i = r(3), a = r(2), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, c) {
    var f = r2.evaluate(e2.argument, t2), p = o.Environment.GetValue(c, f);
    if (p instanceof a.AbstractValue) {
      (0, s.default)("++" === e2.operator || "--" === e2.operator);
      var d = "++" === e2.operator ? "+" : "-", h = a.AbstractValue.createFromBinaryOp(c, d, p, new a.NumberValue(c, 1), e2.loc);
      if (!o.To.IsToNumberPure(c, p)) if (c.isInPureScope()) o.Leak.value(c, p), h = c.evaluateWithPossibleThrowCompletion(function() {
        return a.AbstractValue.createTemporalFromBuildFunction(c, a.NumberValue, [p], (0, l.createOperationDescriptor)("UPDATE_INCREMENTOR", { incrementor: d }));
      }, u.TypesDomain.topVal, u.ValuesDomain.topVal);
      else {
        var v = new n.CompilerDiagnostic("might be a symbol or an object with an unknown valueOf or toString or Symbol.toPrimitive method", e2.argument.loc, "PP0008", "RecoverableError");
        if ("Fail" === c.handleError(v)) throw new n.FatalError();
      }
      return o.Properties.PutValue(c, f, h), true === e2.prefix ? h : p;
    }
    var y = o.To.ToNumber(c, p);
    if (true === e2.prefix) {
      if ("++" === e2.operator) {
        var m = (0, i.Add)(c, y, 1);
        return o.Properties.PutValue(c, f, m), m;
      }
      if ("--" === e2.operator) {
        var b = (0, i.Add)(c, y, -1);
        return o.Properties.PutValue(c, f, b), b;
      }
      (0, s.default)(false);
    } else {
      if ("++" === e2.operator) {
        var g = (0, i.Add)(c, y, 1);
        return o.Properties.PutValue(c, f, g), a.IntegralValue.createFromNumberValue(c, y);
      }
      if ("--" === e2.operator) {
        var w = (0, i.Add)(c, y, -1);
        return o.Properties.PutValue(c, f, w), a.IntegralValue.createFromNumberValue(c, y);
      }
      (0, s.default)(false);
    }
  };
  var n = r(4), i = r(3), a = r(0), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(12), l = r(9);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, u2) {
    var c2 = r2.evaluate(e2.argument, t2);
    if ("delete" === e2.operator) return (function(e3, t3) {
      var r3 = e3;
      if (!(r3 instanceof o.Reference)) return t3.intrinsics.true;
      if (l.Environment.IsUnresolvableReference(t3, r3)) return (0, s.default)(!l.Environment.IsStrictReference(t3, r3), "did not expect a strict reference"), t3.intrinsics.true;
      if (l.Environment.IsPropertyReference(t3, r3)) {
        if (l.Environment.IsSuperReference(t3, r3)) throw t3.createErrorThrowCompletion(t3.intrinsics.ReferenceError);
        var n2 = l.Environment.GetBase(t3, r3);
        (0, s.default)(n2 instanceof a.ConcreteValue || n2 instanceof a.AbstractObjectValue);
        var i2 = l.To.ToObject(t3, n2), u3 = i2.$Delete(l.Environment.GetReferencedName(t3, r3));
        if (!u3 && l.Environment.IsStrictReference(t3, r3)) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
        return new a.BooleanValue(t3, u3);
      }
      var c3 = l.Environment.GetBase(t3, r3);
      (0, s.default)(c3 instanceof o.EnvironmentRecord);
      var f2 = l.Environment.GetReferencedName(t3, r3);
      return (0, s.default)("string" == typeof f2), new a.BooleanValue(t3, c3.DeleteBinding(f2));
    })(c2, u2);
    return u2.isInPureScope() ? (function(e3, t3, r3, o2, s2) {
      var u3;
      try {
        u3 = s2.evaluateForEffects(function() {
          return r3(e3, t3, o2, s2);
        }, void 0, "tryToEvaluateOperationOrLeaveAsAbstract");
      } catch (r4) {
        if (r4 instanceof n.FatalError) return s2.evaluateWithPossibleThrowCompletion(function() {
          var n2 = l.Environment.GetValue(s2, t3);
          if (n2 instanceof a.AbstractValue) return a.AbstractValue.createFromUnaryOp(s2, e3.operator, n2);
          throw r4;
        }, i.TypesDomain.topVal, i.ValuesDomain.topVal);
        throw r4;
      }
      return s2.applyEffects(u3), s2.returnOrThrowCompletion(u3.result);
    })(e2, c2, f, t2, u2) : f(e2, c2, t2, u2);
  };
  var n = r(4), i = r(12), a = r(0), o = r(10), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(3), l = r(2);
  function c(e2, t2) {
    return e2 instanceof t2 || e2 === t2.prototype;
  }
  function f(e2, t2, r2, i2) {
    function f2(t3) {
      if (t3.getType() === a.SymbolValue) throw i2.createErrorThrowCompletion(i2.intrinsics.TypeError);
      var r3 = new n.CompilerDiagnostic("might be a symbol or an object with an unknown valueOf or toString or Symbol.toPrimitive method", e2.argument.loc, "PP0008", "RecoverableError");
      if ("Fail" === i2.handleError(r3)) throw new n.FatalError();
    }
    if ("+" === e2.operator) {
      var p = l.Environment.GetValue(i2, t2);
      return p instanceof a.AbstractValue ? (l.To.IsToNumberPure(i2, p) || f2(p), a.AbstractValue.createFromUnaryOp(i2, "+", p)) : ((0, s.default)(p instanceof a.ConcreteValue), a.IntegralValue.createFromNumberValue(i2, l.To.ToNumber(i2, p)));
    }
    if ("-" === e2.operator) {
      var d = l.Environment.GetValue(i2, t2);
      if (d instanceof a.AbstractValue) return l.To.IsToNumberPure(i2, d) || f2(d), a.AbstractValue.createFromUnaryOp(i2, "-", d);
      (0, s.default)(d instanceof a.ConcreteValue);
      var h = l.To.ToNumber(i2, d);
      return isNaN(h) ? i2.intrinsics.NaN : a.IntegralValue.createFromNumberValue(i2, -h);
    }
    if ("~" === e2.operator) {
      var v = l.Environment.GetValue(i2, t2);
      if (v instanceof a.AbstractValue) return l.To.IsToNumberPure(i2, v) || f2(v), a.AbstractValue.createFromUnaryOp(i2, "~", v);
      (0, s.default)(v instanceof a.ConcreteValue);
      var y = l.To.ToInt32(i2, v);
      return a.IntegralValue.createFromNumberValue(i2, ~y);
    }
    if ("!" === e2.operator) {
      var m = l.Environment.GetConditionValue(i2, t2);
      return m instanceof a.AbstractValue ? a.AbstractValue.createFromUnaryOp(i2, "!", m) : ((0, s.default)(m instanceof a.ConcreteValue), true === l.To.ToBoolean(i2, m) ? i2.intrinsics.false : i2.intrinsics.true);
    }
    if ("void" === e2.operator) return l.Environment.GetValue(i2, t2), i2.intrinsics.undefined;
    (0, s.default)("typeof" === e2.operator);
    var b = t2;
    if (b instanceof o.Reference && l.Environment.IsUnresolvableReference(i2, b)) return new a.StringValue(i2, "undefined");
    var g = (b = l.Environment.GetValue(i2, b)).getType().prototype;
    return c(g, a.UndefinedValue) ? new a.StringValue(i2, "undefined") : c(g, a.NullValue) ? new a.StringValue(i2, "object") : c(g, a.StringValue) ? new a.StringValue(i2, "string") : c(g, a.BooleanValue) ? new a.StringValue(i2, "boolean") : c(g, a.NumberValue) ? new a.StringValue(i2, "number") : c(g, a.SymbolValue) ? new a.StringValue(i2, "symbol") : c(g, a.ObjectValue) ? (0, u.IsCallable)(i2, b) ? new a.StringValue(i2, "function") : new a.StringValue(i2, "object") : ((0, s.default)(b instanceof a.AbstractValue), a.AbstractValue.createFromUnaryOp(i2, "typeof", b));
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, f) {
    if (f.useAbstractInterpretation) return (function(e3, t3, r3, f2) {
      var p2 = f2.isInPureTryStatement;
      f2.isInPureScope() && (f2.isInPureTryStatement = true);
      var d2 = r3.evaluateCompletionDeref(e3.block, t3);
      d2 = s.Functions.incorporateSavedCompletion(f2, d2), (0, l.default)(void 0 !== d2), f2.isInPureTryStatement = p2;
      var h = d2, v = e3.handler, y = function(e4) {
        return e4 instanceof n.ThrowCompletion;
      };
      if (v && d2 instanceof n.Completion && d2.containsSelectedCompletion(y)) if (d2 instanceof n.ThrowCompletion) h = r3.evaluateCompletionDeref(v, t3, d2);
      else {
        (0, l.default)(d2 instanceof n.JoinedAbruptCompletions || d2 instanceof n.JoinedNormalAndAbruptCompletions);
        var m = u.AbstractValue.createJoinConditionForSelectedCompletions(y, d2);
        if (m.mightNotBeFalse()) try {
          var b = s.Path.withCondition(m, function() {
            (0, l.default)(d2 instanceof n.Completion);
            var e4 = new n.ThrowCompletion(s.Join.joinValuesOfSelectedCompletions(y, d2));
            return f2.evaluateForEffects(function() {
              return r3.evaluateCompletionDeref(v, t3, e4);
            }, void 0, "joinTryBlockWithHandlers");
          });
          n.Completion.makeSelectedCompletionsInfeasible(y, d2);
          var g = (0, o.construct_empty_effects)(f2, d2);
          b = s.Join.joinEffects(m, b, g), f2.applyEffects(b), h = b.result;
        } catch (e4) {
          if (!(e4 instanceof a.InfeasiblePathError)) throw e4;
        }
      }
      if (e3.finalizer) {
        var w = r3.evaluateCompletionDeref(e3.finalizer, t3);
        h = c(h, w);
      }
      return f2.returnOrThrowCompletion((0, i.UpdateEmpty)(f2, h, f2.intrinsics.undefined));
    })(e2, t2, r2, f);
    var p = r2.evaluateCompletionDeref(e2.block, t2), d = p;
    p instanceof n.ThrowCompletion && e2.handler && (d = r2.evaluateCompletionDeref(e2.handler, t2, p));
    e2.finalizer && (d = c(d, r2.evaluateCompletionDeref(e2.finalizer, t2)));
    return f.returnOrThrowCompletion((0, i.UpdateEmpty)(f, d, f.intrinsics.undefined));
  };
  var n = r(7), i = r(3), a = r(4), o = r(8), s = r(2), u = r(0), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function c(e2, t2) {
    return t2 instanceof n.AbruptCompletion ? t2 : s.Join.composeCompletions(t2, e2);
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    var o = r2.evaluate(e2.argument, t2), s = i.Environment.GetValue(a, o);
    throw new n.ThrowCompletion(s, e2.loc);
  };
  var n = r(7), i = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return n.Environment.ResolveThisBinding(i);
  };
  var n = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    for (var o = "", s = 0; s < e2.quasis.length; s++) {
      var u = e2.quasis[s];
      o += u.value.cooked;
      var l = e2.expressions[s];
      l && (o += i.To.ToStringPartial(a, i.Environment.GetValue(a, r2.evaluate(l, t2))));
    }
    return new n.StringValue(a, o);
  };
  var n = r(0), i = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    var a = r2.evaluate(e2.tag, t2);
    return (0, n.EvaluateCall)(i, t2, r2, a, e2.quasi);
  };
  var n = r(15);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, n2, i2) {
    var a2 = e2.discriminant, o2 = r2.evaluate(a2, t2), s2 = f.Environment.GetValue(n2, o2);
    if (s2 instanceof l.AbstractValue && !s2.values.isTop()) {
      var u2 = s2.values.getElements(), c2 = u2.size;
      if (c2 > 1 && c2 < 10) return f.Join.mapAndJoin(n2, u2, function(e3) {
        return l.AbstractValue.createFromBinaryOp(n2, "===", s2, e3);
      }, function(a3) {
        return v(e2, a3, t2, r2, n2, i2);
      });
    }
    return v(e2, s2, t2, r2, n2, i2);
  };
  var a = r(4), o = r(62), s = r(7), u = r(58), l = r(0), c = r(3), f = r(2), p = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function d(e2, t2, r2, n2) {
    var i2 = r2.evaluate(e2, t2);
    return f.Environment.GetValue(n2, i2);
  }
  function h(e2, t2, r2, n2, h2) {
    var v2 = function(e3) {
      var t3 = h2.intrinsics.empty, i2 = true, a2 = false, o2 = void 0;
      try {
        for (var u2, f2 = e3.consequent[Symbol.iterator](); !(i2 = (u2 = f2.next()).done); i2 = true) {
          var p2 = u2.value, d2 = n2.evaluateCompletion(p2, r2);
          if (d2 instanceof s.AbruptCompletion) return (0, c.UpdateEmpty)(h2, d2, t3);
          d2 instanceof l.EmptyValue || (t3 = d2);
        }
      } catch (e4) {
        a2 = true, o2 = e4;
      } finally {
        try {
          i2 || null == f2.return || f2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      return t3;
    }, y = function(e3, i2) {
      var a2 = false, o2 = true, f2 = false, y2 = void 0;
      try {
        for (var m2, b2 = e3[Symbol.iterator](); !(o2 = (m2 = b2.next()).done); o2 = true) {
          var g2 = m2.value;
          if (!a2) {
            var w2 = g2.test;
            (0, p.default)(w2);
            var E2 = d(w2, r2, n2, h2);
            a2 = (0, c.StrictEqualityComparisonPartial)(h2, t2, E2);
          }
          if (a2) {
            var S2 = v2(g2), T2 = (0, u.InternalGetResultValue)(h2, S2);
            if (T2 instanceof l.EmptyValue || (i2 = T2), S2 instanceof s.AbruptCompletion) throw (0, c.UpdateEmpty)(h2, S2, i2);
          }
        }
      } catch (e4) {
        f2 = true, y2 = e4;
      } finally {
        try {
          o2 || null == b2.return || b2.return();
        } finally {
          if (f2) throw y2;
        }
      }
      return [a2, i2];
    };
    if (0 === e2.length) return h2.intrinsics.undefined;
    var m = e2.findIndex(function(e3) {
      return null === e3.test;
    });
    if (t2 instanceof l.AbstractValue && e2.length < 6) return (function(e3, t3, r3, n3, i2, u2) {
      (0, p.default)(u2.useAbstractInterpretation);
      var h3 = function(t4) {
        for (var r4 = u2.intrinsics.undefined; t4 < e3.length; ) {
          for (var a2 = e3[t4], o2 = 0; o2 < a2.consequent.length; o2 += 1) {
            var d2 = a2.consequent[o2], h4 = i2.evaluateCompletionDeref(d2, n3);
            if (h4 instanceof s.JoinedNormalAndAbruptCompletions && (h4 = u2.composeWithSavedCompletion(h4)), (r4 = (0, c.UpdateEmpty)(u2, h4, r4)) instanceof s.Completion) break;
          }
          if (r4 instanceof s.Completion) break;
          t4++;
        }
        var v3 = f.Functions.incorporateSavedCompletion(u2, r4);
        if ((0, p.default)(void 0 !== v3), (r4 = v3) instanceof s.JoinedAbruptCompletions || r4 instanceof s.JoinedNormalAndAbruptCompletions) {
          var y2 = function(e4) {
            return e4 instanceof s.BreakCompletion && !e4.target;
          }, m2 = l.AbstractValue.createJoinConditionForSelectedCompletions(y2, r4), b2 = l.AbstractValue.createFromConditionalOp(u2, m2, u2.intrinsics.empty, r4.value);
          return r4 = s.Completion.normalizeSelectedCompletions(y2, r4), u2.composeWithSavedCompletion(r4), b2;
        }
        if (r4 instanceof s.BreakCompletion) return r4.value;
        if (r4 instanceof s.AbruptCompletion) throw r4;
        return (0, p.default)(r4 instanceof l.Value), r4;
      };
      return (function s2(l2) {
        if (l2 === t3) return s2(l2 + 1);
        if (l2 >= e3.length) return -1 !== t3 ? h3(t3) : u2.intrinsics.empty;
        var c2 = e3[l2].test;
        (0, p.default)(c2);
        var v3, y2, m2 = d(c2, n3, i2, u2), b2 = (0, o.computeBinary)(u2, "===", r3, m2);
        if (f.Path.implies(b2)) return h3(l2);
        if (f.Path.impliesNot(b2)) return s2(l2 + 1);
        try {
          v3 = f.Path.withCondition(b2, function() {
            return u2.evaluateForEffects(function() {
              return h3(l2);
            }, void 0, "AbstractCaseEvaluation/1");
          });
        } catch (e4) {
          if (e4 instanceof a.InfeasiblePathError) return s2(l2 + 1);
          throw e4;
        }
        try {
          y2 = f.Path.withInverseCondition(b2, function() {
            return u2.evaluateForEffects(function() {
              return s2(l2 + 1);
            }, void 0, "AbstractCaseEvaluation/2");
          });
        } catch (e4) {
          if (e4 instanceof a.InfeasiblePathError) return h3(l2);
          throw e4;
        }
        (0, p.default)(void 0 !== v3), (0, p.default)(void 0 !== y2);
        var g2 = f.Join.joinEffects(b2, v3, y2);
        return u2.applyEffects(g2), u2.returnOrThrowCompletion(g2.result);
      })(0);
    })(e2, m, t2, r2, n2, h2);
    if (-1 !== m) {
      var b = e2.slice(0, m), g = h2.intrinsics.undefined;
      g = i(y(b, g), 2)[1];
      var w, E = e2.slice(m + 1), S = i(y(E, g), 2);
      if (w = S[0], g = S[1], w) return g;
      var T = v2(e2[m]), A = (0, u.InternalGetResultValue)(h2, T);
      if (A instanceof l.EmptyValue || (g = A), T instanceof s.AbruptCompletion) throw (0, c.UpdateEmpty)(h2, T, g);
      var C = true, P = false, O = void 0;
      try {
        for (var x, _ = E[Symbol.iterator](); !(C = (x = _.next()).done); C = true) {
          var V = x.value;
          T = v2(V);
          var D = (0, u.InternalGetResultValue)(h2, T);
          if (D instanceof l.EmptyValue || (g = D), T instanceof s.AbruptCompletion) throw (0, c.UpdateEmpty)(h2, T, g);
        }
      } catch (e3) {
        P = true, O = e3;
      } finally {
        try {
          C || null == _.return || _.return();
        } finally {
          if (P) throw O;
        }
      }
      return g;
    }
    return i(y(e2, h2.intrinsics.undefined), 2)[1];
  }
  function v(e2, t2, r2, i2, a2, o2) {
    var u2 = e2.cases, l2 = a2.getRunningContext().lexicalEnvironment, p2 = f.Environment.NewDeclarativeEnvironment(a2, l2), d2 = [];
    u2.forEach(function(e3) {
      return d2.push.apply(d2, n(e3.consequent));
    }), f.Environment.BlockDeclarationInstantiation(a2, r2, d2, p2), a2.getRunningContext().lexicalEnvironment = p2;
    try {
      return h(u2, t2, r2, p2, a2);
    } catch (e3) {
      if (e3 instanceof s.BreakCompletion && !e3.target) return (0, c.UpdateEmpty)(a2, e3, a2.intrinsics.undefined).value;
      throw e3;
    } finally {
      a2.getRunningContext().lexicalEnvironment = l2, a2.onDestroyScope(p2);
    }
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    var o;
    (0, i.default)(e2.expressions.length > 0);
    var s = true, u = false, l = void 0;
    try {
      for (var c, f = e2.expressions[Symbol.iterator](); !(s = (c = f.next()).done); s = true) {
        var p = c.value;
        o = n.Environment.GetValue(a, r2.evaluate(p, t2));
      }
    } catch (e3) {
      u = true, l = e3;
    } finally {
      try {
        s || null == f.return || f.return();
      } finally {
        if (u) throw l;
      }
    }
    return (0, i.default)(void 0 !== o), o;
  };
  var n = r(2), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    var o;
    o = e2.argument ? n.Environment.GetValue(a, r2.evaluate(e2.argument, t2)) : a.intrinsics.undefined;
    throw new i.ReturnCompletion(o, e2.loc);
  };
  var n = r(2), i = r(7);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    return (0, i.RegExpCreate)(a, new n.StringValue(a, e2.pattern), void 0 !== e2.flags ? new n.StringValue(a, e2.flags) : void 0);
  };
  var n = r(0), i = r(3);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.GlobalDeclarationInstantiation = f, t.default = function(e2, t2, r2, a2) {
    var l2, c2;
    t2 = (0, s.default)(e2), f(a2, e2, r2, t2);
    var p = true, d = false, h = void 0;
    try {
      for (var v, y = e2.body[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
        var m = v.value;
        if ("FunctionDeclaration" !== m.type) {
          if ((c2 = r2.evaluateCompletionDeref(m, t2)) instanceof n.AbruptCompletion && !a2.useAbstractInterpretation) throw c2;
          if ((c2 = o.Functions.incorporateSavedCompletion(a2, c2)) instanceof n.Completion) {
            if (w(c2), c2 instanceof n.ThrowCompletion) return c2.value;
            c2 = c2.value;
          }
          c2 instanceof i.EmptyValue || (l2 = c2);
        }
      }
    } catch (e3) {
      d = true, h = e3;
    } finally {
      try {
        p || null == y.return || y.return();
      } finally {
        if (d) throw h;
      }
    }
    var b = e2.directives;
    if (!l2 && b && b.length) {
      var g = b[b.length - 1];
      l2 = r2.evaluate(g, t2), (0, u.default)(l2 instanceof i.Value);
    }
    (0, u.default)(void 0 === l2 || l2 instanceof i.Value), l2 instanceof i.Value && (c2 = o.Functions.incorporateSavedCompletion(a2, l2)) instanceof n.Completion && w(c2);
    return l2 || a2.intrinsics.empty;
    function w(e3) {
      var t3 = a2.generator;
      (0, u.default)(void 0 !== t3);
      var r3 = function(e4) {
        return e4 instanceof n.ThrowCompletion && e4.value !== a2.intrinsics.__bottomValue && !(e4.value instanceof i.EmptyValue);
      };
      c2 instanceof n.ThrowCompletion && r3(c2) ? t3.emitThrow(c2.value) : (c2 instanceof n.JoinedAbruptCompletions || c2 instanceof n.JoinedNormalAndAbruptCompletions) && c2.containsSelectedCompletion(r3) && (t3.emitConditionalThrow(o.Join.joinValuesOfSelectedCompletions(r3, c2, true)), c2 = a2.intrinsics.undefined);
    }
  };
  var n = r(7), i = r(0), a = r(10), o = r(2), s = c(r(37)), u = c(r(1)), l = c(r(39));
  function c(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function f(e2, t2, r2, n2) {
    e2.getRunningContext().isStrict = e2.isStrict = n2;
    var s2 = r2.environmentRecord;
    (0, u.default)(s2 instanceof a.GlobalEnvironmentRecord, "expected global environment record");
    var c2 = [], f2 = [];
    (0, l.default)(t2, function(t3) {
      if ("VariableDeclaration" === t3.type) "var" === t3.kind ? f2 = f2.concat(o.Environment.BoundNames(e2, t3)) : c2 = c2.concat(o.Environment.BoundNames(e2, t3));
      else if ("FunctionExpression" === t3.type || "FunctionDeclaration" === t3.type) return true;
      return false;
    });
    var p = true, d = false, h = void 0;
    try {
      for (var v, y = c2[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
        var m = v.value;
        if (s2.HasVarDeclaration(m)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, m + " already declared with var");
        if (s2.HasLexicalDeclaration(m)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, m + " already declared with let or const");
        if (s2.HasRestrictedGlobalProperty(m)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, m + " global object is restricted");
      }
    } catch (e3) {
      d = true, h = e3;
    } finally {
      try {
        p || null == y.return || y.return();
      } finally {
        if (d) throw h;
      }
    }
    var b = true, g = false, w = void 0;
    try {
      for (var E, S = f2[Symbol.iterator](); !(b = (E = S.next()).done); b = true) {
        var T = E.value;
        if (s2.HasLexicalDeclaration(T)) throw e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, T + " already declared with let or const");
      }
    } catch (e3) {
      g = true, w = e3;
    } finally {
      try {
        b || null == S.return || S.return();
      } finally {
        if (g) throw w;
      }
    }
    var A = o.Functions.FindVarScopedDeclarations(t2), C = [], P = [], O = true, x = false, _ = void 0;
    try {
      for (var V, D = A.reverse()[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
        var N = V.value;
        if ("VariableDeclaration" !== N.type) {
          (0, u.default)("FunctionDeclaration" === N.type, "expected function");
          var I = o.Environment.BoundNames(e2, N)[0];
          if (P.indexOf(I) < 0) {
            if (!s2.CanDeclareGlobalFunction(I)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, I + ": global function declarations are not allowed");
            P.push(I), C.unshift(N);
          }
        }
      }
    } catch (e3) {
      x = true, _ = e3;
    } finally {
      try {
        O || null == D.return || D.return();
      } finally {
        if (x) throw _;
      }
    }
    var k = [], j = true, F = false, R = void 0;
    try {
      for (var M, B = A[Symbol.iterator](); !(j = (M = B.next()).done); j = true) {
        var L = M.value;
        if ("VariableDeclaration" === L.type) {
          var $ = true, G = false, z = void 0;
          try {
            for (var U, W = o.Environment.BoundNames(e2, L)[Symbol.iterator](); !($ = (U = W.next()).done); $ = true) {
              var q = U.value;
              if (P.indexOf(q) < 0) {
                if (!s2.CanDeclareGlobalVar(q)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, q + ": global variable declarations are not allowed");
                k.indexOf(q) < 0 && k.push(q);
              }
            }
          } catch (e3) {
            G = true, z = e3;
          } finally {
            try {
              $ || null == W.return || W.return();
            } finally {
              if (G) throw z;
            }
          }
        }
      }
    } catch (e3) {
      F = true, R = e3;
    } finally {
      try {
        j || null == B.return || B.return();
      } finally {
        if (F) throw R;
      }
    }
    var H = [], K = true, J = false, Y = void 0;
    try {
      for (var X, Q = t2.body[Symbol.iterator](); !(K = (X = Q.next()).done); K = true) {
        var Z = X.value;
        "VariableDeclaration" === Z.type && "var" !== Z.kind && H.push(Z);
      }
    } catch (e3) {
      J = true, Y = e3;
    } finally {
      try {
        K || null == Q.return || Q.return();
      } finally {
        if (J) throw Y;
      }
    }
    for (var ee = 0; ee < H.length; ee++) {
      var te = H[ee], re = true, ne = false, ie = void 0;
      try {
        for (var ae, oe = o.Environment.BoundNames(e2, te)[Symbol.iterator](); !(re = (ae = oe.next()).done); re = true) {
          var se = ae.value;
          "const" === te.kind ? s2.CreateImmutableBinding(se, true) : s2.CreateMutableBinding(se, false);
        }
      } catch (e3) {
        ne = true, ie = e3;
      } finally {
        try {
          re || null == oe.return || oe.return();
        } finally {
          if (ne) throw ie;
        }
      }
    }
    for (var ue = 0; ue < C.length; ue++) {
      var le = C[ue], ce = o.Environment.BoundNames(e2, le)[0], fe = r2.evaluate(le, n2);
      (0, u.default)(fe instanceof i.Value), s2.CreateGlobalFunctionBinding(ce, fe, false);
    }
    for (var pe = 0; pe < k.length; pe++) {
      var de = k[pe];
      s2.CreateGlobalVarBinding(de, false);
    }
    return e2.intrinsics.empty;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return n.IntegralValue.createFromNumberValue(i, e2.value);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, n) {
    return n.intrinsics.null;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, p) {
    var d, h = e2.callee, v = e2.arguments, y = r2.evaluate(h, t2), m = o.Environment.GetValue(p, y);
    d = v.length ? (0, s.ArgumentListEvaluation)(p, t2, r2, v) : [];
    var b = p.setNextExecutionContextLocation(e2.loc);
    try {
      return p.isInPureScope() ? (function(e3, t3, r3, s2) {
        var p2;
        try {
          p2 = s2.evaluateForEffects(function() {
            return f(e3, t3, s2);
          }, void 0, "tryToEvaluateConstructOrLeaveAsAbstract");
        } catch (r4) {
          if (r4 instanceof l.FatalError) {
            o.Leak.value(s2, e3);
            var d2 = true, h2 = false, v2 = void 0;
            try {
              for (var y2, m2 = t3[Symbol.iterator](); !(d2 = (y2 = m2.next()).done); d2 = true) {
                var b2 = y2.value;
                o.Leak.value(s2, b2);
              }
            } catch (e4) {
              h2 = true, v2 = e4;
            } finally {
              try {
                d2 || null == m2.return || m2.return();
              } finally {
                if (h2) throw v2;
              }
            }
            var g = s2.evaluateWithPossibleThrowCompletion(function() {
              return a.AbstractValue.createTemporalFromBuildFunction(s2, a.ObjectValue, [e3].concat(n(t3)), (0, c.createOperationDescriptor)("NEW_EXPRESSION"));
            }, i.TypesDomain.topVal, i.ValuesDomain.topVal);
            return (0, u.default)(g instanceof a.AbstractObjectValue), g;
          }
          throw r4;
        }
        s2.applyEffects(p2);
        var w = s2.returnOrThrowCompletion(p2.result);
        return (0, u.default)(w instanceof a.ObjectValue || w instanceof a.AbstractObjectValue), w;
      })(m, d, 0, p) : f(m, d, p);
    } finally {
      p.setNextExecutionContextLocation(b);
    }
  };
  var i = r(12), a = r(0), o = r(2), s = r(3), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(4), c = (r(5), r(9));
  function f(e2, t2, r2) {
    if (false === (0, s.IsConstructor)(r2, e2)) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
    return (0, u.default)(e2 instanceof a.ObjectValue), (0, s.Construct)(r2, e2, t2);
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return (0, n.GetNewTarget)(i);
  };
  var n = r(13);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, n2) {
    if (true === e2.computed) {
      var a2 = r2.evaluate(e2.property, t2), s2 = o.Environment.GetValue(n2, a2), l = o.To.ToPropertyKeyPartial(n2, s2), c = t2;
      return u(n2, l, c);
    }
    var f = new i.StringValue(n2, e2.property.name), p = t2;
    return u(n2, f, p);
  };
  var n = r(10), i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function u(e2, t2, r2) {
    var i2 = o.Environment.GetThisEnvironment(e2);
    if ((0, s.default)(i2 instanceof n.FunctionEnvironmentRecord), !i2.HasSuperBinding()) throw e2.createErrorThrowCompletion(e2.intrinsics.ReferenceError, "env does not have super binding");
    var u2 = i2.GetThisBinding(), l = i2.GetSuperBase(), c = (0, a.RequireObjectCoercible)(e2, l);
    return new n.Reference(c, t2, r2, u2);
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, u) {
    if ("Super" === e2.object.type) return (0, s.default)(e2, t2, r2, u);
    var l, c = r2.evaluate(e2.object, t2), f = o.Environment.GetValue(u, c);
    if (true === e2.computed) {
      var p = r2.evaluate(e2.property, t2);
      l = o.Environment.GetValue(u, p);
    } else l = new i.StringValue(u, e2.property.name);
    var d = (0, a.RequireObjectCoercible)(u, f, e2.object.loc), h = o.To.ToPropertyKeyPartial(u, l), v = t2;
    return new n.Reference(d, h, v);
  };
  var n = r(10), i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(280));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, l) {
    var c = r2.evaluate(e2.left, t2), f = s.Environment.GetValue(l, c);
    if (f instanceof o.ConcreteValue) {
      var p = s.To.ToBoolean(l, f);
      if ("&&" === e2.operator) {
        if (false === p) return f;
      } else if ((0, u.default)("||" === e2.operator), true === p) return f;
      var d = r2.evaluate(e2.right, t2);
      return s.Environment.GetValue(l, d);
    }
    (0, u.default)(f instanceof o.AbstractValue);
    var h = s.Environment.GetConditionValue(l, c);
    if (!h.mightNotBeFalse()) return "||" === e2.operator ? r2.evaluate(e2.right, t2) : f;
    if (!h.mightNotBeTrue()) return "&&" === e2.operator ? r2.evaluate(e2.right, t2) : f;
    (0, u.default)(h instanceof o.AbstractValue);
    var v, y, m, b, g, w, E = (0, n.construct_empty_effects)(l), S = (E.result, E.generator), T = E.modifiedBindings, A = E.modifiedProperties, C = E.createdObjects;
    try {
      var P = "&&" === e2.operator ? s.Path.withCondition : s.Path.withInverseCondition, O = P(h, function() {
        return l.evaluateNodeForEffects(e2.right, t2, r2);
      });
      v = O.result, y = O.generator, m = O.modifiedBindings, b = O.modifiedProperties, g = O.createdObjects;
    } catch (e3) {
      if (e3 instanceof a.InfeasiblePathError) return f;
      throw e3;
    }
    w = "&&" === e2.operator ? s.Join.joinEffects(h, new n.Effects(v, y, m, b, g), new n.Effects(new i.SimpleNormalCompletion(f), S, T, A, C)) : s.Join.joinEffects(h, new n.Effects(new i.SimpleNormalCompletion(f), S, T, A, C), new n.Effects(v, y, m, b, g));
    l.applyEffects(w);
    var x = l.returnOrThrowCompletion(w.result);
    f instanceof o.Value && v.value instanceof o.Value && (x = o.AbstractValue.createFromLogicalOp(l, e2.operator, f, v.value, e2.loc));
    return x;
  };
  var n = r(8), i = r(7), a = r(4), o = r(0), s = (r(10), r(2)), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, o) {
    return (function e3(t3, r3, o2, s, u) {
      switch (r3.type) {
        case "LabeledStatement":
          var l, c = r3, f = c.label.name;
          t3.push(f);
          try {
            l = e3(t3, c.body, o2, s, u);
          } catch (e4) {
            if (!(e4 instanceof i.BreakCompletion && e4.target === f)) {
              if (e4 instanceof i.JoinedAbruptCompletions || e4 instanceof i.JoinedNormalAndAbruptCompletions) {
                var p = i.Completion.normalizeSelectedCompletions(function(e5) {
                  return e5 instanceof i.BreakCompletion && e5.target === f;
                }, e4);
                return u.returnOrThrowCompletion(p);
              }
              throw e4;
            }
            l = e4.value;
          }
          return l;
        case "VariableDeclaration":
          if ("var" === r3.kind) {
            var d = s.evaluate(r3, o2);
            return (0, a.default)(d instanceof n.Value), d;
          }
        case "FunctionDeclaration":
        case "ClassDeclaration":
          throw u.createErrorThrowCompletion(u.intrinsics.SyntaxError, r3.type + " may not have a label");
        default:
          var h = s.evaluate(r3, o2, t3);
          return (0, a.default)(h instanceof n.Value), h;
      }
    })([], e2, t2, r2, o);
  };
  var n = r(0), i = r(7), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.evaluate = function(e2, t2, r2, c) {
    var f = r2.evaluate(e2.test, t2), p = l.Environment.GetConditionValue(c, f);
    if (p instanceof a.ConcreteValue) {
      var d;
      if (d = l.To.ToBoolean(c, p) ? r2.evaluateCompletion(e2.consequent, t2) : e2.alternate ? r2.evaluateCompletion(e2.alternate, t2) : c.intrinsics.undefined, (0, u.default)(!(d instanceof o.Reference)), (d = (0, s.UpdateEmpty)(c, d, c.intrinsics.undefined)) instanceof n.AbruptCompletion) throw d;
      return (0, u.default)(d instanceof a.Value), d;
    }
    if ((0, u.default)(p instanceof a.AbstractValue), p.mightNotBeTrue()) {
      if (p.mightNotBeFalse()) return (0, u.default)(p instanceof a.AbstractValue), c.evaluateWithAbstractConditional(p, function() {
        return c.evaluateNodeForEffects(e2.consequent, t2, r2);
      }, function() {
        return e2.alternate ? c.evaluateNodeForEffects(e2.alternate, t2, r2) : (0, i.construct_empty_effects)(c);
      });
      var h;
      if (h = e2.alternate ? r2.evaluate(e2.alternate, t2) : c.intrinsics.undefined, (0, u.default)(!(h instanceof o.Reference)), (h = (0, s.UpdateEmpty)(c, h, c.intrinsics.undefined)) instanceof n.AbruptCompletion) throw h;
      return (0, u.default)(h instanceof a.Value), h;
    }
    var v = r2.evaluate(e2.consequent, t2);
    if ((0, u.default)(!(v instanceof o.Reference)), (v = (0, s.UpdateEmpty)(c, v, c.intrinsics.undefined)) instanceof n.AbruptCompletion) throw v;
    return (0, u.default)(v instanceof a.Value), v;
  };
  var n = r(7), i = r(8), a = r(0), o = r(10), s = r(3), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return n.Environment.ResolveBinding(i, e2.name, t2, r2);
  };
  var n = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, l2) {
    if (e2.id) {
      if (true === e2.generator) {
        var c = t2 || (0, o.default)(e2.body), f = r2, p = i.Environment.NewDeclarativeEnvironment(l2, f), d = p.environmentRecord;
        (0, s.default)(e2.id);
        var h = e2.id.name;
        d.CreateImmutableBinding(h, false);
        var v = i.Functions.GeneratorFunctionCreate(l2, "normal", e2.params, e2.body, p, c);
        v.loc = e2.loc;
        var y = i.Create.ObjectCreate(l2, l2.intrinsics.GeneratorPrototype);
        return y.originalConstructor = v, i.Properties.DefinePropertyOrThrow(l2, v, "prototype", new u.PropertyDescriptor({ value: y, writable: true, enumerable: false, configurable: false })), i.Functions.SetFunctionName(l2, v, new a.StringValue(l2, h)), d.InitializeBinding(h, v), v;
      }
      var m = t2 || (0, o.default)(e2.body), b = r2, g = i.Environment.NewDeclarativeEnvironment(l2, b, false), w = g.environmentRecord;
      (0, s.default)(e2.id);
      var E = e2.id.name;
      w.CreateImmutableBinding(E, false, false, true);
      var S = i.Functions.FunctionCreate(l2, "normal", e2.params, e2.body, g, m);
      return S.loc = e2.loc, (0, n.MakeConstructor)(l2, S), i.Functions.SetFunctionName(l2, S, new a.StringValue(l2, E)), w.InitializeBinding(E, S, true), S;
    }
    if (true === e2.generator) {
      var T = t2 || (0, o.default)(e2.body), A = r2, C = i.Functions.GeneratorFunctionCreate(l2, "normal", e2.params, e2.body, A, T), P = i.Create.ObjectCreate(l2, l2.intrinsics.GeneratorPrototype);
      return P.originalConstructor = C, i.Properties.DefinePropertyOrThrow(l2, C, "prototype", new u.PropertyDescriptor({ value: P, writable: true, enumerable: false, configurable: false })), C;
    }
    var O = t2 || (0, o.default)(e2.body), x = r2, _ = i.Functions.FunctionCreate(l2, "normal", e2.params, e2.body, x, O);
    return _.loc = e2.loc, (0, n.MakeConstructor)(l2, _), _;
  };
  var n = r(3), i = r(2), a = r(0), o = l(r(37)), s = l(r(1)), u = r(6);
  function l(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, u) {
    if (e2.generator) {
      var l, c = t2 || (0, o.default)(e2.body);
      l = e2.id ? new a.StringValue(u, e2.id.name) : new a.StringValue(u, "default");
      var f = i.Functions.GeneratorFunctionCreate(u, "normal", e2.params, e2.body, r2, c), p = i.Create.ObjectCreate(u, u.intrinsics.GeneratorPrototype);
      return i.Properties.DefinePropertyOrThrow(u, f, "prototype", new s.PropertyDescriptor({ value: p, writable: true, configurable: false })), i.Functions.SetFunctionName(u, f, l), f;
    }
    var d, h = t2 || (0, o.default)(e2.body);
    d = e2.id ? new a.StringValue(u, e2.id.name) : new a.StringValue(u, "default");
    var v = i.Functions.FunctionCreate(u, "normal", e2.params, e2.body, r2, h);
    return e2.id && e2.id.name && (v.__originalName = e2.id.name), (0, n.MakeConstructor)(u, v), i.Functions.SetFunctionName(u, v, d), v;
  };
  var n = r(22), i = r(2), a = r(0), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(37)), s = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.CreatePerIterationEnvironment = v, t.default = function(e2, t2, r2, i2, u2) {
    return i2.isInPureScope() && !i2.instantRender.enabled ? (function(e3, t3, r3, i3, u3) {
      var l2;
      (0, f.default)(!i3.instantRender.enabled);
      var h2 = i3.suppressDiagnostics;
      try {
        i3.suppressDiagnostics = true, l2 = i3.evaluateForEffects(function() {
          return b(e3, t3, r3, i3, u3);
        }, void 0, "tryToEvaluateForStatementOrLeaveAsAbstract");
      } catch (u4) {
        if (u4 instanceof s.FatalError) return i3.suppressDiagnostics = h2, i3.evaluateWithPossibleThrowCompletion(function() {
          return (function(e4, t4, r4, i4, o2) {
            var u5 = new n.ECMAScriptSourceFunctionValue(i4), l3 = p.cloneDeep(p.blockStatement([e4]));
            u5.initialize([], l3), u5.$Environment = r4;
            var h3 = { usesArguments: false, usesThis: false, usesReturn: false, usesGotoToLabel: false, usesThrow: false, varPatternUnsupported: false };
            (0, a.default)(p.file(p.program([p.expressionStatement(p.functionExpression(null, [], l3))])), m, null, h3), a.default.cache.clear();
            var v2 = h3.usesThis;
            if (h3.usesReturn || h3.usesThrow || h3.usesArguments || h3.usesGotoToLabel || h3.varPatternUnsupported) {
              var y2 = new s.CompilerDiagnostic("failed to recover from a for/while loop bail-out due to unsupported logic in loop body", i4.currentLocation, "PP0037", "FatalError");
              throw i4.handleError(y2), new s.FatalError();
            }
            var b2 = [u5];
            if (v2) {
              var g = r4.evaluate(p.thisExpression(), t4), w = c.Environment.GetValue(i4, g);
              c.Leak.value(i4, w), b2.push(w);
            }
            c.Leak.value(i4, u5);
            var E = n.AbstractValue.createTemporalFromBuildFunction(i4, n.Value, b2, (0, d.createOperationDescriptor)("FOR_STATEMENT_FUNC", { usesThis: v2 }));
            return (0, f.default)(E instanceof n.AbstractValue), E;
          })(e3, t3, r3, i3);
        }, o.TypesDomain.topVal, o.ValuesDomain.topVal);
        throw u4;
      } finally {
        i3.suppressDiagnostics = h2;
      }
      return i3.applyEffects(l2), i3.returnOrThrowCompletion(l2.result);
    })(e2, t2, r2, i2, u2) : b(e2, t2, r2, i2, u2);
  };
  r(8);
  var n = r(0), i = r(7), a = h(r(28)), o = r(12), s = r(4), u = r(3), l = r(58), c = r(2), f = h(r(1)), p = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), d = r(9);
  function h(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function v(e2, t2) {
    if (t2.length > 0) {
      var r2 = e2.getRunningContext().lexicalEnvironment, n2 = r2.environmentRecord, i2 = r2.parent;
      (0, f.default)(null !== i2);
      var a2 = c.Environment.NewDeclarativeEnvironment(e2, i2);
      e2.onDestroyScope(r2);
      var o2 = a2.environmentRecord, s2 = true, u2 = false, l2 = void 0;
      try {
        for (var p2, d2 = t2[Symbol.iterator](); !(s2 = (p2 = d2.next()).done); s2 = true) {
          var h2 = p2.value;
          o2.CreateMutableBinding(h2, false);
          var v2 = n2.GetBindingValue(h2, true);
          o2.InitializeBinding(h2, v2);
        }
      } catch (e3) {
        u2 = true, l2 = e3;
      } finally {
        try {
          s2 || null == d2.return || d2.return();
        } finally {
          if (u2) throw l2;
        }
      }
      e2.getRunningContext().lexicalEnvironment = a2;
    }
    return e2.intrinsics.undefined;
  }
  function y(e2, t2, r2, a2, o2, p2, d2) {
    var h2 = e2.intrinsics.undefined;
    v(e2, o2);
    for (var y2 = e2.getRunningContext().lexicalEnvironment, m2 = 0; ; ) {
      var b2 = void 0;
      if (t2) {
        var g = y2.evaluate(t2, d2), w = c.Environment.GetValue(e2, g);
        if (!c.To.ToBooleanPartial(e2, w)) {
          if ((b2 = c.Functions.incorporateSavedCompletion(e2, h2)) instanceof i.JoinedNormalAndAbruptCompletions) {
            b2 = i.Completion.normalizeSelectedCompletions(function(e3) {
              return e3 instanceof i.BreakCompletion && !e3.target;
            }, b2), b2 = e2.composeWithSavedCompletion(b2);
          }
          return h2;
        }
      }
      if (b2 = y2.evaluateCompletion(a2, d2), (0, f.default)(b2 instanceof n.Value || b2 instanceof i.AbruptCompletion), b2 = c.Functions.incorporateSavedCompletion(e2, b2), (0, f.default)(void 0 !== b2), b2 instanceof n.Value && (b2 = new i.SimpleNormalCompletion(b2)), !(0, l.LoopContinues)(e2, b2, p2)) {
        if ((0, f.default)(b2 instanceof i.AbruptCompletion), b2 instanceof i.BreakCompletion) {
          if (!b2.target) return (0, u.UpdateEmpty)(e2, b2, h2).value;
        } else if (b2 instanceof i.JoinedAbruptCompletions) {
          var E = function(e3) {
            return e3 instanceof i.BreakCompletion && !e3.target;
          };
          b2.containsSelectedCompletion(E) && (b2 = i.Completion.normalizeSelectedCompletions(E, b2));
        }
        return e2.returnOrThrowCompletion(b2);
      }
      b2 instanceof i.JoinedNormalAndAbruptCompletions && (b2 = i.Completion.normalizeSelectedCompletions(function(e3) {
        return e3 instanceof i.ContinueCompletion;
      }, b2)), (0, f.default)(b2 instanceof i.Completion), b2 = e2.composeWithSavedCompletion(b2);
      var S = (0, l.InternalGetResultValue)(e2, b2);
      if (S instanceof n.EmptyValue || (h2 = S), v(e2, o2), y2 = e2.getRunningContext().lexicalEnvironment, r2) {
        var T = y2.evaluate(r2, d2);
        c.Environment.GetValue(e2, T);
      } else e2.useAbstractInterpretation && ++m2 > 6 && A(e2.savedCompletion);
    }
    function A(t3) {
      if (void 0 !== t3) {
        if (t3 instanceof i.ThrowCompletion || t3 instanceof i.BreakCompletion || t3 instanceof i.ReturnCompletion) {
          var r3 = new s.CompilerDiagnostic("break, throw or return cannot be guarded by abstract condition", t3.location, "PP0035", "FatalError");
          throw e2.handleError(r3), new s.FatalError();
        }
        (t3 instanceof i.JoinedAbruptCompletions || t3 instanceof i.JoinedNormalAndAbruptCompletions) && (A(t3.consequent), A(t3.alternate));
      }
    }
    (0, f.default)(false);
  }
  var m = { ReferencedIdentifier: function(e2, t2) {
    "arguments" === e2.node.name && (t2.usesArguments = true);
  }, ThisExpression: function(e2, t2) {
    t2.usesThis = true;
  }, "BreakStatement|ContinueStatement": function(e2, t2) {
    null !== e2.node.label && (t2.usesGotoToLabel = true);
  }, ReturnStatement: function(e2, t2) {
    t2.usesReturn = true;
  }, ThrowStatement: function(e2, t2) {
    t2.usesThrow = true;
  }, VariableDeclaration: function(e2, t2) {
    var r2 = e2.node;
    if ("var" === r2.kind) if (p.isForOfStatement(e2.parentPath.node) || p.isForInStatement(e2.parentPath.node)) {
      (0, f.default)(1 === r2.declarations.length), (0, f.default)(null == r2.declarations[0].init);
      var n2 = r2.declarations[0].id;
      if (!p.isIdentifier(n2)) return void (t2.varPatternUnsupported = true);
      e2.replaceWith(n2);
    } else {
      var i2 = !p.isForStatement(e2.parentPath.node), a2 = function(e3) {
        var n3 = r2.declarations[e3], i3 = n3.id, a3 = n3.init;
        if (p.isIdentifier(i3)) return null === a3 && (a3 = p.identifier("undefined")), p.assignmentExpression("=", i3, a3);
        t2.varPatternUnsupported = true;
      };
      if (1 === r2.declarations.length) {
        var o2 = a2(0);
        if (void 0 === o2) return;
        e2.replaceWith(i2 ? p.expressionStatement(o2) : o2);
      } else {
        for (var s2 = [], u2 = 0; u2 < r2.declarations.length; u2++) {
          var l2 = a2(u2);
          if (void 0 === l2) return;
          s2.push(l2);
        }
        var c2 = p.sequenceExpression(s2);
        e2.replaceWith(i2 ? p.expressionStatement(c2) : c2);
      }
    }
  } };
  function b(e2, t2, r2, n2, a2) {
    var o2 = e2.init, s2 = e2.test, u2 = e2.update, l2 = e2.body;
    if (o2 && "VariableDeclaration" === o2.type) {
      if ("var" === o2.kind) {
        r2.evaluate(o2, t2);
        return y(n2, s2, u2, l2, [], a2, t2);
      }
      var p2 = r2, d2 = c.Environment.NewDeclarativeEnvironment(n2, p2), h2 = d2.environmentRecord, v2 = "const" === o2.kind, m2 = c.Environment.BoundNames(n2, o2), b2 = true, g = false, w = void 0;
      try {
        for (var E, S = m2[Symbol.iterator](); !(b2 = (E = S.next()).done); b2 = true) {
          var T = E.value;
          v2 ? h2.CreateImmutableBinding(T, true) : h2.CreateMutableBinding(T, false);
        }
      } catch (e3) {
        g = true, w = e3;
      } finally {
        try {
          b2 || null == S.return || S.return();
        } finally {
          if (g) throw w;
        }
      }
      n2.getRunningContext().lexicalEnvironment = d2;
      var A = d2.evaluateCompletion(o2, t2);
      if (A instanceof i.AbruptCompletion) {
        var C = n2.getRunningContext().lexicalEnvironment;
        throw n2.onDestroyScope(C), C !== d2 && (0, f.default)(d2.destroyed), n2.getRunningContext().lexicalEnvironment = p2, A;
      }
      var P, O = v2 ? [] : m2;
      try {
        P = y(n2, s2, u2, l2, O, a2, t2);
      } finally {
        var x = n2.getRunningContext().lexicalEnvironment;
        n2.onDestroyScope(x), x !== d2 && (0, f.default)(d2.destroyed), n2.getRunningContext().lexicalEnvironment = p2;
      }
      return P;
    }
    if (o2) {
      var _ = r2.evaluate(o2, t2);
      c.Environment.GetValue(n2, _);
    }
    return y(n2, s2, u2, l2, [], a2, t2);
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a2, d) {
    var h = e2.left, v = e2.right, y = e2.body;
    function m(e3, t3) {
      e3 instanceof l.AbstractValue && p(a2, t3);
    }
    try {
      if ("VariableDeclaration" === h.type) {
        if ("var" === h.kind) {
          var b = (0, o.ForInOfHeadEvaluation)(a2, r2, [], v, "enumerate", t2);
          return b.isPartialObject() && b.isSimpleObject() ? (function(e3, t3, r3, a3, o2, d2, h2, v2) {
            (0, c.default)(h2.isSimpleObject());
            var y2 = a3.getRunningContext().lexicalEnvironment, m2 = u.Environment.NewDeclarativeEnvironment(a3, y2);
            a3.getRunningContext().lexicalEnvironment = m2;
            try {
              var b2 = m2.environmentRecord;
              (0, c.default)(b2 instanceof i.DeclarativeEnvironmentRecord, "expected declarative environment record");
              var g2, w2 = l.AbstractValue.createFromType(a3, l.StringValue), E = true, S = false, T = void 0;
              try {
                for (var A, C = u.Environment.BoundNames(a3, o2)[Symbol.iterator](); !(E = (A = C.next()).done); E = true) {
                  var P = A.value;
                  (0, c.default)(void 0 === g2), g2 = f.identifier(P), b2.CreateMutableBinding(P, false), b2.InitializeBinding(P, w2);
                }
              } catch (e4) {
                S = true, T = e4;
              } finally {
                try {
                  E || null == C.return || C.return();
                } finally {
                  if (S) throw T;
                }
              }
              var O, x, _ = a3.evaluateNodeForEffects(v2, t3, m2), V = _.result, D = _.generator, N = _.modifiedBindings, I = _.modifiedProperties, k = _.createdObjects;
              if (V instanceof n.SimpleNormalCompletion && D.empty() && 0 === N.size && 1 === I.size) {
                if ((0, c.default)(0 === k.size), I.forEach(function(e4, t4, r4) {
                  if (t4.object.unknownProperty === t4) {
                    O = t4.object, (0, c.default)(void 0 !== e4);
                    var n2 = e4.throwIfNotConcrete(a3).value;
                    if (n2 instanceof l.AbstractValue) {
                      var i2 = n2.args[0];
                      (0, c.default)(i2 instanceof l.AbstractValue && "template for property name condition" === i2.kind);
                      var o3 = n2.args[2];
                      if (o3 instanceof l.AbstractValue && "template for prototype member expression" === o3.kind) for (var s2 = n2.args[1]; s2 instanceof l.AbstractValue; ) {
                        if ("sentinel member expression" === s2.kind && s2.args[0] instanceof l.ObjectValue && s2.args[1] === w2) {
                          x = s2.args[0];
                          break;
                        }
                        var u2 = s2.args[0];
                        if (!(u2 instanceof l.AbstractValue && "check for known property" === u2.kind && u2.args[0] === w2)) break;
                        s2 = s2.args[2];
                      }
                    }
                  }
                }), O instanceof l.ObjectValue && void 0 !== x) {
                  var j = h2;
                  if (h2 instanceof l.AbstractObjectValue && !h2.values.isTop() && 1 === h2.values.getElements().size) {
                    var F = true, R = false, M = void 0;
                    try {
                      for (var B, L = h2.values.getElements()[Symbol.iterator](); !(F = (B = L.next()).done); F = true) {
                        var $ = B.value;
                        (0, c.default)($ instanceof l.ObjectValue), j = $;
                      }
                    } catch (e4) {
                      R = true, M = e4;
                    } finally {
                      try {
                        F || null == L.return || L.return();
                      } finally {
                        if (R) throw M;
                      }
                    }
                  }
                  var G = a3.generator;
                  if ((0, c.default)(void 0 !== G), O.makeSimple(), O.makePartial(), x === j) {
                    (0, c.default)(x.isPartialObject());
                    var z = (0, s.EnumerableOwnProperties)(a3, x, "key+value", true), U = true, W = false, q = void 0;
                    try {
                      for (var H, K = z[Symbol.iterator](); !(U = (H = K.next()).done); U = true) {
                        var J = H.value;
                        (0, c.default)(J instanceof l.ArrayValue);
                        var Y = J.$Get("0", J), X = J.$Get("1", J);
                        (0, c.default)(Y instanceof l.StringValue), O.$Set(Y, X, O);
                      }
                    } catch (e4) {
                      W = true, q = e4;
                    } finally {
                      try {
                        U || null == K.return || K.return();
                      } finally {
                        if (W) throw q;
                      }
                    }
                  }
                  return (0, c.default)(null != g2), G.emitForInStatement(j, o2, x, O, g2), a3.intrinsics.undefined;
                }
              }
            } finally {
              a3.getRunningContext().lexicalEnvironment = y2, a3.onDestroyScope(m2);
            }
            p(a3, d2.loc), (0, c.default)(false);
          })(0, t2, 0, a2, h, v, b, y) : (m(b, v.loc), (0, c.default)(b instanceof l.ObjectValue), (0, o.ForInOfBodyEvaluation)(a2, r2, h.declarations[0].id, y, b, "varBinding", d, t2));
        }
        var g = (0, o.ForInOfHeadEvaluation)(a2, r2, u.Environment.BoundNames(a2, h), v, "enumerate", t2);
        return m(g, v.loc), (0, c.default)(g instanceof l.ObjectValue), (0, o.ForInOfBodyEvaluation)(a2, r2, h, y, g, "lexicalBinding", d, t2);
      }
      var w = (0, o.ForInOfHeadEvaluation)(a2, r2, [], v, "enumerate", t2);
      return m(w, v.loc), (0, c.default)(w instanceof l.ObjectValue), (0, o.ForInOfBodyEvaluation)(a2, r2, h, y, w, "assignment", d, t2);
    } catch (e3) {
      if (e3 instanceof n.BreakCompletion && !e3.target) return (0, s.UpdateEmpty)(a2, e3, a2.intrinsics.undefined).value;
      throw e3;
    }
  };
  var n = r(7), i = r(10), a = r(4), o = r(58), s = r(3), u = r(2), l = r(0), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), f = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
  function p(e2, t2) {
    var r2 = new a.CompilerDiagnostic("for in loops over unknown objects are not yet supported", t2, "PP0013", "FatalError");
    throw e2.handleError(r2), new a.FatalError();
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    var o = r2.evaluate(e2.program, t2);
    return (0, i.default)(o instanceof n.Value), o;
  };
  var n = r(0), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    var a = r2.evaluate(e2.expression, t2);
    return n.Environment.GetValue(i, a);
  };
  var n = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, n) {
    return n.intrinsics.empty;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, f, p) {
    var d = e2.body, h = e2.test, v = f.intrinsics.undefined, y = f.evaluateWithUndoForDiagnostic(function() {
      for (; ; ) {
        var e3 = r2.evaluateCompletion(d, t2);
        if ((0, c.default)(e3 instanceof a.Value || e3 instanceof u.AbruptCompletion), false === (0, s.LoopContinues)(f, e3, p)) {
          if ((0, c.default)(e3 instanceof u.AbruptCompletion), e3 instanceof u.BreakCompletion && !e3.target) return (0, o.UpdateEmpty)(f, e3, v).value;
          throw (0, o.UpdateEmpty)(f, e3, v);
        }
        var n2 = (0, s.InternalGetResultValue)(f, e3);
        n2 instanceof a.EmptyValue || (v = n2);
        var i2 = r2.evaluate(h, t2), y2 = l.Environment.GetConditionValue(f, i2);
        if (false === l.To.ToBooleanPartial(f, y2)) return v;
      }
      (0, c.default)(false);
    });
    if (y instanceof a.Value) return y;
    var m = f.evaluateForFixpointEffects(function() {
      var e3 = r2.evaluateCompletion(d, t2);
      e3 instanceof a.Value && (e3 = new u.SimpleNormalCompletion(e3));
      var n2 = r2.evaluate(h, t2);
      return [l.Environment.GetConditionValue(f, n2), e3];
    });
    if (void 0 !== m) {
      var b = n(m, 3), g = b[0], w = b[1], E = b[2], S = g.result, T = w.generator;
      f.applyEffects(g);
      var A = f.generator;
      return (0, c.default)(void 0 !== A), A.emitDoWhileStatement(E, T), (0, c.default)(S instanceof u.SimpleNormalCompletion, "todo: handle loops that throw exceptions or return"), S.value;
    }
    throw f.handleError(y), new i.FatalError();
  };
  var i = r(4), a = r(0), o = r(3), s = r(58), u = r(7), l = r(2), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "default", { enumerable: true, get: function() {
    return n.default;
  } });
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(139));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "default", { enumerable: true, get: function() {
    return n.default;
  } });
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(137));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, a) {
    var o = r2.evaluate(e2.value, t2);
    return (0, i.default)(o instanceof n.Value), o;
  };
  var n = r(0), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    throw new n.ContinueCompletion(i.intrinsics.empty, e2.loc, e2.label && e2.label.name);
  };
  var n = r(7);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, s) {
    var u = r2.evaluate(e2.test, t2), l = a.Environment.GetConditionValue(s, u);
    if (l instanceof n.ConcreteValue) return a.To.ToBoolean(s, l) ? r2.evaluate(e2.consequent, t2) : r2.evaluate(e2.alternate, t2);
    (0, o.default)(l instanceof n.AbstractValue);
    var c = e2.consequent, f = e2.alternate;
    return l.mightNotBeTrue() ? l.mightNotBeFalse() ? s.evaluateWithAbstractConditional(l, function() {
      return s.evaluateNodeForEffects(c, t2, r2);
    }, function() {
      return f ? s.evaluateNodeForEffects(f, t2, r2) : (0, i.construct_empty_effects)(s);
    }) : r2.evaluate(f, t2) : r2.evaluate(c, t2);
  };
  var n = r(0), i = r(8), a = r(2), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, o) {
    var s;
    null != e2.id && (s = e2.id.name);
    var u = (0, i.ClassDefinitionEvaluation)(o, e2, s, t2, r2);
    if (void 0 !== s) {
      var l = (0, n.HasOwnProperty)(o, u, "name");
      l || a.Functions.SetFunctionName(o, u, s);
    }
    return u;
  };
  var n = r(3), i = r(138), a = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, s, u) {
    (0, a.default)(u instanceof i.ThrowCompletion, "Metadata isn't a throw completion");
    var l = s.getRunningContext().lexicalEnvironment, c = o.Environment.NewDeclarativeEnvironment(s, l), f = c.environmentRecord, p = true, d = false, h = void 0;
    try {
      for (var v, y = o.Environment.BoundNames(s, e2.param)[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
        var m = v.value;
        f.CreateMutableBinding(m, false);
      }
    } catch (e3) {
      d = true, h = e3;
    } finally {
      try {
        p || null == y.return || y.return();
      } finally {
        if (d) throw h;
      }
    }
    s.getRunningContext().lexicalEnvironment = c;
    try {
      o.Environment.BindingInitialization(s, e2.param, u.value, t2, c);
      var b = c.evaluate(e2.body, t2);
      return (0, a.default)(b instanceof n.Value), b;
    } finally {
      s.getRunningContext().lexicalEnvironment = l, s.onDestroyScope(c);
    }
  };
  var n = r(0), i = r(7), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), o = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, u) {
    var l = (0, a.GetNewTarget)(u);
    if (l instanceof i.UndefinedValue) throw u.createErrorThrowCompletion(u.intrinsics.ReferenceError, "newTarget is undefined");
    var c = (function(e3) {
      var t3 = o.Environment.GetThisEnvironment(e3);
      (0, s.default)(t3 instanceof n.FunctionEnvironmentRecord);
      var r3 = t3.$FunctionObject.$GetPrototypeOf();
      if (!(0, a.IsConstructor)(e3, r3)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "super called outside of constructor");
      return (0, s.default)(r3 instanceof i.ObjectValue), r3;
    })(u), f = (0, a.ArgumentListEvaluation)(u, t2, r2, e2), p = (0, a.Construct)(u, c, f, l).throwIfNotConcreteObject();
    return o.Environment.GetThisEnvironment(u).BindThisValue(p);
  };
  var n = r(10), i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, n2) {
    if ("Super" === e2.callee.type) return (0, f.default)(e2.arguments, t2, r2, n2);
    var i2 = r2.evaluate(e2.callee, t2), a2 = n2.setNextExecutionContextLocation(e2.loc);
    try {
      return h(i2, e2, t2, r2, n2);
    } finally {
      n2.setNextExecutionContextLocation(a2);
    }
  };
  var i = r(4), a = r(10), o = r(12), s = r(0), u = r(2), l = r(3), c = d(r(1)), f = d(r(301)), p = r(9);
  function d(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function h(e2, t2, r2, i2, l2) {
    if (e2 instanceof a.Reference && e2.base instanceof s.AbstractValue && e2.base.mightNotBeObject() && l2.isInPureScope()) {
      var f2 = e2.base;
      if ("conditional" === f2.kind) {
        var p2 = n(f2.args, 3), d2 = p2[0], h2 = p2[1], y2 = p2[2];
        return (0, c.default)(d2 instanceof s.AbstractValue), v(e2, d2, h2, y2, t2, r2, i2, l2);
      }
      if ("||" === f2.kind) {
        var g = n(f2.args, 2), w = g[0], E = g[1];
        return (0, c.default)(w instanceof s.AbstractValue), v(e2, w, w, E, t2, r2, i2, l2);
      }
      if ("&&" === f2.kind) {
        var S = n(f2.args, 2), T = S[0], A = S[1];
        return (0, c.default)(T instanceof s.AbstractValue), v(e2, T, A, T, t2, r2, i2, l2);
      }
      var C = e2.referencedName, P = (function(e3, t3) {
        switch (t3.getType()) {
          case s.IntegralValue:
          case s.NumberValue:
            return e3.intrinsics.NumberPrototype;
          case s.StringValue:
            return e3.intrinsics.StringPrototype;
          case s.BooleanValue:
            return e3.intrinsics.BooleanPrototype;
          case s.SymbolValue:
            return e3.intrinsics.SymbolPrototype;
          default:
            return;
        }
      })(l2, f2);
      if (void 0 !== P && "string" == typeof C) {
        var O = P._SafeGetDataPropertyValue(C);
        if (O instanceof s.FunctionValue) return b(e2, O, t2, r2, i2, l2);
      }
      return l2.evaluateWithPossibleThrowCompletion(function() {
        return m(e2, f2, t2, r2, i2, l2);
      }, o.TypesDomain.topVal, o.ValuesDomain.topVal);
    }
    var x = u.Environment.GetValue(l2, e2);
    return b(e2, x, t2, r2, i2, l2);
  }
  function v(e2, t2, r2, n2, i2, o2, s2, u2) {
    return u2.evaluateWithAbstractConditional(t2, function() {
      return u2.evaluateForEffects(function() {
        return (0, a.isValidBaseValue)(r2) ? h(new a.Reference(r2, e2.referencedName, e2.strict, e2.thisValue), i2, o2, s2, u2) : r2;
      }, null, "evaluateConditionalReferenceBase consequent");
    }, function() {
      return u2.evaluateForEffects(function() {
        return (0, a.isValidBaseValue)(n2) ? h(new a.Reference(n2, e2.referencedName, e2.strict, e2.thisValue), i2, o2, s2, u2) : n2;
      }, null, "evaluateConditionalReferenceBase alternate");
    });
  }
  function y(e2, t2, r2, n2, i2, a2, o2) {
    return o2.evaluateWithAbstractConditional(e2, function() {
      return o2.evaluateForEffects(function() {
        return b(t2, t2, n2, i2, a2, o2);
      }, null, "callBothFunctionsAndJoinTheirEffects consequent");
    }, function() {
      return o2.evaluateForEffects(function() {
        return b(r2, r2, n2, i2, a2, o2);
      }, null, "callBothFunctionsAndJoinTheirEffects alternate");
    });
  }
  function m(e2, t2, r2, i2, o2, c2) {
    var f2 = [t2], d2 = n(e2 instanceof a.Reference ? [e2.base, e2.referencedName] : [], 2), h2 = d2[0], v2 = d2[1];
    h2 instanceof s.Value && (f2 = [h2]), void 0 !== v2 && "string" != typeof v2 && f2.push(v2), f2 = f2.concat((0, l.ArgumentListEvaluation)(c2, i2, o2, r2.arguments));
    var y2 = true, m2 = false, b2 = void 0;
    try {
      for (var g, w = f2[Symbol.iterator](); !(y2 = (g = w.next()).done); y2 = true) {
        var E = g.value;
        E !== t2 && u.Leak.value(c2, E, r2.loc);
      }
    } catch (e3) {
      m2 = true, b2 = e3;
    } finally {
      try {
        y2 || null == w.return || w.return();
      } finally {
        if (m2) throw b2;
      }
    }
    var S = (t2 instanceof s.AbstractObjectValue ? t2.functionResultType : void 0) || s.Value;
    return s.AbstractValue.createTemporalFromBuildFunction(c2, S, f2, (0, p.createOperationDescriptor)("CALL_BAILOUT", { propRef: v2, thisArg: h2 }));
  }
  function b(e2, t2, r2, f2, p2, d2) {
    if (t2 instanceof s.AbstractValue) {
      var h2 = "MemberExpression" === r2.callee.type ? r2.callee.property.loc : r2.callee.loc;
      if ("conditional" === t2.kind) {
        var v2 = n(t2.args, 3), b2 = v2[0], g = v2[1], w = v2[2];
        if ((0, c.default)(b2 instanceof s.AbstractValue), s.Value.isTypeCompatibleWith(g.getType(), s.FunctionValue) || s.Value.isTypeCompatibleWith(w.getType(), s.FunctionValue)) return y(b2, g, w, r2, f2, p2, d2);
      } else if ("||" === t2.kind) {
        var E = n(t2.args, 2), S = E[0], T = E[1];
        if ((0, c.default)(S instanceof s.AbstractValue), s.Value.isTypeCompatibleWith(S.getType(), s.FunctionValue) || s.Value.isTypeCompatibleWith(T.getType(), s.FunctionValue)) return y(S, S, T, r2, f2, p2, d2);
      } else if ("&&" === t2.kind) {
        var A = n(t2.args, 2), C = A[0], P = A[1];
        if ((0, c.default)(C instanceof s.AbstractValue), s.Value.isTypeCompatibleWith(C.getType(), s.FunctionValue) || s.Value.isTypeCompatibleWith(P.getType(), s.FunctionValue)) return y(C, P, C, r2, f2, p2, d2);
      }
      if (!s.Value.isTypeCompatibleWith(t2.getType(), s.FunctionValue) && !d2.isInPureScope()) {
        var O = new i.CompilerDiagnostic("might not be a function", h2, "PP0005", "RecoverableError");
        if ("Fail" === d2.handleError(O)) throw new i.FatalError();
      }
      return d2.isInPureScope() ? d2.evaluateWithPossibleThrowCompletion(function() {
        return m(e2, t2, r2, f2, p2, d2);
      }, o.TypesDomain.topVal, o.ValuesDomain.topVal) : m(e2, t2, r2, f2, p2, d2);
    }
    if ((0, c.default)(t2 instanceof s.ConcreteValue), e2 instanceof a.Reference && !u.Environment.IsPropertyReference(d2, e2) && "eval" === u.Environment.GetReferencedName(d2, e2) && (0, l.SameValue)(d2, t2, d2.intrinsics.eval)) {
      var x = (0, l.ArgumentListEvaluation)(d2, f2, p2, r2.arguments);
      if (0 === x.length) return d2.intrinsics.undefined;
      var _ = x[0], V = f2, D = d2;
      if (_ instanceof s.AbstractValue) {
        var N = r2.arguments[0].loc, I = new i.CompilerDiagnostic("eval argument must be a known value", N, "PP0006", "RecoverableError");
        if ("Fail" === d2.handleError(I)) throw new i.FatalError();
        return m(e2, t2, r2, f2, p2, d2);
      }
      return u.Functions.PerformEval(d2, _, D, V, true);
    }
    var k;
    if (e2 instanceof a.Reference) if (u.Environment.IsPropertyReference(d2, e2)) k = (0, l.GetThisValue)(d2, e2);
    else {
      var j = u.Environment.GetBase(d2, e2);
      (0, c.default)(j instanceof a.EnvironmentRecord), k = j.WithBaseObject();
    }
    else k = d2.intrinsics.undefined;
    var F = r2, R = (0, l.IsInTailPosition)(d2, F);
    return d2.isInPureScope() && !d2.instantRender.enabled ? (function(e3, t3, r3, n2, a2, f3, p3, d3) {
      var h3;
      (0, c.default)(!f3.instantRender.enabled);
      var v3 = f3.suppressDiagnostics;
      try {
        f3.suppressDiagnostics = !(t3 instanceof s.NativeFunctionValue) || "__optimize" !== t3.name, h3 = f3.evaluateForEffects(function() {
          return (0, l.EvaluateDirectCall)(f3, n2, a2, e3, t3, p3, r3.arguments, d3);
        }, void 0, "tryToEvaluateCallOrLeaveAsAbstract");
      } catch (l2) {
        if (l2 instanceof i.FatalError) {
          if (t3 instanceof s.NativeFunctionValue && "__fatal" === t3.name) throw l2;
          return f3.suppressDiagnostics = v3, u.Leak.value(f3, t3, r3.loc), f3.evaluateWithPossibleThrowCompletion(function() {
            return m(e3, t3, r3, n2, a2, f3);
          }, o.TypesDomain.topVal, o.ValuesDomain.topVal);
        }
        throw l2;
      } finally {
        f3.suppressDiagnostics = v3;
      }
      return f3.applyEffects(h3), f3.returnOrThrowCompletion(h3.result);
    })(e2, t2, r2, f2, p2, d2, k, R) : (0, l.EvaluateDirectCall)(d2, f2, p2, e2, t2, k, r2.arguments, R);
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    throw new n.BreakCompletion(i.intrinsics.empty, e2.loc, e2.label && e2.label.name);
  };
  var n = r(7);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return new n.BooleanValue(i, e2.value);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    throw new n.FatalError("TODO #712: AwaitExpression");
  };
  var n = r(4);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, l) {
    if (!e2.hasOwnProperty("operator") || null === e2.operator) throw Error("Unexpected AST form");
    var c = e2.left, f = e2.right, p = e2.operator;
    if ("=" === p) {
      if ("ObjectPattern" !== c.type && "ArrayPattern" !== c.type) {
        var d = r2.evaluate(c, t2), h = r2.evaluate(f, t2), v = o.Environment.GetValue(l, h);
        if ((0, a.IsAnonymousFunctionDefinition)(l, f) && (0, a.IsIdentifierRef)(l, c)) {
          (0, s.default)(v instanceof n.ObjectValue);
          var y = (0, a.HasOwnProperty)(l, v, "name");
          y || ((0, s.default)(d instanceof i.Reference), o.Functions.SetFunctionName(l, v, o.Environment.GetReferencedName(l, d)));
        }
        return o.Properties.PutValue(l, d, v), v;
      }
      var m = c, b = r2.evaluate(f, t2), g = o.Environment.GetValue(l, b);
      return (0, a.DestructuringAssignmentEvaluation)(l, m, g, t2, r2), g;
    }
    var w = r2.evaluate(c, t2), E = o.Environment.GetValue(l, w), S = r2.evaluate(f, t2), T = o.Environment.GetValue(l, S), A = p.slice(0, -1), C = o.Environment.GetValue(l, (0, u.computeBinary)(l, A, E, T, e2.left.loc, e2.right.loc));
    return o.Properties.PutValue(l, w, C), C;
  };
  var n = r(0), i = r(10), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(62);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, o) {
    var s = e2.body;
    "BlockStatement" !== s.type && ((s = a.blockStatement([a.returnStatement(s)])).loc = e2.body.loc);
    var u = t2 || (0, i.default)(e2.body), l = r2, c = e2.params, f = n.Functions.FunctionCreate(o, "arrow", c, s, l, u);
    return f.loc = e2.loc, f;
  };
  var n = r(2), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(37)), a = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, u) {
    for (var l = s.Create.ArrayCreate(u, 0), c = e2.elements || [], f = c.length, p = 0, d = 0; d < f; d++) {
      var h = c[d];
      if (h) if ("SpreadElement" === h.type) for (var v = r2.evaluate(h.argument, t2), y = s.Environment.GetValue(u, v), m = (0, i.GetIterator)(u, y); ; ) {
        var b = (0, o.IteratorStep)(u, m);
        if (false === b) break;
        var g = (0, o.IteratorValue)(u, b), w = s.Create.CreateDataProperty(u, l, new n.StringValue(u, p++ + ""), g);
        (0, a.default)(true === w);
      }
      else {
        var E = r2.evaluate(h, t2), S = s.Environment.GetValue(u, E), T = s.Create.CreateDataProperty(u, l, new n.StringValue(u, p++ + ""), S);
        (0, a.default)(true === T, "expected data property creation");
      }
      else p++;
    }
    return s.Properties.Set(u, l, "length", new n.NumberValue(u, p), false), l;
  };
  var n = r(0), i = r(3), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), o = r(43), s = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), Object.defineProperty(t, "ArrayExpression", { enumerable: true, get: function() {
    return n.default;
  } }), Object.defineProperty(t, "ArrowFunctionExpression", { enumerable: true, get: function() {
    return i.default;
  } }), Object.defineProperty(t, "AssignmentExpression", { enumerable: true, get: function() {
    return a.default;
  } }), Object.defineProperty(t, "AwaitExpression", { enumerable: true, get: function() {
    return o.default;
  } }), Object.defineProperty(t, "BinaryExpression", { enumerable: true, get: function() {
    return s.default;
  } }), Object.defineProperty(t, "BlockStatement", { enumerable: true, get: function() {
    return u.default;
  } }), Object.defineProperty(t, "BooleanLiteral", { enumerable: true, get: function() {
    return l.default;
  } }), Object.defineProperty(t, "BreakStatement", { enumerable: true, get: function() {
    return c.default;
  } }), Object.defineProperty(t, "CallExpression", { enumerable: true, get: function() {
    return f.default;
  } }), Object.defineProperty(t, "CatchClause", { enumerable: true, get: function() {
    return p.default;
  } }), Object.defineProperty(t, "ClassExpression", { enumerable: true, get: function() {
    return d.default;
  } }), Object.defineProperty(t, "ClassDeclaration", { enumerable: true, get: function() {
    return h.default;
  } }), Object.defineProperty(t, "ConditionalExpression", { enumerable: true, get: function() {
    return v.default;
  } }), Object.defineProperty(t, "ContinueStatement", { enumerable: true, get: function() {
    return y.default;
  } }), Object.defineProperty(t, "Directive", { enumerable: true, get: function() {
    return m.default;
  } }), Object.defineProperty(t, "DirectiveLiteral", { enumerable: true, get: function() {
    return b.default;
  } }), Object.defineProperty(t, "DoExpression", { enumerable: true, get: function() {
    return g.default;
  } }), Object.defineProperty(t, "DoWhileStatement", { enumerable: true, get: function() {
    return w.default;
  } }), Object.defineProperty(t, "EmptyStatement", { enumerable: true, get: function() {
    return E.default;
  } }), Object.defineProperty(t, "ExpressionStatement", { enumerable: true, get: function() {
    return S.default;
  } }), Object.defineProperty(t, "File", { enumerable: true, get: function() {
    return T.default;
  } }), Object.defineProperty(t, "ForInStatement", { enumerable: true, get: function() {
    return A.default;
  } }), Object.defineProperty(t, "ForOfStatement", { enumerable: true, get: function() {
    return C.default;
  } }), Object.defineProperty(t, "ForStatement", { enumerable: true, get: function() {
    return P.default;
  } }), Object.defineProperty(t, "FunctionDeclaration", { enumerable: true, get: function() {
    return O.default;
  } }), Object.defineProperty(t, "FunctionExpression", { enumerable: true, get: function() {
    return x.default;
  } }), Object.defineProperty(t, "Identifier", { enumerable: true, get: function() {
    return _.default;
  } }), Object.defineProperty(t, "IfStatement", { enumerable: true, get: function() {
    return V.evaluate;
  } }), Object.defineProperty(t, "LabeledStatement", { enumerable: true, get: function() {
    return D.default;
  } }), Object.defineProperty(t, "LogicalExpression", { enumerable: true, get: function() {
    return N.default;
  } }), Object.defineProperty(t, "MemberExpression", { enumerable: true, get: function() {
    return I.default;
  } }), Object.defineProperty(t, "MetaProperty", { enumerable: true, get: function() {
    return k.default;
  } }), Object.defineProperty(t, "NewExpression", { enumerable: true, get: function() {
    return j.default;
  } }), Object.defineProperty(t, "NullLiteral", { enumerable: true, get: function() {
    return F.default;
  } }), Object.defineProperty(t, "NumericLiteral", { enumerable: true, get: function() {
    return R.default;
  } }), Object.defineProperty(t, "ObjectExpression", { enumerable: true, get: function() {
    return M.default;
  } }), Object.defineProperty(t, "Program", { enumerable: true, get: function() {
    return B.default;
  } }), Object.defineProperty(t, "RegExpLiteral", { enumerable: true, get: function() {
    return L.default;
  } }), Object.defineProperty(t, "ReturnStatement", { enumerable: true, get: function() {
    return $.default;
  } }), Object.defineProperty(t, "SequenceExpression", { enumerable: true, get: function() {
    return G.default;
  } }), Object.defineProperty(t, "StringLiteral", { enumerable: true, get: function() {
    return z.default;
  } }), Object.defineProperty(t, "SwitchStatement", { enumerable: true, get: function() {
    return U.default;
  } }), Object.defineProperty(t, "TaggedTemplateExpression", { enumerable: true, get: function() {
    return W.default;
  } }), Object.defineProperty(t, "TemplateLiteral", { enumerable: true, get: function() {
    return q.default;
  } }), Object.defineProperty(t, "ThisExpression", { enumerable: true, get: function() {
    return H.default;
  } }), Object.defineProperty(t, "ThrowStatement", { enumerable: true, get: function() {
    return K.default;
  } }), Object.defineProperty(t, "TryStatement", { enumerable: true, get: function() {
    return J.default;
  } }), Object.defineProperty(t, "UnaryExpression", { enumerable: true, get: function() {
    return Y.default;
  } }), Object.defineProperty(t, "UpdateExpression", { enumerable: true, get: function() {
    return X.default;
  } }), Object.defineProperty(t, "VariableDeclaration", { enumerable: true, get: function() {
    return Q.default;
  } }), Object.defineProperty(t, "WhileStatement", { enumerable: true, get: function() {
    return Z.default;
  } }), Object.defineProperty(t, "WithStatement", { enumerable: true, get: function() {
    return ee.default;
  } }), Object.defineProperty(t, "YieldExpression", { enumerable: true, get: function() {
    return te.default;
  } }), Object.defineProperty(t, "JSXElement", { enumerable: true, get: function() {
    return re.default;
  } });
  var n = ne(r(308)), i = ne(r(307)), a = ne(r(306)), o = ne(r(305)), s = ne(r(62)), u = ne(r(139)), l = ne(r(304)), c = ne(r(303)), f = ne(r(302)), p = ne(r(300)), d = ne(r(299)), h = ne(r(138)), v = ne(r(298)), y = ne(r(297)), m = ne(r(296)), b = ne(r(295)), g = ne(r(294)), w = ne(r(293)), E = ne(r(292)), S = ne(r(291)), T = ne(r(290)), A = ne(r(289)), C = ne(r(58)), P = ne(r(288)), O = ne(r(287)), x = ne(r(286)), _ = ne(r(285)), V = r(284), D = ne(r(283)), N = ne(r(282)), I = ne(r(281)), k = ne(r(279)), j = ne(r(278)), F = ne(r(277)), R = ne(r(276)), M = ne(r(63)), B = ne(r(275)), L = ne(r(274)), $ = ne(r(273)), G = ne(r(272)), z = ne(r(137)), U = ne(r(271)), W = ne(r(270)), q = ne(r(269)), H = ne(r(268)), K = ne(r(267)), J = ne(r(266)), Y = ne(r(265)), X = ne(r(264)), Q = ne(r(263)), Z = ne(r(262)), ee = ne(r(261)), te = ne(r(260)), re = ne(r(259));
  function ne(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = e2.$GlobalObject;
    t2.$DefineOwnProperty("global", new i.PropertyDescriptor({ value: t2, writable: true, enumerable: false, configurable: true }));
    for (var r2 = ["undefined", "NaN", "Infinity"], a = 0; a < r2.length; a++) {
      var o = r2[a];
      t2.$DefineOwnProperty(o, new i.PropertyDescriptor({ value: e2.intrinsics[o], writable: false, enumerable: false, configurable: false }));
    }
    var s = ["String", "Object", "Function", "Array", "Number", "RegExp", "Date", "Math", "Error", "Function", "TypeError", "RangeError", "ReferenceError", "SyntaxError", "URIError", "EvalError", "Boolean", "DataView", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Map", "Set", "WeakMap", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "ArrayBuffer", "JSON"];
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || (s = s.concat("Symbol", "Promise", "WeakSet", "Proxy", "Reflect"));
    var u = true, l = false, c = void 0;
    try {
      for (var f, p = s[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
        var d = f.value;
        e2.intrinsics[d] ? t2.$DefineOwnProperty(d, new i.PropertyDescriptor({ value: e2.intrinsics[d], writable: true, enumerable: false, configurable: true })) : ((0, n.default)("Symbol" === d || "Promise" === d || "WeakSet" === d || "Proxy" === d || "Reflect" === d), (0, n.default)(e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile")));
      }
    } catch (e3) {
      l = true, c = e3;
    } finally {
      try {
        u || null == p.return || p.return();
      } finally {
        if (l) throw c;
      }
    }
    for (var h = ["parseFloat", "parseInt", "console", "isNaN", "eval", "isFinite", "encodeURI", "decodeURI", "encodeURIComponent", "decodeURIComponent"], v = 0; v < h.length; v++) {
      var y = h[v];
      t2.$DefineOwnProperty(y, new i.PropertyDescriptor({ value: e2.intrinsics[y], writable: true, enumerable: false, configurable: true }));
    }
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), i = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "__IntrospectionError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("__IntrospectionError", e2, false);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new n.NativeFunctionValue(e2, "(function() { throw new TypeError(); })", "", 0, function(t3) {
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    });
    return t2.setExtensible(false), t2.$DefineOwnProperty("length", new i.PropertyDescriptor({ value: e2.intrinsics.zero, writable: false, configurable: false, enumerable: false })), t2;
  };
  var n = r(0), i = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new n.NativeFunctionValue(e2, "Array.prototype.values", "values", 0, function(t2) {
      var r2 = i.To.ToObject(e2, t2);
      return (0, a.ValidateTypedArray)(e2, r2), i.Create.CreateArrayIterator(e2, r2.throwIfNotConcreteObject(), "value");
    });
  };
  var n = r(0), i = r(2), a = r(72);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new n.NativeFunctionValue(e2, "Object.prototype.toString", "toString", 0, function(t2) {
      if (t2 instanceof n.UndefinedValue) return new n.StringValue(e2, "[object Undefined]");
      if (t2 instanceof n.NullValue) return new n.StringValue(e2, "[object Null]");
      var r2, s = o.To.ToObject(e2, t2), u = (0, i.IsArray)(e2, s);
      r2 = u ? "Array" : void 0 !== s.$StringData ? "String" : void 0 !== s.$ParameterMap ? "Arguments" : void 0 !== s.$Call ? "Function" : void 0 !== s.$ErrorData ? "Error" : void 0 !== s.$BooleanData ? "Boolean" : void 0 !== s.$NumberData ? "Number" : void 0 !== s.$DateValue ? "Date" : void 0 !== s.$RegExpMatcher ? "RegExp" : "Object";
      var l = (0, a.Get)(e2, s, e2.intrinsics.SymbolToStringTag);
      return l = l instanceof n.StringValue ? l.value : r2, new n.StringValue(e2, "[object ".concat(l, "]"));
    }, false);
  };
  var n = r(0), i = r(11), a = r(13), o = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new n.NativeFunctionValue(e2, "Array.prototype.toString", "toString", 0, function(t2) {
      var r2 = i.To.ToObject(e2, t2);
      if (n.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r2) && e2.isInPureScope() && void 0 === r2.$GetOwnProperty("toString")) return n.AbstractValue.createTemporalFromBuildFunction(e2, n.StringValue, [r2, new n.StringValue(e2, "toString")], (0, u.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      var l = (0, a.Get)(e2, r2, "join");
      return (0, s.IsCallable)(e2, l) || (l = e2.intrinsics.ObjectProto_toString), (0, o.Call)(e2, l, r2);
    }, false);
  };
  var n = r(0), i = r(2), a = r(13), o = r(15), s = r(11), u = r(9);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new n.NativeFunctionValue(e2, "Array.prototype.values", "values", 0, function(t2) {
      var r2 = i.To.ToObject(e2, t2);
      return n.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r2) && e2.isInPureScope() && void 0 === r2.$GetOwnProperty("values") ? n.AbstractValue.createTemporalFromBuildFunction(e2, n.Value, [r2, new n.StringValue(e2, "values")], (0, a.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")) : i.Create.CreateArrayIterator(e2, r2.throwIfNotConcreteObject(), "value");
    });
  };
  var n = r(0), i = r(2), a = r(9);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod(e2.intrinsics.SymbolIterator, 0, function(e3) {
      return e3;
    });
  };
  r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("next", 0, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an object");
      if (!("$IteratedSet" in r2 && "$SetNextIndex" in r2 && "$SetIterationKind" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "SetIteratorPrototype.next isn't generic");
      var o = r2.$IteratedSet, s = r2.$SetNextIndex;
      (0, a.default)("number" == typeof s);
      var u = r2.$SetIterationKind;
      if (!o || o instanceof n.UndefinedValue) return i.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
      (0, a.default)(o instanceof n.ObjectValue), (0, a.default)(o.$SetData, "s has a [[SetData]] internal slot");
      var l = o.$SetData;
      for ((0, a.default)(l); s < l.length; ) {
        var c = l[s];
        if (s += 1, r2.$SetNextIndex = s, c) return "key+value" === u ? i.Create.CreateIterResultObject(e2, i.Create.CreateArrayFromList(e2, [c, c]), false) : i.Create.CreateIterResultObject(e2, c, false);
      }
      return r2.$IteratedSet = e2.intrinsics.undefined, i.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new n.StringValue(e2, "Set Iterator"), { writable: false });
  };
  var n = r(0), i = r(2), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("next", 0, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an object");
      if (void 0 === r2.$Map || void 0 === r2.$MapNextIndex || void 0 === r2.$MapIterationKind) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "MapIteratorPrototype.next isn't generic");
      var o = r2.$Map, s = r2.$MapNextIndex.value, u = r2.$MapIterationKind;
      if (!o || o instanceof n.UndefinedValue) return i.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
      (0, a.default)(o instanceof n.ObjectValue), (0, a.default)(o.$MapData, "m has a [[MapData]] internal slot");
      var l = o.$MapData;
      for ((0, a.default)(l); s < l.length; ) {
        var c = l[s];
        if (s += 1, r2.$MapNextIndex = new n.NumberValue(e2, s), void 0 !== c.$Key) {
          (0, a.default)(void 0 !== c.$Value);
          var f = void 0;
          return "key" === u ? f = c.$Key : "value" === u ? f = c.$Value : ((0, a.default)("key+value" === u), f = i.Create.CreateArrayFromList(e2, [c.$Key, c.$Value])), i.Create.CreateIterResultObject(e2, f, false);
        }
      }
      return r2.$Map = e2.intrinsics.undefined, i.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new n.StringValue(e2, "Map Iterator"), { writable: false });
  };
  var n = r(0), i = r(2), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("next", 0, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$IteratedString" in r2 && "$StringIteratorNextIndex" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      var o = r2.$IteratedString;
      if (!o) return n.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
      var s = r2.$StringIteratorNextIndex;
      (0, a.default)("number" == typeof s);
      var u = o.value.length;
      if (s >= u) return r2.$IteratedString = void 0, n.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
      var l, c = o.value.charCodeAt(s);
      if (c < 55296 || c > 56319 || s + 1 === u) l = String.fromCharCode(c);
      else {
        var f = o.value.charCodeAt(s + 1);
        l = f < 56320 || f > 57343 ? String.fromCharCode(c) : String.fromCharCode(c, f);
      }
      var p = l.length;
      return r2.$StringIteratorNextIndex = s + p, n.Create.CreateIterResultObject(e2, new i.StringValue(e2, l), false);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "String Iterator"), { writable: false });
  };
  var n = r(2), i = r(0), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("next", 0, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not an object");
      if (void 0 === r2.$IteratedObject || void 0 === r2.$ArrayIteratorNextIndex || void 0 === r2.$ArrayIterationKind) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "ArrayIteratorPrototype.next isn't generic");
      var s = r2.$IteratedObject;
      if ((0, o.default)(s instanceof i.ObjectValue || s instanceof i.UndefinedValue), s instanceof i.UndefinedValue) return n.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
      var u, l = r2.$ArrayIteratorNextIndex.value, c = r2.$ArrayIterationKind;
      if (s.$TypedArrayName ? (u = s.$ArrayLength, (0, o.default)("number" == typeof u)) : u = n.To.ToLength(e2, (0, a.Get)(e2, s, "length")), l >= u) return r2.$IteratedObject = e2.intrinsics.undefined, n.Create.CreateIterResultObject(e2, e2.intrinsics.undefined, true);
      if (r2.$ArrayIteratorNextIndex = new i.NumberValue(e2, l + 1), "key" === c) return n.Create.CreateIterResultObject(e2, new i.NumberValue(e2, l), false);
      var f, p = new i.StringValue(e2, l + ""), d = (0, a.Get)(e2, s, p);
      return "value" === c ? f = d : ((0, o.default)("key+value" === c, "expected item kind to be key+value"), f = n.Create.CreateArrayFromList(e2, [new i.NumberValue(e2, l), d])), n.Create.CreateIterResultObject(e2, f, false);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "Array Iterator"), { writable: false });
  };
  var n = r(2), i = r(0), a = r(13), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "isNaN", "isNaN", 1, function(t2, r2) {
      var i2 = n(r2, 1), o = i2[0], s = a.To.ToNumber(e2, o);
      return isNaN(s) ? e2.intrinsics.true : e2.intrinsics.false;
    }, false);
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "eval", "eval", 1, function(t2, r2) {
      var i2 = n(r2, 1), o = i2[0], s = e2.getRunningContext(), u = null == s.function ? e2 : s.function.$Realm;
      return a.Functions.PerformEval(e2, o, u, false, false);
    }, false);
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = "encodeURIComponent";
    return new i.NativeFunctionValue(e2, t2, t2, 1, function(r2, o, s, u) {
      var l = n(o, 1), c = l[0], f = c;
      if (u) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "".concat(t2, " is not a constructor"));
      f = f.throwIfNotConcrete();
      var p = a.To.ToString(e2, f);
      try {
        return new i.StringValue(e2, encodeURIComponent(p));
      } catch (t3) {
        throw e2.createErrorThrowCompletion(e2.intrinsics.URIError, t3.message);
      }
    });
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = "encodeURI";
    return new i.NativeFunctionValue(e2, t2, t2, 1, function(r2, o, s, u) {
      var l = n(o, 1), c = l[0], f = c;
      if (u) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "".concat(t2, " is not a constructor"));
      f = f.throwIfNotConcrete();
      var p = a.To.ToString(e2, f);
      try {
        return new i.StringValue(e2, encodeURI(p));
      } catch (t3) {
        throw e2.createErrorThrowCompletion(e2.intrinsics.URIError, t3.message);
      }
    });
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = "decodeURIComponent";
    return new i.NativeFunctionValue(e2, t2, t2, 1, function(r2, o, s, u) {
      var l = n(o, 1), c = l[0], f = c;
      if (u) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "".concat(t2, " is not a constructor"));
      f = f.throwIfNotConcrete();
      var p = a.To.ToString(e2, f);
      try {
        return new i.StringValue(e2, decodeURIComponent(p));
      } catch (t3) {
        throw e2.createErrorThrowCompletion(e2.intrinsics.URIError, t3.message);
      }
    });
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = "decodeURI";
    return new i.NativeFunctionValue(e2, t2, t2, 1, function(r2, o, s, u) {
      var l = n(o, 1), c = l[0], f = c;
      if (u) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "".concat(t2, " is not a constructor"));
      f = f.throwIfNotConcrete();
      var p = a.To.ToString(e2, f);
      try {
        return new i.StringValue(e2, decodeURI(p));
      } catch (t3) {
        throw e2.createErrorThrowCompletion(e2.intrinsics.URIError, t3.message);
      }
    });
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "isFinite", "isFinite", 1, function(t2, r2) {
      var i2 = n(r2, 1), o = i2[0], s = a.To.ToNumber(e2, o);
      return isNaN(s) || s === 1 / 0 || s === -1 / 0 ? e2.intrinsics.false : e2.intrinsics.true;
    }, false);
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "parseFloat", "parseFloat", 1, function(t2, r2) {
      var o = n(r2, 1), s = o[0];
      if (!s) return e2.intrinsics.NaN;
      var u = a.To.ToStringPartial(e2, s);
      return new i.NumberValue(e2, parseFloat(u));
    }, false);
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "parseInt", "parseInt", 2, function(t2, r2) {
      var s = n(r2, 2), u = s[0], l = s[1], c = a.To.ToStringPartial(e2, u), f = c.trim(), p = 1;
      "" !== f && "-" === f.charAt(0) && (p = -1), "" === f || "-" !== f.charAt(0) && "+" !== f.charAt(0) || (f = f.substr(1));
      var d = a.To.ToInt32(e2, l), h = true;
      if (0 !== d) {
        if (d < 2 || d > 36) return e2.intrinsics.NaN;
        16 !== d && (h = false);
      } else d = 10;
      true === h && f.length >= 2 && "0" === f.charAt(0) && ("x" === f.charAt(1) || "X" === f.charAt(1)) && (f = f.substr(2), d = 16);
      for (var v = "", y = 0; y < f.length; ++y) {
        var m = o(f.charAt(y));
        if (void 0 === m || m >= d) break;
        v += f.charAt(y);
      }
      if ("" === v) return e2.intrinsics.NaN;
      for (var b = 0, g = 0; g < v.length; ++g) b = b * d + (o(v.charAt(g)) || 0);
      if (0 === b) return -1 === p ? e2.intrinsics.negativeZero : e2.intrinsics.zero;
      var w = Number(b);
      return new i.NumberValue(e2, p * w);
    }, false);
  };
  var i = r(0), a = r(2);
  function o(e2) {
    return e2 >= "0" && e2 <= "9" ? e2.charCodeAt(0) - "0".charCodeAt(0) : e2 >= "A" && e2 <= "Z" ? 10 + e2.charCodeAt(0) - "A".charCodeAt(0) : e2 >= "a" && e2 <= "z" ? 10 + e2.charCodeAt(0) - "a".charCodeAt(0) : void 0;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.ProxyCall = c, t.ProxyConstruct = f, t.ProxyCreate = function(e2, t2, r2) {
    var a2 = r2, o2 = t2.throwIfNotConcrete();
    if (!(o2 instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    if (o2 instanceof n.ProxyValue && (!o2.$ProxyHandler || o2.$ProxyHandler instanceof n.NullValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    if (!((a2 = a2.throwIfNotConcrete()) instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    if (a2 instanceof n.ProxyValue && (!a2.$ProxyHandler || a2.$ProxyHandler instanceof n.NullValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    var s2 = new n.ProxyValue(e2);
    (0, i.IsCallable)(e2, o2) && (s2.$Call = function(t3, r3) {
      return c(e2, s2, t3, r3);
    }, o2.$Construct && (s2.$Construct = function(t3, r3) {
      return f(e2, s2, t3, r3);
    }));
    return s2.$ProxyTarget = o2, s2.$ProxyHandler = a2, s2;
  };
  var n = r(0), i = r(11), a = r(13), o = r(22), s = r(15), u = r(2), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function c(e2, t2, r2, i2) {
    var o2 = t2.$ProxyHandler;
    if (o2 instanceof n.NullValue) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    (0, l.default)(o2 instanceof n.ObjectValue, "expected an object");
    var c2 = t2.$ProxyTarget, f2 = (0, a.GetMethod)(e2, o2, "apply");
    if (f2 instanceof n.UndefinedValue) return (0, s.Call)(e2, c2, r2, i2);
    var p = u.Create.CreateArrayFromList(e2, i2);
    return (0, s.Call)(e2, f2.throwIfNotConcrete(), o2, [c2, r2, p]);
  }
  function f(e2, t2, r2, i2) {
    var c2 = t2.$ProxyHandler;
    if (c2 instanceof n.NullValue) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    (0, l.default)(c2 instanceof n.ObjectValue, "expected an object");
    var f2 = t2.$ProxyTarget;
    (0, l.default)(f2 instanceof n.ObjectValue);
    var p = (0, a.GetMethod)(e2, c2, "construct");
    if (p instanceof n.UndefinedValue) return (0, l.default)(f2.$Construct, "expected construct method"), (0, o.Construct)(e2, f2, r2, i2).throwIfNotConcreteObject();
    var d = u.Create.CreateArrayFromList(e2, r2), h = (0, s.Call)(e2, p.throwIfNotConcrete(), c2, [f2, d, i2]).throwIfNotConcrete();
    if (!(h instanceof n.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
    return h;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "Proxy", "Proxy", 2, function(t3, r2, i2, a2) {
      var s2 = n(r2, 2), u = s2[0], l = s2[1];
      if (!a2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return (0, o.ProxyCreate)(e2, u, l);
    });
    return t2.defineNativeMethod("revocable", 2, function(t3, r2) {
      var u = n(r2, 2), l = u[0], c = u[1], f = (0, o.ProxyCreate)(e2, l, c), p = (function() {
        var t4 = new i.NativeFunctionValue(e2, void 0, void 0, 0, function(r3, a2, o2, u2) {
          var l2 = n(a2, 2), c2 = (l2[0], l2[1], t4.$RevocableProxy);
          return c2 instanceof i.NullValue ? e2.intrinsics.undefined : (t4.$RevocableProxy = e2.intrinsics.null, (0, s.default)(c2 instanceof i.ProxyValue, "expected proxy"), c2.$ProxyTarget = e2.intrinsics.null, c2.$ProxyHandler = e2.intrinsics.null, e2.intrinsics.undefined);
        }, false);
        return t4;
      })();
      p.$RevocableProxy = f;
      var d = a.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype);
      return a.Create.CreateDataProperty(e2, d, "proxy", f), a.Create.CreateDataProperty(e2, d, "revoke", p), d;
    }), t2;
  };
  var i = r(0), a = r(2), o = r(332), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "Math");
    t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "Math"), { writable: false }), t2.defineNativeConstant("E", new i.NumberValue(e2, 2.718281828459045)), t2.defineNativeConstant("LN10", new i.NumberValue(e2, 2.302585092994046)), t2.defineNativeConstant("LN2", new i.NumberValue(e2, 0.6931471805599453)), t2.defineNativeConstant("LOG10E", new i.NumberValue(e2, 0.4342944819032518)), t2.defineNativeConstant("LOG2E", new i.NumberValue(e2, 1.4426950408889634)), t2.defineNativeConstant("PI", new i.NumberValue(e2, 3.141592653589793)), t2.defineNativeConstant("SQRT1_2", new i.NumberValue(e2, 0.7071067811865476)), t2.defineNativeConstant("SQRT2", new i.NumberValue(e2, 1.4142135623730951));
    var r2 = [["abs", 1], ["acos", 1], ["acosh", 1], ["asin", 1], ["asinh", 1], ["atan", 1], ["atanh", 1], ["atan2", 2], ["cbrt", 1], ["ceil", 1], ["cos", 1], ["cosh", 1], ["exp", 1], ["expm1", 1], ["floor", 1], ["fround", 1], ["hypot", 2], ["log", 1], ["log1p", 1], ["log10", 1], ["log2", 1], ["max", 2], ["min", 2], ["pow", 2], ["round", 1], ["sin", 1], ["sinh", 1], ["sqrt", 1], ["tan", 1], ["tanh", 1], ["trunc", 1]];
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || r2.push(["clz32", 1]);
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || r2.push(["sign", 1]);
    for (var c = function() {
      var s2 = n(r2[f], 2), c2 = s2[0], p = s2[1];
      t2.defineNativeMethod(c2, p, function(t3, r3, n2) {
        if ((0, o.default)(n2 >= 0), r3.length = n2, n2 <= 26 && r3.some(function(e3) {
          return e3 instanceof i.AbstractValue;
        }) && r3.every(function(t4) {
          return a.To.IsToNumberPure(e2, t4);
        })) {
          var s3 = l.get(c2);
          if (void 0 === s3) {
            var f2 = u.Placeholders.slice(0, n2).join(",");
            s3 = "global.Math.".concat(c2, "(").concat(f2, ")"), l.set(c2, s3);
          }
          return i.AbstractValue.createFromTemplate(e2, s3, i.NumberValue, r3);
        }
        return new i.NumberValue(e2, Math[c2].apply(null, r3.map(function(t4, r4) {
          return a.To.ToNumber(e2, t4.throwIfNotConcrete());
        })));
      });
    }, f = 0; f < r2.length; f++) c();
    t2.defineNativeMethod("imul", 2, function(t3, r3) {
      var o2 = n(r3, 2), s2 = o2[0], u2 = o2[1];
      return (s2 instanceof i.AbstractValue || u2 instanceof i.AbstractValue) && a.To.IsToNumberPure(e2, s2) && a.To.IsToNumberPure(e2, u2) ? i.AbstractValue.createFromTemplate(e2, "global.Math.imul(A, B)", i.NumberValue, [s2, u2]) : new i.NumberValue(e2, Math.imul(a.To.ToUint32(e2, s2.throwIfNotConcrete()), a.To.ToUint32(e2, u2.throwIfNotConcrete())));
    });
    return t2.defineNativeMethod("random", 0, function(t3) {
      var r3 = e2.mathRandomGenerator;
      if (void 0 !== r3) {
        var n2 = e2.currentLocation, a2 = new s.CompilerDiagnostic("Result of Math.random() is made deterministic via a fixed mathRandomSeed", n2, "PP8000", "Information");
        return e2.handleError(a2), new i.NumberValue(e2, r3());
      }
      return e2.useAbstractInterpretation ? i.AbstractValue.createTemporalFromTemplate(e2, "global.Math.random()", i.NumberValue, [], { isPure: true, skipInvariant: true }) : new i.NumberValue(e2, Math.random());
    }), t2;
  };
  var i = r(0), a = r(2), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(4), u = r(44);
  var l = /* @__PURE__ */ new Map();
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "Reflect");
    return t2.defineNativeMethod("apply", 3, function(t3, r2) {
      var i2 = n(r2, 3), s = i2[0], u = i2[1], l = i2[2];
      if (!(0, a.IsCallable)(e2, s)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = o.Create.CreateListFromArrayLike(e2, l);
      return (0, a.Call)(e2, s, u, c);
    }), t2.defineNativeMethod("construct", 2, function(t3, r2) {
      var i2 = n(r2, 3), s = i2[0], u = i2[1], l = i2[2];
      if (!(0, a.IsConstructor)(e2, s)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (l) {
        if (!(0, a.IsConstructor)(e2, l)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      } else l = s;
      var c = o.Create.CreateListFromArrayLike(e2, u);
      return (0, a.Construct)(e2, s, c, l);
    }), t2.defineNativeMethod("defineProperty", 3, function(t3, r2) {
      var a2 = n(r2, 3), s = a2[0], u = a2[1], l = a2[2], c = s.throwIfNotConcrete();
      if (!(c instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var f = o.To.ToPropertyKey(e2, u), p = o.To.ToPropertyDescriptor(e2, l);
      return new i.BooleanValue(e2, c.$DefineOwnProperty(f, p));
    }), t2.defineNativeMethod("deleteProperty", 2, function(t3, r2) {
      var a2 = n(r2, 2), s = a2[0], u = a2[1], l = s.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = o.To.ToPropertyKey(e2, u);
      return new i.BooleanValue(e2, l.$Delete(c));
    }), t2.defineNativeMethod("get", 2, function(t3, r2) {
      var a2 = n(r2, 3), s = a2[0], u = a2[1], l = a2[2], c = s.throwIfNotConcrete();
      if (!(c instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var f = o.To.ToPropertyKey(e2, u);
      return l || (l = c), c.$Get(f, l);
    }), t2.defineNativeMethod("getOwnPropertyDescriptor", 2, function(t3, r2) {
      var a2 = n(r2, 2), s = a2[0], u = a2[1], l = s.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = o.To.ToPropertyKey(e2, u), f = l.$GetOwnProperty(c);
      return o.Properties.FromPropertyDescriptor(e2, f);
    }), t2.defineNativeMethod("getPrototypeOf", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0].throwIfNotConcrete();
      if (!(a2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return a2.$GetPrototypeOf();
    }), t2.defineNativeMethod("has", 2, function(t3, r2) {
      var a2 = n(r2, 2), s = a2[0], u = a2[1];
      if (s.mightNotBeObject()) throw s.mightBeObject() && s.throwIfNotConcrete(), e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var l = o.To.ToPropertyKey(e2, u);
      return new i.BooleanValue(e2, s.$HasProperty(l));
    }), t2.defineNativeMethod("isExtensible", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0].throwIfNotConcrete();
      if (!(a2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return new i.BooleanValue(e2, a2.$IsExtensible());
    }), t2.defineNativeMethod("ownKeys", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0].throwIfNotConcrete();
      if (!(a2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var s = a2.$OwnPropertyKeys();
      return o.Create.CreateArrayFromList(e2, s);
    }), t2.defineNativeMethod("preventExtensions", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0].throwIfNotConcrete();
      if (!(a2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return new i.BooleanValue(e2, a2.$PreventExtensions());
    }), t2.defineNativeMethod("set", 3, function(t3, r2) {
      var a2 = n(r2, 4), s = a2[0], u = a2[1], l = a2[2], c = a2[3], f = s.throwIfNotConcrete();
      if (!(f instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var p = o.To.ToPropertyKey(e2, u);
      return c || (c = f), new i.BooleanValue(e2, f.$Set(p, l, c));
    }), t2.defineNativeMethod("setPrototypeOf", 2, function(t3, r2) {
      var a2 = n(r2, 2), o2 = a2[0], s = a2[1], u = o2.throwIfNotConcrete(), l = s.throwIfNotConcrete();
      if (!(u instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!(l instanceof i.ObjectValue || l instanceof i.NullValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return new i.BooleanValue(e2, u.$SetPrototypeOf(l));
    }), t2;
  };
  var i = r(0), a = r(3), o = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2, r2) {
    if ("number" == typeof r2) return new a.NumberValue(t2, r2);
    if ("string" == typeof r2) return new a.StringValue(t2, r2);
    if (null === r2) return t2.intrinsics.null;
    if (void 0 === r2) return t2.intrinsics.undefined;
    if (true === r2) return t2.intrinsics.true;
    if (false === r2) return t2.intrinsics.false;
    if (Array.isArray(r2)) return o.Create.CreateArrayFromList(t2, r2.map(function(r3) {
      return e2(t2, r3);
    }));
    if ("object" === n(r2)) {
      var u = new a.ObjectValue(t2, t2.intrinsics.ObjectPrototype);
      for (var l in r2) u.$DefineOwnProperty(l, new s.PropertyDescriptor({ enumerable: true, writable: true, configurable: true, value: e2(t2, r2[l]) }));
      return u;
    }
    throw new i.FatalError("need to convert value of type " + n(r2));
  };
  var i = r(4), a = r(0), o = r(2), s = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.InternalizeJSONProperty = function e2(t2, r2, c, f) {
    var p = (0, a.Get)(t2, c, f);
    if (p instanceof n.ObjectValue) {
      var d = (0, s.IsArray)(t2, p);
      if (true === d) for (var h = 0, v = i.To.ToLength(t2, (0, a.Get)(t2, p, "length")); h < v; ) {
        var y = e2(t2, r2, p, i.To.ToString(t2, new n.NumberValue(t2, h)));
        y instanceof n.UndefinedValue ? p.$Delete(i.To.ToString(t2, new n.NumberValue(t2, h))) : i.Create.CreateDataProperty(t2, p, i.To.ToString(t2, new n.NumberValue(t2, h)), y.throwIfNotConcrete()), h += 1;
      }
      else {
        var m = (0, u.EnumerableOwnProperties)(t2, p, "key"), b = true, g = false, w = void 0;
        try {
          for (var E, S = m[Symbol.iterator](); !(b = (E = S.next()).done); b = true) {
            var T = E.value;
            (0, l.default)(T instanceof n.StringValue);
            var A = e2(t2, r2, p, T);
            A instanceof n.UndefinedValue ? p.$Delete(T) : i.Create.CreateDataProperty(t2, p, T, A);
          }
        } catch (e3) {
          g = true, w = e3;
        } finally {
          try {
            b || null == S.return || S.return();
          } finally {
            if (g) throw w;
          }
        }
      }
    }
    return (0, o.Call)(t2, r2, c, ["string" == typeof f ? new n.StringValue(t2, f) : f, p]);
  };
  var n = r(0), i = r(2), a = r(13), o = r(15), s = r(11), u = r(182), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype, "JSON");
    return t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "JSON"), { writable: false }), t2.defineNativeMethod("stringify", 3, function(t3, r2) {
      var o2, s2, c2, p2 = n(r2, 3), d2 = p2[0], v2 = p2[1], m2 = p2[2], g = v2.throwIfNotConcrete(), w = m2.throwIfNotConcrete();
      if (g instanceof i.ObjectValue) {
        if ((0, a.IsCallable)(e2, g)) s2 = g;
        else if (true === (0, a.IsArray)(e2, g)) {
          o2 = [];
          for (var E = l.To.ToLength(e2, (0, a.Get)(e2, g, "length")), S = 0, T = function() {
            var t4 = (0, a.Get)(e2, g, new i.StringValue(e2, S + ""));
            t4 = t4.throwIfNotConcrete();
            var r3 = void 0;
            t4 instanceof i.StringValue ? r3 = t4 : t4 instanceof i.NumberValue ? r3 = new i.StringValue(e2, l.To.ToString(e2, t4)) : t4 instanceof i.ObjectValue && (t4.$StringData || t4.$NumberData) && (r3 = new i.StringValue(e2, l.To.ToString(e2, t4))), void 0 !== r3 && void 0 === o2.find(function(e3) {
              return e3.value === r3.value;
            }) && o2.push(r3), S++;
          }; S < E; ) T();
        }
      }
      w instanceof i.ObjectValue && (w.$NumberData ? w = new i.NumberValue(e2, l.To.ToNumber(e2, w)) : w.$StringData && (w = new i.StringValue(e2, l.To.ToString(e2, w)))), w instanceof i.NumberValue ? (w = new i.NumberValue(e2, Math.min(10, l.To.ToInteger(e2, w))), c2 = Array(Math.max(0, w.value)).join(" ")) : c2 = w instanceof i.StringValue ? w.value.length <= 10 ? w.value : w.value.substring(0, 10) : "";
      var A = l.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype), C = d2 instanceof i.AbstractValue;
      if (C && d2.values.isTop()) throw i.AbstractValue.reportIntrospectionError(d2), new u.FatalError();
      if (C || d2 instanceof i.ObjectValue && d2.isPartialObject()) {
        var P = b(e2, d2);
        return i.AbstractValue.createTemporalFromTemplate(e2, y, i.StringValue, [P], { kind: "JSON.stringify(...)" });
      }
      var O = l.Create.CreateDataProperty(e2, A, "", d2);
      (0, f.default)(O, "expected to create data property");
      var x = h(e2, e2.intrinsics.emptyString, A, { PropertyList: o2, ReplacerFunction: s2, stack: [], indent: "", gap: c2 });
      return void 0 === x ? e2.intrinsics.undefined : new i.StringValue(e2, x);
    }), t2.defineNativeMethod("parse", 2, function(t3, r2) {
      var u2, p2 = n(r2, 2), d2 = p2[0], h2 = p2[1];
      if (d2 instanceof i.AbstractValue && "JSON.stringify(...)" === d2.kind) {
        var y2 = e2.derivedIds.get(d2.intrinsicName);
        (0, f.default)(void 0 !== y2);
        var b2 = y2.args;
        (0, f.default)(b2[0] instanceof i.Value);
        var g, w = b2[0];
        w instanceof i.ObjectValue ? g = v(e2, w) : ((0, f.default)(w instanceof i.AbstractObjectValue), g = v(e2, w.getTemplate())), (0, f.default)(g.isPartialObject()), g.makeSimple(), (u2 = i.AbstractValue.createTemporalFromTemplate(e2, m, i.ObjectValue, [d2], { kind: "JSON.parse(...)" })).values = new s.ValuesDomain(/* @__PURE__ */ new Set([g])), (0, f.default)(void 0 !== u2.intrinsicName), (0, f.default)(e2.generator), e2.rebuildNestedProperties(u2, u2.intrinsicName);
      } else {
        var E = l.To.ToStringPartial(e2, d2);
        try {
          u2 = (0, c.default)(e2, JSON.parse(E));
        } catch (t4) {
          throw t4 instanceof SyntaxError ? e2.createErrorThrowCompletion(e2.intrinsics.SyntaxError, t4.message) : t4;
        }
        (0, f.default)((0, a.HasSomeCompatibleType)(u2, i.PrimitiveValue, i.ObjectValue, i.ArrayValue), "expected primitive, object or array");
      }
      if ((0, a.IsCallable)(e2, h2)) {
        var S = l.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype), T = l.Create.CreateDataProperty(e2, S, "", u2);
        return (0, f.default)(T, "expected to create data property"), (0, o.InternalizeJSONProperty)(e2, h2, S, "");
      }
      return u2;
    }), t2;
  };
  var i = r(0), a = r(3), o = r(337), s = r(12), u = r(4), l = r(2), c = p(r(336)), f = p(r(1));
  function p(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function d(e2, t2) {
    return JSON.stringify(t2.value);
  }
  function h(e2, t2, r2, n2) {
    var o2 = (0, a.Get)(e2, r2, t2).throwIfNotConcrete();
    if (o2 instanceof i.ObjectValue) {
      var s2 = (0, a.Get)(e2, o2, "toJSON");
      (0, a.IsCallable)(e2, s2) && (o2 = (0, a.Call)(e2, s2, o2, [t2]));
    }
    return n2.ReplacerFunction && (o2 = (0, a.Call)(e2, n2.ReplacerFunction, r2, [t2, o2])), o2 instanceof i.ObjectValue && (o2.$NumberData ? o2 = new i.NumberValue(e2, l.To.ToNumber(e2, o2)) : o2.$StringData ? o2 = new i.StringValue(e2, l.To.ToString(e2, o2)) : o2.$BooleanData && (o2 = o2.$BooleanData)), o2 instanceof i.NullValue ? "null" : o2 instanceof i.BooleanValue && o2.value ? "true" : o2 instanceof i.BooleanValue && !o2.value ? "false" : o2 instanceof i.StringValue ? d(0, o2) : o2 instanceof i.NumberValue ? isFinite(o2.value) ? l.To.ToString(e2, o2) : "null" : o2 instanceof i.ObjectValue && !(0, a.IsCallable)(e2, o2) ? (0, a.IsArray)(e2, o2) ? (function(e3, t3, r3) {
      if (r3.stack.indexOf(t3) >= 0) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "cyclical error");
      r3.stack.push(t3);
      var n3 = r3.indent;
      r3.indent += r3.gap;
      for (var o3 = [], s3 = l.To.ToLength(e3, (0, a.Get)(e3, t3, "length")), u2 = 0; u2 < s3; ) {
        var c2 = h(e3, new i.StringValue(e3, u2 + ""), t3, r3);
        void 0 === c2 ? o3.push("null") : o3.push(c2), u2++;
      }
      var f2 = "";
      if (o3.length) {
        if (!r3.gap) {
          var p2 = o3.join(",");
          f2 = "[".concat(p2, "]");
        }
      } else f2 = "[]";
      return r3.stack.pop(), r3.indent = n3, f2;
    })(e2, o2, n2) : (function(e3, t3, r3) {
      if (r3.stack.indexOf(t3) >= 0) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "cyclical error");
      r3.stack.push(t3);
      var n3, o3 = r3.indent;
      r3.indent += r3.gap, n3 = void 0 !== r3.PropertyList ? r3.PropertyList : (0, a.EnumerableOwnProperties)(e3, t3, "key");
      var s3 = [], u2 = true, l2 = false, c2 = void 0;
      try {
        for (var p2, v2 = n3[Symbol.iterator](); !(u2 = (p2 = v2.next()).done); u2 = true) {
          var y2 = p2.value;
          (0, f.default)(y2 instanceof i.StringValue);
          var m2 = h(e3, y2, t3, r3);
          if (void 0 !== m2) {
            var b2 = d(0, y2);
            b2 += ":", r3.gap && (b2 += " "), b2 += m2, s3.push(b2);
          }
        }
      } catch (e4) {
        l2 = true, c2 = e4;
      } finally {
        try {
          u2 || null == v2.return || v2.return();
        } finally {
          if (l2) throw c2;
        }
      }
      var g = "";
      if (s3.length) {
        if (!r3.gap) {
          var w = s3.join(",");
          g = "{".concat(w, "}");
        }
      } else g = "{}";
      return r3.stack.pop(), r3.indent = o3, g;
    })(e2, o2, n2) : void 0;
  }
  function v(e2, t2) {
    var r2 = l.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype), a2 = true, o2 = false, s2 = void 0;
    try {
      for (var c2, p2 = t2.properties[Symbol.iterator](); !(a2 = (c2 = p2.next()).done); a2 = true) {
        var d2 = n(c2.value, 2), h2 = d2[0], v2 = d2[1];
        if (void 0 !== v2 && void 0 !== v2.descriptor) {
          var y2 = v2.descriptor;
          (0, f.default)(void 0 !== y2), l.Properties.ThrowIfMightHaveBeenDeleted(y2);
          var m2 = y2.throwIfNotConcrete(e2).value;
          if (void 0 === m2) throw i.AbstractValue.reportIntrospectionError(t2, h2), new u.FatalError();
          (0, f.default)(m2 instanceof i.Value), l.Create.CreateDataProperty(e2, r2, h2, b(e2, m2));
        }
      }
    } catch (e3) {
      o2 = true, s2 = e3;
    } finally {
      try {
        a2 || null == p2.return || p2.return();
      } finally {
        if (o2) throw s2;
      }
    }
    return t2.isPartialObject() && r2.makePartial(), t2.isSimpleObject() && r2.makeSimple(), r2._isScopedTemplate = true, r2;
  }
  var y = "global.JSON.stringify(A)", m = "global.JSON.parse(A)";
  function b(e2, t2) {
    if (t2 instanceof i.AbstractValue) {
      if (t2 instanceof i.AbstractObjectValue) {
        var r2 = i.AbstractValue.createFromTemplate(e2, y, i.StringValue, [t2]), n2 = i.AbstractValue.createFromTemplate(e2, m, i.ObjectValue, [r2]);
        return n2.values = new s.ValuesDomain(/* @__PURE__ */ new Set([v(e2, t2.getTemplate())])), n2;
      }
      return t2;
    }
    if (t2 instanceof i.NumberValue && !isFinite(t2.value)) return e2.intrinsics.null;
    if (t2 instanceof i.PrimitiveValue) return t2;
    if (t2 instanceof i.ObjectValue) {
      var o2;
      if (true === (0, a.IsArray)(e2, t2)) {
        o2 = l.Create.ObjectCreate(e2, e2.intrinsics.ArrayPrototype);
        for (var u2 = 0, c2 = l.To.ToLength(e2, (0, a.Get)(e2, t2, "length")); u2 < c2; ) {
          var p2 = l.To.ToString(e2, new i.NumberValue(e2, u2)), d2 = (0, a.Get)(e2, t2, p2);
          d2 instanceof i.UndefinedValue || l.Create.CreateDataProperty(e2, o2, p2, b(e2, d2)), u2 += 1;
        }
      } else {
        o2 = l.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype);
        var h2 = (0, a.EnumerableOwnProperties)(e2, t2, "key", true), g = true, w = false, E = void 0;
        try {
          for (var S, T = h2[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
            var A = S.value;
            (0, f.default)(A instanceof i.StringValue);
            var C = (0, a.Get)(e2, t2, A);
            C instanceof i.UndefinedValue || l.Create.CreateDataProperty(e2, o2, A, b(e2, C));
          }
        } catch (e3) {
          w = true, E = e3;
        } finally {
          try {
            g || null == T.return || T.return();
          } finally {
            if (w) throw E;
          }
        }
      }
      return t2.isPartialObject() && o2.makePartial(), o2.makeSimple(), o2;
    }
    (0, f.default)(false);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeGetter("byteLength", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$ArrayBufferData" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have an [[ArrayBufferData]] internal slot");
      if (true === (0, a.IsDetachedBuffer)(e2, r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(O) is true");
      var n2 = r2.$ArrayBufferByteLength;
      return (0, s.default)("number" == typeof n2), new i.NumberValue(e2, n2);
    }), t2.defineNativeMethod("slice", 2, function(t3, r2) {
      var u = n(r2, 2), l = u[0], c = u[1], f = t3.throwIfNotConcrete();
      if (!(f instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$ArrayBufferData" in f)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have an [[ArrayBufferData]] internal slot");
      if (true === (0, a.IsDetachedBuffer)(e2, f)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(O) is true");
      var p = f.$ArrayBufferByteLength;
      (0, s.default)("number" == typeof p);
      var d = o.To.ToInteger(e2, l), h = d < 0 ? Math.max(p + d, 0) : Math.min(d, p), v = !c || c instanceof i.UndefinedValue ? p : o.To.ToInteger(e2, c.throwIfNotConcrete()), y = v < 0 ? Math.max(p + v, 0) : Math.min(v, p), m = Math.max(y - h, 0), b = (0, a.SpeciesConstructor)(e2, f, e2.intrinsics.ArrayBuffer), g = (0, a.Construct)(e2, b, [new i.NumberValue(e2, m)]).throwIfNotConcreteObject();
      if (!("$ArrayBufferData" in g)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "new does not have an [[ArrayBufferData]] internal slot");
      if (true === (0, a.IsDetachedBuffer)(e2, g)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(new) is true");
      if (true === (0, a.SameValue)(e2, g, f)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "SameValue(new, O) is true");
      if ("number" != typeof g.$ArrayBufferByteLength || g.$ArrayBufferByteLength < m) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "new.[[ArrayBufferByteLength]] < newLen");
      if (true === (0, a.IsDetachedBuffer)(e2, f)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(O) is true");
      var w = f.$ArrayBufferData;
      (0, s.default)(w);
      var E = g.$ArrayBufferData;
      return (0, s.default)(E), (0, a.CopyDataBlockBytes)(e2, E, 0, w, h, m), g;
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "ArrayBuffer"), { writable: false });
  };
  var i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "ArrayBuffer", "ArrayBuffer", 1, function(t3, r2, i2, s) {
      var u = n(r2, 1), l = u[0];
      if (!s) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = a.To.ToIndexPartial(e2, l);
      return (0, o.AllocateArrayBuffer)(e2, s, c);
    });
    return t2.defineNativeMethod("isView", 1, function(t3, r2) {
      var i2 = n(r2, 1)[0];
      return i2.mightBeObject() && "$ViewedArrayBuffer" in (i2 = i2.throwIfNotConcreteObject()) ? e2.intrinsics.true : e2.intrinsics.false;
    }), t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  };
  var i = r(0), a = r(2), o = r(53);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("add", 1, function(t3, r2) {
      var s = n(r2, 1), u = s[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(S) is not Object");
      if (!l.$WeakSetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "S does not have a [[WeakSetData]] internal slot");
      if (!((u = u.throwIfNotConcrete()) instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(value) is not Object");
      e2.recordModifiedProperty(l.$WeakSetData_binding);
      var c = l.$WeakSetData;
      (0, o.default)(null != c);
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y && true === (0, a.SameValuePartial)(e2, y, u)) return l;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return c.push(u), l;
    }), t2.defineNativeMethod("delete", 1, function(t3, r2) {
      var s = n(r2, 1), u = s[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(S) is not Object");
      if (!l.$WeakSetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "S does not have a [[WeakSetData]] internal slot");
      if (!((u = u.throwIfNotConcrete()) instanceof i.ObjectValue)) return e2.intrinsics.false;
      e2.recordModifiedProperty(l.$WeakSetData_binding);
      var c = l.$WeakSetData;
      (0, o.default)(null != c);
      for (var f = 0; f < c.length; ++f) {
        var p = c[f];
        if (void 0 !== p && true === (0, a.SameValuePartial)(e2, p, u)) return c[f] = void 0, e2.intrinsics.true;
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("has", 1, function(t3, r2) {
      var o2 = n(r2, 1), s = o2[0], u = t3.throwIfNotConcrete();
      if (!(u instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(S) is not Object");
      if (!u.$WeakSetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "S does not have a [[WeakSetData]] internal slot");
      var l = u.$WeakSetData;
      if (!((s = s.throwIfNotConcrete()) instanceof i.ObjectValue)) return e2.intrinsics.false;
      var c = true, f = false, p = void 0;
      try {
        for (var d, h = l[Symbol.iterator](); !(c = (d = h.next()).done); c = true) {
          var v = d.value;
          if (void 0 !== v && true === (0, a.SameValuePartial)(e2, v, s)) return e2.intrinsics.true;
        }
      } catch (e3) {
        f = true, p = e3;
      } finally {
        try {
          c || null == h.return || h.return();
        } finally {
          if (f) throw p;
        }
      }
      return e2.intrinsics.false;
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "WeakSet"), { writable: false });
  };
  var i = r(0), a = r(3), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "WeakSet", "WeakSet", 0, function(t2, r2, l, c) {
      var f = n(r2, 1), p = f[0];
      if (!c) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var d, h, v = s.Create.OrdinaryCreateFromConstructor(e2, c, "WeakSetPrototype", { $WeakSetData: void 0 });
      if (v.$WeakSetData = [], void 0 === p && (p = e2.intrinsics.undefined), p instanceof i.UndefinedValue || p instanceof i.NullValue) d = e2.intrinsics.undefined, h = e2.intrinsics.undefined;
      else {
        if (h = (0, o.Get)(e2, v, "add"), !(0, o.IsCallable)(e2, h)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsCallable(adder) is false");
        d = (0, o.GetIterator)(e2, p);
      }
      if (d instanceof i.UndefinedValue) return v;
      for (; ; ) {
        var y = (0, o.IteratorStep)(e2, d);
        if (false === y) return v;
        var m = (0, o.IteratorValue)(e2, y);
        try {
          (0, o.Call)(e2, h, v, [m]);
        } catch (t3) {
          if (!(t3 instanceof a.AbruptCompletion)) throw t3;
          throw (0, o.IteratorClose)(e2, d, t3);
        }
      }
      (0, u.default)(false);
    });
  };
  var i = r(0), a = r(7), o = r(3), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Uint32");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Uint32");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Uint16");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Uint16");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Uint8Clamped");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Uint8Clamped");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Uint8");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Uint8");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("catch", 1, function(t3, r2) {
      var i2 = n(r2, 1), o2 = i2[0], s2 = t3;
      return (0, a.Invoke)(e2, s2, "then", [e2.intrinsics.undefined, o2]);
    }), t2.defineNativeMethod("then", 2, function(t3, r2) {
      var u = n(r2, 2), l = u[0], c = u[1], f = t3;
      if (!(0, a.IsPromise)(e2, f)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      (0, s.default)(f instanceof i.ObjectValue);
      var p = (0, a.SpeciesConstructor)(e2, f, e2.intrinsics.Promise), d = (0, o.NewPromiseCapability)(e2, p);
      return (0, o.PerformPromiseThen)(e2, f, l, c, d);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "Promise"), { writable: false });
  };
  var i = r(0), a = r(3), o = r(114), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "Promise", "Promise", 1, function(t3, r2, i2, u2) {
      var c2 = n(r2, 1), f = c2[0];
      if (!u2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!(0, s.IsCallable)(e2, f)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var p = l.Create.OrdinaryCreateFromConstructor(e2, u2, "PromisePrototype", { $PromiseState: void 0, $PromiseResult: void 0, $PromiseFulfillReactions: void 0, $PromiseRejectReactions: void 0, $PromiseIsHandled: void 0 });
      p.$PromiseState = "pending", p.$PromiseFulfillReactions = [], p.$PromiseRejectReactions = [], p.$PromiseIsHandled = false;
      var d, h = (0, o.CreateResolvingFunctions)(e2, p);
      try {
        d = (0, s.Call)(e2, f, e2.intrinsics.undefined, [h.resolve, h.reject]);
      } catch (e3) {
        if (!(e3 instanceof a.AbruptCompletion)) throw e3;
        d = e3;
      }
      return d instanceof a.AbruptCompletion && (0, s.Call)(e2, h.reject, e2.intrinsics.undefined, [d.value]), p;
    });
    return t2.defineNativeMethod("all", 1, function(t3, r2) {
      var l2 = n(r2, 1)[0], f = t3.throwIfNotConcrete();
      if (!(f instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var p, d = (0, o.NewPromiseCapability)(e2, f);
      try {
        p = (0, s.GetIterator)(e2, l2);
      } catch (t4) {
        if (t4 instanceof a.AbruptCompletion) return (0, s.Call)(e2, d.reject, e2.intrinsics.undefined, [t4.value]), d.promise;
        throw t4;
      }
      var h, v = { $Iterator: p, $Done: false };
      try {
        (0, c.default)(f instanceof i.FunctionValue), h = (0, o.PerformPromiseAll)(e2, v, f, d);
      } catch (t4) {
        if (t4 instanceof a.AbruptCompletion) {
          if (false === v.$Done) try {
            h = (0, u.IteratorClose)(e2, p, t4).value;
          } catch (e3) {
            if (!(e3 instanceof a.AbruptCompletion)) throw e3;
            h = e3.value;
          }
          else h = t4.value;
          return (0, s.Call)(e2, d.reject, e2.intrinsics.undefined, [h]), d.promise;
        }
        throw t4;
      }
      return h;
    }), t2.defineNativeMethod("race", 1, function(t3, r2) {
      var l2 = n(r2, 1)[0], c2 = t3.throwIfNotConcrete();
      if (!(c2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var f, p = (0, o.NewPromiseCapability)(e2, c2);
      try {
        f = (0, s.GetIterator)(e2, l2);
      } catch (t4) {
        if (t4 instanceof a.AbruptCompletion) return (0, s.Call)(e2, p.reject, e2.intrinsics.undefined, [t4.value]), p.promise;
        throw t4;
      }
      var d, h = { $Iterator: f, $Done: false };
      try {
        d = (0, o.PerformPromiseRace)(e2, h, p, c2);
      } catch (t4) {
        if (t4 instanceof a.AbruptCompletion) {
          if (false === h.$Done) try {
            d = (0, u.IteratorClose)(e2, f, t4).value;
          } catch (e3) {
            if (!(e3 instanceof a.AbruptCompletion)) throw e3;
            d = e3.value;
          }
          else d = t4.value;
          return (0, s.Call)(e2, p.reject, e2.intrinsics.undefined, [d]), p.promise;
        }
        throw t4;
      }
      return d;
    }), t2.defineNativeMethod("reject", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0], u2 = t3.throwIfNotConcrete();
      if (!(u2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var l2 = (0, o.NewPromiseCapability)(e2, u2);
      return (0, s.Call)(e2, l2.reject, e2.intrinsics.undefined, [a2]), l2.promise;
    }), t2.defineNativeMethod("resolve", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0], u2 = t3.throwIfNotConcrete();
      if (!(u2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if ((0, s.IsPromise)(e2, a2)) {
        (0, c.default)(a2 instanceof i.ObjectValue);
        var l2 = (0, s.Get)(e2, a2, "constructor");
        if ((0, s.SameValuePartial)(e2, l2, u2)) return a2;
      }
      var f = (0, o.NewPromiseCapability)(e2, u2);
      return (0, s.Call)(e2, f.resolve, e2.intrinsics.undefined, [a2]), f.promise;
    }), t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  };
  var i = r(0), a = r(7), o = r(114), s = r(3), u = r(43), l = r(2), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("add", 1, function(t3, r3) {
      var o2 = n(r3, 1), u2 = o2[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      e2.recordModifiedProperty(l.$SetData_binding);
      var c = l.$SetData;
      (0, s.default)(void 0 !== c);
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (y && (0, a.SameValueZeroPartial)(e2, y, u2)) return l;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return (u2 = u2.throwIfNotConcrete()) instanceof i.NumberValue && Object.is(u2.value, -0) && (u2 = e2.intrinsics.zero), c.push(u2), l;
    }), t2.defineNativeMethod("clear", 0, function(t3) {
      var r3 = t3.throwIfNotConcrete();
      if (!(r3 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!r3.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return e2.recordModifiedProperty(r3.$SetData_binding), r3.$SetData = [], e2.intrinsics.undefined;
    }), t2.defineNativeMethod("delete", 1, function(t3, r3) {
      var o2 = n(r3, 1), u2 = o2[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      e2.recordModifiedProperty(l.$SetData_binding);
      var c = l.$SetData;
      (0, s.default)(void 0 !== c);
      for (var f = 0; f < c.length; f++) {
        var p = c[f];
        if (void 0 !== p && (0, a.SameValueZeroPartial)(e2, p, u2)) return c[f] = void 0, e2.intrinsics.true;
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("entries", 0, function(t3) {
      var r3 = t3;
      return (0, a.CreateSetIterator)(e2, r3, "key+value");
    }), t2.defineNativeMethod("forEach", 1, function(t3, r3) {
      var o2 = n(r3, 2), u2 = o2[0], l = o2[1], c = t3.throwIfNotConcrete();
      if (!(c instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!c.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!(0, a.IsCallable)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var f = l || e2.intrinsics.undefined, p = c.$SetData;
      (0, s.default)(p);
      var d = true, h = false, v = void 0;
      try {
        for (var y, m = p[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
          var b = y.value;
          b && (0, a.Call)(e2, u2, f, [b, b, c]);
        }
      } catch (e3) {
        h = true, v = e3;
      } finally {
        try {
          d || null == m.return || m.return();
        } finally {
          if (h) throw v;
        }
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("has", 1, function(t3, r3) {
      var o2 = n(r3, 1), s2 = o2[0], u2 = t3.throwIfNotConcrete();
      if (!(u2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!u2.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var l = u2.$SetData, c = true, f = false, p = void 0;
      try {
        for (var d, h = l[Symbol.iterator](); !(c = (d = h.next()).done); c = true) {
          var v = d.value;
          if (v && (0, a.SameValueZeroPartial)(e2, v, s2)) return e2.intrinsics.true;
        }
      } catch (e3) {
        f = true, p = e3;
      } finally {
        try {
          c || null == h.return || h.return();
        } finally {
          if (f) throw p;
        }
      }
      return e2.intrinsics.false;
    }), t2.$DefineOwnProperty("size", new u.PropertyDescriptor({ get: new i.NativeFunctionValue(e2, void 0, "get size", 0, function(t3) {
      var r3 = t3.throwIfNotConcrete();
      if (!(r3 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!r3.$SetData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var n2 = r3.$SetData, a2 = 0, o2 = true, s2 = false, u2 = void 0;
      try {
        for (var l, c = n2[Symbol.iterator](); !(o2 = (l = c.next()).done); o2 = true) {
          var f = l.value;
          f && a2++;
        }
      } catch (e3) {
        s2 = true, u2 = e3;
      } finally {
        try {
          o2 || null == c.return || c.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return new i.NumberValue(e2, a2);
    }), configurable: true })), t2.defineNativeMethod("values", 0, function(t3) {
      var r3 = t3;
      return (0, a.CreateSetIterator)(e2, r3, "value");
    });
    var r2 = t2.$GetOwnProperty("values");
    (0, s.default)(r2 instanceof u.PropertyDescriptor), o.Properties.ThrowIfMightHaveBeenDeleted(r2), t2.$DefineOwnProperty("keys", r2), t2.$DefineOwnProperty(e2.intrinsics.SymbolIterator, r2), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "Set"), { writable: false });
  };
  var i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(6);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "Set", "Set", 0, function(t3, r2, c, f) {
      var p = n(r2, 1), d = p[0], h = d;
      if (!f) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var v, y, m = s.Create.OrdinaryCreateFromConstructor(e2, f, "SetPrototype", { $SetData: void 0 });
      if (m.$SetData = [], h && e2.isCompatibleWith(e2.MOBILE_JSC_VERSION)) {
        var b = e2.currentLocation, g = new l.CompilerDiagnostic("This version of JSC ignores the argument to Set, require the polyfill before doing this", b, "PP0001", "RecoverableError");
        e2.handleError(g);
      }
      if (h || (h = e2.intrinsics.undefined), (0, o.HasSomeCompatibleType)(h, i.UndefinedValue, i.NullValue)) y = e2.intrinsics.undefined, v = e2.intrinsics.undefined;
      else {
        if (y = (0, o.Get)(e2, m, "add"), !(0, o.IsCallable)(e2, y)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        v = (0, o.GetIterator)(e2, h);
      }
      if (v instanceof i.UndefinedValue) return m;
      for (; ; ) {
        var w = (0, o.IteratorStep)(e2, v);
        if (!w) return m;
        var E = (0, o.IteratorValue)(e2, w);
        try {
          (0, o.Call)(e2, y, m, [E]);
        } catch (t4) {
          throw t4 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, v, t4) : t4;
        }
      }
      (0, u.default)(false);
    });
    return t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  };
  var i = r(0), a = r(7), o = r(3), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = r(4);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "WeakMap"), { writable: false }), t2.defineNativeMethod("delete", 1, function(t3, r2) {
      var s = n(r2, 1), u = s[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$WeakMapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = l.$WeakMapData;
      if (e2.recordModifiedProperty(l.$WeakMapData_binding), (0, o.default)(void 0 !== c), !((u = u.throwIfNotConcrete()) instanceof i.ObjectValue)) return e2.intrinsics.false;
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y.$Key && (0, a.SameValuePartial)(e2, y.$Key, u)) return y.$Key = void 0, y.$Value = void 0, e2.intrinsics.true;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("get", 1, function(t3, r2) {
      var s = n(r2, 1), u = s[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$WeakMapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = l.$WeakMapData;
      if ((0, o.default)(void 0 !== c), !((u = u.throwIfNotConcrete()) instanceof i.ObjectValue)) return e2.intrinsics.undefined;
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y.$Key && (0, a.SameValuePartial)(e2, y.$Key, u)) return (0, o.default)(void 0 !== y.$Value), y.$Value;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("has", 1, function(t3, r2) {
      var s = n(r2, 1), u = s[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$WeakMapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = l.$WeakMapData;
      if ((0, o.default)(void 0 !== c), !((u = u.throwIfNotConcrete()) instanceof i.ObjectValue)) return e2.intrinsics.false;
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y.$Key && (0, a.SameValuePartial)(e2, y.$Key, u)) return e2.intrinsics.true;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("set", 2, function(t3, r2) {
      var s = n(r2, 2), u = s[0], l = s[1], c = t3.throwIfNotConcrete();
      if (!(c instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!c.$WeakMapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      e2.recordModifiedProperty(c.$WeakMapData_binding);
      var f = c.$WeakMapData;
      if ((0, o.default)(void 0 !== f), !((u = u.throwIfNotConcrete()) instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var p = true, d = false, h = void 0;
      try {
        for (var v, y = f[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
          var m = v.value;
          if (void 0 !== m.$Key && (0, a.SameValuePartial)(e2, m.$Key, u)) return m.$Value = l, c;
        }
      } catch (e3) {
        d = true, h = e3;
      } finally {
        try {
          p || null == y.return || y.return();
        } finally {
          if (d) throw h;
        }
      }
      var b = { $Key: u, $Value: l };
      return f.push(b), c;
    });
  };
  var i = r(0), a = r(3), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "WeakMap", "WeakMap", 0, function(t2, r2, l, c) {
      var f = n(r2, 1), p = f[0];
      if (!c) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var d, h, v = s.Create.OrdinaryCreateFromConstructor(e2, c, "WeakMapPrototype", { $WeakMapData: void 0 });
      if (v.$WeakMapData = [], p && e2.isCompatibleWith(e2.MOBILE_JSC_VERSION)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "the weak map constructor doesn't take arguments");
      if (p || (p = e2.intrinsics.undefined), p instanceof i.UndefinedValue || p instanceof i.NullValue) h = e2.intrinsics.undefined, d = e2.intrinsics.undefined;
      else {
        if (h = (0, o.Get)(e2, v, "set"), !(0, o.IsCallable)(e2, h)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        d = (0, o.GetIterator)(e2, p);
      }
      if (d instanceof i.UndefinedValue) return v;
      for (; ; ) {
        var y = (0, o.IteratorStep)(e2, d);
        if (!y) return v;
        var m = (0, o.IteratorValue)(e2, y).throwIfNotConcrete();
        if (!(m instanceof i.ObjectValue)) {
          var b = e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
          throw (0, o.IteratorClose)(e2, d, b);
        }
        var g = void 0;
        try {
          g = (0, o.Get)(e2, m, "0");
        } catch (t3) {
          throw t3 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, d, t3) : t3;
        }
        var w = void 0;
        try {
          w = (0, o.Get)(e2, m, "1");
        } catch (t3) {
          throw t3 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, d, t3) : t3;
        }
        try {
          (0, o.Call)(e2, h, v, [g, w]);
        } catch (t3) {
          throw t3 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, d, t3) : t3;
        }
      }
      (0, u.default)(false);
    });
  };
  var i = r(0), a = r(7), o = r(3), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("clear", 0, function(t3) {
      var r3 = t3.throwIfNotConcrete();
      if (!(r3 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!r3.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      e2.recordModifiedProperty(r3.$MapData_binding);
      var n2 = r3.$MapData;
      (0, s.default)(void 0 !== n2);
      var a2 = true, o2 = false, u2 = void 0;
      try {
        for (var l, c = n2[Symbol.iterator](); !(a2 = (l = c.next()).done); a2 = true) {
          var f = l.value;
          f.$Key = void 0, f.$Value = void 0;
        }
      } catch (e3) {
        o2 = true, u2 = e3;
      } finally {
        try {
          a2 || null == c.return || c.return();
        } finally {
          if (o2) throw u2;
        }
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("delete", 1, function(t3, r3) {
      var o2 = n(r3, 1), u2 = o2[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      e2.recordModifiedProperty(l.$MapData_binding);
      var c = l.$MapData;
      (0, s.default)(void 0 !== c);
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y.$Key && (0, a.SameValueZeroPartial)(e2, y.$Key, u2)) return y.$Key = void 0, y.$Value = void 0, e2.intrinsics.true;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("entries", 0, function(t3) {
      var r3 = t3;
      return (0, a.CreateMapIterator)(e2, r3, "key+value");
    }), t2.defineNativeMethod("forEach", 1, function(t3, r3) {
      var o2 = n(r3, 2), u2 = o2[0], l = o2[1], c = t3.throwIfNotConcrete();
      if (!(c instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!c.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!(0, a.IsCallable)(e2, u2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var f = l || e2.intrinsics.undefined, p = c.$MapData;
      (0, s.default)(p);
      var d = true, h = false, v = void 0;
      try {
        for (var y, m = p[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
          var b = y.value;
          void 0 !== b.$Key && ((0, s.default)(void 0 !== b.$Value), (0, a.Call)(e2, u2, f, [b.$Value, b.$Key, c]));
        }
      } catch (e3) {
        h = true, v = e3;
      } finally {
        try {
          d || null == m.return || m.return();
        } finally {
          if (h) throw v;
        }
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("get", 1, function(t3, r3) {
      var o2 = n(r3, 1), u2 = o2[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = l.$MapData;
      (0, s.default)(void 0 !== c);
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y.$Key && (0, a.SameValueZeroPartial)(e2, y.$Key, u2)) return (0, s.default)(void 0 !== y.$Value), y.$Value;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("has", 1, function(t3, r3) {
      var o2 = n(r3, 1), u2 = o2[0], l = t3.throwIfNotConcrete();
      if (!(l instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!l.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var c = l.$MapData;
      (0, s.default)(void 0 !== c);
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = c[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          if (void 0 !== y.$Key && (0, a.SameValueZeroPartial)(e2, y.$Key, u2)) return e2.intrinsics.true;
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("keys", 0, function(t3) {
      var r3 = t3;
      return (0, a.CreateMapIterator)(e2, r3, "key");
    }), t2.defineNativeMethod("set", 2, function(t3, r3) {
      var o2 = n(r3, 2), u2 = o2[0], l = o2[1], c = t3.throwIfNotConcrete();
      if (!(c instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!c.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      e2.recordModifiedProperty(c.$MapData_binding);
      var f = c.$MapData;
      (0, s.default)(void 0 !== f);
      var p = true, d = false, h = void 0;
      try {
        for (var v, y = f[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
          var m = v.value;
          if (void 0 !== m.$Key && (0, a.SameValueZeroPartial)(e2, m.$Key, u2)) return m.$Value = l, c;
        }
      } catch (e3) {
        d = true, h = e3;
      } finally {
        try {
          p || null == y.return || y.return();
        } finally {
          if (d) throw h;
        }
      }
      (u2 = u2.throwIfNotConcrete()) instanceof i.NumberValue && Object.is(u2.value, -0) && (u2 = e2.intrinsics.zero);
      var b = { $Key: u2, $Value: l };
      return f.push(b), c;
    }), t2.$DefineOwnProperty("size", new u.PropertyDescriptor({ configurable: true, get: new i.NativeFunctionValue(e2, void 0, "get size", 0, function(t3) {
      var r3 = t3.throwIfNotConcrete();
      if (!(r3 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!r3.$MapData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var n2 = r3.$MapData;
      (0, s.default)(void 0 !== n2);
      var a2 = 0, o2 = true, u2 = false, l = void 0;
      try {
        for (var c, f = n2[Symbol.iterator](); !(o2 = (c = f.next()).done); o2 = true) {
          var p = c.value;
          void 0 !== p.$Key && a2++;
        }
      } catch (e3) {
        u2 = true, l = e3;
      } finally {
        try {
          o2 || null == f.return || f.return();
        } finally {
          if (u2) throw l;
        }
      }
      return new i.NumberValue(e2, a2);
    }) })), t2.defineNativeMethod("values", 0, function(t3) {
      var r3 = t3;
      return (0, a.CreateMapIterator)(e2, r3, "value");
    });
    var r2 = t2.$GetOwnProperty("entries");
    (0, s.default)(r2 instanceof u.PropertyDescriptor), o.Properties.ThrowIfMightHaveBeenDeleted(r2), t2.$DefineOwnProperty(e2.intrinsics.SymbolIterator, r2), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "Map"), { writable: false });
  };
  var i = r(0), a = r(3), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(6);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "Map", "Map", 0, function(t3, r2, l, c) {
      var f = n(r2, 1), p = f[0], d = p;
      if (!c) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var h, v, y = s.Create.OrdinaryCreateFromConstructor(e2, c, "MapPrototype", { $MapData: void 0 });
      if (y.$MapData = [], d && e2.isCompatibleWith(e2.MOBILE_JSC_VERSION)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "the map constructor doesn't take arguments");
      if (d || (d = e2.intrinsics.undefined), (0, o.HasSomeCompatibleType)(d, i.NullValue, i.UndefinedValue)) v = e2.intrinsics.undefined, h = e2.intrinsics.undefined;
      else {
        if (v = (0, o.Get)(e2, y, "set"), !(0, o.IsCallable)(e2, v)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        h = (0, o.GetIterator)(e2, d);
      }
      if (h instanceof i.UndefinedValue) return y;
      for (; ; ) {
        var m = (0, o.IteratorStep)(e2, h);
        if (!m) return y;
        var b = (0, o.IteratorValue)(e2, m);
        if (b.mightNotBeObject()) {
          b.mightBeObject() && b.throwIfNotConcrete();
          var g = e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
          throw (0, o.IteratorClose)(e2, h, g);
        }
        (0, u.default)(b instanceof i.ObjectValue || b instanceof i.AbstractObjectValue);
        var w = void 0;
        try {
          w = (0, o.Get)(e2, b, "0");
        } catch (t4) {
          throw t4 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, h, t4) : t4;
        }
        var E = void 0;
        try {
          E = (0, o.Get)(e2, b, "1");
        } catch (t4) {
          throw t4 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, h, t4) : t4;
        }
        try {
          (0, o.Call)(e2, v, y, [w, E]);
        } catch (t4) {
          throw t4 instanceof a.AbruptCompletion ? (0, o.IteratorClose)(e2, h, t4) : t4;
        }
      }
      (0, u.default)(false);
    });
    return t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  };
  var i = r(0), a = r(7), o = r(3), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Int32");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Int32");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Int16");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Int16");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Int8");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Int8");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Float64");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Float64");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    (0, n.build)(e2, t2, "Float32");
  };
  var n = r(24);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)(e2, "Float32");
  };
  r(0);
  var n = r(25);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeGetter("buffer", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$DataView" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[DataView]] internal slot");
      (0, s.default)(r2.$ViewedArrayBuffer);
      var n2 = r2.$ViewedArrayBuffer;
      return n2;
    }), t2.defineNativeGetter("byteLength", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$DataView" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[DataView]] internal slot");
      (0, s.default)(r2.$ViewedArrayBuffer);
      var n2 = r2.$ViewedArrayBuffer;
      if (true === (0, a.IsDetachedBuffer)(e2, n2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
      var o2 = r2.$ByteLength;
      return (0, s.default)("number" == typeof o2), new i.NumberValue(e2, o2);
    }), t2.defineNativeGetter("byteOffset", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if (!("$DataView" in r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "O does not have a [[DataView]] internal slot");
      (0, s.default)(r2.$ViewedArrayBuffer);
      var n2 = r2.$ViewedArrayBuffer;
      if (true === (0, a.IsDetachedBuffer)(e2, n2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
      var o2 = r2.$ByteOffset;
      return (0, s.default)("number" == typeof o2), new i.NumberValue(e2, o2);
    }), t2.defineNativeMethod("getFloat32", 1, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = s2, l = t3;
      return u || (u = e2.intrinsics.false), (0, o.GetViewValue)(e2, l, a2, u, "Float32");
    }), t2.defineNativeMethod("getFloat64", 1, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = s2, l = t3;
      return u || (u = e2.intrinsics.false), (0, o.GetViewValue)(e2, l, a2, u, "Float64");
    }), t2.defineNativeMethod("getInt8", 1, function(t3, r2) {
      var i2 = n(r2, 1), a2 = i2[0], s2 = t3;
      return (0, o.GetViewValue)(e2, s2, a2, e2.intrinsics.true, "Int8");
    }), t2.defineNativeMethod("getInt16", 1, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = s2, l = t3;
      return u || (u = e2.intrinsics.false), (0, o.GetViewValue)(e2, l, a2, u, "Int16");
    }), t2.defineNativeMethod("getInt32", 1, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = s2, l = t3;
      return u || (u = e2.intrinsics.false), (0, o.GetViewValue)(e2, l, a2, u, "Int32");
    }), t2.defineNativeMethod("getUint8", 1, function(t3, r2) {
      var i2 = n(r2, 1), a2 = i2[0], s2 = t3;
      return (0, o.GetViewValue)(e2, s2, a2, e2.intrinsics.true, "Uint8");
    }), t2.defineNativeMethod("getUint16", 1, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = s2, l = t3;
      return u || (u = e2.intrinsics.false), (0, o.GetViewValue)(e2, l, a2, u, "Uint16");
    }), t2.defineNativeMethod("getUint32", 1, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = s2, l = t3;
      return u || (u = e2.intrinsics.false), (0, o.GetViewValue)(e2, l, a2, u, "Uint32");
    }), t2.defineNativeMethod("setFloat32", 2, function(t3, r2) {
      var i2 = n(r2, 3), a2 = i2[0], s2 = i2[1], u = i2[2], l = u, c = t3;
      return l || (l = e2.intrinsics.false), (0, o.SetViewValue)(e2, c, a2, l, "Float32", s2);
    }), t2.defineNativeMethod("setFloat64", 2, function(t3, r2) {
      var i2 = n(r2, 3), a2 = i2[0], s2 = i2[1], u = i2[2], l = u, c = t3;
      return l || (l = e2.intrinsics.false), (0, o.SetViewValue)(e2, c, a2, l, "Float64", s2);
    }), t2.defineNativeMethod("setInt8", 2, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = t3;
      return (0, o.SetViewValue)(e2, u, a2, e2.intrinsics.true, "Int8", s2);
    }), t2.defineNativeMethod("setInt16", 2, function(t3, r2) {
      var i2 = n(r2, 3), a2 = i2[0], s2 = i2[1], u = i2[2], l = u, c = t3;
      return l || (l = e2.intrinsics.false), (0, o.SetViewValue)(e2, c, a2, l, "Int16", s2);
    }), t2.defineNativeMethod("setInt32", 2, function(t3, r2) {
      var i2 = n(r2, 3), a2 = i2[0], s2 = i2[1], u = i2[2], l = u, c = t3;
      return l || (l = e2.intrinsics.false), (0, o.SetViewValue)(e2, c, a2, l, "Int32", s2);
    }), t2.defineNativeMethod("setUint8", 2, function(t3, r2) {
      var i2 = n(r2, 2), a2 = i2[0], s2 = i2[1], u = t3;
      return (0, o.SetViewValue)(e2, u, a2, e2.intrinsics.true, "Uint8", s2);
    }), t2.defineNativeMethod("setUint16", 2, function(t3, r2) {
      var i2 = n(r2, 3), a2 = i2[0], s2 = i2[1], u = i2[2], l = u, c = t3;
      return l || (l = e2.intrinsics.false), (0, o.SetViewValue)(e2, c, a2, l, "Uint16", s2);
    }), t2.defineNativeMethod("setUint32", 2, function(t3, r2) {
      var i2 = n(r2, 3), a2 = i2[0], s2 = i2[1], u = i2[2], l = u, c = t3;
      return l || (l = e2.intrinsics.false), (0, o.SetViewValue)(e2, c, a2, l, "Uint32", s2);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "DataView"), { writable: false });
  };
  var i = r(0), a = r(11), o = r(53), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new a.NativeFunctionValue(e2, "DataView", "DataView", 3, function(t2, r2, u, l) {
      var c = n(r2, 3), f = c[0], p = c[1], d = c[2], h = f;
      if (!l) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!((h = h.throwIfNotConcrete()) instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!("$ArrayBufferData" in h)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var v = o.To.ToIndexPartial(e2, p);
      if ((0, i.IsDetachedBuffer)(e2, h)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var y, m = h.$ArrayBufferByteLength;
      if ((0, s.default)("number" == typeof m), v > m) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError);
      if (!d || d instanceof a.UndefinedValue) y = m - v;
      else if (y = o.To.ToIndexPartial(e2, d), v + y > m) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError);
      var b = o.Create.OrdinaryCreateFromConstructor(e2, l, "DataViewPrototype", { $DataView: void 0, $ViewedArrayBuffer: void 0, $ByteLength: void 0, $ByteOffset: void 0 });
      return b.$DataView = true, b.$ViewedArrayBuffer = h, b.$ByteLength = y, b.$ByteOffset = v, b;
    });
  };
  var i = r(3), a = r(0), o = r(2), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.$BooleanData = e2.intrinsics.false;
    t2.defineNativeMethod("toString", 0, function(t3) {
      var r2 = t3 instanceof n.ObjectValue ? t3.$BooleanData : t3;
      if (r2 instanceof n.AbstractValue && r2.getType() === n.BooleanValue) return n.AbstractValue.createFromTemplate(e2, "('' + A)", n.StringValue, [r2]);
      var a = i.To.thisBooleanValue(e2, t3);
      return new n.StringValue(e2, a.value ? "true" : "false");
    }), t2.defineNativeMethod("valueOf", 0, function(t3) {
      return i.To.thisBooleanValue(e2, t3);
    });
  };
  var n = r(0), i = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return new i.NativeFunctionValue(e2, "Boolean", "Boolean", 1, function(t2, r2, o, s) {
      var u = n(r2, 1), l = u[0], c = new i.BooleanValue(e2, a.To.ToBooleanPartial(e2, l));
      if (!s) return c;
      var f = a.Create.OrdinaryCreateFromConstructor(e2, s, "BooleanPrototype", { $BooleanData: void 0 });
      return f.$BooleanData = c, f;
    });
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.$NumberData = e2.intrinsics.zero, t2.defineNativeMethod("toExponential", 1, function(t3, r2) {
      var s = n(r2, 1), u = s[0], l = u, c = a.To.thisNumberValue(e2, t3).value;
      l = l.throwIfNotConcrete();
      var f = a.To.ToInteger(e2, l);
      if ((0, o.default)(0 === f || !(l instanceof i.UndefinedValue)), isNaN(c)) return new i.StringValue(e2, "NaN");
      var p = "";
      if (c < 0 && (p = "-", c = -c), c === 1 / 0) return new i.StringValue(e2, p + "Infinity");
      if (f < 0 || f > 20) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "f < 0 || f > 20");
      var d = c.toExponential(l instanceof i.UndefinedValue ? void 0 : f);
      return new i.StringValue(e2, p + d);
    }), t2.defineNativeMethod("toFixed", 1, function(t3, r2) {
      var o2 = n(r2, 1), s = o2[0], u = a.To.ToInteger(e2, s);
      if (u < 0 || u > 20) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "f < 0 || f > 20");
      var l = a.To.thisNumberValue(e2, t3).value;
      return isNaN(l) ? new i.StringValue(e2, "NaN") : new i.StringValue(e2, l.toFixed(u));
    });
    t2.defineNativeMethod("toLocaleString", 0, function(t3) {
      var r2 = a.To.thisNumberValue(e2, t3);
      return e2.useAbstractInterpretation ? i.AbstractValue.createTemporalFromTemplate(e2, "(A).toLocaleString()", i.StringValue, [r2]) : new i.StringValue(e2, r2.toLocaleString());
    }), t2.defineNativeMethod("toPrecision", 1, function(t3, r2) {
      var o2 = n(r2, 1), s = o2[0], u = a.To.thisNumberValue(e2, t3);
      if (s instanceof i.UndefinedValue) return new i.StringValue(e2, a.To.ToString(e2, u));
      var l = a.To.ToInteger(e2, s.throwIfNotConcrete()), c = u.value;
      if (isNaN(c)) return new i.StringValue(e2, "NaN");
      var f = "";
      if (c < 0 && (f = "-", c = -c), c === 1 / 0) return new i.StringValue(e2, f + "Infinity");
      if (l < 1 || l > 21) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "p should be in between 1 and 21 inclusive");
      return new i.StringValue(e2, f + c.toPrecision(l));
    });
    t2.defineNativeMethod("toString", 1, function(t3, r2) {
      var o2 = n(r2, 1), s = o2[0];
      if (s instanceof i.UndefinedValue) {
        var u = t3 instanceof i.ObjectValue ? t3.$NumberData : t3;
        if (u instanceof i.AbstractValue && (u.getType() === i.NumberValue || u.getType() === i.IntegralValue)) return i.AbstractValue.createFromTemplate(e2, "('' + A)", i.StringValue, [u]);
      }
      var l, c = a.To.thisNumberValue(e2, t3);
      if ((l = !s || s instanceof i.UndefinedValue ? 10 : a.To.ToInteger(e2, s.throwIfNotConcrete())) < 2 || l > 36) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return 10 === l ? new i.StringValue(e2, a.To.ToString(e2, c)) : new i.StringValue(e2, c.value.toString(l));
    }), t2.defineNativeMethod("valueOf", 0, function(t3) {
      return a.To.thisNumberValue(e2, t3);
    });
  };
  var i = r(0), a = r(2), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o, s = e3[Symbol.iterator](); !(n2 = (o = s.next()).done) && (r2.push(o.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "Number", "Number", 1, function(t3, r2, o, s) {
      var u, l = n(r2, 1), c = l[0];
      if (u = 0 === o ? e2.intrinsics.zero : new i.NumberValue(e2, a.To.ToNumber(e2, c)), !s) return u;
      var f = a.Create.OrdinaryCreateFromConstructor(e2, s, "NumberPrototype", { $NumberData: void 0 });
      return f.$NumberData = u, f;
    });
    t2.defineNativeConstant("EPSILON", new i.NumberValue(e2, 2220446049250313e-31)), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("isFinite", 1, function(t3, r2) {
      var i2 = n(r2, 1), a2 = i2[0], o = a2;
      return o.mightBeNumber() ? (o = o.throwIfNotConcreteNumber(), isNaN(o.value) || o.value === 1 / 0 || o.value === -1 / 0 ? e2.intrinsics.false : e2.intrinsics.true) : e2.intrinsics.false;
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("isInteger", 1, function(t3, r2) {
      var i2 = n(r2, 1), o = i2[0], s = o;
      if (!s.mightBeNumber()) return e2.intrinsics.false;
      if (s = s.throwIfNotConcreteNumber(), isNaN(s.value) || s.value === 1 / 0 || s.value === -1 / 0) return e2.intrinsics.false;
      var u = a.To.ToInteger(e2, s);
      return u !== s.value ? e2.intrinsics.false : e2.intrinsics.true;
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("isNaN", 1, function(t3, r2) {
      var i2 = n(r2, 1), a2 = i2[0], o = a2;
      return o.mightBeNumber() ? (o = o.throwIfNotConcreteNumber(), isNaN(o.value) ? e2.intrinsics.true : e2.intrinsics.false) : e2.intrinsics.false;
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("isSafeInteger", 1, function(t3, r2) {
      var i2 = n(r2, 1), o = i2[0], s = o;
      if (!s.mightBeNumber()) return e2.intrinsics.false;
      if (s = s.throwIfNotConcreteNumber(), isNaN(s.value) || s.value === 1 / 0 || s.value === -1 / 0) return e2.intrinsics.false;
      var u = a.To.ToInteger(e2, s);
      return u !== s.value ? e2.intrinsics.false : Math.abs(u) <= Math.pow(2, 53) - 1 ? e2.intrinsics.true : e2.intrinsics.false;
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeConstant("MAX_SAFE_INTEGER", new i.NumberValue(e2, 9007199254740991));
    t2.defineNativeConstant("MAX_VALUE", new i.NumberValue(e2, 17976931348623157e292)), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeConstant("MIN_SAFE_INTEGER", new i.NumberValue(e2, -9007199254740991));
    return t2.defineNativeConstant("MIN_VALUE", new i.NumberValue(e2, 5e-324)), t2.defineNativeConstant("NaN", e2.intrinsics.NaN), t2.defineNativeConstant("NEGATIVE_INFINITY", e2.intrinsics.negativeInfinity), t2.defineNativeProperty("parseFloat", e2.intrinsics.parseFloat), t2.defineNativeProperty("parseInt", e2.intrinsics.parseInt), t2.defineNativeConstant("POSITIVE_INFINITY", e2.intrinsics.Infinity), t2;
  };
  var i = r(0), a = r(2);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.$StringData = e2.intrinsics.emptyString, t2.defineNativeProperty("length", e2.intrinsics.zero), t2.defineNativeMethod("charAt", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], o2 = (0, f.RequireObjectCoercible)(e2, t3), s2 = l.To.ToString(e2, o2.throwIfNotConcrete()), u2 = l.To.ToInteger(e2, i2), c2 = s2.length;
      return u2 < 0 || u2 >= c2 ? e2.intrinsics.emptyString : new a.StringValue(e2, s2.charAt(u2));
    }), t2.defineNativeMethod("charCodeAt", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], o2 = (0, f.RequireObjectCoercible)(e2, t3), s2 = l.To.ToString(e2, o2.throwIfNotConcrete()), u2 = l.To.ToInteger(e2, i2), c2 = s2.length;
      return u2 < 0 || u2 >= c2 ? e2.intrinsics.NaN : new a.NumberValue(e2, s2.charCodeAt(u2));
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("codePointAt", 1, function(t3, r3) {
      var i2 = n(r3, 1), o2 = i2[0], s2 = (0, f.RequireObjectCoercible)(e2, t3), u2 = l.To.ToString(e2, s2.throwIfNotConcrete()), c2 = l.To.ToInteger(e2, o2), p2 = u2.length;
      return c2 < 0 || c2 >= p2 ? e2.intrinsics.undefined : new a.NumberValue(e2, u2.codePointAt(c2));
    });
    t2.defineNativeMethod("concat", 1, function(t3, r3, n2) {
      var i2 = (0, f.RequireObjectCoercible)(e2, t3);
      r3 = 0 === n2 ? [] : r3;
      for (var o2 = l.To.ToString(e2, i2.throwIfNotConcrete()); r3.length; ) {
        var s2 = r3.shift();
        o2 += l.To.ToStringPartial(e2, s2);
      }
      return new a.StringValue(e2, o2);
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("endsWith", 1, function(t3, r3) {
      var i2 = n(r3, 2), s2 = i2[0], u2 = i2[1], c2 = (0, f.RequireObjectCoercible)(e2, t3), p2 = l.To.ToString(e2, c2.throwIfNotConcrete()), d2 = (0, o.IsRegExp)(e2, s2);
      if (d2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "String.prototype");
      var h2, v2 = l.To.ToStringPartial(e2, s2), y = p2.length;
      h2 = !u2 || u2 instanceof a.UndefinedValue ? y : l.To.ToInteger(e2, u2.throwIfNotConcrete());
      var m = Math.min(Math.max(h2, 0), y), b = v2.length, g = m - b;
      return g < 0 ? e2.intrinsics.false : p2.substr(g, b) === v2 ? e2.intrinsics.true : e2.intrinsics.false;
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("includes", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], s2 = i2[1], u2 = (0, f.RequireObjectCoercible)(e2, t3), c2 = l.To.ToString(e2, u2.throwIfNotConcrete()), p2 = (0, o.IsRegExp)(e2, a2);
      if (p2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "String.prototype");
      var d2 = l.To.ToStringPartial(e2, a2), h2 = l.To.ToInteger(e2, s2 || e2.intrinsics.undefined), v2 = c2.length, y = Math.min(Math.max(h2, 0), v2), m = d2.length;
      if (0 === m) return e2.intrinsics.true;
      for (var b = y; b + m <= v2; ++b) {
        for (var g = true, w = 0; w < m; ++w) c2.charCodeAt(b + w) !== d2.charCodeAt(w) && (g = false);
        if (g) return e2.intrinsics.true;
      }
      return e2.intrinsics.false;
    });
    t2.defineNativeMethod("indexOf", 1, function(t3, r3) {
      var i2 = n(r3, 2), o2 = i2[0], s2 = i2[1], u2 = (0, f.RequireObjectCoercible)(e2, t3), c2 = l.To.ToString(e2, u2.throwIfNotConcrete()), p2 = l.To.ToStringPartial(e2, o2), d2 = s2 ? l.To.ToInteger(e2, s2) : 0;
      return new a.NumberValue(e2, c2.indexOf(p2, d2));
    }), t2.defineNativeMethod("lastIndexOf", 1, function(t3, r3) {
      var i2, o2 = n(r3, 2), s2 = o2[0], u2 = o2[1], c2 = (0, f.RequireObjectCoercible)(e2, t3), p2 = l.To.ToString(e2, c2.throwIfNotConcrete()), d2 = l.To.ToStringPartial(e2, s2), h2 = l.To.ToNumber(e2, u2 || e2.intrinsics.undefined);
      return i2 = isNaN(h2) ? 1 / 0 : l.To.ToInteger(e2, h2), new a.NumberValue(e2, p2.lastIndexOf(d2, i2));
    }), t2.defineNativeMethod("localeCompare", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], o2 = (0, f.RequireObjectCoercible)(e2, t3), s2 = l.To.ToString(e2, o2.throwIfNotConcrete()), u2 = l.To.ToStringPartial(e2, i2);
      return new a.NumberValue(e2, s2.localeCompare(u2));
    }), t2.defineNativeMethod("match", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], o2 = (0, f.RequireObjectCoercible)(e2, t3);
      if (!(0, p.HasSomeCompatibleType)(i2, a.UndefinedValue, a.NullValue)) {
        var d2 = (0, s.GetMethod)(e2, i2, e2.intrinsics.SymbolMatch);
        if (!d2.mightBeUndefined()) return (0, u.Call)(e2, d2, i2, [o2]);
        d2.throwIfNotConcrete();
      }
      var h2 = new a.StringValue(e2, l.To.ToStringPartial(e2, o2)), v2 = (0, c.RegExpCreate)(e2, i2, void 0);
      return (0, u.Invoke)(e2, v2, e2.intrinsics.SymbolMatch, [h2]);
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("normalize", 0, function(t3, r3) {
      var i2 = n(r3, 1), o2 = i2[0], s2 = (0, f.RequireObjectCoercible)(e2, t3), u2 = l.To.ToString(e2, s2.throwIfNotConcrete());
      (!o2 || o2 instanceof a.UndefinedValue) && (o2 = new a.StringValue(e2, "NFC"));
      var c2 = l.To.ToStringPartial(e2, o2);
      if ("NFC" !== c2 && "NFD" !== c2 && "NFKC" !== c2 && "NFKD" !== c2) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError);
      return new a.StringValue(e2, u2.normalize(c2));
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("padEnd", 1, function(t3, r3) {
      var i2, o2 = n(r3, 2), s2 = o2[0], u2 = o2[1], c2 = (0, f.RequireObjectCoercible)(e2, t3), p2 = l.To.ToString(e2, c2.throwIfNotConcrete()), d2 = l.To.ToLength(e2, s2), h2 = p2.length;
      if (d2 <= h2) return new a.StringValue(e2, p2);
      if ("" === (i2 = !u2 || u2 instanceof a.UndefinedValue ? " " : l.To.ToStringPartial(e2, u2))) return new a.StringValue(e2, p2);
      var v2 = d2 - h2, y = i2.repeat(Math.ceil(v2 / i2.length)).substr(0, v2);
      return new a.StringValue(e2, p2 + y);
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("padStart", 1, function(t3, r3) {
      var i2, o2 = n(r3, 2), s2 = o2[0], u2 = o2[1], c2 = (0, f.RequireObjectCoercible)(e2, t3), p2 = l.To.ToString(e2, c2.throwIfNotConcrete()), d2 = l.To.ToLength(e2, s2), h2 = p2.length;
      if (d2 <= h2) return new a.StringValue(e2, p2);
      if ("" === (i2 = !u2 || u2 instanceof a.UndefinedValue ? " " : l.To.ToStringPartial(e2, u2))) return new a.StringValue(e2, p2);
      var v2 = d2 - h2, y = i2.repeat(Math.ceil(v2 / i2.length)).substr(0, v2);
      return new a.StringValue(e2, y + p2);
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("repeat", 1, function(t3, r3) {
      var i2 = n(r3, 1), o2 = i2[0], s2 = (0, f.RequireObjectCoercible)(e2, t3), u2 = l.To.ToString(e2, s2.throwIfNotConcrete()), c2 = l.To.ToInteger(e2, o2);
      if (c2 < 0) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError);
      if (!isFinite(c2)) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError);
      var p2 = "";
      if (u2) for (; c2--; ) p2 += u2;
      return new a.StringValue(e2, p2);
    });
    t2.defineNativeMethod("replace", 2, function(t3, r3) {
      var i2, c2 = n(r3, 2), h2 = c2[0], v2 = c2[1], y = (0, f.RequireObjectCoercible)(e2, t3);
      if (!(0, p.HasSomeCompatibleType)(h2, a.NullValue, a.UndefinedValue)) {
        var m = (0, s.GetMethod)(e2, h2, e2.intrinsics.SymbolReplace);
        if (!(m instanceof a.UndefinedValue)) return (0, u.Call)(e2, m, h2, [y, v2]);
      }
      var b, g = l.To.ToString(e2, y.throwIfNotConcrete()), w = l.To.ToStringPartial(e2, h2), E = (0, o.IsCallable)(e2, v2);
      false === E && (b = l.To.ToStringPartial(e2, v2));
      var S = g.indexOf(w), T = w;
      if (S < 0) return new a.StringValue(e2, g);
      if (true === E) {
        var A = (0, u.Call)(e2, v2, e2.intrinsics.undefined, [new a.StringValue(e2, T), new a.NumberValue(e2, S), new a.StringValue(e2, g)]);
        i2 = l.To.ToStringPartial(e2, A);
      } else (0, d.default)("string" == typeof b), i2 = l.To.ToString(e2, (0, s.GetSubstitution)(e2, T, g, S, [], b));
      var C = S + T.length, P = g.substr(0, S) + i2 + g.substr(C);
      return new a.StringValue(e2, P);
    }), t2.defineNativeMethod("search", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], o2 = (0, f.RequireObjectCoercible)(e2, t3);
      if (!(0, p.HasSomeCompatibleType)(i2, a.UndefinedValue, a.NullValue)) {
        var d2 = (0, s.GetMethod)(e2, i2, e2.intrinsics.SymbolSearch);
        if (!(d2 instanceof a.UndefinedValue)) return (0, u.Call)(e2, d2, i2, [o2]);
      }
      var h2 = l.To.ToStringPartial(e2, o2), v2 = (0, c.RegExpCreate)(e2, i2, void 0);
      return (0, u.Invoke)(e2, v2, e2.intrinsics.SymbolSearch, [new a.StringValue(e2, h2)]);
    }), t2.defineNativeMethod("slice", 2, function(t3, r3) {
      var i2 = n(r3, 2), o2 = i2[0], s2 = i2[1], u2 = (0, f.RequireObjectCoercible)(e2, t3);
      if (u2 instanceof a.AbstractValue && u2.getType() === a.StringValue) {
        var c2 = a.AbstractValue.createFromTemplate(e2, h, a.StringValue, [u2, o2, s2]);
        return a.AbstractValue.convertToTemporalIfArgsAreTemporal(e2, c2, [u2]);
      }
      var p2 = l.To.ToString(e2, u2.throwIfNotConcrete()), d2 = p2.length, v2 = l.To.ToInteger(e2, o2), y = !s2 || s2 instanceof a.UndefinedValue ? d2 : l.To.ToInteger(e2, s2.throwIfNotConcrete()), m = v2 < 0 ? Math.max(d2 + v2, 0) : Math.min(v2, d2), b = y < 0 ? Math.max(d2 + y, 0) : Math.min(y, d2), g = Math.max(b - m, 0);
      return new a.StringValue(e2, p2.substr(m, g));
    }), t2.defineNativeMethod("split", 2, function(t3, r3) {
      var i2 = n(r3, 2), o2 = i2[0], c2 = i2[1], d2 = (0, f.RequireObjectCoercible)(e2, t3);
      if (d2 instanceof a.AbstractValue && d2.getType() === a.StringValue) {
        var h2 = a.AbstractValue.createFromTemplate(e2, v, a.ObjectValue, [d2, o2, c2]);
        return a.AbstractValue.convertToTemporalIfArgsAreTemporal(e2, h2, [d2]);
      }
      if (!(0, p.HasSomeCompatibleType)(o2, a.UndefinedValue, a.NullValue)) {
        var y = (0, s.GetMethod)(e2, o2, e2.intrinsics.SymbolSplit);
        if (!(y instanceof a.UndefinedValue)) return (0, u.Call)(e2, y, o2, [d2, c2]);
      }
      var m = l.To.ToString(e2, d2.throwIfNotConcrete()), b = l.Create.ArrayCreate(e2, 0), g = 0, w = !c2 || c2 instanceof a.UndefinedValue ? Math.pow(2, 32) - 1 : l.To.ToUint32(e2, c2.throwIfNotConcrete()), E = m.length, S = 0, T = l.To.ToStringPartial(e2, o2);
      if (0 === w) return b;
      if (!o2 || o2 instanceof a.UndefinedValue) return l.Create.CreateDataProperty(e2, b, "0", new a.StringValue(e2, m)), b;
      if (0 === E) return false !== (0, f.SplitMatch)(e2, m, 0, T) ? b : (l.Create.CreateDataProperty(e2, b, "0", new a.StringValue(e2, m)), b);
      for (var A = S; A !== E; ) {
        var C = (0, f.SplitMatch)(e2, m, A, T);
        if (false === C) A++;
        else if (C === S) A++;
        else {
          var P = m.substring(S, A);
          if (l.Create.CreateDataProperty(e2, b, new a.StringValue(e2, g + ""), new a.StringValue(e2, P)), ++g === w) return b;
          A = S = C;
        }
      }
      var O = m.substring(S, E);
      return l.Create.CreateDataProperty(e2, b, new a.StringValue(e2, g + ""), new a.StringValue(e2, O)), b;
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("startsWith", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], s2 = i2[1], u2 = (0, f.RequireObjectCoercible)(e2, t3), c2 = l.To.ToString(e2, u2.throwIfNotConcrete()), p2 = (0, o.IsRegExp)(e2, a2);
      if (p2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "String.prototype");
      var d2 = l.To.ToStringPartial(e2, a2), h2 = l.To.ToInteger(e2, s2 || e2.intrinsics.undefined), v2 = c2.length, y = Math.min(Math.max(h2, 0), v2), m = d2.length;
      return m + y > v2 ? e2.intrinsics.false : c2.substr(y, m) === d2 ? e2.intrinsics.true : e2.intrinsics.false;
    });
    function r2(t3, r3, n2) {
      var o2 = (0, f.RequireObjectCoercible)(e2, r3), s2 = l.To.ToString(e2, o2.throwIfNotConcrete());
      if (e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") ? n2 = void 0 : n2 && (n2 = n2.serialize()), e2.useAbstractInterpretation && ("LocaleUpper" === t3 || "LocaleLower" === t3)) throw a.AbstractValue.reportIntrospectionError(o2), new i.FatalError();
      return new a.StringValue(e2, s2["to".concat(t3, "Case")](n2));
    }
    return t2.defineNativeMethod("substring", 2, function(t3, r3) {
      var i2 = n(r3, 2), o2 = i2[0], s2 = i2[1], u2 = (0, f.RequireObjectCoercible)(e2, t3), c2 = l.To.ToString(e2, u2.throwIfNotConcrete()), p2 = c2.length, d2 = l.To.ToInteger(e2, o2), h2 = !s2 || s2 instanceof a.UndefinedValue ? p2 : l.To.ToInteger(e2, s2.throwIfNotConcrete()), v2 = Math.min(Math.max(d2, 0), p2), y = Math.min(Math.max(h2, 0), p2), m = Math.min(v2, y), b = Math.max(v2, y);
      return new a.StringValue(e2, c2.slice(m, b));
    }), t2.defineNativeMethod("toLocaleLowerCase", 0, function(e3, t3) {
      return r2("LocaleLower", e3, n(t3, 1)[0]);
    }), t2.defineNativeMethod("toLocaleUpperCase", 0, function(e3, t3) {
      return r2("LocaleUpper", e3, n(t3, 1)[0]);
    }), t2.defineNativeMethod("toLowerCase", 0, function(e3) {
      return r2("Lower", e3);
    }), t2.defineNativeMethod("toString", 0, function(t3) {
      var r3 = t3 instanceof a.ObjectValue ? t3.$StringData : t3;
      return r3 instanceof a.AbstractValue && r3.getType() === a.StringValue ? r3 : l.To.thisStringValue(e2, t3);
    }), t2.defineNativeMethod("toUpperCase", 0, function(e3) {
      return r2("Upper", e3);
    }), t2.defineNativeMethod("trim", 0, function(t3) {
      var r3 = (0, f.RequireObjectCoercible)(e2, t3), n2 = l.To.ToString(e2, r3.throwIfNotConcrete()).trim();
      return new a.StringValue(e2, n2);
    }), t2.defineNativeMethod("valueOf", 0, function(t3) {
      return l.To.thisStringValue(e2, t3);
    }), t2.defineNativeMethod(e2.intrinsics.SymbolIterator, 0, function(t3) {
      var r3 = (0, f.RequireObjectCoercible)(e2, t3), n2 = l.To.ToString(e2, r3.throwIfNotConcrete());
      return l.Create.CreateStringIterator(e2, new a.StringValue(e2, n2));
    }), t2.defineNativeMethod("substr", 2, function(t3, r3) {
      var i2, o2 = n(r3, 2), s2 = o2[0], u2 = o2[1], c2 = (0, f.RequireObjectCoercible)(e2, t3), p2 = l.To.ToStringPartial(e2, c2), d2 = l.To.ToInteger(e2, s2);
      i2 = !u2 || u2 instanceof a.UndefinedValue ? 1 / 0 : l.To.ToInteger(e2, u2.throwIfNotConcrete());
      var h2 = p2.length;
      d2 < 0 && (d2 = Math.max(h2 + d2, 0));
      var v2 = Math.min(Math.max(i2, 0), h2 - d2);
      return v2 <= 0 ? e2.intrinsics.emptyString : new a.StringValue(e2, p2.slice(d2, d2 + v2));
    }), t2.defineNativeMethod("anchor", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], a2 = t3;
      return l.Create.CreateHTML(e2, a2, "a", "name", i2);
    }), t2.defineNativeMethod("big", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "big", "", "");
    }), t2.defineNativeMethod("blink", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "blink", "", "");
    }), t2.defineNativeMethod("bold", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "b", "", "");
    }), t2.defineNativeMethod("fixed", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "tt", "", "");
    }), t2.defineNativeMethod("fontcolor", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], a2 = t3;
      return l.Create.CreateHTML(e2, a2, "font", "color", i2);
    }), t2.defineNativeMethod("fontsize", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], a2 = t3;
      return l.Create.CreateHTML(e2, a2, "font", "size", i2);
    }), t2.defineNativeMethod("italics", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "i", "", "");
    }), t2.defineNativeMethod("link", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0], a2 = t3;
      return l.Create.CreateHTML(e2, a2, "a", "href", i2);
    }), t2.defineNativeMethod("small", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "small", "", "");
    }), t2.defineNativeMethod("strike", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "strike", "", "");
    }), t2.defineNativeMethod("sub", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "sub", "", "");
    }), t2.defineNativeMethod("sup", 0, function(t3) {
      var r3 = t3;
      return l.Create.CreateHTML(e2, r3, "sup", "", "");
    }), t2;
  };
  r(8);
  var i = r(4), a = r(0), o = r(11), s = r(13), u = r(15), l = r(2), c = r(83), f = r(16), p = r(20), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var h = "(A).slice(B,C)", v = "(A).split(B,C)";
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return o(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || a();
  }
  function i(e2, t2) {
    return o(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || a();
  }
  function a() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function o(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new s.NativeFunctionValue(e2, "String", "String", 1, function(t3, r2, n2, a2) {
      var o2, c2 = i(r2, 1), f = c2[0];
      if (0 === n2) o2 = e2.intrinsics.emptyString;
      else {
        if (!a2 && f instanceof s.SymbolValue) return new s.StringValue(e2, (0, u.SymbolDescriptiveString)(e2, f));
        o2 = l.To.ToStringValue(e2, f);
      }
      return a2 ? (o2 = o2.throwIfNotConcreteString(), l.Create.StringCreate(e2, o2, (0, u.GetPrototypeFromConstructor)(e2, a2, "StringPrototype"))) : o2;
    });
    t2.defineNativeMethod("fromCharCode", 1, function(t3, r2, n2) {
      for (var i2 = n2, a2 = [], o2 = 0; o2 < i2; ) {
        var u2 = r2[o2], c2 = l.To.ToUint16(e2, u2);
        a2.push(c2), o2++;
      }
      return new s.StringValue(e2, String.fromCharCode.apply(null, a2));
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("fromCodePoint", 1, function(t3, r2, n2) {
      for (var i2 = n2, a2 = [], o2 = 0; o2 < i2; ) {
        var u2 = r2[o2], c2 = l.To.ToNumber(e2, u2);
        if (c2 !== l.To.ToInteger(e2, c2)) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "SameValue(nextCP, To.ToInteger(nextCP)) is false");
        if (c2 < 0 || c2 > 1114111) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "SameValue(nextCP, To.ToInteger(nextCP)) is false");
        a2.push(String.fromCodePoint(c2)), o2++;
      }
      return new s.StringValue(e2, a2.join(""));
    });
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("raw", 1, function(t3, r2, i2) {
      var a2 = n(r2), o2 = a2[0], f = a2.slice(1), p = f, d = (p = i2 < 2 ? [] : p).length, h = l.To.ToObject(e2, o2), v = l.To.ToObject(e2, (0, u.Get)(e2, h, "raw")), y = l.To.ToLength(e2, (0, u.Get)(e2, v, "length"));
      if (y <= 0) return e2.intrinsics.emptyString;
      for (var m = "", b = 0; ; ) {
        var g = l.To.ToString(e2, new s.NumberValue(e2, b)), w = l.To.ToStringPartial(e2, (0, u.Get)(e2, v, g));
        if (m += w, b + 1 === y) return new s.StringValue(e2, m);
        var E = void 0;
        E = b < d ? p[b] : e2.intrinsics.emptyString;
        var S = l.To.ToStringPartial(e2, E);
        m += S, b += 1;
      }
      (0, c.default)(false);
    });
    return t2;
  };
  var s = r(0), u = r(3), l = r(2), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("toString", 0, function(t3) {
      var r2 = t3 instanceof i.ObjectValue ? t3.$SymbolData : t3;
      if (r2 instanceof i.AbstractValue && r2.getType() === i.SymbolValue) return i.AbstractValue.createFromTemplate(e2, "('' + A)", i.StringValue, [r2]);
      var n2, s = t3.throwIfNotConcrete();
      if (s instanceof i.SymbolValue) n2 = s;
      else {
        if (!(s instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        if (!s.$SymbolData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
        n2 = s.$SymbolData;
      }
      return n2.throwIfNotConcreteSymbol(), (0, o.default)(n2 instanceof i.SymbolValue, "expected symbol data internal slot to be a symbol value"), new i.StringValue(e2, (0, a.SymbolDescriptiveString)(e2, n2));
    }), t2.defineNativeMethod("valueOf", 0, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (r2 instanceof i.SymbolValue) return r2;
      if (!(r2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!r2.$SymbolData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return r2.$SymbolData;
    }), t2.defineNativeMethod(e2.intrinsics.SymbolToPrimitive, 1, function(t3, r2) {
      var a2 = n(r2, 1), o2 = (a2[0], t3.throwIfNotConcrete());
      if (o2 instanceof i.SymbolValue) return o2;
      if (!(o2 instanceof i.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!o2.$SymbolData) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return o2.$SymbolData;
    }, { writable: false }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new i.StringValue(e2, "Symbol"), { writable: false });
  };
  var i = r(0), a = r(3), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "Symbol", "Symbol", 0, function(t3, r2, o2, s) {
      var u, l = n(r2, 1), c = l[0];
      if (s) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return !c || c instanceof i.UndefinedValue ? u = void 0 : c instanceof i.AbstractValue ? u = c : (u = a.To.ToStringPartial(e2, c), u = new i.StringValue(e2, u)), new i.SymbolValue(e2, u);
    });
    return t2.defineNativeMethod("for", 1, function(t3, r2) {
      var o2 = n(r2, 1)[0], s = a.To.ToStringPartial(e2, o2);
      s = new i.StringValue(e2, s);
      var u = true, l = false, c = void 0;
      try {
        for (var f, p = e2.globalSymbolRegistry[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
          var d = f.value;
          if (d.$Key === s.value) return d.$Symbol;
        }
      } catch (e3) {
        l = true, c = e3;
      } finally {
        try {
          u || null == p.return || p.return();
        } finally {
          if (l) throw c;
        }
      }
      var h = new i.SymbolValue(e2, s);
      return e2.globalSymbolRegistry.push({ $Key: s.value, $Symbol: h }), h;
    }), t2.defineNativeMethod("keyFor", 1, function(t3, r2) {
      var a2 = n(r2, 1)[0];
      if (!(a2 instanceof i.SymbolValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(sym) is not Symbol");
      var s = true, u = false, l = void 0;
      try {
        for (var c, f = e2.globalSymbolRegistry[Symbol.iterator](); !(s = (c = f.next()).done); s = true) {
          var p = c.value;
          if (true === (0, o.SameValue)(e2, p.$Symbol, a2)) return new i.StringValue(e2, p.$Key);
        }
      } catch (e3) {
        u = true, l = e3;
      } finally {
        try {
          s || null == f.return || f.return();
        } finally {
          if (u) throw l;
        }
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeConstant("isConcatSpreadable", e2.intrinsics.SymbolIsConcatSpreadable), t2.defineNativeConstant("species", e2.intrinsics.SymbolSpecies), t2.defineNativeConstant("replace", e2.intrinsics.SymbolReplace), t2.defineNativeConstant("iterator", e2.intrinsics.SymbolIterator), t2.defineNativeConstant("hasInstance", e2.intrinsics.SymbolHasInstance), t2.defineNativeConstant("toPrimitive", e2.intrinsics.SymbolToPrimitive), t2.defineNativeConstant("toStringTag", e2.intrinsics.SymbolToStringTag), t2.defineNativeConstant("unscopables", e2.intrinsics.SymbolUnscopables), t2.defineNativeConstant("match", e2.intrinsics.SymbolMatch), t2.defineNativeConstant("split", e2.intrinsics.SymbolSplit), t2.defineNativeConstant("search", e2.intrinsics.SymbolSearch), t2;
  };
  var i = r(0), a = r(2), o = r(16);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("exec", 1, function(t3, r2) {
      var i2 = n(r2, 1), o2 = i2[0], s2 = t3.throwIfNotConcrete();
      if (!(s2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      if (void 0 === s2.$RegExpMatcher) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "R does not have a [[RegExpMatcher]] internal slot");
      var u2 = c.To.ToStringPartial(e2, o2);
      return (0, p.RegExpBuiltinExec)(e2, s2, u2);
    }), t2.defineNativeGetter("flags", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      var n2 = "", i2 = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, r2, "global"));
      i2 && (n2 += "g");
      var o2 = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, r2, "ignoreCase"));
      o2 && (n2 += "i");
      var s2 = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, r2, "multiline"));
      s2 && (n2 += "m");
      var u2 = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, r2, "unicode"));
      u2 && (n2 += "u");
      var f2 = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, r2, "sticky"));
      return f2 && (n2 += "y"), new a.StringValue(e2, n2);
    }), t2.defineNativeGetter("global", function(t3) {
      return d(e2, t3, "g");
    }), t2.defineNativeGetter("ignoreCase", function(t3) {
      return d(e2, t3, "i");
    }), t2.defineNativeMethod(e2.intrinsics.SymbolMatch, 1, function(t3, r2) {
      var o2 = n(r2, 1), s2 = o2[0], u2 = t3.throwIfNotConcrete();
      if (!(u2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      var f2 = c.To.ToStringPartial(e2, s2), d2 = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, u2, "global"));
      if (false === d2) return (0, p.RegExpExec)(e2, u2, f2);
      var h = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, u2, "unicode"));
      c.Properties.Set(e2, u2, "lastIndex", e2.intrinsics.zero, true);
      for (var v = c.Create.ArrayCreate(e2, 0), y = 0; ; ) {
        var m = (0, p.RegExpExec)(e2, u2, f2);
        if (m instanceof a.NullValue) return 0 === y ? e2.intrinsics.null : v;
        var b = c.To.ToStringPartial(e2, (0, l.Get)(e2, m, "0")), g = c.Create.CreateDataProperty(e2, v, c.To.ToString(e2, new a.NumberValue(e2, y)), new a.StringValue(e2, b));
        if ((0, i.default)(true === g, "status is true"), "" === b) {
          var w = c.To.ToLength(e2, (0, l.Get)(e2, u2, "lastIndex")), E = (0, p.AdvanceStringIndex)(e2, f2, w, h);
          c.Properties.Set(e2, u2, "lastIndex", new a.NumberValue(e2, E), true);
        }
        y += 1;
      }
      (0, i.default)(false);
    }), t2.defineNativeGetter("multiline", function(t3) {
      return d(e2, t3, "m");
    }), t2.defineNativeMethod(e2.intrinsics.SymbolReplace, 2, function(t3, r2) {
      var o2 = n(r2, 2), u2 = o2[0], d2 = o2[1], h = d2, v = t3.throwIfNotConcrete();
      if (!(v instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      var y = c.To.ToStringPartial(e2, u2), m = y.length, b = (0, f.IsCallable)(e2, h);
      false === b && (h = new a.StringValue(e2, c.To.ToStringPartial(e2, h)));
      var g, w = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, v, "global"));
      true === w && (g = c.To.ToBooleanPartial(e2, (0, l.Get)(e2, v, "unicode")), c.Properties.Set(e2, v, "lastIndex", e2.intrinsics.zero, true));
      for (var E = [], S = false; false === S; ) {
        var T = (0, p.RegExpExec)(e2, v, y);
        if (T instanceof a.NullValue) S = true;
        else if (E.push(T), false === w) S = true;
        else {
          (0, i.default)(void 0 !== g);
          var A = c.To.ToStringPartial(e2, (0, l.Get)(e2, T, "0"));
          if ("" === A) {
            var C = c.To.ToLength(e2, (0, l.Get)(e2, v, "lastIndex")), P = (0, p.AdvanceStringIndex)(e2, y, C, g);
            c.Properties.Set(e2, v, "lastIndex", new a.NumberValue(e2, P), true);
          }
        }
      }
      for (var O = "", x = 0, _ = 0; _ < E.length; _++) {
        var V = E[_], D = c.To.ToLength(e2, (0, l.Get)(e2, V, "length"));
        D = Math.max(D - 1, 0);
        var N = c.To.ToStringPartial(e2, (0, l.Get)(e2, V, "0")), I = N.length, k = c.To.ToInteger(e2, (0, l.Get)(e2, V, "index"));
        k = Math.max(Math.min(k, m), 0);
        for (var j = 1, F = []; j <= D; ) {
          var R = (0, l.Get)(e2, V, c.To.ToString(e2, new a.NumberValue(e2, j)));
          R.mightBeUndefined() ? (R.throwIfNotConcrete(), R = void 0) : R = c.To.ToStringPartial(e2, R), F.push(R), j += 1;
        }
        var M = void 0;
        if (b) {
          for (var B = [new a.StringValue(e2, N)], L = 0; L < F.length; L++) {
            var $ = F[L];
            B.push(void 0 === $ ? e2.intrinsics.undefined : new a.StringValue(e2, $));
          }
          B = B.concat([new a.NumberValue(e2, k), new a.StringValue(e2, y)]);
          var G = (0, s.Call)(e2, h, e2.intrinsics.undefined, B);
          M = c.To.ToStringPartial(e2, G);
        } else (0, i.default)(h instanceof a.StringValue), M = (0, l.GetSubstitution)(e2, N, y, k, F, h.value);
        k >= x && (O = O + y.substr(x, k - x) + M, x = k + I);
      }
      return x >= m ? new a.StringValue(e2, O) : new a.StringValue(e2, O + y.substr(x));
    }), t2.defineNativeMethod(e2.intrinsics.SymbolSearch, 1, function(t3, r2) {
      var i2 = n(r2, 1), o2 = i2[0], s2 = t3.throwIfNotConcrete();
      if (!(s2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      var u2 = c.To.ToStringPartial(e2, o2), f2 = (0, l.Get)(e2, s2, "lastIndex");
      c.Properties.Set(e2, s2, "lastIndex", e2.intrinsics.zero, true);
      var d2 = (0, p.RegExpExec)(e2, s2, u2);
      return c.Properties.Set(e2, s2, "lastIndex", f2, true), d2 instanceof a.NullValue ? new a.NumberValue(e2, -1) : (0, l.Get)(e2, d2, "index");
    }), t2.defineNativeGetter("source", function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      if ("string" != typeof r2.$OriginalSource) {
        if ((0, o.SameValue)(e2, r2, e2.intrinsics.RegExpPrototype)) return new a.StringValue(e2, "(?:)");
        throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "R does not have an [[OriginalSource]] internal slot");
      }
      (0, i.default)(void 0 !== r2.$OriginalFlags, "R has an [[OriginalFlags]] internal slot");
      var n2 = r2.$OriginalSource;
      (0, i.default)("string" == typeof n2);
      var s2 = r2.$OriginalFlags;
      return (0, i.default)("string" == typeof s2), new a.StringValue(e2, (0, p.EscapeRegExpPattern)(e2, n2, s2));
    }), t2.defineNativeMethod(e2.intrinsics.SymbolSplit, 2, function(t3, r2) {
      var i2 = n(r2, 2), o2 = i2[0], s2 = i2[1], f2 = t3.throwIfNotConcrete();
      if (!(f2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(rx) is not an object");
      var d2, h, v = c.To.ToStringPartial(e2, o2), y = (0, u.SpeciesConstructor)(e2, f2, e2.intrinsics.RegExp), m = c.To.ToStringPartial(e2, (0, l.Get)(e2, f2, "flags"));
      d2 = m.indexOf("u") >= 0, h = m.indexOf("y") >= 0 ? m : m + "y";
      var b = (0, u.Construct)(e2, y, [f2, new a.StringValue(e2, h)]).throwIfNotConcreteObject(), g = c.Create.ArrayCreate(e2, 0), w = 0, E = s2 instanceof a.UndefinedValue ? Math.pow(2, 32) - 1 : c.To.ToUint32(e2, s2.throwIfNotConcrete()), S = v.length, T = 0;
      if (0 === E) return g;
      if (0 === S) {
        var A = (0, p.RegExpExec)(e2, b, v);
        return A instanceof a.NullValue ? (c.Create.CreateDataProperty(e2, g, "0", new a.StringValue(e2, v)), g) : g;
      }
      for (var C = T; C < S; ) {
        c.Properties.Set(e2, b, "lastIndex", new a.NumberValue(e2, C), true);
        var P = (0, p.RegExpExec)(e2, b, v);
        if (P instanceof a.NullValue) C = (0, p.AdvanceStringIndex)(e2, v, C, d2);
        else {
          var O = c.To.ToLength(e2, (0, l.Get)(e2, b, "lastIndex"));
          if ((O = Math.min(O, S)) === T) C = (0, p.AdvanceStringIndex)(e2, v, C, d2);
          else {
            var x = v.substr(T, C - T);
            if (c.Create.CreateDataProperty(e2, g, c.To.ToString(e2, new a.NumberValue(e2, w)), new a.StringValue(e2, x)), (w += 1) === E) return g;
            T = O;
            var _ = c.To.ToLength(e2, (0, l.Get)(e2, P, "length"));
            _ = Math.max(_ - 1, 0);
            for (var V = 1; V <= _; ) {
              var D = (0, l.Get)(e2, P, c.To.ToString(e2, new a.NumberValue(e2, V)));
              if (c.Create.CreateDataProperty(e2, g, c.To.ToString(e2, new a.NumberValue(e2, w)), D), V += 1, (w += 1) === E) return g;
            }
            C = T;
          }
        }
      }
      var N = v.substr(T, S - T);
      return c.Create.CreateDataProperty(e2, g, c.To.ToString(e2, new a.NumberValue(e2, w)), new a.StringValue(e2, N)), g;
    }), t2.defineNativeGetter("sticky", function(t3) {
      return d(e2, t3, "y");
    }), t2.defineNativeMethod("test", 1, function(t3, r2) {
      var i2 = n(r2, 1), o2 = i2[0], s2 = t3.throwIfNotConcrete();
      if (!(s2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      var u2 = c.To.ToStringPartial(e2, o2), l2 = (0, p.RegExpExec)(e2, s2, u2);
      return new a.BooleanValue(e2, !(l2 instanceof a.NullValue));
    }), t2.defineNativeMethod("toString", 0, function(t3) {
      var r2 = t3.throwIfNotConcrete();
      if (!(r2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
      var n2 = c.To.ToStringPartial(e2, (0, l.Get)(e2, r2, "source")), i2 = c.To.ToStringPartial(e2, (0, l.Get)(e2, r2, "flags")), o2 = "/" + n2 + "/" + i2;
      return new a.StringValue(e2, o2);
    }), t2.defineNativeGetter("unicode", function(t3) {
      return d(e2, t3, "u");
    });
  };
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), a = r(0), o = r(16), s = r(15), u = r(22), l = r(13), c = r(2), f = r(11), p = r(83);
  function d(e2, t2, r2) {
    var n2 = t2.throwIfNotConcrete();
    if (!(n2 instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(R) is not an object");
    if ("string" != typeof n2.$OriginalFlags) {
      if ((0, o.SameValue)(e2, n2, e2.intrinsics.RegExpPrototype)) return e2.intrinsics.undefined;
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "R does not have an [[OriginalFlags]] internal slot");
    }
    return n2.$OriginalFlags.indexOf(r2) >= 0 ? e2.intrinsics.true : e2.intrinsics.false;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new i.NativeFunctionValue(e2, "RegExp", "RegExp", 2, function(r2, c, f, p) {
      var d, h, v, y = n(c, 2), m = y[0], b = y[1], g = (0, a.IsRegExp)(e2, m);
      if (p) d = p;
      else if (d = t2, g && b instanceof i.UndefinedValue) {
        (0, l.default)(m instanceof i.ObjectValue);
        var w = (0, o.Get)(e2, m, "constructor");
        if ((0, s.SameValuePartial)(e2, d, w)) return m;
      }
      m instanceof i.ObjectValue && m.$RegExpMatcher ? ((0, l.default)("string" == typeof m.$OriginalSource), h = new i.StringValue(e2, m.$OriginalSource), b instanceof i.UndefinedValue ? ((0, l.default)("string" == typeof m.$OriginalFlags), v = new i.StringValue(e2, m.$OriginalFlags)) : v = b.throwIfNotConcrete()) : g ? ((0, l.default)(m instanceof i.ObjectValue), h = (0, o.Get)(e2, m, "source"), v = b instanceof i.UndefinedValue ? (0, o.Get)(e2, m, "flags") : b.throwIfNotConcrete()) : (h = m.throwIfNotConcrete(), v = b.throwIfNotConcrete());
      var E = (0, u.RegExpAlloc)(e2, d);
      return (0, u.RegExpInitialize)(e2, E, h, v);
    });
    return t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  };
  var i = r(0), a = r(11), o = r(13), s = r(16), u = r(83), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("getDate", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.DateFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getDay", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.WeekDay)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getFullYear", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.YearFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getHours", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.HourFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getMilliseconds", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.msFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getMinutes", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.MinFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getMonth", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.MonthFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getSeconds", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.SecFromTime)(e2, (0, o.LocalTime)(e2, r2)));
    }), t2.defineNativeMethod("getTime", 0, function(t3) {
      return (0, o.thisTimeValue)(e2, t3);
    }), t2.defineNativeMethod("getTimezoneOffset", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (r2 - (0, o.LocalTime)(e2, r2)) / o.msPerMinute);
    }), t2.defineNativeMethod("getUTCDate", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.DateFromTime)(e2, r2));
    }), t2.defineNativeMethod("getUTCDay", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.WeekDay)(e2, r2));
    }), t2.defineNativeMethod("getUTCFullYear", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.YearFromTime)(e2, r2));
    }), t2.defineNativeMethod("getUTCHours", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.HourFromTime)(e2, r2));
    }), t2.defineNativeMethod("getUTCMilliseconds", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.msFromTime)(e2, r2));
    }), t2.defineNativeMethod("getUTCMinutes", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.MinFromTime)(e2, r2));
    }), t2.defineNativeMethod("getUTCMonth", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.MonthFromTime)(e2, r2));
    }), t2.defineNativeMethod("getUTCSeconds", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return (0, u.default)(t3 instanceof a.ObjectValue), isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.SecFromTime)(e2, r2));
    }), t2.defineNativeMethod("setDate", 1, function(t3, r2) {
      var i2 = n(r2, 1), l = i2[0], c = (0, o.LocalTime)(e2, (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value);
      (0, u.default)(t3 instanceof a.ObjectValue);
      var f = s.To.ToNumber(e2, l), p = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, (0, o.YearFromTime)(e2, c), (0, o.MonthFromTime)(e2, c), f), (0, o.TimeWithinDay)(e2, c)), d = (0, o.TimeClip)(e2, (0, o.UTC)(e2, p));
      return t3.$DateValue = d, d;
    }), t2.defineNativeMethod("setFullYear", 3, function(t3, r2, i2) {
      var l = n(r2, 3), c = l[0], f = l[1], p = l[2], d = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue), d = isNaN(d) ? 0 : (0, o.LocalTime)(e2, d);
      var h = s.To.ToNumber(e2, c), v = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.MonthFromTime)(e2, d), y = i2 >= 3 ? s.To.ToNumber(e2, p) : (0, o.DateFromTime)(e2, d), m = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, h, v, y), (0, o.TimeWithinDay)(e2, d)), b = (0, o.TimeClip)(e2, (0, o.UTC)(e2, m));
      return t3.$DateValue = b, b;
    }), t2.defineNativeMethod("setHours", 4, function(t3, r2, i2) {
      var l = n(r2, 4), c = l[0], f = l[1], p = l[2], d = l[3], h = (0, o.LocalTime)(e2, (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value);
      (0, u.default)(t3 instanceof a.ObjectValue);
      var v = s.To.ToNumber(e2, c), y = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.MinFromTime)(e2, h), m = i2 >= 3 ? s.To.ToNumber(e2, p) : (0, o.SecFromTime)(e2, h), b = i2 >= 4 ? s.To.ToNumber(e2, d) : (0, o.msFromTime)(e2, h), g = (0, o.MakeDate)(e2, (0, o.Day)(e2, h), (0, o.MakeTime)(e2, v, y, m, b)), w = (0, o.TimeClip)(e2, (0, o.UTC)(e2, g));
      return t3.$DateValue = w, w;
    }), t2.defineNativeMethod("setMilliseconds", 1, function(t3, r2) {
      var i2 = n(r2, 1), l = i2[0], c = l, f = (0, o.LocalTime)(e2, (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value);
      (0, u.default)(t3 instanceof a.ObjectValue), c = s.To.ToNumber(e2, c);
      var p = (0, o.MakeTime)(e2, (0, o.HourFromTime)(e2, f), (0, o.MinFromTime)(e2, f), (0, o.SecFromTime)(e2, f), c), d = (0, o.TimeClip)(e2, (0, o.UTC)(e2, (0, o.MakeDate)(e2, (0, o.Day)(e2, f), p)));
      return t3.$DateValue = d, d;
    }), t2.defineNativeMethod("setMinutes", 3, function(t3, r2, i2) {
      var l = n(r2, 3), c = l[0], f = l[1], p = l[2], d = (0, o.LocalTime)(e2, (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value);
      (0, u.default)(t3 instanceof a.ObjectValue);
      var h = s.To.ToNumber(e2, c), v = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.SecFromTime)(e2, d), y = i2 >= 3 ? s.To.ToNumber(e2, p) : (0, o.msFromTime)(e2, d), m = (0, o.MakeDate)(e2, (0, o.Day)(e2, d), (0, o.MakeTime)(e2, (0, o.HourFromTime)(e2, d), h, v, y)), b = (0, o.TimeClip)(e2, (0, o.UTC)(e2, m));
      return t3.$DateValue = b, b;
    }), t2.defineNativeMethod("setMonth", 2, function(t3, r2, i2) {
      var l = n(r2, 2), c = l[0], f = l[1], p = (0, o.LocalTime)(e2, (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value);
      (0, u.default)(t3 instanceof a.ObjectValue);
      var d = s.To.ToNumber(e2, c), h = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.DateFromTime)(e2, p), v = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, (0, o.YearFromTime)(e2, p), d, h), (0, o.TimeWithinDay)(e2, p)), y = (0, o.TimeClip)(e2, (0, o.UTC)(e2, v));
      return t3.$DateValue = y, y;
    }), t2.defineNativeMethod("setSeconds", 2, function(t3, r2, i2) {
      var l = n(r2, 2), c = l[0], f = l[1], p = (0, o.LocalTime)(e2, (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value);
      (0, u.default)(t3 instanceof a.ObjectValue);
      var d = s.To.ToNumber(e2, c), h = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.msFromTime)(e2, p), v = (0, o.MakeDate)(e2, (0, o.Day)(e2, p), (0, o.MakeTime)(e2, (0, o.HourFromTime)(e2, p), (0, o.MinFromTime)(e2, p), d, h)), y = (0, o.TimeClip)(e2, (0, o.UTC)(e2, v));
      return t3.$DateValue = y, y;
    }), t2.defineNativeMethod("setTime", 1, function(t3, r2) {
      var i2 = n(r2, 1), l = i2[0];
      (0, o.thisTimeValue)(e2, t3), (0, u.default)(t3 instanceof a.ObjectValue);
      var c = s.To.ToNumber(e2, l), f = (0, o.TimeClip)(e2, c);
      return t3.$DateValue = f, f;
    }), t2.defineNativeMethod("setUTCDate", 1, function(t3, r2) {
      var i2 = n(r2, 1), l = i2[0], c = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue);
      var f = s.To.ToNumber(e2, l), p = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, (0, o.YearFromTime)(e2, c), (0, o.MonthFromTime)(e2, c), f), (0, o.TimeWithinDay)(e2, c)), d = (0, o.TimeClip)(e2, p);
      return t3.$DateValue = d, d;
    }), t2.defineNativeMethod("setUTCFullYear", 3, function(t3, r2, i2) {
      var l = n(r2, 3), c = l[0], f = l[1], p = l[2], d = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue), isNaN(d) && (d = 0);
      var h = s.To.ToNumber(e2, c), v = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.MonthFromTime)(e2, d), y = i2 >= 3 ? s.To.ToNumber(e2, p) : (0, o.DateFromTime)(e2, d), m = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, h, v, y), (0, o.TimeWithinDay)(e2, d)), b = (0, o.TimeClip)(e2, m);
      return t3.$DateValue = b, b;
    }), t2.defineNativeMethod("setUTCHours", 4, function(t3, r2, i2) {
      var l = n(r2, 4), c = l[0], f = l[1], p = l[2], d = l[3], h = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue);
      var v = s.To.ToNumber(e2, c), y = i2 >= 2 ? s.To.ToNumber(e2, f) : (0, o.MinFromTime)(e2, h), m = i2 >= 3 ? s.To.ToNumber(e2, p) : (0, o.SecFromTime)(e2, h), b = i2 >= 4 ? s.To.ToNumber(e2, d) : (0, o.msFromTime)(e2, h), g = (0, o.MakeDate)(e2, (0, o.Day)(e2, h), (0, o.MakeTime)(e2, v, y, m, b)), w = (0, o.TimeClip)(e2, g);
      return t3.$DateValue = w, w;
    }), t2.defineNativeMethod("setUTCMilliseconds", 1, function(t3, r2) {
      var i2 = n(r2, 1), l = i2[0], c = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue);
      var f = s.To.ToNumber(e2, l), p = (0, o.MakeTime)(e2, (0, o.HourFromTime)(e2, c), (0, o.MinFromTime)(e2, c), (0, o.SecFromTime)(e2, c), f), d = (0, o.TimeClip)(e2, (0, o.MakeDate)(e2, (0, o.Day)(e2, c), p));
      return t3.$DateValue = d, d;
    }), t2.defineNativeMethod("setUTCMinutes", 3, function(t3, r2, i2) {
      var l = n(r2, 3), c = l[0], f = l[1], p = l[2], d = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue);
      var h, v, y = s.To.ToNumber(e2, c);
      h = i2 < 2 ? (0, o.SecFromTime)(e2, d) : s.To.ToNumber(e2, f), v = i2 < 3 ? (0, o.msFromTime)(e2, d) : s.To.ToNumber(e2, p);
      var m = (0, o.MakeDate)(e2, (0, o.Day)(e2, d), (0, o.MakeTime)(e2, (0, o.HourFromTime)(e2, d), y, h, v)), b = (0, o.TimeClip)(e2, m);
      return t3.$DateValue = b, b;
    }), t2.defineNativeMethod("setUTCMonth", 2, function(t3, r2, i2) {
      var l = n(r2, 2), c = l[0], f = l[1], p = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue);
      var d, h = s.To.ToNumber(e2, c);
      d = i2 < 2 ? (0, o.DateFromTime)(e2, p) : s.To.ToNumber(e2, f);
      var v = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, (0, o.YearFromTime)(e2, p), h, d), (0, o.TimeWithinDay)(e2, p)), y = (0, o.TimeClip)(e2, v);
      return t3.$DateValue = y, y;
    }), t2.defineNativeMethod("setUTCSeconds", 2, function(t3, r2, i2) {
      var l = n(r2, 2), c = l[0], f = l[1], p = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue);
      var d, h = s.To.ToNumber(e2, c);
      d = i2 < 2 ? (0, o.msFromTime)(e2, p) : s.To.ToNumber(e2, f);
      var v = (0, o.MakeDate)(e2, (0, o.Day)(e2, p), (0, o.MakeTime)(e2, (0, o.HourFromTime)(e2, p), (0, o.MinFromTime)(e2, p), h, d)), y = (0, o.TimeClip)(e2, v);
      return t3.$DateValue = y, y;
    }), t2.defineNativeMethod("toDateString", 0, function(e3) {
      throw new i.FatalError("TODO #1005: implement Date.prototype.toDateString");
    }), t2.defineNativeMethod("toISOString", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      if (!isFinite(r2)) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError);
      return new a.StringValue(e2, new Date(r2).toISOString());
    }), t2.defineNativeMethod("toJSON", 1, function(t3, r2) {
      var i2 = n(r2, 1), u2 = (i2[0], s.To.ToObject(e2, t3)), l = s.To.ToPrimitive(e2, u2.throwIfNotConcreteObject(), "number");
      return l instanceof a.NumberValue && !isFinite(l.value) ? e2.intrinsics.null : (0, o.Invoke)(e2, u2, "toISOString");
    }), t2.defineNativeMethod("toLocaleDateString", 0, function(e3) {
      throw new i.FatalError("TODO #1005: implement Date.prototype.toLocaleDateString");
    }), t2.defineNativeMethod("toLocaleString", 0, function(e3) {
      throw new i.FatalError("TODO #1005: implement Date.prototype.toLocaleString");
    }), t2.defineNativeMethod("toLocaleTimeString", 0, function(e3) {
      throw new i.FatalError("TODO #1005: implement Date.prototype.toLocaleTimeString");
    }), t2.defineNativeMethod("toString", 0, function(t3) {
      var r2, n2 = t3;
      return r2 = void 0 === n2.$DateValue ? NaN : (0, o.thisTimeValue)(e2, n2).throwIfNotConcreteNumber().value, new a.StringValue(e2, (0, o.ToDateString)(e2, r2));
    }), t2.defineNativeMethod("toTimeString", 0, function(e3) {
      throw new i.FatalError("TODO #1005: implement Date.prototype.toTimeString");
    }), t2.defineNativeMethod("toUTCString", 0, function(e3) {
      throw new i.FatalError("TODO #1005: implement Date.prototype.toUTCString");
    }), t2.defineNativeMethod("valueOf", 0, function(t3) {
      return (0, o.thisTimeValue)(e2, t3);
    }), t2.defineNativeMethod(e2.intrinsics.SymbolToPrimitive, 1, function(t3, r2) {
      var i2, o2 = n(r2, 1), u2 = o2[0], l = u2, c = t3.throwIfNotConcrete();
      if (!(c instanceof a.ObjectValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
      if ((l = l.throwIfNotConcrete()) instanceof a.StringValue && ("string" === l.value || "default" === l.value)) i2 = "string";
      else {
        if (!(l instanceof a.StringValue && "number" === l.value)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Type(O) is not Object");
        i2 = "number";
      }
      return s.To.OrdinaryToPrimitive(e2, c, i2);
    }, { writable: false }), t2.defineNativeMethod("getYear", 0, function(t3) {
      var r2 = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      return isNaN(r2) ? e2.intrinsics.NaN : new a.NumberValue(e2, (0, o.YearFromTime)(e2, (0, o.LocalTime)(e2, r2)) - 1900);
    }), t2.defineNativeMethod("setYear", 1, function(t3, r2) {
      var i2 = n(r2, 1), l = i2[0], c = (0, o.thisTimeValue)(e2, t3).throwIfNotConcreteNumber().value;
      (0, u.default)(t3 instanceof a.ObjectValue), c = isNaN(c) ? 0 : (0, o.LocalTime)(e2, c);
      var f, p = s.To.ToNumber(e2, l);
      if (isNaN(p)) return t3.$DateValue = e2.intrinsics.NaN, e2.intrinsics.NaN;
      f = s.To.ToInteger(e2, p) < 99 ? s.To.ToInteger(e2, p) + 1900 : p;
      var d = (0, o.MakeDay)(e2, f, (0, o.MonthFromTime)(e2, c), (0, o.DateFromTime)(e2, c)), h = (0, o.UTC)(e2, (0, o.MakeDate)(e2, d, (0, o.TimeWithinDay)(e2, c))), v = (0, o.TimeClip)(e2, h);
      return t3.$DateValue = v, v;
    }), t2.defineNativeProperty("toGMTString", t2.$Get("toUTCString", t2));
  };
  var i = r(4), a = r(0), o = r(3), s = r(2), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2, r2;
    function c2() {
      if (e2.useAbstractInterpretation) return i.AbstractValue.createTemporalFromTemplate(e2, f, i.NumberValue, [], { isPure: true, skipInvariant: true });
      var n2 = Date.now();
      return e2.strictlyMonotonicDateNow && t2 >= n2 && (r2 || (r2 = (0, l.default)(0)), n2 = t2 + 1 + Math.floor(500 * r2())), t2 = n2, new i.NumberValue(e2, n2);
    }
    var p = new i.NativeFunctionValue(e2, "Date", "Date", 7, function(t3, r3, s2, l2) {
      if (s2 >= 2) {
        var f2 = n(r3, 7), p2 = f2[0], d = f2[1], h = f2[2], v = f2[3], y = f2[4], m = f2[5], b = f2[6], g = s2;
        if ((0, u.default)(g >= 2, "expected two or more arguments"), l2) {
          var w, E = a.To.ToNumber(e2, p2), S = a.To.ToNumber(e2, d), T = s2 >= 3 ? a.To.ToNumber(e2, h) : 1, A = s2 >= 4 ? a.To.ToNumber(e2, v) : 0, C = s2 >= 5 ? a.To.ToNumber(e2, y) : 0, P = s2 >= 6 ? a.To.ToNumber(e2, m) : 0, O = s2 >= 7 ? a.To.ToNumber(e2, b) : 0;
          w = !isNaN(E) && a.To.ToInteger(e2, E) >= 0 && a.To.ToInteger(e2, E) <= 99 ? 1900 + a.To.ToInteger(e2, new i.NumberValue(e2, E)) : E;
          var x = (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, w, S, T), (0, o.MakeTime)(e2, A, C, P, O)), _ = a.Create.OrdinaryCreateFromConstructor(e2, l2, "DatePrototype", { $DateValue: void 0 });
          return _.$DateValue = (0, o.TimeClip)(e2, (0, o.UTC)(e2, x)), _;
        }
        var V = c2().throwIfNotConcreteNumber().value;
        return new i.StringValue(e2, (0, o.ToDateString)(e2, V));
      }
      if (1 === s2) {
        var D = n(r3, 1), N = D[0], I = N.throwIfNotConcrete(), k = s2;
        if ((0, u.default)(1 === k, "expected number of arguments to equal 1"), l2) {
          var j;
          if (I instanceof i.ObjectValue && void 0 !== I.$DateValue) j = (0, o.thisTimeValue)(e2, I);
          else {
            var F = a.To.ToPrimitive(e2, I);
            j = F instanceof i.StringValue ? new i.NumberValue(e2, new Date(F.value).getTime()) : new i.NumberValue(e2, a.To.ToNumber(e2, F));
          }
          var R = a.Create.OrdinaryCreateFromConstructor(e2, l2, "DatePrototype", { $DateValue: void 0 });
          return R.$DateValue = (0, o.TimeClip)(e2, j), R;
        }
        var M = c2().throwIfNotConcreteNumber().value;
        return new i.StringValue(e2, (0, o.ToDateString)(e2, M));
      }
      var B = s2;
      if ((0, u.default)(0 === B, "expected zero arguments"), l2) {
        var L = a.Create.OrdinaryCreateFromConstructor(e2, l2, "DatePrototype", { $DateValue: void 0 });
        return L.$DateValue = c2(), L;
      }
      var $ = c2().throwIfNotConcreteNumber().value;
      return new i.StringValue(e2, (0, o.ToDateString)(e2, $));
    });
    return p.defineNativeMethod("now", 0, function(e3) {
      return c2();
    }), p.defineNativeMethod("parse", 1, function(t3, r3) {
      var a2 = n(r3, 1)[0];
      if (e2.useAbstractInterpretation) throw i.AbstractValue.reportIntrospectionError(a2), new s.FatalError();
      var o2 = Date.parse(a2.value);
      return new i.NumberValue(e2, o2);
    }), p.defineNativeMethod("UTC", 7, function(t3, r3, i2) {
      var s2 = n(r3, 7), u2 = s2[0], l2 = s2[1], c3 = s2[2], f2 = s2[3], p2 = s2[4], d = s2[5], h = s2[6], v = a.To.ToNumber(e2, u2), y = i2 >= 2 ? a.To.ToNumber(e2, l2) : 0, m = i2 >= 3 ? a.To.ToNumber(e2, c3) : 1, b = i2 >= 4 ? a.To.ToNumber(e2, f2) : 0, g = i2 >= 5 ? a.To.ToNumber(e2, p2) : 0, w = i2 >= 6 ? a.To.ToNumber(e2, d) : 0, E = i2 >= 7 ? a.To.ToNumber(e2, h) : 0, S = !isNaN(v) && a.To.ToInteger(e2, v) >= 0 && a.To.ToInteger(e2, v) <= 99 ? 1900 + a.To.ToInteger(e2, v) : v;
      return (0, o.TimeClip)(e2, (0, o.MakeDate)(e2, (0, o.MakeDay)(e2, S, y, m), (0, o.MakeTime)(e2, b, g, w, E)));
    }), p;
  };
  var i = r(0), a = r(2), o = r(183), s = r(4), u = c(r(1)), l = c(r(191));
  function c(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var f = "global.Date.now()";
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return a(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || i();
  }
  function i() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function a(e2) {
    if (Array.isArray(e2)) return e2;
  }
  function o(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || s(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function s(e2) {
    if (Symbol.iterator in Object(e2) || "[object Arguments]" === Object.prototype.toString.call(e2)) return Array.from(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty(e2.intrinsics.SymbolIterator, e2.intrinsics.ArrayProto_values), t2.defineNativeProperty("length", e2.intrinsics.zero), t2.defineNativeMethod("concat", 1, function(t3, r3, n2) {
      var i2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(i2) && e2.isInPureScope() && void 0 === i2.$GetOwnProperty("concat")) {
        var a2 = [i2, new u.StringValue(e2, "concat")].concat(o(r3));
        return u.ArrayValue.createTemporalWithWidenedNumericProperty(e2, a2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      for (var s2 = p.Create.ArraySpeciesCreate(e2, i2.throwIfNotConcreteObject(), 0), l2 = 0, c2 = 0 === n2 ? [i2] : [i2].concat(o(r3)); c2.length; ) {
        var h = c2.shift();
        if ((0, f.IsConcatSpreadable)(e2, h)) {
          h = h.throwIfNotConcreteObject();
          var v = 0, y = p.To.ToLength(e2, (0, f.Get)(e2, h, "length"));
          if (l2 + y > Math.pow(2, 53) - 1) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "too damn high");
          for (; v < y; ) {
            var m = new u.StringValue(e2, v + "");
            if ((0, f.HasProperty)(e2, h, m)) {
              var b = (0, f.Get)(e2, h, m);
              p.Create.CreateDataPropertyOrThrow(e2, s2, new u.StringValue(e2, l2 + ""), b);
            }
            l2++, v++;
          }
        } else {
          if (l2 > Math.pow(2, 53) - 1) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "too damn high");
          p.Create.CreateDataPropertyOrThrow(e2, s2, new u.StringValue(e2, l2 + ""), h), l2++;
        }
      }
      return p.Properties.Set(e2, s2, "length", new u.NumberValue(e2, l2), true), s2;
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("copyWithin", 2, function(t3, r3) {
      var i2 = n(r3, 3), a2 = i2[0], o2 = i2[1], s2 = i2[2], l2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(l2) && e2.isInPureScope() && void 0 === l2.$GetOwnProperty("copyWithin")) {
        var c2 = [l2, new u.StringValue(e2, "copyWithin"), a2];
        return o2 && c2.push(o2), s2 && c2.push(s2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.BooleanValue, c2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")), l2;
      }
      var h, v = p.To.ToLength(e2, (0, f.Get)(e2, l2, "length")), y = p.To.ToInteger(e2, a2), m = y < 0 ? Math.max(v + y, 0) : Math.min(y, v), b = p.To.ToInteger(e2, o2), g = b < 0 ? Math.max(v + b, 0) : Math.min(b, v), w = !s2 || s2 instanceof u.UndefinedValue ? v : p.To.ToInteger(e2, s2.throwIfNotConcrete()), E = w < 0 ? Math.max(v + w, 0) : Math.min(w, v), S = Math.min(E - g, v - m);
      for (g < m && m < g + S ? (h = -1, g = g + S - 1, m = m + S - 1) : h = 1; S > 0; ) {
        var T = p.To.ToString(e2, new u.NumberValue(e2, g)), A = p.To.ToString(e2, new u.NumberValue(e2, m)), C = (0, f.HasProperty)(e2, l2, T);
        if (true === C) {
          var P = (0, f.Get)(e2, l2, T);
          p.Properties.Set(e2, l2, A, P, true);
        } else p.Properties.DeletePropertyOrThrow(e2, l2.throwIfNotConcreteObject(), A);
        g += h, m += h, S -= 1;
      }
      return l2;
    });
    t2.defineNativeMethod("entries", 0, function(t3) {
      var r3 = p.To.ToObject(e2, t3);
      return u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) && e2.isInPureScope() && void 0 === r3.$GetOwnProperty("entries") ? u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, [r3, new u.StringValue(e2, "entries")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")) : p.Create.CreateArrayIterator(e2, r3.throwIfNotConcreteObject(), "key+value");
    }), t2.defineNativeMethod("every", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("every")) {
        var l2 = [s2, new u.StringValue(e2, "every"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.BooleanValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var h = o2 || e2.intrinsics.undefined, v = 0; v < c2; ) {
        var y = new u.StringValue(e2, v + "");
        if ((0, f.HasProperty)(e2, s2, y)) {
          var m = (0, f.Get)(e2, s2, y);
          if (!p.To.ToBooleanPartial(e2, (0, f.Call)(e2, a2, h, [m, new u.NumberValue(e2, v), s2]))) return e2.intrinsics.false;
        }
        v++;
      }
      return e2.intrinsics.true;
    }), t2.defineNativeMethod("fill", 1, function(t3, r3) {
      var i2 = n(r3, 3), a2 = i2[0], o2 = i2[1], s2 = i2[2], l2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(l2) && e2.isInPureScope() && void 0 === l2.$GetOwnProperty("fill")) {
        var c2 = [l2, new u.StringValue(e2, "fill"), a2];
        return o2 && c2.push(o2), s2 && c2.push(s2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, c2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")), l2;
      }
      for (var h = p.To.ToLength(e2, (0, f.Get)(e2, l2, "length")), v = p.To.ToInteger(e2, o2 || e2.intrinsics.undefined), y = v < 0 ? Math.max(h + v, 0) : Math.min(v, h), m = !s2 || s2 instanceof u.UndefinedValue ? h : p.To.ToInteger(e2, s2.throwIfNotConcrete()), b = m < 0 ? Math.max(h + m, 0) : Math.min(m, h); y < b; ) {
        var g = new u.StringValue(e2, y + "");
        p.Properties.Set(e2, l2, g, a2, true), y++;
      }
      return l2;
    }), t2.defineNativeMethod("filter", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("filter")) {
        var l2 = [s2, new u.StringValue(e2, "filter"), a2];
        return o2 && l2.push(o2), u.ArrayValue.createTemporalWithWidenedNumericProperty(e2, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var h = o2 || e2.intrinsics.undefined, v = p.Create.ArraySpeciesCreate(e2, s2.throwIfNotConcreteObject(), 0), y = 0, m = 0; y < c2; ) {
        var b = new u.StringValue(e2, y + "");
        if ((0, f.HasProperty)(e2, s2, b)) {
          var g = (0, f.Get)(e2, s2, b);
          p.To.ToBooleanPartial(e2, (0, f.Call)(e2, a2, h, [g, new u.NumberValue(e2, y), s2])) && (p.Create.CreateDataPropertyOrThrow(e2, v, p.To.ToString(e2, new u.NumberValue(e2, m)), g), m++);
        }
        y++;
      }
      return v;
    }), t2.defineNativeMethod("find", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("find")) {
        var l2 = [s2, new u.StringValue(e2, "find"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var h = o2 || e2.intrinsics.undefined, v = 0; v < c2; ) {
        var y = new u.StringValue(e2, v + ""), m = (0, f.Get)(e2, s2, y);
        if (p.To.ToBooleanPartial(e2, (0, f.Call)(e2, a2, h, [m, new u.NumberValue(e2, v), s2]))) return m;
        v++;
      }
      return e2.intrinsics.undefined;
    }), t2.defineNativeMethod("findIndex", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("findIndex")) {
        var l2 = [s2, new u.StringValue(e2, "findIndex"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.NumberValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (false === (0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var h = o2 || e2.intrinsics.undefined, v = 0; v < c2; ) {
        var y = p.To.ToString(e2, new u.NumberValue(e2, v)), m = (0, f.Get)(e2, s2, new u.StringValue(e2, y));
        if (true === p.To.ToBooleanPartial(e2, (0, f.Call)(e2, a2, h, [m, new u.NumberValue(e2, v), s2]))) return new u.NumberValue(e2, v);
        v += 1;
      }
      return new u.NumberValue(e2, -1);
    }), t2.defineNativeMethod("forEach", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("forEach")) {
        var l2 = [s2, new u.StringValue(e2, "forEach"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.BooleanValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")), e2.intrinsics.undefined;
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      for (var h = o2 || e2.intrinsics.undefined, v = 0; v < c2; ) {
        var y = new u.StringValue(e2, v + "");
        if ((0, f.HasProperty)(e2, s2, y)) {
          var m = (0, f.Get)(e2, s2, y);
          (0, f.Call)(e2, a2, h, [m, new u.NumberValue(e2, v), s2]);
        }
        v++;
      }
      return e2.intrinsics.undefined;
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("includes", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("includes")) {
        var l2 = [s2, new u.StringValue(e2, "includes"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.BooleanValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var h = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (0 === h) return e2.intrinsics.false;
      var v, y = p.To.ToInteger(e2, o2 || e2.intrinsics.undefined);
      for (y >= 0 ? v = y : (v = h + y) < 0 && (v = 0); v < h; ) {
        var m = (0, f.Get)(e2, s2, p.To.ToString(e2, new u.NumberValue(e2, v)));
        if (true === (0, c.SameValueZeroPartial)(e2, a2, m)) return e2.intrinsics.true;
        v += 1;
      }
      return e2.intrinsics.false;
    });
    t2.defineNativeMethod("indexOf", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("indexOf")) {
        var l2 = [s2, new u.StringValue(e2, "indexOf"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.NumberValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (0 === c2) return new u.NumberValue(e2, -1);
      var h, v = o2 ? p.To.ToInteger(e2, o2) : 0;
      if (v >= c2) return new u.NumberValue(e2, -1);
      for (v >= 0 ? h = Object.is(v, -0) ? 0 : v : (h = c2 + v) < 0 && (h = 0); h < c2; ) {
        var y = (0, f.HasProperty)(e2, s2, h + "");
        if (true === y) {
          var m = (0, f.Get)(e2, s2, h + ""), b = (0, f.StrictEqualityComparisonPartial)(e2, a2, m);
          if (b) return new u.NumberValue(e2, h);
        }
        h++;
      }
      return new u.NumberValue(e2, -1);
    }), t2.defineNativeMethod("join", 1, function(t3, r3) {
      var i2 = n(r3, 1), a2 = i2[0], o2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(o2) && e2.isInPureScope() && void 0 === o2.$GetOwnProperty("join")) {
        var s2 = [o2, new u.StringValue(e2, "join")];
        return a2 && s2.push(a2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.StringValue, s2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var l2 = p.To.ToLength(e2, (0, f.Get)(e2, o2, "length"));
      (!a2 || a2 instanceof u.UndefinedValue) && (a2 = new u.StringValue(e2, ","));
      var c2 = p.To.ToStringPartial(e2, a2);
      if (0 === l2) return e2.intrinsics.emptyString;
      var h, v = (0, f.Get)(e2, o2, "0");
      h = (0, f.HasSomeCompatibleType)(v, u.UndefinedValue, u.NullValue) ? "" : p.To.ToStringPartial(e2, v);
      for (var y = 1; y < l2; ) {
        var m = h + c2, b = (0, f.Get)(e2, o2, new u.StringValue(e2, y + "")), g = void 0;
        g = (0, f.HasSomeCompatibleType)(b, u.UndefinedValue, u.NullValue) ? "" : p.To.ToStringPartial(e2, b), h = m + g, y++;
      }
      return new u.StringValue(e2, h + "");
    }), t2.defineNativeMethod("keys", 0, function(t3) {
      var r3 = p.To.ToObject(e2, t3);
      return u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) && e2.isInPureScope() && void 0 === r3.$GetOwnProperty("keys") ? u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, [r3, new u.StringValue(e2, "keys")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")) : p.Create.CreateArrayIterator(e2, r3.throwIfNotConcreteObject(), "key");
    }), t2.defineNativeMethod("lastIndexOf", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("lastIndexOf")) {
        var l2 = [s2, new u.StringValue(e2, "lastIndexOf"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.NumberValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (0 === c2) return new u.NumberValue(e2, -1);
      var h, v = o2 ? p.To.ToInteger(e2, o2) : c2 - 1;
      for (h = v >= 0 ? Object.is(v, -0) ? 0 : Math.min(v, c2 - 1) : c2 + v; h >= 0; ) {
        var y = (0, f.HasProperty)(e2, s2, new u.StringValue(e2, h + ""));
        if (y) {
          var m = (0, f.Get)(e2, s2, new u.StringValue(e2, h + "")), b = (0, f.StrictEqualityComparisonPartial)(e2, a2, m);
          if (b) return new u.NumberValue(e2, h);
        }
        h--;
      }
      return new u.NumberValue(e2, -1);
    }), t2.defineNativeMethod("map", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("map")) {
        var c2 = [s2, new u.StringValue(e2, "map"), a2];
        o2 && c2.push(o2), (0, l.default)(a2 instanceof u.ECMAScriptSourceFunctionValue || a2 instanceof u.BoundFunctionValue);
        var h = [{ func: a2, thisValue: o2 || e2.intrinsics.undefined }];
        return u.ArrayValue.createTemporalWithWidenedNumericProperty(e2, c2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"), h);
      }
      var v = (0, f.Get)(e2, s2, "length");
      if (v instanceof u.AbstractValue && !v.mightNotBeNumber() && !v.values.isTop()) {
        var y = v.values.getElements(), m = y.size;
        if (m > 1 && m < 10) {
          var b = p.Create.ArraySpeciesCreate(e2, s2.throwIfNotConcreteObject(), 0);
          return p.Join.mapAndJoin(e2, y, function(t4) {
            return u.AbstractValue.createFromBinaryOp(e2, "===", t4, v, v.expressionLocation);
          }, function(e3) {
            return g(e3, b);
          });
        }
      }
      return g(v.throwIfNotConcrete());
      function g(t4, r4) {
        var n2 = p.To.ToLength(e2, t4);
        if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
        var i3, l2 = o2 || e2.intrinsics.undefined;
        void 0 === r4 ? i3 = p.Create.ArraySpeciesCreate(e2, s2.throwIfNotConcreteObject(), n2) : (i3 = r4, p.Properties.Set(e2, i3, "length", t4, true));
        for (var c3 = 0; c3 < n2; ) {
          var d2 = new u.StringValue(e2, c3 + ""), h2 = (0, f.HasProperty)(e2, s2, d2);
          if (h2) {
            var v2 = (0, f.Get)(e2, s2, d2), y2 = (0, f.Call)(e2, a2, l2, [v2, new u.NumberValue(e2, c3), s2]);
            p.Create.CreateDataPropertyOrThrow(e2, i3, d2, y2);
          }
          c3++;
        }
        return i3;
      }
    }), t2.defineNativeMethod("pop", 0, function(t3) {
      var r3 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) && e2.isInPureScope() && void 0 === r3.$GetOwnProperty("pop")) return u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, [r3, new u.StringValue(e2, "pop")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      var n2 = p.To.ToLength(e2, (0, f.Get)(e2, r3, "length"));
      if (0 === n2) return p.Properties.Set(e2, r3, "length", e2.intrinsics.zero, true), e2.intrinsics.undefined;
      var i2 = n2 - 1, a2 = new u.StringValue(e2, i2 + ""), o2 = (0, f.Get)(e2, r3, a2);
      return p.Properties.DeletePropertyOrThrow(e2, r3.throwIfNotConcreteObject(), a2), p.Properties.Set(e2, r3, "length", new u.NumberValue(e2, i2), true), o2;
    }), t2.defineNativeMethod("push", 1, function(t3, r3, n2) {
      var i2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(i2) && e2.isInPureScope() && void 0 === i2.$GetOwnProperty("push")) return u.AbstractValue.createTemporalFromBuildFunction(e2, u.NumberValue, [i2, new u.StringValue(e2, "push")].concat(o(r3)), (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      var a2 = p.To.ToLength(e2, (0, f.Get)(e2, i2, new u.StringValue(e2, "length"))), s2 = n2 > 0 ? r3 : [];
      if (a2 + n2 > Math.pow(2, 53) - 1) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      for (; s2.length; ) {
        var l2 = s2.shift();
        p.Properties.Set(e2, i2, new u.StringValue(e2, a2 + ""), l2, true), a2++;
      }
      return p.Properties.Set(e2, i2, new u.StringValue(e2, "length"), new u.NumberValue(e2, a2), true), new u.NumberValue(e2, a2);
    }), t2.defineNativeMethod("reduce", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("reduce")) {
        var c2 = [s2, new u.StringValue(e2, "reduce"), a2];
        return o2 && c2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, c2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var h = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      if (0 === h && !o2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      var v, y = 0;
      if (o2) v = o2;
      else {
        for (var m = false; false === m && y < h; ) {
          var b = new u.StringValue(e2, y + "");
          (m = (0, f.HasProperty)(e2, s2, b)) && (v = (0, f.Get)(e2, s2, b)), y++;
        }
        if (!m) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "kPresent is false");
        (0, l.default)(v);
      }
      for (; y < h; ) {
        var g = new u.StringValue(e2, y + ""), w = (0, f.HasProperty)(e2, s2, g);
        if (w) {
          var E = (0, f.Get)(e2, s2, g);
          v = (0, f.Call)(e2, a2, e2.intrinsics.undefined, [v, E, new u.NumberValue(e2, y), s2]);
        }
        y++;
      }
      return v;
    }), t2.defineNativeMethod("reduceRight", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("reduceRight")) {
        var l2 = [s2, new u.StringValue(e2, "reduceRight"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not a function");
      if (0 === c2 && !o2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      var h, v = c2 - 1;
      if (o2) h = o2;
      else {
        for (var y = false; !y && v >= 0; ) {
          var m = new u.StringValue(e2, v + "");
          (y = (0, f.HasProperty)(e2, s2, m)) && (h = (0, f.Get)(e2, s2, m)), v--;
        }
        if (!y || !h) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "Array.prototype");
      }
      for (; v >= 0; ) {
        var b = new u.StringValue(e2, v + ""), g = (0, f.HasProperty)(e2, s2, b);
        if (g) {
          var w = (0, f.Get)(e2, s2, b);
          h = (0, f.Call)(e2, a2, e2.intrinsics.undefined, [h, w, new u.NumberValue(e2, v), s2]);
        }
        v--;
      }
      return h;
    }), t2.defineNativeMethod("reverse", 0, function(t3) {
      var r3 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) && e2.isInPureScope() && void 0 === r3.$GetOwnProperty("reverse")) return u.AbstractValue.createTemporalFromBuildFunction(e2, u.ArrayValue, [r3, new u.StringValue(e2, "reverse")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")), r3;
      for (var n2 = p.To.ToLength(e2, (0, f.Get)(e2, r3, "length")), i2 = Math.floor(n2 / 2), a2 = 0; a2 !== i2; ) {
        var o2 = n2 - a2 - 1, s2 = new u.StringValue(e2, o2 + ""), c2 = new u.StringValue(e2, a2 + ""), h = (0, f.HasProperty)(e2, r3, c2), v = void 0;
        h && (v = (0, f.Get)(e2, r3, c2));
        var y = (0, f.HasProperty)(e2, r3, s2), m = void 0;
        y && (m = (0, f.Get)(e2, r3, s2)), h && y ? ((0, l.default)(v, "expected lower value to exist"), (0, l.default)(m, "expected upper value to exist"), p.Properties.Set(e2, r3, c2, m, true), p.Properties.Set(e2, r3, s2, v, true)) : !h && y ? ((0, l.default)(m, "expected upper value to exist"), p.Properties.Set(e2, r3, c2, m, true), p.Properties.DeletePropertyOrThrow(e2, r3.throwIfNotConcreteObject(), s2)) : h && !y && ((0, l.default)(v, "expected lower value to exist"), p.Properties.DeletePropertyOrThrow(e2, r3.throwIfNotConcreteObject(), c2), p.Properties.Set(e2, r3, s2, v, true)), a2++;
      }
      return r3;
    }), t2.defineNativeMethod("shift", 0, function(t3) {
      var r3 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) && e2.isInPureScope() && void 0 === r3.$GetOwnProperty("shift")) return u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, [r3, new u.StringValue(e2, "shift")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      var n2 = p.To.ToLength(e2, (0, f.Get)(e2, r3, "length"));
      if (0 === n2) return p.Properties.Set(e2, r3, "length", e2.intrinsics.zero, true), e2.intrinsics.undefined;
      for (var i2 = (0, f.Get)(e2, r3, "0"), a2 = 0; a2 < n2; ) {
        var o2 = new u.StringValue(e2, a2 + ""), s2 = new u.StringValue(e2, a2 - 1 + ""), l2 = (0, f.HasProperty)(e2, r3, o2);
        if (l2) {
          var c2 = (0, f.Get)(e2, r3, o2);
          p.Properties.Set(e2, r3, s2, c2, true);
        } else p.Properties.DeletePropertyOrThrow(e2, r3.throwIfNotConcreteObject(), s2);
        a2++;
      }
      return p.Properties.DeletePropertyOrThrow(e2, r3.throwIfNotConcreteObject(), new u.StringValue(e2, n2 - 1 + "")), p.Properties.Set(e2, r3, "length", new u.NumberValue(e2, n2 - 1), true), i2;
    }), t2.defineNativeMethod("slice", 2, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("slice")) {
        var l2 = [s2, new u.StringValue(e2, "slice"), a2, o2];
        return u.ArrayValue.createTemporalWithWidenedNumericProperty(e2, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      for (var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length")), h = p.To.ToInteger(e2, a2), v = h < 0 ? Math.max(c2 + h, 0) : Math.min(h, c2), y = !o2 || o2 instanceof u.UndefinedValue ? c2 : p.To.ToInteger(e2, o2.throwIfNotConcrete()), m = y < 0 ? Math.max(c2 + y, 0) : Math.min(y, c2), b = Math.max(m - v, 0), g = p.Create.ArraySpeciesCreate(e2, s2.throwIfNotConcreteObject(), b), w = 0; v < m; ) {
        var E = new u.StringValue(e2, v + ""), S = (0, f.HasProperty)(e2, s2, E);
        if (S) {
          var T = (0, f.Get)(e2, s2, E);
          p.Create.CreateDataPropertyOrThrow(e2, g, new u.StringValue(e2, w + ""), T);
        }
        v++, w++;
      }
      return p.Properties.Set(e2, g, "length", new u.NumberValue(e2, w), true), g;
    }), t2.defineNativeMethod("some", 1, function(t3, r3) {
      var i2 = n(r3, 2), a2 = i2[0], o2 = i2[1], s2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(s2) && e2.isInPureScope() && void 0 === s2.$GetOwnProperty("some")) {
        var l2 = [s2, new u.StringValue(e2, "some"), a2];
        return o2 && l2.push(o2), u.AbstractValue.createTemporalFromBuildFunction(e2, u.BooleanValue, l2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var c2 = p.To.ToLength(e2, (0, f.Get)(e2, s2, "length"));
      if (!(0, f.IsCallable)(e2, a2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "callback passed to Array.prototype.some isn't callable");
      for (var h = o2 || e2.intrinsics.undefined, v = 0; v < c2; ) {
        var y = new u.StringValue(e2, v + ""), m = (0, f.HasProperty)(e2, s2, y);
        if (m) {
          var b = (0, f.Get)(e2, s2, y), g = p.To.ToBooleanPartial(e2, (0, f.Call)(e2, a2, h, [b, new u.NumberValue(e2, v), s2]));
          if (g) return e2.intrinsics.true;
        }
        v++;
      }
      return e2.intrinsics.false;
    }), t2.defineNativeMethod("sort", 1, function(t3, r3) {
      var i2 = n(r3, 1), a2 = i2[0], o2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(o2) && e2.isInPureScope() && void 0 === o2.$GetOwnProperty("sort")) {
        var s2 = [o2, new u.StringValue(e2, "sort"), a2];
        return u.AbstractValue.createTemporalFromBuildFunction(e2, u.Value, s2, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL")), t3;
      }
      var h = p.To.ToLength(e2, (0, f.Get)(e2, o2, "length")), v = (function() {
        for (var e3 = 0; e3 < h; e3++) {
          var t4 = o2.$GetOwnProperty(e3.toString());
          if (void 0 === t4) return true;
          p.Properties.ThrowIfMightHaveBeenDeleted(t4);
        }
        return false;
      })(), y = o2.$GetPrototypeOf();
      if (!(y instanceof u.NullValue)) {
        for (var m = 0; m < h; m++) if ((0, f.HasProperty)(e2, y, m.toString()) && v) throw Error("Implentation defined behavior detected");
      }
      if (v) {
        if (!(0, f.IsExtensible)(e2, o2)) throw Error("Implementation defined behavior, Array is both sparse and extensible");
        for (var b = 0; b < h; b++) {
          var g = o2.$GetOwnProperty(b.toString());
          if (void 0 !== g && !g.throwIfNotConcrete(e2).configurable) throw p.Properties.ThrowIfMightHaveBeenDeleted(g), Error("Implementation defined behavior :  Array is sparse and it's prototype has some numbered properties");
        }
      }
      for (var w = 0; w < h; w++) {
        var E = o2.$GetOwnProperty(w.toString());
        if (void 0 !== E && !E.throwIfNotConcrete(e2).writable) throw p.Properties.ThrowIfMightHaveBeenDeleted(E), Error("Implementation defined behavior : property " + w.toString() + "is non writable : ");
      }
      for (var S = [], T = 0; T < h; T++) if ((0, f.HasOwnProperty)(e2, o2, T.toString())) {
        var A = o2.$Get(T.toString(), o2);
        S[T] = A;
      }
      S.sort(function(t4, r4) {
        (0, l.default)(t4 instanceof u.Value, "Unexpected type"), (0, l.default)(r4 instanceof u.Value, "Unexpected type");
        var n2 = (function(t5, r5) {
          if (t5 = t5.throwIfNotConcrete(), r5 = r5.throwIfNotConcrete(), t5 instanceof u.UndefinedValue && r5 instanceof u.UndefinedValue) return e2.intrinsics.zero;
          if (t5 instanceof u.UndefinedValue) return new u.NumberValue(e2, 1);
          if (r5 instanceof u.UndefinedValue) return new u.NumberValue(e2, -1);
          if (!a2.mightBeUndefined()) {
            var n3 = p.To.ToNumber(e2, (0, f.Call)(e2, a2, new u.UndefinedValue(e2), [t5, r5]));
            return isNaN(n3) ? new u.NumberValue(e2, 0) : new u.NumberValue(e2, n3);
          }
          a2.throwIfNotConcrete();
          var i3 = new u.StringValue(e2, p.To.ToString(e2, t5)), o3 = new u.StringValue(e2, p.To.ToString(e2, r5));
          return (0, c.AbstractRelationalComparison)(e2, i3, o3, true, "<").value ? new u.NumberValue(e2, -1) : (0, c.AbstractRelationalComparison)(e2, o3, i3, true, "<").value ? new u.NumberValue(e2, 1) : e2.intrinsics.zero;
        })(t4, r4);
        return p.To.ToNumber(e2, n2);
      });
      for (var C = 0; C < h; C++) if (S.hasOwnProperty(C.toString())) {
        var P = o2.$Set(C.toString(), S[C], o2);
        if (!P) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "[[Set]] returned false");
      } else (0, l.default)(v), p.Properties.DeletePropertyOrThrow(e2, o2.throwIfNotConcreteObject(), C.toString());
      return t3;
    }), t2.defineNativeMethod("splice", 2, function(t3, r3, n2) {
      var l2 = (function(e3) {
        return a(e3) || s(e3) || i();
      })(r3), c2 = l2[0], h = l2[1], v = l2.slice(2), y = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(y) && e2.isInPureScope() && void 0 === y.$GetOwnProperty("splice")) {
        var m = [y, new u.StringValue(e2, "splice"), c2];
        return h && m.push(h), v && v.length > 0 && m.push.apply(m, o(v)), u.AbstractValue.createTemporalFromBuildFunction(e2, u.ArrayValue, m, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      }
      var b, g, w = p.To.ToLength(e2, (0, f.Get)(e2, y, "length")), E = p.To.ToInteger(e2, c2), S = E < 0 ? Math.max(w + E, 0) : Math.min(E, w);
      if (0 === n2) b = 0, g = 0;
      else if (1 === n2) b = 0, g = w - S;
      else {
        b = n2 - 2;
        var T = p.To.ToInteger(e2, h);
        g = Math.min(Math.max(T, 0), w - S);
      }
      if (w + b - g > Math.pow(2, 53) - 1) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "the item count is too damn high");
      for (var A = p.Create.ArraySpeciesCreate(e2, y.throwIfNotConcreteObject(), g), C = 0; C < g; ) {
        var P = new u.StringValue(e2, S + C + ""), O = (0, f.HasProperty)(e2, y, P);
        if (O) {
          var x = (0, f.Get)(e2, y, P);
          p.Create.CreateDataPropertyOrThrow(e2, A, new u.StringValue(e2, C + ""), x);
        }
        C++;
      }
      p.Properties.Set(e2, A, "length", new u.NumberValue(e2, g), true);
      var _ = v.length;
      if (_ < g) {
        for (C = S; C < w - g; ) {
          var V = new u.StringValue(e2, C + g + ""), D = new u.StringValue(e2, C + _ + ""), N = (0, f.HasProperty)(e2, y, V);
          if (N) {
            var I = (0, f.Get)(e2, y, V);
            p.Properties.Set(e2, y, D, I, true);
          } else p.Properties.DeletePropertyOrThrow(e2, y.throwIfNotConcreteObject(), D);
          C++;
        }
        for (C = w; C > w - g + _; ) p.Properties.DeletePropertyOrThrow(e2, y.throwIfNotConcreteObject(), new u.StringValue(e2, C - 1 + "")), C--;
      } else if (_ > g) for (C = w - g; C > S; ) {
        var k = new u.StringValue(e2, C + g - 1 + ""), j = new u.StringValue(e2, C + _ - 1 + ""), F = (0, f.HasProperty)(e2, y, k);
        if (F) {
          var R = (0, f.Get)(e2, y, k);
          p.Properties.Set(e2, y, j, R, true);
        } else p.Properties.DeletePropertyOrThrow(e2, y.throwIfNotConcreteObject(), j);
        C--;
      }
      for (C = S; v.length; ) {
        var M = v.shift();
        p.Properties.Set(e2, y, new u.StringValue(e2, C + ""), M, true), C++;
      }
      return p.Properties.Set(e2, y, "length", new u.NumberValue(e2, w - g + _), true), A;
    }), t2.defineNativeMethod("toLocaleString", 0, function(t3) {
      var r3 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) && e2.isInPureScope() && void 0 === r3.$GetOwnProperty("toLocaleString")) return u.AbstractValue.createTemporalFromBuildFunction(e2, u.StringValue, [r3, new u.StringValue(e2, "toLocaleString")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      var n2 = p.To.ToLength(e2, (0, f.Get)(e2, r3, "length"));
      if (0 === n2) return e2.intrinsics.emptyString;
      var i2, a2 = (0, f.Get)(e2, r3, "0");
      i2 = (0, f.HasSomeCompatibleType)(a2, u.UndefinedValue, u.NullValue) ? "" : p.To.ToStringPartial(e2, (0, f.Invoke)(e2, a2, "toLocaleString"));
      for (var o2 = 1; o2 < n2; ) {
        var s2 = i2 + ",", l2 = (0, f.Get)(e2, r3, new u.StringValue(e2, o2 + "")).throwIfNotConcrete();
        i2 = (0, f.HasSomeCompatibleType)(l2, u.UndefinedValue, u.NullValue) ? "" : p.To.ToStringPartial(e2, (0, f.Invoke)(e2, l2, "toLocaleString")), i2 = s2 + i2, o2++;
      }
      return new u.StringValue(e2, i2);
    }), t2.defineNativeProperty("toString", e2.intrinsics.ArrayProto_toString), t2.defineNativeMethod("unshift", 1, function(t3, r3, n2) {
      var i2 = p.To.ToObject(e2, t3);
      if (u.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(i2) && e2.isInPureScope() && void 0 === i2.$GetOwnProperty("unshift")) return u.AbstractValue.createTemporalFromBuildFunction(e2, u.NumberValue, [i2, new u.StringValue(e2, "unshift")], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_PROPERTY_CALL"));
      var a2 = p.To.ToLength(e2, (0, f.Get)(e2, i2, "length"));
      if (n2 > 0) {
        if (a2 + n2 > Math.pow(2, 53) - 1) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "too damn high");
        for (var o2 = a2; o2 > 0; ) {
          var s2 = new u.StringValue(e2, o2 - 1 + ""), l2 = new u.StringValue(e2, o2 + n2 - 1 + ""), c2 = (0, f.HasProperty)(e2, i2, s2);
          if (c2) {
            var h = (0, f.Get)(e2, i2, s2);
            p.Properties.Set(e2, i2, l2, h, true);
          } else p.Properties.DeletePropertyOrThrow(e2, i2.throwIfNotConcreteObject(), l2);
          o2--;
        }
        for (var v = 0; r3.length; ) {
          var y = r3.shift();
          p.Properties.Set(e2, i2, new u.StringValue(e2, v + ""), y, true), v++;
        }
      }
      return p.Properties.Set(e2, i2, "length", new u.NumberValue(e2, a2 + n2), true), new u.NumberValue(e2, a2 + n2);
    }), t2.defineNativeProperty("values", e2.intrinsics.ArrayProto_values);
    var r2 = p.Create.ObjectCreate(e2, e2.intrinsics.null);
    p.Create.CreateDataProperty(e2, r2, "copyWithin", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "entries", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "fill", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "find", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "findIndex", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "includes", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "keys", e2.intrinsics.true), p.Create.CreateDataProperty(e2, r2, "values", e2.intrinsics.true), t2.defineNativeProperty(e2.intrinsics.SymbolUnscopables, r2, { writable: false });
  };
  var u = r(0), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(16), f = r(3), p = r(2), d = r(9);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return o(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || a();
  }
  function i(e2) {
    return o(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || a();
  }
  function a() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function o(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new u.NativeFunctionValue(e2, "Array", "Array", 1, function(r3, n2, a2, o2) {
      var s2 = i(n2), c2 = s2.slice(0);
      if (0 === a2) {
        var d2 = a2;
        (0, p.default)(0 === d2, "numberOfArgs = 0");
        var h = void 0 === o2 ? t2 : o2, v = (0, l.GetPrototypeFromConstructor)(e2, h, "ArrayPrototype");
        return f.Create.ArrayCreate(e2, 0, v);
      }
      if (1 === a2) {
        var y = a2;
        (0, p.default)(1 === y, "numberOfArgs = 1");
        var m, b = void 0 === o2 ? t2 : o2, g = (0, l.GetPrototypeFromConstructor)(e2, b, "ArrayPrototype"), w = f.Create.ArrayCreate(e2, 0, g), E = c2[0];
        if ((0, p.default)(void 0 !== E), E.mightBeNumber()) {
          if (m = f.To.ToUint32(e2, E.throwIfNotConcreteNumber()), (0, p.default)(E instanceof u.NumberValue), m !== E.value) throw e2.createErrorThrowCompletion(e2.intrinsics.RangeError, "intLen \u2260 len");
        } else {
          var S = f.Create.CreateDataProperty(e2, w, "0", E);
          (0, p.default)(S, "defineStatus is true"), m = 1;
        }
        return f.Properties.Set(e2, w, "length", new u.NumberValue(e2, m), true), w;
      }
      var T = a2;
      (0, p.default)(T >= 2, "numberOfArgs >= 2");
      for (var A = void 0 === o2 ? t2 : o2, C = (0, l.GetPrototypeFromConstructor)(e2, A, "ArrayPrototype"), P = f.Create.ArrayCreate(e2, T, C), O = 0; O < T; ) {
        var x = f.To.ToString(e2, new u.NumberValue(e2, O)), _ = c2[O];
        (0, p.default)(void 0 !== _);
        var V = f.Create.CreateDataProperty(e2, P, x, _);
        (0, p.default)(V, "defineStatus is true"), O += 1;
      }
      var D = (0, l.Get)(e2, P, "length").throwIfNotConcrete();
      return (0, p.default)(D instanceof u.NumberValue), (0, p.default)(D.value === T, "the value of array's length property is numberOfArgs"), P;
    });
    t2.defineNativeMethod("isArray", 1, function(t3, r3) {
      var i2 = n(r3, 1)[0];
      return new u.BooleanValue(e2, (0, l.IsArray)(e2, i2));
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("of", 0, function(t3, r3, n2) {
      var a2, o2 = i(r3), s2 = o2.slice(0), c2 = n2, d2 = t3;
      (0, l.IsConstructor)(e2, d2) ? ((0, p.default)(d2 instanceof u.ObjectValue), a2 = (0, l.Construct)(e2, d2, [new u.NumberValue(e2, c2)])) : a2 = f.Create.ArrayCreate(e2, c2);
      for (var h = 0; h < c2; ) {
        var v = s2[h], y = f.To.ToString(e2, new u.NumberValue(e2, h));
        f.Create.CreateDataPropertyOrThrow(e2, a2, y, v), h += 1;
      }
      return f.Properties.Set(e2, a2, "length", new u.NumberValue(e2, c2), true), a2;
    });
    if (!e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) && !e2.isCompatibleWith("mobile")) var r2 = t2.defineNativeMethod("from", 1, function(t3, i2, a2) {
      var o2, h, v = n(i2, 3), y = v[0], m = v[1], b = v[2], g = t3;
      if (!m || m instanceof u.UndefinedValue) o2 = false;
      else if (m.mightBeUndefined()) (0, p.default)(m instanceof u.AbstractValue), m.throwIfNotConcrete();
      else {
        if (false === (0, l.IsCallable)(e2, m)) throw m.throwIfNotConcrete(), e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "IsCallable(mapfn) is false");
        h = void 0 !== b ? b : e2.intrinsics.undefined, o2 = true;
      }
      if (e2.isInPureScope() && y instanceof u.AbstractValue && y.values.isTop()) {
        var w, E = [r2, y];
        return m && (E.push(m), b && E.push(b), w = [{ func: m, thisValue: b || e2.intrinsics.undefined }]), f.Leak.value(e2, y), u.ArrayValue.createTemporalWithWidenedNumericProperty(e2, E, (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"), w);
      }
      var S = (0, l.GetMethod)(e2, y, e2.intrinsics.SymbolIterator);
      if (S.mightBeUndefined()) S.throwIfNotConcrete();
      else {
        var T;
        (0, l.IsConstructor)(e2, g) ? ((0, p.default)(g instanceof u.ObjectValue), T = (0, l.Construct)(e2, g)) : T = f.Create.ArrayCreate(e2, 0);
        for (var A = (0, c.GetIterator)(e2, y, S), C = 0; ; ) {
          if (C >= Math.pow(2, 53) - 1) {
            var P = e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "k >= 2^53 - 1");
            throw (0, c.IteratorClose)(e2, A, P);
          }
          var O = f.To.ToString(e2, new u.NumberValue(e2, C)), x = (0, c.IteratorStep)(e2, A);
          if (false === x) return f.Properties.Set(e2, T, "length", new u.NumberValue(e2, C), true), T;
          var _ = (0, c.IteratorValue)(e2, x), V = void 0;
          if (true === o2) try {
            (0, p.default)(void 0 !== h), V = (0, l.Call)(e2, m, h, [_, new u.NumberValue(e2, C)]);
          } catch (t4) {
            throw t4 instanceof s.AbruptCompletion ? (0, c.IteratorClose)(e2, A, t4) : t4;
          }
          else V = _;
          try {
            f.Create.CreateDataPropertyOrThrow(e2, T, O, V);
          } catch (t4) {
            throw t4 instanceof s.AbruptCompletion ? (0, c.IteratorClose)(e2, A, t4) : t4;
          }
          C += 1;
        }
      }
      y = y.throwIfNotConcrete(), (0, p.default)(y instanceof u.ObjectValue);
      var D, N = f.To.ToObject(e2, y), I = f.To.ToLength(e2, (0, l.Get)(e2, N, "length"));
      (0, l.IsConstructor)(e2, g) ? ((0, p.default)(g instanceof u.ObjectValue), D = (0, l.Construct)(e2, g, [new u.NumberValue(e2, I)])) : D = f.Create.ArrayCreate(e2, I);
      for (var k = 0; k < I; ) {
        var j = f.To.ToString(e2, new u.NumberValue(e2, k)), F = (0, l.Get)(e2, N, j), R = void 0;
        true === o2 ? ((0, p.default)(void 0 !== h), R = (0, l.Call)(e2, m, h, [F, new u.NumberValue(e2, k)])) : R = F, f.Create.CreateDataPropertyOrThrow(e2, D, new u.StringValue(e2, j), R), k += 1;
      }
      return f.Properties.Set(e2, D, "length", new u.NumberValue(e2, I), true), D;
    });
    return t2.defineNativeGetter(e2.intrinsics.SymbolSpecies, function(e3) {
      return e3;
    }), t2;
  };
  var s = r(7), u = r(0), l = r(3), c = r(43), f = r(2), p = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), d = r(9);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeMethod("next", 1, function(t3, r2) {
      var i2 = n(r2, 1), a2 = i2[0], s = t3;
      return (0, o.GeneratorResume)(e2, s, a2);
    }), t2.defineNativeMethod("return", 1, function(t3, r2) {
      var a2 = n(r2, 1), s = a2[0], u = t3, l = new i.ReturnCompletion(s, e2.currentLocation);
      return (0, o.GeneratorResumeAbrupt)(e2, u, l);
    }), t2.defineNativeMethod("throw", 1, function(t3, r2) {
      var a2 = n(r2, 1), s = a2[0], u = t3, l = new i.ReturnCompletion(s, e2.currentLocation);
      return (0, o.GeneratorResumeAbrupt)(e2, u, l);
    }), t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new a.StringValue(e2, "Generator"), { writable: false });
  };
  var i = r(7), a = r(0), o = r(185);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new n.NativeFunctionValue(e2, "GeneratorFunction", "GeneratorFunction", 1, function(r2, n2, a, o) {
      var s = n2, u = t2;
      return s = a > 0 ? s : [], i.Create.CreateDynamicFunction(e2, u, o, "generator", s);
    });
    return t2;
  };
  var n = r(0), i = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty(e2.intrinsics.SymbolToStringTag, new n.StringValue(e2, "GeneratorFunction"), { writable: false });
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return o(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || a();
  }
  function i(e2) {
    return o(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || a();
  }
  function a() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function o(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    function r2(t3, r3, n2, i2, o2) {
      return e2.evaluateWithAbstractConditional(n2, function() {
        return e2.evaluateForEffects(function() {
          return a2(t3, r3, i2);
        }, null, "conditionalFunctionApply consequent");
      }, function() {
        return e2.evaluateForEffects(function() {
          return a2(t3, r3, o2);
        }, null, "conditionalFunctionApply alternate");
      });
    }
    function a2(t3, i2, a3) {
      if (false === (0, f.IsCallable)(e2, t3)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not callable");
      if ((0, p.HasSomeCompatibleType)(a3, u.NullValue, u.UndefinedValue)) return (0, l.Call)(e2, t3, i2);
      if (a3 instanceof u.AbstractValue) {
        if ("conditional" === a3.kind) {
          var o2 = n(a3.args, 3), c2 = o2[0], d2 = o2[1], v2 = o2[2];
          return (0, h.default)(c2 instanceof u.AbstractValue), r2(t3, i2, c2, d2, v2);
        }
        if ("||" === a3.kind) {
          var y = n(a3.args, 2), m = y[0], b = y[1];
          return (0, h.default)(m instanceof u.AbstractValue), r2(t3, i2, m, m, b);
        }
        if ("&&" === a3.kind) {
          var g = n(a3.args, 2), w = g[0], E = g[1];
          return (0, h.default)(w instanceof u.AbstractValue), r2(t3, i2, w, E, w);
        }
      }
      var S = s.Create.CreateListFromArrayLike(e2, a3);
      return (0, l.Call)(e2, t3, i2, S);
    }
    t2.$Call = function(t3, r3) {
      return e2.intrinsics.undefined;
    }, t2.defineNativeProperty("length", e2.intrinsics.zero, { writable: false }), t2.defineNativeProperty("name", e2.intrinsics.emptyString, { writable: false }), t2.defineNativeMethod("call", 1, function(t3, r3) {
      var n2 = i(r3), a3 = n2[0], o2 = n2.slice(1);
      if (false === (0, f.IsCallable)(e2, t3)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "not callable");
      return (0, l.Call)(e2, t3, a3, o2);
    }), t2.defineNativeMethod("apply", 2, function(e3, t3) {
      var r3 = n(t3, 2), i2 = r3[0], o2 = r3[1];
      return a2(e3, i2, o2);
    }), t2.defineNativeMethod("bind", 1, function(t3, r3) {
      var n2 = i(r3), a3 = n2[0], o2 = n2.slice(1), l2 = t3;
      if (false === (0, f.IsCallable)(e2, l2)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      (0, h.default)(l2 instanceof u.ObjectValue);
      var d2, y = s.Functions.BoundFunctionCreate(e2, l2, a3, o2), m = (0, p.HasOwnProperty)(e2, l2, new u.StringValue(e2, "length"));
      if (true === m) {
        var b = (0, c.Get)(e2, l2, new u.StringValue(e2, "length"));
        b.mightBeNumber() ? (b = b.throwIfNotConcreteNumber(), b = s.To.ToInteger(e2, b), d2 = Math.max(0, b - o2.length)) : d2 = 0;
      } else d2 = 0;
      s.Properties.DefinePropertyOrThrow(e2, y, "length", new v.PropertyDescriptor({ value: new u.NumberValue(e2, d2), writable: false, enumerable: false, configurable: true }));
      var g = (0, c.Get)(e2, l2, new u.StringValue(e2, "name"));
      return g instanceof u.StringValue || (g = e2.intrinsics.emptyString), s.Functions.SetFunctionName(e2, y, g, "bound"), y;
    }), t2.defineNativeMethod(e2.intrinsics.SymbolHasInstance, 1, function(t3, r3) {
      var i2 = n(r3, 1), a3 = i2[0], o2 = t3;
      return new u.BooleanValue(e2, (0, d.OrdinaryHasInstance)(e2, o2, a3));
    }, { writable: false, configurable: false }), t2.defineNativeMethod("toString", 0, function(t3) {
      var r3 = t3.throwIfNotConcrete();
      if (r3 instanceof u.NativeFunctionValue) {
        var n2 = r3.name;
        return n2 instanceof u.AbstractValue ? new u.StringValue(e2, "function () {[native code]}") : ((0, h.default)("string" == typeof n2), new u.StringValue(e2, "function ".concat(n2, "() { [native code] }")));
      }
      if (r3 instanceof u.FunctionValue) return new u.StringValue(e2, "function () { }");
      throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, new u.StringValue(e2, "Function.prototype.toString is not generic"));
    });
  };
  var s = r(2), u = r(0), l = r(15), c = r(13), f = r(11), p = r(20), d = r(16), h = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), v = r(6);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new n.NativeFunctionValue(e2, "Function", "Function", 1, function(r2, n2, a, o) {
      var s = n2, u = t2;
      return s = a > 0 ? s : [], i.Create.CreateDynamicFunction(e2, u, o, "normal", s);
    });
    return t2;
  };
  var n = r(0), i = r(2);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "EvalError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("EvalError", e2);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "URIError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("URIError", e2);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "SyntaxError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("SyntaxError", e2);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "ReferenceError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("ReferenceError", e2);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "RangeError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("RangeError", e2);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    t2.defineNativeProperty("name", new n.StringValue(e2, "TypeError")), t2.defineNativeProperty("message", e2.intrinsics.emptyString);
  };
  var n = r(0);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.build)("TypeError", e2);
  };
  var n = r(26);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    return o("Error", e2, t2);
  }, t.build = o;
  var n = r(0), i = r(3), a = r(2);
  function o(e2, t2, r2) {
    r2.defineNativeProperty("message", t2.intrinsics.emptyString), r2.defineNativeProperty("name", new n.StringValue(t2, e2)), r2.defineNativeMethod("toString", 0, function(e3) {
      var r3 = e3.throwIfNotConcrete();
      if (!(r3 instanceof n.ObjectValue)) throw t2.createErrorThrowCompletion(t2.intrinsics.TypeError);
      var o2 = (0, i.Get)(t2, r3, "name"), s = o2 instanceof n.UndefinedValue ? "Error" : a.To.ToStringPartial(t2, o2), u = (0, i.Get)(t2, r3, "message");
      return u = u instanceof n.UndefinedValue ? "" : a.To.ToStringPartial(t2, u), "" === s ? new n.StringValue(t2, u) : "" === u ? new n.StringValue(t2, s) : new n.StringValue(t2, "".concat(s, ": ").concat(u));
    });
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    var r2 = t2.defineNativeMethod("hasOwnProperty", 1, function(t3, a2) {
      var s2 = n(a2, 1), c2 = s2[0], d2 = u.To.ToPropertyKey(e2, c2.throwIfNotConcrete());
      try {
        var h = u.To.ToObject(e2, t3);
        return new i.BooleanValue(e2, (0, o.HasOwnProperty)(e2, h, d2));
      } catch (n2) {
        if (e2.isInPureScope() && n2 instanceof l.FatalError) {
          var v = "string" == typeof d2 ? new i.StringValue(e2, d2) : d2;
          return e2.evaluateWithPossibleThrowCompletion(function() {
            return i.AbstractValue.createTemporalFromBuildFunction(e2, i.BooleanValue, [r2, t3, v], (0, p.createOperationDescriptor)("OBJECT_PROTO_HAS_OWN_PROPERTY"));
          }, f.TypesDomain.topVal, f.ValuesDomain.topVal);
        }
        throw n2;
      }
    });
    t2.defineNativeMethod("isPrototypeOf", 1, function(t3, r3) {
      var o2 = n(r3, 1), s2 = o2[0];
      if (!s2.mightBeObject()) return e2.intrinsics.false;
      s2 = s2.throwIfNotConcreteObject();
      for (var l2 = u.To.ToObject(e2, t3); ; ) {
        if ((s2 = s2.$GetPrototypeOf()) instanceof i.NullValue) return e2.intrinsics.false;
        if (true === (0, a.SameValuePartial)(e2, l2, s2)) return e2.intrinsics.true;
      }
      (0, c.default)(false);
    }), t2.defineNativeMethod("propertyIsEnumerable", 1, function(t3, r3) {
      var a2 = n(r3, 1), o2 = a2[0], s2 = u.To.ToPropertyKey(e2, o2.throwIfNotConcrete()), l2 = u.To.ToObject(e2, t3), c2 = l2.$GetOwnProperty(s2);
      return c2 ? (u.Properties.ThrowIfMightHaveBeenDeleted(c2), void 0 === (c2 = c2.throwIfNotConcrete(e2)).enumerable ? e2.intrinsics.undefined : new i.BooleanValue(e2, c2.enumerable)) : e2.intrinsics.false;
    }), t2.defineNativeMethod("toLocaleString", 0, function(t3) {
      var r3 = t3;
      return (0, s.Invoke)(e2, r3, "toString");
    }), t2.defineNativeProperty("toString", e2.intrinsics.ObjectProto_toString), t2.defineNativeMethod("valueOf", 0, function(t3) {
      return u.To.ToObject(e2, t3);
    }), t2.$DefineOwnProperty("__proto__", new d.PropertyDescriptor({ get: new i.NativeFunctionValue(e2, void 0, "get __proto__", 0, function(t3) {
      var r3 = u.To.ToObject(e2, t3);
      return r3.$GetPrototypeOf();
    }), set: new i.NativeFunctionValue(e2, void 0, "set __proto__", 1, function(t3, r3) {
      var s2 = n(r3, 1), u2 = s2[0], l2 = (0, a.RequireObjectCoercible)(e2, t3);
      if (!(0, o.HasSomeCompatibleType)(u2, i.ObjectValue, i.NullValue)) return e2.intrinsics.undefined;
      if (!l2.mightBeObject()) return e2.intrinsics.undefined;
      var c2 = (l2 = l2.throwIfNotConcreteObject()).$SetPrototypeOf(u2.throwIfNotConcrete());
      if (!c2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError, "couldn't set proto");
      return e2.intrinsics.undefined;
    }) }));
  };
  var i = r(0), a = r(16), o = r(20), s = r(15), u = r(2), l = r(4), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), f = r(12), p = r(9), d = r(6);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || i(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2) {
    if (Symbol.iterator in Object(e2) || "[object Arguments]" === Object.prototype.toString.call(e2)) return Array.from(e2);
  }
  function a(e2, t2) {
    return s(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || o();
  }
  function o() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function s(e2) {
    if (Array.isArray(e2)) return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = new c.NativeFunctionValue(e2, "Object", "Object", 1, function(r3, n2, i2, o2) {
      var s2 = a(n2, 1), u2 = s2[0];
      return o2 && o2 !== t2 ? p.Create.OrdinaryCreateFromConstructor(e2, o2, "ObjectPrototype") : (0, f.HasSomeCompatibleType)(u2, c.NullValue, c.UndefinedValue) ? p.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype) : p.To.ToObject(e2, u2);
    });
    function r2(t3, r3, i2, a2, o2, s2) {
      var u2 = false, l2 = function(t4, r4) {
        return e2.evaluateForEffects(function() {
          var i3 = a2 instanceof c.ObjectValue && void 0 !== a2.temporalAlias;
          return y2(a2, n(o2).concat([t4], n(s2))), a2 instanceof c.ObjectValue && (r4 && void 0 === a2.temporalAlias && u2 ? p.Materialize.materializeObject(e2, a2) : i3 || void 0 === a2.temporalAlias || u2 || (u2 = true)), e2.intrinsics.undefined;
        }, null, "performConditionalObjectAssign consequent");
      };
      l2(r3, false), l2(i2, false), e2.evaluateWithAbstractConditional(t3, function() {
        return l2(r3, true);
      }, function() {
        return l2(i2, true);
      });
    }
    function y2(t3, n2) {
      var i2 = p.To.ToObject(e2, t3), o2 = false;
      if (!n2.length) return i2;
      for (var s2 = 0; s2 < n2.length; s2++) {
        var f2 = n2[s2];
        if (f2 instanceof c.AbstractValue) {
          if ("conditional" === f2.kind) {
            var d2 = a(f2.args, 3), v2 = d2[0], y3 = d2[1], g2 = d2[2];
            (0, h.default)(v2 instanceof c.AbstractValue);
            var w2 = n2.slice(0, s2), E2 = n2.slice(s2 + 1);
            return r2(v2, y3, g2, i2, w2, E2), i2;
          }
          if ("||" === f2.kind) {
            var S2 = a(f2.args, 2), T = S2[0], A = S2[1];
            (0, h.default)(T instanceof c.AbstractValue);
            var C = n2.slice(0, s2), P = n2.slice(s2 + 1);
            return r2(T, T, A, i2, C, P), i2;
          }
          if ("&&" === f2.kind) {
            var O = a(f2.args, 2), x = O[0], _ = O[1];
            (0, h.default)(x instanceof c.AbstractValue);
            var V = n2.slice(0, s2), D = n2.slice(s2 + 1);
            return r2(x, _, x, i2, V, D), i2;
          }
        }
      }
      var N = [], I = true, k = false, j = void 0;
      try {
        for (var F, R = function() {
          var t4 = F.value;
          e2.isInPureScope() && !e2.instantRender.enabled ? e2.evaluateWithPossibleThrowCompletion(function() {
            return o2 = (function(e3, t5, r3, n3, i3) {
              var a2;
              (0, h.default)(!e3.instantRender.enabled);
              var o3 = e3.suppressDiagnostics;
              try {
                e3.suppressDiagnostics = true, a2 = e3.evaluateForEffects(function() {
                  return i3 = b(e3, t5, r3, n3, i3), e3.intrinsics.undefined;
                }, void 0, "tryAndApplySourceOrRecover");
              } catch (a3) {
                (0, h.default)(t5 !== e3.intrinsics.null && t5 !== e3.intrinsics.undefined);
                var s3 = p.To.ToObject(e3, t5);
                if (a3 instanceof l.FatalError && r3.isSimpleObject()) {
                  i3 = true;
                  var u2 = s3.isPartialObject(), c2 = m(r3, s3, u2, n3);
                  return c2 || n3.push(s3), p.Leak.value(e3, s3), i3;
                }
                throw a3;
              } finally {
                e3.suppressDiagnostics = o3;
              }
              return e3.applyEffects(a2), e3.returnOrThrowCompletion(a2.result), i3;
            })(e2, t4, i2, N, o2), e2.intrinsics.undefined;
          }, u.TypesDomain.topVal, u.ValuesDomain.topVal) : o2 = b(e2, t4, i2, N, o2);
        }, M = n2[Symbol.iterator](); !(I = (F = M.next()).done); I = true) R();
      } catch (e3) {
        k = true, j = e3;
      } finally {
        try {
          I || null == M.return || M.return();
        } finally {
          if (k) throw j;
        }
      }
      if (o2) {
        if (i2.hasStringOrSymbolProperties()) {
          var B = i2.getSnapshot();
          N.push(B);
        }
        i2.makePartial(), i2.makeSimple(), c.AbstractValue.createTemporalObjectAssign(e2, i2, N);
      }
      return i2;
    }
    e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || t2.defineNativeMethod("assign", 2, function(e3, t3) {
      var r3 = (function(e4) {
        return s(e4) || i(e4) || o();
      })(t3), n2 = r3[0], a2 = r3.slice(1);
      return y2(n2, a2);
    });
    t2.defineNativeMethod("create", 2, function(t3, r3) {
      var n2 = a(r3, 2), i2 = n2[0], o2 = n2[1];
      if (!(0, f.HasSomeCompatibleType)(i2, c.ObjectValue, c.NullValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      var s2 = p.Create.ObjectCreate(e2, i2.throwIfNotConcrete());
      return o2.mightBeUndefined() ? (o2.throwIfNotConcrete(), s2) : p.Properties.ObjectDefineProperties(e2, s2, o2);
    }), t2.defineNativeMethod("defineProperties", 2, function(t3, r3) {
      var n2 = a(r3, 2), i2 = n2[0], o2 = n2[1];
      return p.Properties.ObjectDefineProperties(e2, i2, o2);
    }), t2.defineNativeMethod("defineProperty", 3, function(t3, r3) {
      var n2 = a(r3, 3), i2 = n2[0], o2 = n2[1], s2 = n2[2];
      if (!i2.mightBeObject()) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      i2 = i2.throwIfNotObject();
      var u2 = p.To.ToPropertyKey(e2, o2.throwIfNotConcrete()), l2 = p.To.ToPropertyDescriptor(e2, s2);
      return p.Properties.DefinePropertyOrThrow(e2, i2, u2, l2), i2;
    }), t2.defineNativeMethod("freeze", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0];
      if (!i2.mightBeObject()) return i2;
      i2 = i2.throwIfNotConcreteObject();
      var o2 = (0, f.SetIntegrityLevel)(e2, i2, "frozen");
      if (false === o2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return i2;
    });
    var g = t2.defineNativeMethod("getOwnPropertyDescriptor", 2, function(t3, r3) {
      var n2 = a(r3, 2), i2 = n2[0], o2 = n2[1], s2 = p.To.ToObject(e2, i2), u2 = p.To.ToPropertyKey(e2, o2.throwIfNotConcrete()), l2 = s2.$GetOwnProperty(u2);
      if (l2 instanceof v.PropertyDescriptor) {
        var y3 = l2.get;
        if (y3 instanceof c.NativeFunctionValue && void 0 === y3.intrinsicName && e2.useAbstractInterpretation) {
          (0, h.default)(o2 instanceof c.Value);
          var m2 = c.AbstractValue.createTemporalFromBuildFunction(e2, c.ObjectValue, [g, s2, o2], (0, d.createOperationDescriptor)("OBJECT_PROTO_GET_OWN_PROPERTY_DESCRIPTOR"));
          (0, h.default)(m2 instanceof c.AbstractObjectValue), m2.makeSimple();
          var b2 = (0, f.Get)(e2, m2, "get"), w2 = (0, f.Get)(e2, m2, "set");
          (0, h.default)(b2 instanceof c.AbstractValue), (0, h.default)(w2 instanceof c.AbstractValue), l2 = new v.PropertyDescriptor({ get: b2, set: w2, enumerable: false, configurable: true });
        }
      }
      var E2 = p.Properties.FromPropertyDescriptor(e2, l2);
      return E2;
    });
    t2.defineNativeMethod("getOwnPropertyNames", 1, function(t3, r3) {
      var n2 = a(r3, 1)[0];
      return (0, f.GetOwnPropertyKeys)(e2, n2, c.StringValue);
    }), t2.defineNativeMethod("getOwnPropertyDescriptors", 1, function(t3, r3) {
      var n2 = a(r3, 1)[0], i2 = p.To.ToObject(e2, n2), o2 = i2.$OwnPropertyKeys(), s2 = p.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype), u2 = true, l2 = false, f2 = void 0;
      try {
        for (var d2, h2 = o2[Symbol.iterator](); !(u2 = (d2 = h2.next()).done); u2 = true) {
          var v2 = d2.value, y3 = i2.$GetOwnProperty(v2);
          void 0 !== y3 && p.Properties.ThrowIfMightHaveBeenDeleted(y3);
          var m2 = p.Properties.FromPropertyDescriptor(e2, y3);
          m2 instanceof c.UndefinedValue || p.Create.CreateDataProperty(e2, s2, v2, m2);
        }
      } catch (e3) {
        l2 = true, f2 = e3;
      } finally {
        try {
          u2 || null == h2.return || h2.return();
        } finally {
          if (l2) throw f2;
        }
      }
      return s2;
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("getOwnPropertySymbols", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0];
      return (0, f.GetOwnPropertyKeys)(e2, i2, c.SymbolValue);
    });
    t2.defineNativeMethod("getPrototypeOf", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0], o2 = p.To.ToObject(e2, i2);
      return o2.$GetPrototypeOf();
    }), t2.defineNativeMethod("is", 2, function(t3, r3) {
      var n2 = a(r3, 2), i2 = n2[0], o2 = n2[1];
      return new c.BooleanValue(e2, (0, f.SameValuePartial)(e2, i2, o2));
    }), t2.defineNativeMethod("isExtensible", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0];
      return i2.mightBeObject() ? (i2 = i2.throwIfNotObject(), new c.BooleanValue(e2, (0, f.IsExtensible)(e2, i2))) : e2.intrinsics.false;
    }), t2.defineNativeMethod("isFrozen", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0];
      return i2.mightBeObject() ? (i2 = i2.throwIfNotConcreteObject(), new c.BooleanValue(e2, (0, f.TestIntegrityLevel)(e2, i2, "frozen"))) : e2.intrinsics.true;
    }), t2.defineNativeMethod("isSealed", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0];
      return i2.mightBeObject() ? (i2 = i2.throwIfNotConcreteObject(), new c.BooleanValue(e2, (0, f.TestIntegrityLevel)(e2, i2, "sealed"))) : e2.intrinsics.true;
    });
    var w = t2.defineNativeMethod("keys", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0], o2 = p.To.ToObject(e2, i2);
      if (e2.isInPureScope() && o2 instanceof c.AbstractObjectValue) {
        var s2 = c.ArrayValue.createTemporalWithWidenedNumericProperty(e2, [w, o2], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
        return s2;
      }
      if (c.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(o2)) return c.ArrayValue.createTemporalWithWidenedNumericProperty(e2, [w, o2], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
      var u2 = (0, f.EnumerableOwnProperties)(e2, o2.throwIfNotConcreteObject(), "key");
      return p.Create.CreateArrayFromList(e2, u2);
    });
    if (!e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) && !e2.isCompatibleWith("mobile")) var E = t2.defineNativeMethod("values", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0], o2 = p.To.ToObject(e2, i2);
      if (e2.isInPureScope()) {
        if (o2 instanceof c.AbstractObjectValue) {
          var s2 = c.ArrayValue.createTemporalWithWidenedNumericProperty(e2, [E, o2], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
          return s2;
        }
        if (c.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(o2)) return c.ArrayValue.createTemporalWithWidenedNumericProperty(e2, [E, o2], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
      }
      var u2 = (0, f.EnumerableOwnProperties)(e2, o2.throwIfNotConcreteObject(), "value");
      return p.Create.CreateArrayFromList(e2, u2);
    });
    if (!e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) && !e2.isCompatibleWith("mobile")) var S = t2.defineNativeMethod("entries", 1, function(t3, r3) {
      var n2 = a(r3, 1), i2 = n2[0], o2 = p.To.ToObject(e2, i2);
      if (e2.isInPureScope() && o2 instanceof c.AbstractObjectValue) {
        var s2 = c.ArrayValue.createTemporalWithWidenedNumericProperty(e2, [S, o2], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
        return s2;
      }
      if (c.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(o2)) return c.ArrayValue.createTemporalWithWidenedNumericProperty(e2, [S, o2], (0, d.createOperationDescriptor)("UNKNOWN_ARRAY_METHOD_CALL"));
      var u2 = (0, f.EnumerableOwnProperties)(e2, o2.throwIfNotConcreteObject(), "key+value");
      return p.Create.CreateArrayFromList(e2, u2);
    });
    t2.defineNativeMethod("preventExtensions", 1, function(t3, r3) {
      var n2 = a(r3, 1)[0];
      if (!n2.mightBeObject()) return n2;
      if (false === (n2 = n2.throwIfNotConcreteObject()).$PreventExtensions()) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return n2;
    }), t2.defineNativeMethod("seal", 1, function(t3, r3) {
      var n2 = a(r3, 1)[0];
      if (!n2.mightBeObject()) return n2;
      if (n2 = n2.throwIfNotConcreteObject(), false === (0, f.SetIntegrityLevel)(e2, n2, "sealed")) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return n2;
    }), e2.isCompatibleWith(e2.MOBILE_JSC_VERSION) || e2.isCompatibleWith("mobile") || t2.defineNativeMethod("setPrototypeOf", 2, function(t3, r3) {
      var n2 = a(r3, 2), i2 = n2[0], o2 = n2[1];
      if (i2 = (0, f.RequireObjectCoercible)(e2, i2), !(0, f.HasSomeCompatibleType)(o2, c.ObjectValue, c.NullValue)) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      if (!((i2 = i2.throwIfNotConcrete()) instanceof c.ObjectValue)) return i2;
      var s2 = i2.$SetPrototypeOf(o2);
      if (false === s2) throw e2.createErrorThrowCompletion(e2.intrinsics.TypeError);
      return i2;
    });
    return t2;
  };
  var u = r(12), l = r(4), c = (r(8), r(0)), f = r(3), p = r(2), d = r(9), h = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), v = r(6);
  function y(e2, t2) {
    e2.hasStringOrSymbolProperties() && t2.push(e2.getSnapshot({ removeProperties: true }));
  }
  function m(e2, t2, r2, n2) {
    if (e2 instanceof c.AbstractObjectValue && e2.values.isTop()) throw c.AbstractValue.reportIntrospectionError(e2), new l.FatalError();
    if (t2 instanceof c.ObjectValue && t2.mightBeLeakedObject()) y(e2, n2), n2.push(t2);
    else {
      if (!r2) return false;
      if (y(e2, n2), t2 instanceof c.AbstractObjectValue && "explicit conversion to object" === t2.kind) n2.push(t2.args[0]);
      else {
        var i2 = t2.getSnapshot();
        t2.temporalAlias = i2, t2.makePartial(), n2.push(i2);
      }
    }
    return true;
  }
  function b(e2, t2, r2, n2, i2) {
    var a2, o2;
    if ((0, f.HasSomeCompatibleType)(t2, c.NullValue, c.UndefinedValue)) return i2;
    var s2 = (o2 = p.To.ToObject(e2, t2)).isPartialObject();
    if (s2) {
      if (!r2.isSimpleObject() || !o2.isSimpleObject()) throw c.AbstractValue.reportIntrospectionError(t2), new l.FatalError();
      i2 = true;
    }
    return a2 = o2.$OwnPropertyKeys(true), i2 && m(r2, o2, s2, n2), (0, h.default)(o2, "from required"), (0, h.default)(a2, "keys required"), (function(e3, t3, r3, n3) {
      var i3 = true, a3 = false, o3 = void 0;
      try {
        for (var s3, u2 = t3[Symbol.iterator](); !(i3 = (s3 = u2.next()).done); i3 = true) {
          var l2 = s3.value, c2 = r3.$GetOwnProperty(l2);
          if (c2 && c2.throwIfNotConcrete(e3).enumerable) {
            p.Properties.ThrowIfMightHaveBeenDeleted(c2);
            var d2 = (0, f.Get)(e3, r3, l2);
            p.Properties.Set(e3, n3, l2, d2, true);
          }
        }
      } catch (e4) {
        a3 = true, o3 = e4;
      } finally {
        try {
          i3 || null == u2.return || u2.return();
        } finally {
          if (a3) throw o3;
        }
      }
    })(e2, a2, o2, r2), i2;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.initialize = function(e2, t2) {
    e2.undefined = new i.UndefinedValue(t2), e2.empty = new i.EmptyValue(t2), e2.null = new i.NullValue(t2), e2.false = new i.BooleanValue(t2, false), e2.true = new i.BooleanValue(t2, true), e2.NaN = new i.NumberValue(t2, NaN), e2.negativeInfinity = new i.NumberValue(t2, -1 / 0), e2.Infinity = new i.NumberValue(t2, 1 / 0), e2.negativeZero = new i.NumberValue(t2, -0), e2.zero = new i.NumberValue(t2, 0), e2.emptyString = new i.StringValue(t2, ""), e2.ObjectPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Object.prototype"), e2.FunctionPrototype = e2.ObjectPrototype, e2.FunctionPrototype = new i.NativeFunctionValue(t2, "Function.prototype", "", 0, function(t3) {
      return e2.undefined;
    }, false), e2.parseFloat = (0, Pe.default)(t2), e2.parseInt = (0, Ce.default)(t2), e2.SymbolPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Symbol.prototype"), e2.SymbolIsConcatSpreadable = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.isConcatSpreadable"), "Symbol.isConcatSpreadable"), e2.SymbolSpecies = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.species"), "Symbol.species"), e2.SymbolReplace = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.replace"), "Symbol.replace"), e2.SymbolIterator = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.iterator"), "Symbol.iterator"), e2.SymbolHasInstance = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.hasInstance"), "Symbol.hasInstance"), e2.SymbolToPrimitive = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.toPrimitive"), "Symbol.toPrimitive"), e2.SymbolToStringTag = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.toStringTag"), "Symbol.toStringTag"), e2.SymbolMatch = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.match"), "Symbol.match"), e2.SymbolSplit = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.split"), "Symbol.split"), e2.SymbolSearch = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.search"), "Symbol.search"), e2.SymbolUnscopables = new i.SymbolValue(t2, new i.StringValue(t2, "Symbol.unscopables"), "Symbol.unscopables"), e2.ArrayProto_values = (0, Be.default)(t2), e2.ArrayProto_toString = (0, Le.default)(t2), e2.ObjectProto_toString = (0, $e.default)(t2), t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (e2.TypedArrayProto_values = (0, Ge.default)(t2));
    e2.ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Array.prototype"), e2.RegExpPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "RegExp.prototype"), e2.DatePrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Date.prototype"), e2.StringPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "String.prototype"), e2.BooleanPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Boolean.prototype"), e2.NumberPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Number.prototype"), e2.DataViewPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "DataView.prototype"), e2.PromisePrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Promise.prototype"), e2.ArrayBufferPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "ArrayBuffer.prototype"), e2.ErrorPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Error.prototype"), e2.RangeErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "RangeError.prototype"), e2.TypeErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "TypeError.prototype"), e2.ReferenceErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "ReferenceError.prototype"), e2.URIErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "URIError.prototype"), e2.EvalErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "EvalError.prototype"), e2.SyntaxErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "SyntaxError.prototype"), e2.__IntrospectionErrorPrototype = new i.ObjectValue(t2, e2.ErrorPrototype, "__IntrospectionError.prototype"), e2.MapPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Map.prototype"), e2.SetPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Set.prototype"), e2.WeakMapPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "WeakMap.prototype"), t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (e2.WeakSetPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "WeakSet.prototype"));
    t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (e2.TypedArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "TypedArray.prototype", true));
    e2.Float32ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Float32Array.prototype"), e2.Float64ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Float64Array.prototype"), e2.Int8ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Int8Array.prototype"), e2.Int16ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Int16Array.prototype"), e2.Int32ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Int32Array.prototype"), e2.Uint8ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Uint8Array.prototype"), e2.Uint8ClampedArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Uint8ClampedArray.prototype"), e2.Uint16ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Uint16Array.prototype"), e2.Uint32ArrayPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "Uint32Array.prototype"), e2.IteratorPrototype = new i.ObjectValue(t2, e2.ObjectPrototype, "([][Symbol.iterator]().__proto__.__proto__)"), e2.MapIteratorPrototype = new i.ObjectValue(t2, e2.IteratorPrototype, "(new Map()[Symbol.iterator]().__proto__)"), e2.SetIteratorPrototype = new i.ObjectValue(t2, e2.IteratorPrototype, "(new Set()[Symbol.iterator]().__proto__)"), e2.ArrayIteratorPrototype = new i.ObjectValue(t2, e2.IteratorPrototype, "([][Symbol.iterator]().__proto__)"), e2.StringIteratorPrototype = new i.ObjectValue(t2, e2.IteratorPrototype, '(""[Symbol.iterator]().__proto__)'), (0, s.default)(t2, e2.ObjectPrototype), (0, T.default)(t2, e2.FunctionPrototype), (0, x.default)(t2, e2.ArrayPrototype), (0, V.default)(t2, e2.DatePrototype), (0, N.default)(t2, e2.RegExpPrototype), (0, F.default)(t2, e2.StringPrototype), (0, L.default)(t2, e2.BooleanPrototype), (0, M.default)(t2, e2.NumberPrototype), (0, k.default)(t2, e2.SymbolPrototype), (0, l.default)(t2, e2.ErrorPrototype), (0, f.default)(t2, e2.TypeErrorPrototype), (0, d.default)(t2, e2.RangeErrorPrototype), (0, v.default)(t2, e2.ReferenceErrorPrototype), (0, g.default)(t2, e2.URIErrorPrototype), (0, E.default)(t2, e2.EvalErrorPrototype), (0, m.default)(t2, e2.SyntaxErrorPrototype), (0, We.default)(t2, e2.__IntrospectionErrorPrototype), (0, G.default)(t2, e2.DataViewPrototype), (0, ie.default)(t2, e2.WeakMapPrototype), t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || ((0, U.default)(t2, e2.TypedArrayPrototype), (0, be.default)(t2, e2.WeakSetPrototype));
    (0, q.default)(t2, e2.Float32ArrayPrototype), (0, K.default)(t2, e2.Float64ArrayPrototype), (0, Y.default)(t2, e2.Int8ArrayPrototype), (0, Q.default)(t2, e2.Int16ArrayPrototype), (0, ee.default)(t2, e2.Int32ArrayPrototype), (0, re.default)(t2, e2.MapPrototype), (0, oe.default)(t2, e2.SetPrototype), (0, ue.default)(t2, e2.PromisePrototype), (0, ce.default)(t2, e2.Uint8ArrayPrototype), (0, pe.default)(t2, e2.Uint8ClampedArrayPrototype), (0, he.default)(t2, e2.Uint16ArrayPrototype), (0, ye.default)(t2, e2.Uint32ArrayPrototype), (0, we.default)(t2, e2.ArrayBufferPrototype), (0, Me.default)(t2, e2.IteratorPrototype), (0, ke.default)(t2, e2.ArrayIteratorPrototype), (0, je.default)(t2, e2.StringIteratorPrototype), (0, Fe.default)(t2, e2.MapIteratorPrototype), (0, Re.default)(t2, e2.SetIteratorPrototype), e2.Object = (0, o.default)(t2), e2.Function = (0, S.default)(t2), e2.Array = (0, O.default)(t2), e2.RegExp = (0, D.default)(t2), e2.Date = (0, _.default)(t2), e2.String = (0, j.default)(t2), e2.Math = (0, Te.default)(t2), e2.Boolean = (0, B.default)(t2), e2.Number = (0, R.default)(t2), e2.Symbol = (0, I.default)(t2), e2.JSON = (0, Ee.default)(t2), e2.Proxy = (0, Ae.default)(t2), t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (e2.Reflect = (0, Se.default)(t2));
    e2.Promise = (0, se.default)(t2), e2.DataView = (0, $.default)(t2), e2.Set = (0, ae.default)(t2), e2.Map = (0, te.default)(t2), e2.WeakMap = (0, ne.default)(t2), t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (e2.WeakSet = (0, me.default)(t2));
    e2.ArrayBuffer = (0, ge.default)(t2), t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (e2.TypedArray = (0, z.default)(t2));
    e2.Float32Array = (0, W.default)(t2), e2.Float64Array = (0, H.default)(t2), e2.Int8Array = (0, J.default)(t2), e2.Int16Array = (0, X.default)(t2), e2.Int32Array = (0, Z.default)(t2), e2.Uint8Array = (0, le.default)(t2), e2.Uint8ClampedArray = (0, fe.default)(t2), e2.Uint16Array = (0, de.default)(t2), e2.Uint32Array = (0, ve.default)(t2), e2.Error = (0, u.default)(t2), e2.TypeError = (0, c.default)(t2), e2.RangeError = (0, p.default)(t2), e2.ReferenceError = (0, h.default)(t2), e2.URIError = (0, b.default)(t2), e2.EvalError = (0, w.default)(t2), e2.SyntaxError = (0, y.default)(t2), e2.__IntrospectionError = (0, Ue.default)(t2);
    var r2 = ["Object", "Function", "Symbol", "String", "Array", "Boolean", "RegExp", "Date", "Error", "Number", "TypeError", "RangeError", "ReferenceError", "SyntaxError", "URIError", "EvalError", "DataView", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Map", "Set", "WeakMap", "Promise", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "ArrayBuffer"];
    t2.isCompatibleWith(t2.MOBILE_JSC_VERSION) || t2.isCompatibleWith("mobile") || (r2 = r2.concat(["WeakSet", "TypedArray"]));
    var He2 = true, Ke = false, Je = void 0;
    try {
      for (var Ye, Xe = r2[Symbol.iterator](); !(He2 = (Ye = Xe.next()).done); He2 = true) {
        var Qe = Ye.value, Ze = e2[Qe], et = e2["".concat(Qe, "Prototype")];
        et.$DefineOwnProperty("constructor", new qe.PropertyDescriptor({ value: Ze, writable: true, enumerable: false, configurable: true })), Ze.$DefineOwnProperty("prototype", new qe.PropertyDescriptor({ value: et, writable: false, enumerable: false, configurable: false })), Ze.$DefineOwnProperty("constructor", new qe.PropertyDescriptor({ value: e2.Function, writable: true, enumerable: false, configurable: true }));
      }
    } catch (e3) {
      Ke = true, Je = e3;
    } finally {
      try {
        He2 || null == Xe.return || Xe.return();
      } finally {
        if (Ke) throw Je;
      }
    }
    e2.GeneratorPrototype = new i.ObjectValue(t2, e2.FunctionPrototype, "Generator.prototype"), (0, P.default)(t2, e2.GeneratorPrototype), e2.Generator = new i.ObjectValue(t2, e2.FunctionPrototype, "Generator"), (0, A.default)(t2, e2.Generator), e2.GeneratorFunction = (0, C.default)(t2), e2.Generator.$DefineOwnProperty("prototype", new qe.PropertyDescriptor({ value: e2.GeneratorPrototype, writable: false, enumerable: false, configurable: true })), e2.GeneratorPrototype.$DefineOwnProperty("constructor", new qe.PropertyDescriptor({ value: e2.Generator, writable: false, enumerable: false, configurable: true })), e2.GeneratorFunction.$DefineOwnProperty("prototype", new qe.PropertyDescriptor({ value: e2.Generator, writable: false, enumerable: false, configurable: false })), e2.Generator.$DefineOwnProperty("constructor", new qe.PropertyDescriptor({ value: e2.GeneratorFunction, writable: false, enumerable: false, configurable: true })), e2.isNaN = (0, Ie.default)(t2), e2.isFinite = (0, Oe.default)(t2), e2.decodeURI = (0, xe.default)(t2), e2.decodeURIComponent = (0, _e.default)(t2), e2.encodeURI = (0, Ve.default)(t2), e2.encodeURIComponent = (0, De.default)(t2), e2.ThrowTypeError = (0, ze.default)(t2), e2.eval = (0, Ne.default)(t2), a.Functions.AddRestrictedFunctionProperties(e2.FunctionPrototype, t2), t2.useAbstractInterpretation && (n.TypesDomain.topVal = new n.TypesDomain(void 0), n.ValuesDomain.topVal = new n.ValuesDomain(void 0), e2.__topValue = new i.AbstractValue(t2, n.TypesDomain.topVal, n.ValuesDomain.topVal, Number.MAX_SAFE_INTEGER, []), n.TypesDomain.bottomVal = new n.TypesDomain(i.EmptyValue), n.ValuesDomain.bottomVal = new n.ValuesDomain(/* @__PURE__ */ new Set()), e2.__bottomValue = new i.AbstractValue(t2, n.TypesDomain.bottomVal, n.ValuesDomain.bottomVal, Number.MIN_SAFE_INTEGER, []));
    return e2;
  };
  var n = r(12), i = r(0), a = r(2), o = He(r(404)), s = He(r(403)), u = He(r(26)), l = He(r(402)), c = He(r(401)), f = He(r(400)), p = He(r(399)), d = He(r(398)), h = He(r(397)), v = He(r(396)), y = He(r(395)), m = He(r(394)), b = He(r(393)), g = He(r(392)), w = He(r(391)), E = He(r(390)), S = He(r(389)), T = He(r(388)), A = He(r(387)), C = He(r(386)), P = He(r(385)), O = He(r(384)), x = He(r(383)), _ = He(r(382)), V = He(r(381)), D = He(r(380)), N = He(r(379)), I = He(r(378)), k = He(r(377)), j = He(r(376)), F = He(r(375)), R = He(r(374)), M = He(r(373)), B = He(r(372)), L = He(r(371)), $ = He(r(370)), G = He(r(369)), z = He(r(25)), U = He(r(24)), W = He(r(368)), q = He(r(367)), H = He(r(366)), K = He(r(365)), J = He(r(364)), Y = He(r(363)), X = He(r(362)), Q = He(r(361)), Z = He(r(360)), ee = He(r(359)), te = He(r(358)), re = He(r(357)), ne = He(r(356)), ie = He(r(355)), ae = He(r(354)), oe = He(r(353)), se = He(r(352)), ue = He(r(351)), le = He(r(350)), ce = He(r(349)), fe = He(r(348)), pe = He(r(347)), de = He(r(346)), he = He(r(345)), ve = He(r(344)), ye = He(r(343)), me = He(r(342)), be = He(r(341)), ge = He(r(340)), we = He(r(339)), Ee = He(r(338)), Se = He(r(335)), Te = He(r(334)), Ae = He(r(333)), Ce = He(r(331)), Pe = He(r(330)), Oe = He(r(329)), xe = He(r(328)), _e = He(r(327)), Ve = He(r(326)), De = He(r(325)), Ne = He(r(324)), Ie = He(r(323)), ke = He(r(322)), je = He(r(321)), Fe = He(r(320)), Re = He(r(319)), Me = He(r(318)), Be = He(r(317)), Le = He(r(316)), $e = He(r(315)), Ge = He(r(314)), ze = He(r(313)), Ue = He(r(312)), We = He(r(311)), qe = r(6);
  function He(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.DebugReproManagerImplementation = void 0;
  var i = r(140), a = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "construct", value: function(e3) {
      var t2 = this;
      return this._sourceMapManager = new i.SourceMapManager(e3.buckRoot, e3.sourcemaps), e3.sourcemaps && (this._sourceMapNames = [], e3.sourcemaps.forEach(function(e4) {
        void 0 !== e4.sourceMapFilename && t2._sourceMapNames.push(e4.sourceMapFilename);
      })), this._usedSourceFiles = /* @__PURE__ */ new Set(), this;
    } }, { key: "addSourceFile", value: function(e3) {
      e3.includes("node_modules") || this._usedSourceFiles.add(this._sourceMapManager.relativeToAbsolute(e3));
    } }, { key: "getSourceFilePaths", value: function() {
      var e3 = this;
      return Array.from(this._usedSourceFiles).map(function(t2) {
        return { absolute: t2, relative: e3._sourceMapManager.absoluteToRelative(t2) };
      });
    } }, { key: "getSourceMapPaths", value: function() {
      return this._sourceMapNames;
    } }]), e2;
  })();
  t.DebugReproManagerImplementation = a;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.concretize = function e2(t2, r2) {
    if (r2 instanceof n.ConcreteValue) return r2;
    (0, a.default)(r2 instanceof n.AbstractValue);
    if ("abstractConcreteUnion" === r2.kind) return (0, a.default)(r2.args.length >= 2), e2(t2, r2.args[0]);
    var o2 = r2.types.getType();
    if (r2.types.isTop()) return new n.UndefinedValue(t2);
    if (o2.prototype instanceof n.PrimitiveValue) if (r2.values.isTop()) switch (o2) {
      case n.StringValue:
        return new n.StringValue(t2, "__concreteModel");
      case n.NumberValue:
        return new n.NumberValue(t2, 42);
      case n.SymbolValue:
        return new n.SymbolValue(t2, new n.StringValue(t2, "__concreteModel"));
      case n.BooleanValue:
        return new n.BooleanValue(t2, true);
      case n.NullValue:
        return new n.NullValue(t2);
      case n.UndefinedValue:
        return new n.UndefinedValue(t2);
      default:
        (0, a.default)(false, "Not yet implemented");
    }
    else {
      var c = r2.values.getElements();
      for (var f in (0, a.default)(1 === c.size, "Concrete model should only have one value"), c) return (0, a.default)(f instanceof n.ConcreteValue, "Concrete model should only contain one concrete value"), f;
      (0, a.default)(false);
    }
    else {
      if (o2 === n.FunctionValue) return (function(e3) {
        var t3 = new n.ECMAScriptSourceFunctionValue(e3);
        return t3.initialize([], i.blockStatement([])), t3;
      })(t2);
      if (o2 === n.ArrayValue) l(t2, "Emitting a concrete model for abstract array value is not supported yet.", r2.expressionLocation);
      else if (r2 instanceof n.AbstractObjectValue) {
        if (r2.values.isTop()) return new n.ObjectValue(t2);
        var p = r2.getTemplate(), d = u.Create.ObjectCreate(t2, p.$GetPrototypeOf()), h = (0, s.EnumerableOwnProperties)(t2, p, "key", true), v = true, y = false, m = void 0;
        try {
          for (var b, g = h[Symbol.iterator](); !(v = (b = g.next()).done); v = true) {
            var w = b.value;
            (0, a.default)(w instanceof n.StringValue);
            var E = (0, s.Get)(t2, p, w);
            u.Create.CreateDataProperty(t2, d, w, e2(t2, E));
          }
        } catch (e3) {
          y = true, m = e3;
        } finally {
          try {
            v || null == g.return || g.return();
          } finally {
            if (y) throw m;
          }
        }
        return d;
      }
    }
    l(t2, "Emitting a concrete model for this abstract value is not supported yet.", r2.expressionLocation);
    return new n.UndefinedValue(t2);
  };
  var n = r(0), i = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), o = r(4), s = r(3), u = r(2);
  function l(e2, t2, r2) {
    var n2 = new o.CompilerDiagnostic(t2, r2, "PP9000", "RecoverableError");
    e2.handleError(n2);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.WidenImplementation = void 0;
  var a = r(4), o = r(8), s = r(6), u = r(7), l = r(10), c = r(3), f = r(9), p = r(0), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var h = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "_widenArrays", value: function(e3, t2, r2) {
      return t2[0] instanceof p.Value ? ((0, d.default)(r2[0] instanceof p.Value), this._widenArraysOfValues(e3, t2, r2)) : ((0, d.default)(!(r2[0] instanceof p.Value)), this._widenArrayOfsMapEntries(e3, t2, r2));
    } }, { key: "_widenArrayOfsMapEntries", value: function(e3, t2, r2) {
      for (var n2 = Math.max(t2 && t2.length || 0, r2 && r2.length || 0), i2 = [], a2 = 0; a2 < n2; a2++) {
        var o2 = t2[a2] || { $Key: void 0, $Value: void 0 }, s2 = o2.$Key, u2 = o2.$Value, l2 = r2[a2] || { $Key: void 0, $Value: void 0 }, c2 = l2.$Key, f2 = l2.$Value;
        if (void 0 === s2 && void 0 === c2) i2[a2] = { $Key: void 0, $Value: void 0 };
        else {
          void 0 === s2 ? s2 = c2 : void 0 === c2 && (c2 = s2), (0, d.default)(void 0 !== s2), (0, d.default)(void 0 !== c2);
          var h2 = this.widenValues(e3, s2, c2);
          if ((0, d.default)(h2 instanceof p.Value), void 0 === u2 && void 0 === f2) i2[a2] = { $Key: h2, $Value: void 0 };
          else {
            void 0 === u2 ? u2 = f2 : void 0 === f2 && (f2 = u2), (0, d.default)(void 0 !== u2), (0, d.default)(void 0 !== f2);
            var v = this.widenValues(e3, u2, f2);
            (0, d.default)(void 0 === v || v instanceof p.Value), i2[a2] = { $Key: h2, $Value: v };
          }
        }
      }
      return i2;
    } }, { key: "_widenArraysOfValues", value: function(e3, t2, r2) {
      for (var n2 = Math.max(t2 && t2.length || 0, r2 && r2.length || 0), i2 = [], a2 = 0; a2 < n2; a2++) {
        var o2 = this.widenValues(e3, t2[a2], r2[a2]);
        (0, d.default)(void 0 === o2 || o2 instanceof p.Value), i2[a2] = o2;
      }
      return i2;
    } }, { key: "widenEffects", value: function(e3, t2, r2) {
      var n2 = this.widenResults(e3, t2.result, r2.result), i2 = this.widenBindings(e3, t2.modifiedBindings, r2.modifiedBindings), a2 = this.widenPropertyBindings(e3, t2.modifiedProperties, r2.modifiedProperties, t2.createdObjects, r2.createdObjects), s2 = /* @__PURE__ */ new Set(), u2 = new f.Generator(e3, "widen", e3.pathConditions);
      return new o.Effects(n2, u2, i2, a2, s2);
    } }, { key: "widenResults", value: function(e3, t2, r2) {
      if ((0, d.default)(!(t2 instanceof l.Reference || r2 instanceof l.Reference), "loop bodies should not result in refs"), (0, d.default)(!(t2 instanceof u.AbruptCompletion || r2 instanceof u.AbruptCompletion), "if a loop iteration ends abruptly, there is no need for fixed point computation"), t2 instanceof u.SimpleNormalCompletion && r2 instanceof u.SimpleNormalCompletion) {
        var n2 = this.widenValues(e3, t2.value, r2.value);
        return (0, d.default)(n2 instanceof p.Value), new u.SimpleNormalCompletion(n2);
      }
      if (t2 instanceof u.JoinedNormalAndAbruptCompletions || r2 instanceof u.JoinedNormalAndAbruptCompletions) throw new a.FatalError();
      (0, d.default)(false);
    } }, { key: "widenMaps", value: function(e3, t2, r2) {
      var n2 = /* @__PURE__ */ new Map();
      return e3.forEach(function(e4, i2, a2) {
        var o2 = t2.get(i2), s2 = r2(i2, e4, o2);
        n2.set(i2, s2);
      }), t2.forEach(function(t3, i2, a2) {
        e3.has(i2) || n2.set(i2, r2(i2, void 0, t3));
      }), n2;
    } }, { key: "widenBindings", value: function(e3, t2, r2) {
      var n2 = this;
      return this.widenMaps(t2, r2, function(t3, r3, i2) {
        var a2 = void 0 === r3 ? t3.hasLeaked : r3.hasLeaked, o2 = void 0 === i2 ? t3.hasLeaked : i2.hasLeaked, s2 = a2 || o2, u2 = void 0 === r3 || void 0 === r3.value ? t3.value : r3.value;
        (0, d.default)(void 0 !== i2);
        var l2 = i2.value;
        (0, d.default)(void 0 !== l2);
        var c2 = n2.widenValues(e3, u2 || e3.intrinsics.undefined, l2);
        if (c2 instanceof p.AbstractValue && "widened" === c2.kind) {
          var h2 = t3.phiNode;
          if (void 0 === h2) {
            var v = e3.generator;
            (0, d.default)(void 0 !== v), h2 = v.deriveAbstract(c2.types, c2.values, [t3.value || e3.intrinsics.undefined], (0, f.createOperationDescriptor)("SINGLE_ARG"), { skipInvariant: true }), t3.phiNode = h2;
          }
          (0, d.default)(void 0 !== h2.intrinsicName);
          var y = h2.intrinsicName;
          c2.intrinsicName = y, c2.operationDescriptor = (0, f.createOperationDescriptor)("WIDENED_IDENTIFIER", { id: y });
        }
        return (0, d.default)(c2 instanceof p.Value), { hasLeaked: s2, value: c2 };
      });
    } }, { key: "widenValues", value: function(e3, t2, r2) {
      return Array.isArray(t2) || Array.isArray(r2) ? ((0, d.default)(Array.isArray(t2)), (0, d.default)(Array.isArray(r2)), this._widenArrays(e3, t2, r2)) : ((0, d.default)(t2 instanceof p.Value), (0, d.default)(r2 instanceof p.Value), t2 instanceof p.AbstractValue || r2 instanceof p.AbstractValue || !(0, c.StrictEqualityComparison)(e3, t2.throwIfNotConcrete(), r2.throwIfNotConcrete()) ? ((0, d.default)(t2 && r2), p.AbstractValue.createFromWidening(e3, t2, r2)) : t2);
    } }, { key: "widenPropertyBindings", value: function(e3, t2, r2, n2, i2) {
      var o2 = this;
      return this.widenMaps(t2, r2, function(u2, l2, c2) {
        if (void 0 !== l2 || void 0 !== c2) {
          if (void 0 === l2) {
            if ((0, d.default)(void 0 !== c2), i2.has(u2.object)) return c2;
            void 0 !== u2.descriptor && t2.has(u2) ? (l2 = (0, s.cloneDescriptor)(u2.descriptor.throwIfNotConcrete(e3)), (0, d.default)(void 0 !== l2), l2.value = e3.intrinsics.empty) : void 0 === (l2 = u2.descriptor) && (l2 = (0, s.cloneDescriptor)(c2.throwIfNotConcrete(e3)), (0, d.default)(void 0 !== l2), l2.value = e3.intrinsics.empty);
          }
          if (void 0 === c2) {
            if (n2.has(u2.object)) return l2;
            r2.has(u2) ? (c2 = (0, s.cloneDescriptor)(l2.throwIfNotConcrete(e3)), (0, d.default)(void 0 !== c2), c2.value = e3.intrinsics.empty) : c2 = l2, (0, d.default)(void 0 !== c2);
          }
          var h2 = o2.widenDescriptors(e3, l2, c2);
          if (h2 && h2.value instanceof p.AbstractValue && "widened" === h2.value.kind) {
            var v = h2.value, y = u2.pathNode;
            if (void 0 === y) {
              var m = u2.key;
              if ("string" != typeof m && (!(m instanceof p.AbstractValue) || m.mightNotBeString() && m.mightNotBeNumber())) throw new a.FatalError("todo: handle the case where key is an abstract value");
              "string" == typeof m ? y = p.AbstractValue.createFromWidenedProperty(e3, v, [u2.object, new p.StringValue(e3, m)], (0, f.createOperationDescriptor)("WIDEN_PROPERTY")) : ((0, d.default)(m instanceof p.AbstractValue), y = p.AbstractValue.createFromWidenedProperty(e3, v, [u2.object, m], (0, f.createOperationDescriptor)("WIDEN_PROPERTY")));
              var b = e3.generator;
              (0, d.default)(void 0 !== b);
              var g = u2.descriptor && u2.descriptor.throwIfNotConcrete(e3).value || e3.intrinsics.empty;
              g instanceof p.EmptyValue || "length" === m && u2.object instanceof p.ArrayValue || ("string" == typeof m ? b.emitVoidExpression(v.types, v.values, [u2.object, new p.StringValue(e3, m), g], (0, f.createOperationDescriptor)("WIDEN_PROPERTY_ASSIGNMENT")) : ((0, d.default)(m instanceof p.AbstractValue), b.emitVoidExpression(v.types, v.values, [u2.object, m, g], (0, f.createOperationDescriptor)("WIDEN_PROPERTY_ASSIGNMENT")))), u2.pathNode = y;
            }
            h2.value = y;
          }
          return h2;
        }
      });
    } }, { key: "widenDescriptors", value: function(e3, t2, r2) {
      if (r2 = r2.throwIfNotConcrete(e3), void 0 === t2) {
        if (!(0, c.IsDataDescriptor)(e3, r2)) return r2;
        var n2 = (0, s.cloneDescriptor)(r2);
        (0, d.default)(void 0 !== n2);
        var i2 = n2.value;
        (0, d.default)(void 0 !== i2);
        var o2 = this.widenValues(e3, i2, i2);
        return (0, d.default)(o2 instanceof p.Value), n2.value = o2, n2;
      }
      if (t2 = t2.throwIfNotConcrete(e3), (0, s.equalDescriptors)(t2, r2)) {
        if (!(0, c.IsDataDescriptor)(e3, t2)) return t2;
        var u2 = (0, s.cloneDescriptor)(t2);
        (0, d.default)(void 0 !== u2);
        var l2 = t2.value;
        (0, d.default)(void 0 !== l2);
        var f2 = r2.value;
        (0, d.default)(void 0 !== f2);
        var h2 = this.widenValues(e3, l2, f2);
        return (0, d.default)(h2 instanceof p.Value), u2.value = h2, u2;
      }
      throw new a.FatalError();
    } }, { key: "containsEffects", value: function(e3, t2) {
      return !!this.containsResults(e3.result, t2.result) && (!!this.containsBindings(e3.modifiedBindings, t2.modifiedBindings) && !!this.containsPropertyBindings(e3.modifiedProperties, t2.modifiedProperties, e3.createdObjects, t2.createdObjects));
    } }, { key: "containsResults", value: function(e3, t2) {
      return e3 instanceof u.SimpleNormalCompletion && t2 instanceof u.SimpleNormalCompletion && this._containsValues(e3.value, t2.value);
    } }, { key: "containsMap", value: function(e3, t2, r2) {
      var i2 = true, a2 = false, o2 = void 0;
      try {
        for (var s2, u2 = e3.entries()[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
          var l2 = n(s2.value, 2), c2 = l2[0], f2 = l2[1];
          if (void 0 !== f2) {
            var p2 = t2.get(c2);
            if (void 0 !== p2 && !r2(f2, p2)) return false;
          }
        }
      } catch (e4) {
        a2 = true, o2 = e4;
      } finally {
        try {
          i2 || null == u2.return || u2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      var d2 = true, h2 = false, v = void 0;
      try {
        for (var y, m = t2.keys()[Symbol.iterator](); !(d2 = (y = m.next()).done); d2 = true) {
          var b = y.value;
          if (!e3.has(b)) return false;
        }
      } catch (e4) {
        h2 = true, v = e4;
      } finally {
        try {
          d2 || null == m.return || m.return();
        } finally {
          if (h2) throw v;
        }
      }
      return true;
    } }, { key: "containsBindings", value: function(e3, t2) {
      var r2 = this;
      return this.containsMap(e3, t2, function(e4, t3) {
        return !(void 0 === e4 || void 0 === t3 || void 0 === e4.value || void 0 === t3.value || !r2._containsValues(e4.value, t3.value) || e4.hasLeaked !== t3.hasLeaked);
      });
    } }, { key: "containsPropertyBindings", value: function(e3, t2, r2, i2) {
      var a2 = this, o2 = function(e4, t3) {
        var r3, n2;
        return (e4 instanceof s.InternalSlotDescriptor || t3 instanceof s.InternalSlotDescriptor) && (void 0 !== e4 && ((0, d.default)(e4 instanceof s.InternalSlotDescriptor), r3 = e4.value), void 0 !== t3 && ((0, d.default)(t3 instanceof s.InternalSlotDescriptor), n2 = t3.value)), e4 instanceof s.PropertyDescriptor && (r3 = e4.value), t3 instanceof s.PropertyDescriptor && (n2 = t3.value), void 0 === r3 ? void 0 === n2 : r3 instanceof p.Value && n2 instanceof p.Value ? a2._containsValues(r3, n2) : Array.isArray(r3) && Array.isArray(n2) ? a2._containsArray(r3, n2) : void 0 === n2;
      }, u2 = true, l2 = false, c2 = void 0;
      try {
        for (var f2, h2 = e3.entries()[Symbol.iterator](); !(u2 = (f2 = h2.next()).done); u2 = true) {
          var v = n(f2.value, 2), y = v[0], m = v[1];
          if (void 0 !== m) {
            var b = t2.get(y);
            if (void 0 !== b && !r2.has(y.object) && !o2(m, b)) return false;
          }
        }
      } catch (e4) {
        l2 = true, c2 = e4;
      } finally {
        try {
          u2 || null == h2.return || h2.return();
        } finally {
          if (l2) throw c2;
        }
      }
      var g = true, w = false, E = void 0;
      try {
        for (var S, T = t2.keys()[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
          var A = S.value;
          if (!i2.has(A.object) && !e3.has(A)) return false;
        }
      } catch (e4) {
        w = true, E = e4;
      } finally {
        try {
          g || null == T.return || T.return();
        } finally {
          if (w) throw E;
        }
      }
      return true;
    } }, { key: "_containsArray", value: function(e3, t2) {
      return (e3 && e3[0] || t2 && t2[0]) instanceof p.Value ? this.containsArraysOfValue(e3, t2) : this._containsArrayOfsMapEntries(e3, t2);
    } }, { key: "_containsArrayOfsMapEntries", value: function(e3, t2, r2) {
      for (var n2 = e3.intrinsics.empty, i2 = Math.max(t2 && t2.length || 0, r2 && r2.length || 0), a2 = 0; a2 < i2; a2++) {
        var o2 = t2 && t2[a2] || { $Key: n2, $Value: n2 }, s2 = o2.$Key, u2 = o2.$Value, l2 = r2 && r2[a2] || { $Key: n2, $Value: n2 }, c2 = l2.$Key, f2 = l2.$Value;
        if (void 0 !== s2) {
          if (s2 instanceof p.Value && c2 instanceof p.Value && s2.equals(c2) && u2 instanceof p.Value && f2 instanceof p.Value && this._containsValues(u2, f2)) continue;
          return false;
        }
        if (void 0 !== c2) return false;
      }
      return true;
    } }, { key: "containsArraysOfValue", value: function(e3, t2, r2) {
      for (var n2 = Math.max(t2 && t2.length || 0, r2 && r2.length || 0), i2 = 0; i2 < n2; i2++) {
        var a2 = t2 && t2[i2], o2 = r2 && r2[i2];
        if (a2 instanceof p.Value && o2 instanceof p.Value && !this._containsValues(a2, o2)) return false;
      }
      return true;
    } }, { key: "_containsValues", value: function(e3, t2) {
      return e3 instanceof p.AbstractValue ? !(!p.Value.isTypeCompatibleWith(t2.getType(), e3.getType()) && !p.Value.isTypeCompatibleWith(e3.getType(), t2.getType())) && e3.values.containsValue(t2) : e3.equals(t2);
    } }]), e2;
  })();
  t.WidenImplementation = h;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ToImplementation = void 0;
  var i = r(12), a = r(13), o = r(2), s = r(20), u = r(15), l = r(4), c = r(11), f = r(16), p = r(0), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), h = r(9), v = r(6);
  function y(e2, t2) {
    return e2 < 0 ? e2 % t2 + t2 : e2 % t2;
  }
  var m = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.ElementConv = { Int8: this.ToInt8.bind(this), Int16: this.ToInt16.bind(this), Int32: this.ToInt32.bind(this), Uint8: this.ToUint8.bind(this), Uint16: this.ToUint16.bind(this), Uint32: this.ToUint32.bind(this), Uint8Clamped: this.ToUint8Clamp.bind(this) };
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "ToInt32", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      if (isNaN(r2) || 0 === r2 || !isFinite(r2)) return 0;
      var n2 = y(r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)), Math.pow(2, 32));
      return n2 >= Math.pow(2, 31) ? n2 - Math.pow(2, 32) : n2;
    } }, { key: "ToUint32", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      return isNaN(r2) || 0 === r2 || !isFinite(r2) ? 0 : y(r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)), Math.pow(2, 32));
    } }, { key: "ToInt16", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      if (isNaN(r2) || 0 === r2 || !isFinite(r2)) return 0;
      var n2 = y(r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)), Math.pow(2, 16));
      return n2 >= Math.pow(2, 15) ? n2 - Math.pow(2, 16) : n2;
    } }, { key: "ToUint16", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      return isNaN(r2) || 0 === r2 || !isFinite(r2) ? 0 : y(r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)), Math.pow(2, 16));
    } }, { key: "ToInt8", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      if (isNaN(r2) || 0 === r2 || !isFinite(r2)) return 0;
      var n2 = y(r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)), Math.pow(2, 8));
      return n2 >= Math.pow(2, 7) ? n2 - Math.pow(2, 8) : n2;
    } }, { key: "ToUint8", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      return isNaN(r2) || 0 === r2 || !isFinite(r2) ? 0 : y(r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)), Math.pow(2, 8));
    } }, { key: "ToUint8Clamp", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      if (isNaN(r2)) return 0;
      if (r2 <= 0) return 0;
      if (r2 >= 255) return 255;
      var n2 = Math.floor(r2);
      return n2 + 0.5 < r2 ? n2 + 1 : r2 < n2 + 0.5 ? n2 : n2 % 2 == 1 ? n2 + 1 : n2;
    } }, { key: "thisBooleanValue", value: function(e3, t2) {
      if (t2 instanceof p.BooleanValue) return t2;
      if (t2 instanceof p.ObjectValue && t2.$BooleanData) {
        var r2 = t2.$BooleanData.throwIfNotConcreteBoolean();
        return (0, d.default)(r2 instanceof p.BooleanValue, "expected boolean data internal slot to be a boolean value"), r2;
      }
      throw t2.throwIfNotConcrete(), e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
    } }, { key: "thisNumberValue", value: function(e3, t2) {
      if (t2 instanceof p.NumberValue) return t2;
      if (t2 instanceof p.ObjectValue && t2.$NumberData) {
        var r2 = t2.$NumberData.throwIfNotConcreteNumber();
        return (0, d.default)(r2 instanceof p.NumberValue, "expected number data internal slot to be a number value"), r2;
      }
      throw t2 = t2.throwIfNotConcrete(), e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
    } }, { key: "thisStringValue", value: function(e3, t2) {
      if (t2 instanceof p.StringValue) return t2;
      if (t2 instanceof p.ObjectValue && t2.$StringData) {
        var r2 = t2.$StringData.throwIfNotConcreteString();
        return (0, d.default)(r2 instanceof p.StringValue, "expected string data internal slot to be a string value"), r2;
      }
      throw t2 = t2.throwIfNotConcrete(), e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
    } }, { key: "ToPropertyDescriptor", value: function(e3, t2) {
      if (!((t2 = t2.throwIfNotConcrete()) instanceof p.ObjectValue)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      var r2 = new v.PropertyDescriptor({});
      if (true === (0, s.HasProperty)(e3, t2, "enumerable")) {
        var n2 = this.ToBooleanPartial(e3, (0, a.Get)(e3, t2, "enumerable"));
        r2.enumerable = true === n2;
      }
      if (true === (0, s.HasProperty)(e3, t2, "configurable")) {
        var i2 = this.ToBooleanPartial(e3, (0, a.Get)(e3, t2, "configurable"));
        r2.configurable = true === i2;
      }
      if (true === (0, s.HasProperty)(e3, t2, "value")) {
        var o2 = (0, a.Get)(e3, t2, "value");
        r2.value = o2;
      }
      if (true === (0, s.HasProperty)(e3, t2, "writable")) {
        var u2 = this.ToBooleanPartial(e3, (0, a.Get)(e3, t2, "writable"));
        r2.writable = true === u2;
      }
      if (true === (0, s.HasProperty)(e3, t2, "get")) {
        var l2 = (0, a.Get)(e3, t2, "get");
        if (false === (0, c.IsCallable)(e3, l2) && !l2.mightBeUndefined()) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        l2.throwIfNotConcrete(), r2.get = l2;
      }
      if (true === (0, s.HasProperty)(e3, t2, "set")) {
        var f2 = (0, a.Get)(e3, t2, "set");
        if (false === (0, c.IsCallable)(e3, f2) && !f2.mightBeUndefined()) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        f2.throwIfNotConcrete(), r2.set = f2;
      }
      if ((r2.get || r2.set) && (void 0 !== r2.value || void 0 !== r2.writable)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      return r2;
    } }, { key: "ToObject", value: function(e3, t2) {
      if (t2 instanceof p.AbstractObjectValue) return t2;
      if (t2 instanceof p.AbstractValue) return this._WrapAbstractInObject(e3, t2);
      if (t2 instanceof p.UndefinedValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      if (t2 instanceof p.NullValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      if (t2 instanceof p.BooleanValue) {
        var r2 = new p.ObjectValue(e3, e3.intrinsics.BooleanPrototype);
        return r2.$BooleanData = t2, r2;
      }
      if (t2 instanceof p.NumberValue) {
        var n2 = new p.ObjectValue(e3, e3.intrinsics.NumberPrototype);
        return n2.$NumberData = t2, n2;
      }
      if (t2 instanceof p.StringValue) return o.Create.StringCreate(e3, t2, e3.intrinsics.StringPrototype);
      if (t2 instanceof p.SymbolValue) {
        var i2 = new p.ObjectValue(e3, e3.intrinsics.SymbolPrototype);
        return i2.$SymbolData = t2, i2;
      }
      if (t2 instanceof p.ObjectValue) return t2;
      (0, d.default)(false);
    } }, { key: "_WrapAbstractInObject", value: function(e3, t2) {
      var r2;
      switch (t2.getType()) {
        case p.IntegralValue:
        case p.NumberValue:
          (r2 = new p.ObjectValue(e3, e3.intrinsics.NumberPrototype)).$NumberData = t2;
          break;
        case p.StringValue:
          (r2 = new p.ObjectValue(e3, e3.intrinsics.StringPrototype)).$StringData = t2;
          break;
        case p.BooleanValue:
          (r2 = new p.ObjectValue(e3, e3.intrinsics.BooleanPrototype)).$BooleanData = t2;
          break;
        case p.SymbolValue:
          (r2 = new p.ObjectValue(e3, e3.intrinsics.SymbolPrototype)).$SymbolData = t2;
          break;
        case p.UndefinedValue:
        case p.NullValue:
        case p.PrimitiveValue:
          if (t2.mightBeNull() || t2.mightHaveBeenDeleted() || t2.mightBeUndefined()) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        default:
          e3.isInPureScope() ? (r2 = p.AbstractValue.createFromType(e3, p.ObjectValue, "explicit conversion to object", [t2]), (0, d.default)(r2 instanceof p.AbstractObjectValue)) : r2 = t2.throwIfNotConcreteObject();
      }
      return r2;
    } }, { key: "ToLength", value: function(e3, t2) {
      var r2 = this.ToInteger(e3, t2);
      return r2 <= 0 ? 0 : r2 === 1 / 0 ? Math.pow(2, 53) - 1 : Math.min(r2, Math.pow(2, 53) - 1);
    } }, { key: "ToInteger", value: function(e3, t2) {
      var r2 = this.ToNumber(e3, t2);
      return isNaN(r2) ? 0 : isFinite(r2) && 0 !== r2 ? r2 < 0 ? -Math.floor(Math.abs(r2)) : Math.floor(Math.abs(r2)) : r2;
    } }, { key: "ToIndex", value: function(e3, t2) {
      var r2;
      if (t2 instanceof p.UndefinedValue) r2 = 0;
      else {
        var n2 = this.ToInteger(e3, t2);
        if (n2 < 0) throw e3.createErrorThrowCompletion(e3.intrinsics.RangeError, "integerIndex < 0");
        if (r2 = this.ToLength(e3, n2), false === (0, f.SameValueZero)(e3, new p.NumberValue(e3, n2), new p.NumberValue(e3, r2))) throw e3.createErrorThrowCompletion(e3.intrinsics.RangeError, "integerIndex < 0");
      }
      return r2;
    } }, { key: "ToIndexPartial", value: function(e3, t2) {
      return this.ToIndex(e3, "number" == typeof t2 ? t2 : t2.throwIfNotConcrete());
    } }, { key: "ToNumber", value: function(e3, t2) {
      var r2 = this.ToNumberOrAbstract(e3, t2);
      if ("number" != typeof r2) throw p.AbstractValue.reportIntrospectionError(r2), new l.FatalError();
      return r2;
    } }, { key: "ToNumberOrAbstract", value: function(e3, t2) {
      if ("number" == typeof t2) return t2;
      if (t2 instanceof p.AbstractValue) return t2;
      if (t2 instanceof p.UndefinedValue) return NaN;
      if (t2 instanceof p.NullValue) return 0;
      if (t2 instanceof p.ObjectValue) {
        var r2 = this.ToPrimitiveOrAbstract(e3, t2, "number");
        return this.ToNumberOrAbstract(e3, r2);
      }
      if (t2 instanceof p.BooleanValue) return true === t2.value ? 1 : 0;
      if (t2 instanceof p.NumberValue) return t2.value;
      if (t2 instanceof p.StringValue) return Number(t2.value);
      if (t2 instanceof p.SymbolValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      (0, d.default)(false, "unexpected type of value");
    } }, { key: "IsToNumberPure", value: function(e3, t2) {
      if (t2 instanceof p.Value) {
        if (this.IsToPrimitivePure(e3, t2)) {
          var r2 = t2.getType();
          return r2 !== p.SymbolValue && r2 !== p.PrimitiveValue && r2 !== p.Value;
        }
        return false;
      }
      return true;
    } }, { key: "ToPrimitive", value: function(e3, t2, r2) {
      return this.ToPrimitiveOrAbstract(e3, t2, r2).throwIfNotConcretePrimitive();
    } }, { key: "ToPrimitiveOrAbstract", value: function(e3, t2, r2) {
      if (t2 instanceof p.PrimitiveValue) return t2;
      (0, d.default)(t2 instanceof p.ObjectValue, "expected an object"), r2 = r2 || "default";
      var n2 = (0, a.GetMethod)(e3, t2, e3.intrinsics.SymbolToPrimitive);
      if (!(n2 instanceof p.UndefinedValue)) {
        var i2 = (0, u.Call)(e3, n2, t2, [new p.StringValue(e3, r2)]);
        if (!(i2 instanceof p.ObjectValue)) return (0, d.default)(i2 instanceof p.PrimitiveValue), i2;
        throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      }
      return "default" === r2 && (r2 = "number"), this.OrdinaryToPrimitiveOrAbstract(e3, t2, r2);
    } }, { key: "GetToPrimitivePureResultType", value: function(e3, t2) {
      var r2 = t2.getType();
      return t2 instanceof p.PrimitiveValue ? r2 : t2 instanceof p.AbstractValue && !t2.mightBeObject() ? p.PrimitiveValue : void 0;
    } }, { key: "IsToPrimitivePure", value: function(e3, t2) {
      return void 0 !== this.GetToPrimitivePureResultType(e3, t2);
    } }, { key: "OrdinaryToPrimitive", value: function(e3, t2, r2) {
      return this.OrdinaryToPrimitiveOrAbstract(e3, t2, r2).throwIfNotConcretePrimitive();
    } }, { key: "OrdinaryToPrimitiveOrAbstract", value: function(e3, t2, r2) {
      var n2;
      (0, d.default)(t2 instanceof p.ObjectValue, "Expected object"), (0, d.default)("string" === r2 || "number" === r2, "Expected string or number hint"), n2 = "string" === r2 ? ["toString", "valueOf"] : ["valueOf", "toString"];
      var i2 = true, o2 = false, s2 = void 0;
      try {
        for (var f2, h2 = n2[Symbol.iterator](); !(i2 = (f2 = h2.next()).done); i2 = true) {
          var v2 = f2.value, y2 = (0, a.Get)(e3, t2, new p.StringValue(e3, v2));
          if ((0, c.IsCallable)(e3, y2)) {
            var m2 = (0, u.Call)(e3, y2, t2), b = m2.getType();
            if (b === p.Value) {
              (0, d.default)(m2 instanceof p.AbstractValue);
              var g = new l.CompilerDiagnostic("".concat(v2, " might return either an object or primitive"), e3.currentLocation, "PP0028", "RecoverableError");
              throw e3.handleError(g), new l.FatalError();
            }
            if (p.Value.isTypeCompatibleWith(b, p.PrimitiveValue)) return (0, d.default)(m2 instanceof p.AbstractValue || m2 instanceof p.PrimitiveValue), m2;
          }
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          i2 || null == h2.return || h2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "can't turn to primitive");
    } }, { key: "ToString", value: function(e3, t2) {
      if ("string" == typeof t2) return t2;
      if (t2 instanceof p.StringValue) return t2.value;
      if (t2 instanceof p.NumberValue) return t2.value + "";
      if (t2 instanceof p.UndefinedValue) return "undefined";
      if (t2 instanceof p.NullValue) return "null";
      if (t2 instanceof p.SymbolValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      if (t2 instanceof p.BooleanValue) return t2.value ? "true" : "false";
      if (t2 instanceof p.ObjectValue) {
        var r2 = this.ToPrimitive(e3, t2, "string");
        return this.ToString(e3, r2);
      }
      throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "unknown value type, can't coerce to string");
    } }, { key: "IsToStringPure", value: function(e3, t2) {
      if (t2 instanceof p.Value && this.IsToPrimitivePure(e3, t2)) {
        var r2 = t2.getType();
        return r2 !== p.SymbolValue && r2 !== p.PrimitiveValue && r2 !== p.Value;
      }
      return true;
    } }, { key: "ToStringPartial", value: function(e3, t2) {
      return this.ToString(e3, "string" == typeof t2 ? t2 : t2.throwIfNotConcrete());
    } }, { key: "ToStringValue", value: function(e3, t2) {
      if (t2.getType() === p.StringValue) return t2;
      if (t2 instanceof p.ObjectValue) {
        var r2 = this.ToPrimitiveOrAbstract(e3, t2, "string");
        return r2.getType() === p.StringValue ? r2 : this.ToStringValue(e3, r2);
      }
      if (t2 instanceof p.ConcreteValue) {
        var n2 = this.ToString(e3, t2);
        return new p.StringValue(e3, n2);
      }
      if (t2 instanceof p.AbstractValue) return this.ToStringAbstract(e3, t2);
      (0, d.default)(false, "unknown value type, can't coerce to string");
    } }, { key: "ToStringAbstract", value: function(e3, t2) {
      if (t2.mightNotBeString()) {
        var r2, n2 = (0, h.createOperationDescriptor)("COERCE_TO_STRING");
        return r2 = t2.mightBeObject() && !t2.isSimpleObject() ? e3.evaluateWithPossibleThrowCompletion(function() {
          return p.AbstractValue.createTemporalFromBuildFunction(e3, p.StringValue, [t2], n2);
        }, i.TypesDomain.topVal, i.ValuesDomain.topVal) : p.AbstractValue.createFromBuildFunction(e3, p.StringValue, [t2], n2), (0, d.default)(r2 instanceof p.AbstractValue), r2;
      }
      return t2;
    } }, { key: "ToBoolean", value: function(e3, t2) {
      if (t2 instanceof p.BooleanValue) return t2.value;
      if (t2 instanceof p.UndefinedValue) return false;
      if (t2 instanceof p.NullValue) return false;
      if (t2 instanceof p.NumberValue) return 0 !== t2.value && !isNaN(t2.value);
      if (t2 instanceof p.StringValue) return t2.value.length > 0;
      if (t2 instanceof p.ObjectValue) return true;
      if (t2 instanceof p.SymbolValue) return true;
      throw (0, d.default)(!(t2 instanceof p.AbstractValue)), e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "unknown value type, can't coerce to a boolean");
    } }, { key: "ToBooleanPartial", value: function(e3, t2) {
      return !t2.mightNotBeObject() || this.ToBoolean(e3, t2.throwIfNotConcrete());
    } }, { key: "ToPropertyKey", value: function(e3, t2) {
      var r2 = this.ToPrimitive(e3, t2, "string");
      return r2 instanceof p.SymbolValue ? r2 : this.ToString(e3, r2);
    } }, { key: "ToPropertyKeyPartial", value: function(e3, t2) {
      return t2 instanceof p.ConcreteValue ? this.ToPropertyKey(e3, t2) : (t2.mightNotBeString() && t2.mightNotBeNumber() && !t2.isSimpleObject() && !e3.isInPureScope() && t2.throwIfNotConcrete(), (0, d.default)(t2 instanceof p.AbstractValue), t2);
    } }, { key: "CanonicalNumericIndexString", value: function(e3, t2) {
      if ((0, d.default)(t2 instanceof p.StringValue), "-0" === t2.value) return -0;
      var r2 = this.ToNumber(e3, t2);
      return false !== (0, f.SameValue)(e3, new p.StringValue(e3, this.ToString(e3, new p.NumberValue(e3, r2))), t2) ? r2 : void 0;
    } }]), e2;
  })();
  t.ToImplementation = m;
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3, t2) {
      return (function(e4) {
        if (Array.isArray(e4)) return e4;
      })(e3) || (function(e4, t3) {
        var r2 = [], n2 = true, i2 = false, a2 = void 0;
        try {
          for (var o2, s2 = e4[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
        } catch (e5) {
          i2 = true, a2 = e5;
        } finally {
          try {
            n2 || null == s2.return || s2.return();
          } finally {
            if (i2) throw a2;
          }
        }
        return r2;
      })(e3, t2) || (function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      })();
    }
    function i(e3, t2) {
      for (var r2 = 0; r2 < t2.length; r2++) {
        var n2 = t2[r2];
        n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e3, n2.key, n2);
      }
    }
    Object.defineProperty(t, "__esModule", { value: true }), t.PropertiesImplementation = void 0;
    var a = r(8), o = r(0), s = r(63), u = r(10), l = r(4), c = b(r(1)), f = r(3), p = r(5), d = r(2), h = b(r(37)), v = r(9), y = r(12), m = r(6);
    function b(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    }
    function g(e3) {
      if (e3 instanceof o.StringValue && (e3 = e3.value), "string" != typeof e3) throw new l.FatalError();
      return e3;
    }
    function w(e3, t2) {
      return void 0 === t2 ? e3.intrinsics.undefined : "boolean" == typeof t2 ? new o.BooleanValue(e3, t2) : ((0, c.default)(t2 instanceof o.Value), t2);
    }
    function E(e3) {
      return "string" == typeof e3 ? e3 : e3 instanceof o.StringValue ? e3.value : e3 instanceof o.SymbolValue ? e3 : void 0;
    }
    function S(e3, t2) {
      return "string" == typeof t2 || t2 instanceof o.StringValue ? e3.properties : t2 instanceof o.SymbolValue ? e3.symbols : void (0, c.default)(false);
    }
    function T(e3, t2, r2, n2) {
      var i2 = S(t2, r2), a2 = E(r2), o2 = i2.get(a2);
      void 0 === o2 && (o2 = { descriptor: void 0, object: t2, key: a2 }, i2.set(a2, o2)), e3.recordModifiedProperty(o2), o2.descriptor = n2;
    }
    function A(e3, t2, r2, n2) {
      var i2 = e3.generator;
      if (i2 && (t2.isIntrinsic() || void 0 !== t2.temporalAlias) && !(r2 instanceof o.SymbolValue)) {
        r2 instanceof o.StringValue && (r2 = r2.value), (0, c.default)(!t2.mightBeLeakedObject()), (0, c.default)(!t2.mightBeFinalObject()), (0, c.default)("string" == typeof r2);
        var a2 = S(t2, r2).get(r2);
        (0, c.default)(void 0 !== a2);
        var s2 = a2.descriptor;
        if (void 0 === s2) t2 === e3.$GlobalObject ? i2.emitGlobalDelete(r2) : i2.emitPropertyDelete(t2, r2);
        else if (s2 = s2.throwIfNotConcrete(e3), void 0 === n2) if (t2 === e3.$GlobalObject) if ((0, f.IsDataDescriptor)(e3, s2)) {
          var u2 = s2.value || e3.intrinsics.undefined;
          (0, p.isValidIdentifier)(r2) && !s2.configurable && s2.enumerable && s2.writable ? i2.emitGlobalDeclaration(r2, u2) : s2.configurable && s2.enumerable && s2.writable ? i2.emitGlobalAssignment(r2, u2) : i2.emitDefineProperty(t2, r2, s2);
        } else i2.emitDefineProperty(t2, r2, s2);
        else if ((0, f.IsDataDescriptor)(e3, s2) && s2.configurable && s2.enumerable && s2.writable) {
          var l2 = s2.value || e3.intrinsics.undefined;
          i2.emitPropertyAssignment(t2, r2, l2);
        } else i2.emitDefineProperty(t2, r2, s2);
        else if ((0, c.default)(n2 instanceof m.PropertyDescriptor), (0, m.equalDescriptors)(s2, n2)) {
          (0, c.default)((0, f.IsDataDescriptor)(e3, s2));
          var d2 = s2.value || e3.intrinsics.undefined;
          t2 === e3.$GlobalObject ? i2.emitGlobalAssignment(r2, d2) : i2.emitPropertyAssignment(t2, r2, d2);
        } else i2.emitDefineProperty(t2, r2, s2, true);
      }
    }
    function C(e3, t2) {
      if (t2 instanceof m.AbstractJoinedDescriptor && (t2.descriptor1 && C(e3, t2.descriptor1), t2.descriptor2 && C(e3, t2.descriptor2)), (0, c.default)(t2 instanceof m.PropertyDescriptor), t2.value) {
        if (t2.value instanceof o.Value) d.Leak.value(e3, t2.value);
        else if (void 0 !== t2.value) {
          var r2 = true, n2 = false, i2 = void 0;
          try {
            for (var a2, s2 = t2.value[Symbol.iterator](); !(r2 = (a2 = s2.next()).done); r2 = true) {
              var u2 = a2.value;
              d.Leak.value(e3, u2);
            }
          } catch (e4) {
            n2 = true, i2 = e4;
          } finally {
            try {
              r2 || null == s2.return || s2.return();
            } finally {
              if (n2) throw i2;
            }
          }
        }
      }
      t2.get && d.Leak.value(e3, t2.get), t2.set && d.Leak.value(e3, t2.set);
    }
    function P(e3, t2, r2) {
      if (!t2.mightNotBeFinalObject()) {
        if (!e3.instantRender.enabled) {
          var n2 = new l.CompilerDiagnostic("Mutating a final object, or an object with unknown properties, after some of those properties have already been used, is not supported.", e3.currentLocation, "PP0026", "FatalError");
          throw e3.handleError(n2), new l.FatalError();
        }
        e3.instantRenderBailout("Object mutations that require materialization are currently not supported by InstantRender", e3.currentLocation);
      }
    }
    function O(e3) {
      if (!(e3 instanceof o.AbstractValue)) return false;
      if ("widened" === e3.kind || "widened property" === e3.kind) return true;
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = e3.args[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          if (O(i2.value)) return true;
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      return false;
    }
    var x = (function() {
      function t2() {
        !(function(e3, t3) {
          if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
        })(this, t2);
      }
      return (function(e3, t3, r2) {
        t3 && i(e3.prototype, t3), r2 && i(e3, r2);
      })(t2, [{ key: "OrdinarySet", value: function(e3, t3, r2, n2, i2) {
        if (P(e3, t3), !e3.ignoreLeakLogic && t3.mightBeLeakedObject()) return d.Leak.value(e3, n2), d.Leak.value(e3, i2), void 0 !== e3.generator && e3.generator.emitPropertyAssignment(i2, g(r2), n2), true;
        var s2 = n2.mightHaveBeenDeleted();
        (0, c.default)((0, f.IsPropertyKey)(e3, r2), "expected property key");
        var u2 = t3.$GetOwnProperty(r2);
        if (!u2 || u2.mightHaveBeenDeleted()) {
          var p2 = t3.$GetPrototypeOf();
          if (!(p2 instanceof o.NullValue)) {
            if (p2 = p2.throwIfNotConcreteObject(), !u2) return p2.$Set(r2, n2, i2);
            if (!(function e4(t4, r3, n3) {
              if (r3.isSimpleObject()) return true;
              var i3 = r3.$GetOwnProperty(n3);
              if (!i3 || i3.mightHaveBeenDeleted()) {
                var a2 = r3.$GetPrototypeOf();
                if (!(a2 instanceof o.NullValue || e4(t4, a2 = a2.throwIfNotConcreteObject(), n3))) return false;
                if (!i3) return true;
              }
              return (0, c.default)(void 0 !== i3), !(!(0, f.IsDataDescriptor)(t4, i3) || !i3.writable);
            })(e3, p2, r2)) {
              var h2 = new l.CompilerDiagnostic("assignment might or might not invoke a setter", e3.currentLocation, "PP0043", "RecoverableError");
              if ("Recover" !== e3.handleError(h2)) throw new l.FatalError();
            }
          }
          u2 || (u2 = new m.PropertyDescriptor({ value: e3.intrinsics.undefined, writable: true, enumerable: true, configurable: true }));
        }
        if (u2 instanceof m.AbstractJoinedDescriptor) {
          var v2 = u2.joinCondition, y2 = u2.descriptor2;
          u2 = u2.descriptor1;
          var b2 = d.Path.withCondition(v2, function() {
            return void 0 !== u2 ? e3.evaluateForEffects(function() {
              return new o.BooleanValue(e3, I());
            }, void 0, "OrdinarySet/1") : (0, a.construct_empty_effects)(e3);
          }), w2 = b2.result, E2 = b2.generator, S2 = b2.modifiedBindings, T2 = b2.modifiedProperties, A2 = b2.createdObjects;
          u2 = y2;
          var C2 = d.Path.withInverseCondition(v2, function() {
            return void 0 !== u2 ? e3.evaluateForEffects(function() {
              return new o.BooleanValue(e3, I());
            }, void 0, "OrdinarySet/2") : (0, a.construct_empty_effects)(e3);
          }), O2 = C2.result, x2 = C2.generator, _ = C2.modifiedBindings, V = C2.modifiedProperties, D = C2.createdObjects, N = d.Join.joinEffects(v2, new a.Effects(w2, E2, S2, T2, A2), new a.Effects(O2, x2, _, V, D));
          return e3.applyEffects(N), d.To.ToBooleanPartial(e3, e3.returnOrThrowCompletion(N.result));
        }
        return I();
        function I() {
          if ((0, c.default)(void 0 !== u2), (0, f.IsDataDescriptor)(e3, u2)) {
            if (!u2.writable && !s2) {
              if (u2.value && u2.value.mightHaveBeenDeleted()) {
                var t4 = new l.CompilerDiagnostic("assignment might or might not invoke a setter", e3.currentLocation, "PP0043", "RecoverableError");
                if ("Recover" !== e3.handleError(t4)) throw new l.FatalError();
              }
              return false;
            }
            if (!i2.mightBeObject()) return false;
            (0, c.default)(i2 instanceof o.ObjectValue || i2 instanceof o.AbstractObjectValue);
            var a2 = i2.$GetOwnProperty(r2);
            a2 instanceof m.AbstractJoinedDescriptor && (a2.descriptor1 === u2 ? a2 = u2 : a2.descriptor2 === u2 && (a2 = u2));
            var p3 = a2 ? void 0 === a2.value ? e3.intrinsics.undefined : a2.value : e3.intrinsics.undefined;
            if ((0, c.default)(p3 instanceof o.Value), void 0 !== a2) {
              if ((0, f.IsAccessorDescriptor)(e3, a2)) return (0, c.default)(!p3.mightHaveBeenDeleted(), "should not fail until weak deletes of accessors are suppported"), false;
              if (!(a2.writable || s2 && a2.configurable)) {
                if (p3.mightHaveBeenDeleted()) throw (0, c.default)(p3 instanceof o.AbstractValue), o.AbstractValue.reportIntrospectionError(p3), new l.FatalError();
                return false;
              }
              var h3 = new m.PropertyDescriptor({ value: n2 });
              return (s2 || p3.mightHaveBeenDeleted()) && ((h3 = a2).throwIfNotConcrete(e3).value = n2), i2.$DefineOwnProperty(r2, h3);
            }
            return d.Create.CreateDataProperty(e3, i2, r2, n2);
          }
          (0, c.default)((0, f.IsAccessorDescriptor)(e3, u2), "expected accessor");
          var v3 = u2.set;
          return !(!v3 || v3 instanceof o.UndefinedValue) && ((0, f.Call)(e3, v3.throwIfNotConcrete(), i2, [n2]), true);
        }
      } }, { key: "OrdinarySetPartial", value: function(e3, t3, r2, i2, a2) {
        if (!(r2 instanceof o.AbstractValue)) return t3.$Set(r2, i2, a2);
        var s2 = O(r2), u2 = o.Value.isTypeCompatibleWith(r2.getType(), o.NumberValue);
        if (r2.mightNotBeString() && r2.mightNotBeNumber() && !r2.isSimpleObject()) if (e3.isInPureScope()) d.Leak.value(e3, r2);
        else {
          var p2 = new l.CompilerDiagnostic("property key might not have a well behaved toString or be a symbol", e3.currentLocation, "PP0002", "RecoverableError");
          if ("Recover" !== e3.handleError(p2)) throw new l.FatalError();
        }
        if (!t3.isSimpleObject()) {
          if (e3.isInPureScope()) return d.Leak.value(e3, a2), d.Leak.value(e3, i2), e3.evaluateWithPossibleThrowCompletion(function() {
            var t4 = e3.generator;
            return (0, c.default)(t4), (0, c.default)(r2 instanceof o.AbstractValue), t4.emitPropertyAssignment(a2, r2, i2), e3.intrinsics.undefined;
          }, y.TypesDomain.topVal, y.ValuesDomain.topVal), true;
          var h2 = new l.CompilerDiagnostic("unknown property access might need to invoke a setter", e3.currentLocation, "PP0030", "RecoverableError");
          if ("Recover" !== e3.handleError(h2)) throw new l.FatalError();
        }
        var v2, b2 = false;
        if (a2 instanceof o.AbstractObjectValue && !a2.values.isTop()) {
          var g2 = a2.values.getElements();
          (0, c.default)(g2), g2.has(t3) && (b2 = true);
        }
        function w2(t4) {
          return o.AbstractValue.createFromBinaryOp(e3, "===", t4, new o.StringValue(e3, ""), void 0, "template for property name condition");
        }
        (0, c.default)(t3 === a2 || (0, f.HasCompatibleType)(a2, o.PrimitiveValue) || b2), r2 = d.To.ToStringAbstract(e3, r2), void 0 === t3.unknownProperty ? (v2 = { descriptor: void 0, object: t3, key: r2 }, t3.unknownProperty = v2) : v2 = t3.unknownProperty, e3.recordModifiedProperty(v2);
        var E2 = v2.descriptor;
        if (void 0 === E2) {
          var S2 = i2;
          if (!(i2 instanceof o.UndefinedValue || O(r2))) {
            var T2 = w2(r2), A2 = o.AbstractValue.createFromType(e3, o.Value, "template for prototype member expression", [a2, r2]);
            S2 = o.AbstractValue.createFromConditionalOp(e3, T2, i2, A2);
          }
          v2.descriptor = new m.PropertyDescriptor({ writable: true, enumerable: true, configurable: true, value: S2 });
        } else {
          (0, c.default)(E2 instanceof m.PropertyDescriptor, "unknown properties are only created with Set and have equal descriptors");
          var C2 = E2.value;
          (0, c.default)(C2);
          var P2 = C2;
          if (!(i2 instanceof o.UndefinedValue)) if (O(r2)) P2 = i2;
          else {
            var x2 = w2(r2);
            P2 = o.AbstractValue.createFromConditionalOp(e3, x2, i2, C2);
          }
          E2.value = P2;
        }
        var _ = t3.unknownProperty;
        t3.unknownProperty = void 0;
        var V = true, D = false, N = void 0;
        try {
          for (var I, k = t3.properties[Symbol.iterator](); !(V = (I = k.next()).done); V = true) {
            var j = n(I.value, 2), F = j[0], R = j[1];
            if (s2 && u2) {
              if (F !== +F + "") continue;
              t3.properties.delete(F);
            } else {
              var M = e3.intrinsics.empty;
              if (R.descriptor) {
                var B = R.descriptor.throwIfNotConcrete(e3);
                B.value && (M = B.value);
              }
              var L = o.AbstractValue.createFromBinaryOp(e3, "===", r2, new o.StringValue(e3, F)), $ = o.AbstractValue.createFromConditionalOp(e3, L, i2, M);
              this.OrdinarySet(e3, t3, F, $, a2);
            }
          }
        } catch (e4) {
          D = true, N = e4;
        } finally {
          try {
            V || null == k.return || k.return();
          } finally {
            if (D) throw N;
          }
        }
        return t3.unknownProperty = _, true;
      } }, { key: "FromPropertyDescriptor", value: function(e3, t3) {
        if (!t3) return e3.intrinsics.undefined;
        if (t3 instanceof m.AbstractJoinedDescriptor) return o.AbstractValue.createFromConditionalOp(e3, t3.joinCondition, this.FromPropertyDescriptor(e3, t3.descriptor1), this.FromPropertyDescriptor(e3, t3.descriptor2));
        (0, c.default)(t3 instanceof m.PropertyDescriptor);
        var r2 = d.Create.ObjectCreate(e3, e3.intrinsics.ObjectPrototype);
        (0, c.default)(r2.getExtensible(), "expected an extensible object"), (0, c.default)(!r2.properties.size, "expected an object with no own properties");
        var n2 = true;
        return void 0 !== t3.value && (n2 = d.Create.CreateDataProperty(e3, r2, "value", t3.value) && n2), void 0 !== t3.writable && (n2 = d.Create.CreateDataProperty(e3, r2, "writable", new o.BooleanValue(e3, t3.writable)) && n2), void 0 !== t3.get && (n2 = d.Create.CreateDataProperty(e3, r2, "get", t3.get) && n2), void 0 !== t3.set && (n2 = d.Create.CreateDataProperty(e3, r2, "set", t3.set) && n2), void 0 !== t3.enumerable && (n2 = d.Create.CreateDataProperty(e3, r2, "enumerable", new o.BooleanValue(e3, t3.enumerable)) && n2), void 0 !== t3.configurable && (n2 = d.Create.CreateDataProperty(e3, r2, "configurable", new o.BooleanValue(e3, t3.configurable)) && n2), (0, c.default)(n2, "fails to create data property"), r2;
      } }, { key: "OrdinaryDelete", value: function(e3, t3, r2) {
        (0, c.default)((0, f.IsPropertyKey)(e3, r2), "expected a property key");
        var n2 = t3.$GetOwnProperty(r2);
        if (!n2) return P(e3, t3), !e3.ignoreLeakLogic && t3.mightBeLeakedObject() && void 0 !== e3.generator && e3.generator.emitPropertyDelete(t3, g(r2)), true;
        if ((n2 = n2.throwIfNotConcrete(e3)).configurable) {
          if (P(e3, t3), t3.mightBeLeakedObject()) return void 0 !== e3.generator && e3.generator.emitPropertyDelete(t3, g(r2)), true;
          var i2 = E(r2), a2 = S(t3, r2).get(i2);
          if (void 0 === a2 && t3.isPartialObject() && t3.isSimpleObject()) {
            var s2 = e3.generator;
            if (s2) return (0, c.default)("string" == typeof i2 || i2 instanceof o.SymbolValue), s2.emitPropertyDelete(t3, g(i2)), true;
          }
          return (0, c.default)(void 0 !== a2), e3.recordModifiedProperty(a2), a2.descriptor = void 0, A(e3, t3, r2, n2), true;
        }
        return false;
      } }, { key: "DeletePropertyOrThrow", value: function(e3, t3, r2) {
        (0, c.default)(t3 instanceof o.ObjectValue, "expected an object"), (0, c.default)((0, f.IsPropertyKey)(e3, r2), "expected a property key");
        var n2 = t3.$Delete(r2);
        if (!n2) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "couldn't delete property");
        return n2;
      } }, { key: "CompletePropertyDescriptor", value: function(e3, t3) {
        var r2 = t3.throwIfNotConcrete(e3), n2 = { value: e3.intrinsics.undefined, get: e3.intrinsics.undefined, set: e3.intrinsics.undefined, writable: false, enumerable: false, configurable: false };
        return (0, f.IsGenericDescriptor)(e3, r2) || (0, f.IsDataDescriptor)(e3, r2) ? (void 0 === r2.value && (r2.value = n2.value), void 0 === r2.writable && (r2.writable = n2.writable)) : (void 0 === r2.get && (r2.get = n2.get), void 0 === r2.set && (r2.set = n2.set)), void 0 === r2.enumerable && (r2.enumerable = n2.enumerable), void 0 === r2.configurable && (r2.configurable = n2.configurable), r2;
      } }, { key: "IsCompatiblePropertyDescriptor", value: function(e3, t3, r2, n2) {
        return this.ValidateAndApplyPropertyDescriptor(e3, void 0, void 0, t3, r2, n2);
      } }, { key: "ValidateAndApplyPropertyDescriptor", value: function(e3, t3, r2, n2, i2, a2) {
        var s2 = i2, u2 = a2;
        if (void 0 !== t3 && ((0, c.default)(void 0 !== r2), (0, c.default)((0, f.IsPropertyKey)(e3, r2))), u2 instanceof m.AbstractJoinedDescriptor) {
          var p2 = u2.joinCondition;
          d.Path.implies(p2) ? u2 = u2.descriptor1 : o.AbstractValue.createFromUnaryOp(e3, "!", p2, true).mightNotBeTrue() || (u2 = u2.descriptor2);
        }
        if (!u2) return !!n2 && ((0, c.default)(true === n2, "expected extensible to be true"), void 0 !== t3 && void 0 !== r2 && (P(e3, t3), !e3.ignoreLeakLogic && t3.mightBeLeakedObject()) ? (C(e3, s2), void 0 !== e3.generator && e3.generator.emitDefineProperty(t3, g(r2), s2.throwIfNotConcrete(e3)), true) : ((0, f.IsGenericDescriptor)(e3, s2) || (0, f.IsDataDescriptor)(e3, s2) ? void 0 !== t3 && ((0, c.default)(void 0 !== r2), T(e3, t3, r2, new m.PropertyDescriptor({ value: void 0 !== s2.value ? s2.value : e3.intrinsics.undefined, writable: void 0 !== s2.writable && s2.writable, enumerable: void 0 !== s2.enumerable && s2.enumerable, configurable: void 0 !== s2.configurable && s2.configurable })), A(e3, t3, r2, void 0)) : void 0 !== t3 && ((0, c.default)(void 0 !== r2), s2 = s2.throwIfNotConcrete(e3), T(e3, t3, r2, new m.PropertyDescriptor({ get: void 0 !== s2.get ? s2.get : e3.intrinsics.undefined, set: void 0 !== s2.set ? s2.set : e3.intrinsics.undefined, enumerable: void 0 !== s2.enumerable && s2.enumerable, configurable: void 0 !== s2.configurable && s2.configurable })), A(e3, t3, r2, void 0)), true));
        u2 = u2.throwIfNotConcrete(e3), s2 = s2.throwIfNotConcrete(e3);
        var h2 = true;
        for (var v2 in s2) if (void 0 !== s2[v2]) {
          h2 = false;
          break;
        }
        if (h2) return true;
        var y2 = true;
        for (var b2 in s2) if (void 0 !== s2[b2]) {
          if (void 0 === u2[b2]) y2 = false;
          else {
            var O2 = w(e3, s2[b2]), x2 = w(e3, u2[b2]);
            y2 = O2 instanceof o.ConcreteValue && x2 instanceof o.ConcreteValue ? (0, f.SameValue)(e3, O2, x2) : O2 === x2;
          }
          if (!y2) break;
        }
        if (y2 && (t3 === e3.$GlobalObject || void 0 !== t3 && !t3.isIntrinsic())) return true;
        var _ = u2.value instanceof o.Value && u2.value.mightHaveBeenDeleted();
        if (!u2.configurable) {
          if ((0, c.default)(!_, "a non-configurable property can't be deleted"), s2.configurable) return false;
          if (void 0 !== s2.enumerable && s2.enumerable !== u2.enumerable) return false;
        }
        if (u2 = u2.throwIfNotConcrete(e3), s2 = s2.throwIfNotConcrete(e3), void 0 !== t3 && void 0 !== r2 && (P(e3, t3), !e3.ignoreLeakLogic && t3.mightBeLeakedObject())) return C(e3, s2), void 0 !== e3.generator && e3.generator.emitDefineProperty(t3, g(r2), s2), true;
        var V = u2;
        if (u2 = (0, m.cloneDescriptor)(u2), (0, c.default)(void 0 !== u2), (0, f.IsGenericDescriptor)(e3, s2)) ;
        else if ((0, f.IsDataDescriptor)(e3, u2) !== (0, f.IsDataDescriptor)(e3, s2)) {
          if (!u2.configurable) return false;
          (0, f.IsDataDescriptor)(e3, u2) ? void 0 !== t3 && ((0, c.default)(void 0 !== r2), u2.writable = void 0, u2.value = void 0, u2.get = e3.intrinsics.undefined, u2.set = e3.intrinsics.undefined) : void 0 !== t3 && ((0, c.default)(void 0 !== r2), u2.get = void 0, u2.set = void 0, u2.writable = false, u2.value = e3.intrinsics.undefined);
        } else if ((0, f.IsDataDescriptor)(e3, u2) && (0, f.IsDataDescriptor)(e3, s2)) {
          if (!u2.configurable) {
            if (!u2.writable && s2.writable) return false;
            if (!u2.writable) {
              var D = s2.value || e3.intrinsics.undefined;
              (0, c.default)(D instanceof o.Value);
              var N = u2.value || e3.intrinsics.undefined;
              if ((0, c.default)(N instanceof o.Value), s2.value && !(0, f.SameValuePartial)(e3, D, N)) return false;
            }
          }
        } else if (!u2.configurable) {
          if (s2.set && !(0, f.SameValuePartial)(e3, s2.set, u2.set || e3.intrinsics.undefined)) return false;
          if (s2.get && !(0, f.SameValuePartial)(e3, s2.get, u2.get || e3.intrinsics.undefined)) return false;
        }
        if (_) {
          var I = void 0 === s2.enumerable && !!u2.enumerable, k = void 0 === s2.writable && !!u2.writable;
          if (I || k) {
            var j = new l.CompilerDiagnostic("unknown descriptor attributes on deleted property", e3.currentLocation, "PP0038", "RecoverableError");
            if ("Recover" !== e3.handleError(j)) throw new l.FatalError();
          }
        }
        if (void 0 !== t3) {
          (0, c.default)(void 0 !== r2);
          var F = E(r2), R = S(t3, r2), M = R.get(F);
          for (var B in void 0 === M ? (M = { descriptor: void 0, object: t3, key: F }, e3.recordModifiedProperty(M), M.descriptor = u2, R.set(F, M)) : (M.descriptor, e3.recordModifiedProperty(M), M.descriptor = u2), s2) void 0 !== s2[B] && (u2[B] = s2[B]);
          A(e3, t3, r2, V);
        }
        return true;
      } }, { key: "OrdinaryDefineOwnProperty", value: function(e3, t3, r2, n2) {
        (0, c.default)(t3 instanceof o.ObjectValue);
        var i2 = t3.$GetOwnProperty(r2), a2 = t3.getExtensible();
        return this.ValidateAndApplyPropertyDescriptor(e3, t3, r2, a2, n2, i2);
      } }, { key: "ObjectDefineProperties", value: function(e3, t3, r2) {
        if (t3.mightNotBeObject()) throw t3.mightBeObject() && t3.throwIfNotConcrete(), e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        (0, c.default)(t3 instanceof o.ObjectValue || t3 instanceof o.AbstractObjectValue);
        var n2 = d.To.ToObject(e3, r2), i2 = n2.$OwnPropertyKeys(), a2 = [], s2 = true, u2 = false, l2 = void 0;
        try {
          for (var p2, h2 = i2[Symbol.iterator](); !(s2 = (p2 = h2.next()).done); s2 = true) {
            var v2 = p2.value, y2 = n2.$GetOwnProperty(v2);
            if (y2 && y2.throwIfNotConcrete(e3).enumerable) {
              this.ThrowIfMightHaveBeenDeleted(y2);
              var m2 = (0, f.Get)(e3, n2, v2), b2 = d.To.ToPropertyDescriptor(e3, m2);
              a2.push([v2, b2]);
            }
          }
        } catch (e4) {
          u2 = true, l2 = e4;
        } finally {
          try {
            s2 || null == h2.return || h2.return();
          } finally {
            if (u2) throw l2;
          }
        }
        for (var g2 = 0; g2 < a2.length; g2++) {
          var w2 = a2[g2], E2 = w2[0], S2 = w2[1];
          this.DefinePropertyOrThrow(e3, t3, E2, S2);
        }
        return t3;
      } }, { key: "Set", value: function(e3, t3, r2, n2, i2) {
        (0, c.default)((0, f.IsPropertyKey)(e3, r2), "expected property key"), (0, c.default)("boolean" == typeof i2, "expected boolean");
        var a2 = t3.$Set(r2, n2, t3);
        if (false === a2 && true === i2) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        return a2;
      } }, { key: "DefinePropertyOrThrow", value: function(e3, t3, r2, n2) {
        (0, c.default)("string" == typeof r2 || (0, f.IsPropertyKey)(e3, r2), "expected property key");
        var i2 = t3.$DefineOwnProperty(r2, n2);
        if (false === i2) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        return i2;
      } }, { key: "PutValue", value: function(e3, t3, r2) {
        if (r2 = r2.promoteEmptyToUndefined(), !(t3 instanceof u.Reference)) throw e3.createErrorThrowCompletion(e3.intrinsics.ReferenceError, "can't put a value to a non-reference");
        var n2 = d.Environment.GetBase(e3, t3);
        if (d.Environment.IsUnresolvableReference(e3, t3)) {
          if (d.Environment.IsStrictReference(e3, t3)) throw e3.createErrorThrowCompletion(e3.intrinsics.ReferenceError);
          var i2 = (0, f.GetGlobalObject)(e3);
          return this.Set(e3, i2, d.Environment.GetReferencedName(e3, t3), r2, false);
        }
        if (d.Environment.IsPropertyReference(e3, t3)) {
          if (n2 instanceof o.AbstractValue && (n2 = d.To.ToObject(e3, n2)), d.Environment.HasPrimitiveBase(e3, t3) && ((0, c.default)(n2 instanceof o.Value && !(0, f.HasSomeCompatibleType)(n2, o.UndefinedValue, o.NullValue)), n2 = d.To.ToObject(e3, n2)), (0, c.default)(n2 instanceof o.ObjectValue || n2 instanceof o.AbstractObjectValue), false === n2.$SetPartial(d.Environment.GetReferencedNamePartial(e3, t3), r2, (0, f.GetThisValue)(e3, t3)) && d.Environment.IsStrictReference(e3, t3)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
        } else {
          if (n2 instanceof u.EnvironmentRecord) {
            var a2 = d.Environment.GetReferencedName(e3, t3);
            return (0, c.default)("string" == typeof a2), n2.SetMutableBinding(a2, r2, d.Environment.IsStrictReference(e3, t3));
          }
          (0, c.default)(false);
        }
      } }, { key: "ArraySetLength", value: function(e3, t3, r2) {
        var n2 = r2.throwIfNotConcrete(e3), i2 = n2.value;
        if (!i2) return this.OrdinaryDefineOwnProperty(e3, t3, "length", n2);
        (0, c.default)(i2 instanceof o.Value);
        var a2 = new m.PropertyDescriptor(n2), s2 = d.To.ToUint32(e3, i2), u2 = d.To.ToNumber(e3, i2);
        if (s2 !== u2) throw e3.createErrorThrowCompletion(e3.intrinsics.RangeError, "should be a uint");
        a2.value = new o.NumberValue(e3, s2);
        var l2 = this.OrdinaryGetOwnProperty(e3, t3, "length");
        (0, c.default)(void 0 !== l2 && !(0, f.IsAccessorDescriptor)(e3, l2), "cannot be undefined or an accessor descriptor");
        var p2, h2 = (l2 = l2.throwIfNotConcrete(e3)).value;
        if ((0, c.default)(h2 instanceof o.Value), h2 = h2.throwIfNotConcrete(), (0, c.default)(h2 instanceof o.NumberValue, "should be a number"), h2 = h2.value, s2 >= h2) return this.OrdinaryDefineOwnProperty(e3, t3, "length", a2);
        if (!l2.writable) return false;
        void 0 === a2.writable || true === a2.writable ? p2 = true : (p2 = false, a2.writable = true);
        var v2 = this.OrdinaryDefineOwnProperty(e3, t3, "length", a2);
        if (false === v2) return false;
        var y2 = h2, b2 = Array.from(t3.properties.keys()).map(function(e4) {
          return parseInt(e4, 10);
        }).filter(function(e4) {
          return s2 <= e4 && e4 <= y2;
        }).sort().reverse(), g2 = true, w2 = false, E2 = void 0;
        try {
          for (var S2, T2 = b2[Symbol.iterator](); !(g2 = (S2 = T2.next()).done); g2 = true) {
            if (h2 = S2.value, false === t3.$Delete(h2 + "")) return a2.value = new o.NumberValue(e3, h2 + 1), false === p2 && (a2.writable = false), v2 = this.OrdinaryDefineOwnProperty(e3, t3, "length", a2), false;
          }
        } catch (e4) {
          w2 = true, E2 = e4;
        } finally {
          try {
            g2 || null == T2.return || T2.return();
          } finally {
            if (w2) throw E2;
          }
        }
        return !!p2 || this.OrdinaryDefineOwnProperty(e3, t3, "length", new m.PropertyDescriptor({ writable: false }));
      } }, { key: "OrdinaryGetOwnProperty", value: function(e3, t3, r2) {
        if (!e3.ignoreLeakLogic && t3.mightBeLeakedObject()) {
          if (!t3.mightNotBeFinalObject()) {
            var n2 = S(t3, r2).get(E(r2));
            return n2 && n2.descriptor ? n2.descriptor : void 0;
          }
          var i2 = r2;
          "string" == typeof i2 && (i2 = new o.StringValue(e3, i2));
          var a2 = o.AbstractValue.createTemporalFromBuildFunction(e3, o.Value, [t3._templateFor || t3, i2], (0, v.createOperationDescriptor)("ABSTRACT_PROPERTY"), { isPure: true });
          return new m.PropertyDescriptor({ configurable: true, enumerable: true, value: a2, writable: true });
        }
        (0, c.default)((0, f.IsPropertyKey)(e3, r2), "expected a property key");
        var s2 = S(t3, r2).get(E(r2));
        if (s2) {
          if (e3.callReportPropertyAccess(s2, false), s2.descriptor) {
            var u2 = new m.PropertyDescriptor({}), p2 = s2.descriptor;
            if ((0, c.default)(void 0 !== p2), p2 instanceof m.AbstractJoinedDescriptor) return new m.AbstractJoinedDescriptor(p2.joinCondition, p2.descriptor1, p2.descriptor2);
            if ((0, c.default)(p2 instanceof m.PropertyDescriptor), (0, f.IsDataDescriptor)(e3, p2)) {
              var d2, h2 = p2.value;
              if (t3.isIntrinsic() && t3.isPartialObject()) {
                if (h2 instanceof o.AbstractValue) {
                  if ("abstractConcreteUnion" === h2.kind && (h2 = (d2 = h2).args[0], (0, c.default)(h2 instanceof o.AbstractValue)), "resolved" !== h2.kind) {
                    var y2 = e3.generator;
                    (0, c.default)(y2), (0, c.default)(h2.operationDescriptor);
                    var b2 = h2 instanceof o.AbstractObjectValue ? h2.functionResultType : void 0;
                    if (h2 = y2.deriveAbstract(h2.types, h2.values, h2.args, h2.operationDescriptor, { isPure: true, kind: "resolved", skipInvariant: true }), void 0 !== d2) {
                      (0, c.default)(h2 instanceof o.AbstractValue);
                      var g2 = d2.args.filter(function(e4) {
                        return e4 instanceof o.ConcreteValue;
                      });
                      (0, c.default)(g2.length === d2.args.length - 1), h2 = o.AbstractValue.createAbstractConcreteUnion(e3, h2, g2);
                    }
                    void 0 !== b2 && ((0, c.default)(h2 instanceof o.AbstractObjectValue), h2.functionResultType = b2), e3.invariantLevel >= 1 && "string" == typeof r2 && !e3.hasBindingBeenChecked(t3, r2) && (e3.markPropertyAsChecked(t3, r2), y2.emitFullInvariant(t3, r2, h2)), T(e3, t3, r2, new m.PropertyDescriptor({ value: h2, writable: void 0 !== p2.writable && p2.writable, enumerable: void 0 !== p2.enumerable && p2.enumerable, configurable: void 0 !== p2.configurable && p2.configurable }));
                  }
                } else if (e3.invariantLevel >= 1 && h2 instanceof o.Value && !(h2 instanceof o.AbstractValue)) {
                  var w2 = e3.generator;
                  (0, c.default)(w2), "string" != typeof r2 || e3.hasBindingBeenChecked(t3, r2) || (e3.markPropertyAsChecked(t3, r2), w2.emitFullInvariant(t3, r2, h2));
                }
              } else if (t3 !== e3.$GlobalObject && t3.isIntrinsic() && e3.invariantLevel >= 2 && h2 instanceof o.Value) {
                var A2 = e3.generator;
                A2 && "string" == typeof r2 && !e3.hasBindingBeenChecked(t3, r2) && (e3.markPropertyAsChecked(t3, r2), A2.emitFullInvariant(t3, r2, h2));
              }
              u2.value = h2, u2.writable = p2.writable;
            } else (0, c.default)((0, f.IsAccessorDescriptor)(e3, p2), "expected accessor property"), u2.get = p2.get, u2.set = p2.set;
            return u2.enumerable = p2.enumerable, u2.configurable = p2.configurable, u2;
          }
          if (e3.invariantLevel >= 2 && t3.isIntrinsic()) {
            var C2 = e3.generator;
            C2 && "string" == typeof r2 && t3 !== e3.$GlobalObject && !e3.hasBindingBeenChecked(t3, r2) && (e3.markPropertyAsChecked(t3, r2), C2.emitPropertyInvariant(t3, r2, "MISSING"));
          }
        } else {
          if (t3.isPartialObject()) {
            if ((0, c.default)(e3.useAbstractInterpretation), t3.isSimpleObject()) {
              if (r2 instanceof o.StringValue && (r2 = r2.value), "string" == typeof r2) {
                var P2, O2 = function(n3) {
                  return (0, c.default)("string" == typeof r2), t3.isTransitivelySimple() ? o.AbstractValue.createFromBuildFunction(e3, n3, [t3._templateFor || t3, new o.StringValue(e3, r2)], (0, v.createOperationDescriptor)("ABSTRACT_PROPERTY"), { kind: o.AbstractValue.makeKind("property", r2) }) : void 0 !== e3.generator ? o.AbstractValue.createTemporalFromBuildFunction(e3, n3, [t3._templateFor || t3, new o.StringValue(e3, r2)], (0, v.createOperationDescriptor)("ABSTRACT_PROPERTY"), { skipInvariant: true, isPure: true }) : o.AbstractValue.createFromBuildFunction(e3, n3, [t3._templateFor || t3, new o.StringValue(e3, r2)], (0, v.createOperationDescriptor)("ABSTRACT_PROPERTY"), { kind: "environment initialization expression" });
                };
                return t3.isTransitivelySimple() ? (P2 = O2(o.ObjectValue), (0, c.default)(P2 instanceof o.AbstractObjectValue), P2.makeSimple("transitive"), P2 = o.AbstractValue.createAbstractConcreteUnion(e3, P2, [e3.intrinsics.undefined, e3.intrinsics.null])) : P2 = O2(o.Value), new m.PropertyDescriptor({ configurable: true, enumerable: true, value: P2, writable: true });
              }
              return void (0, c.default)(r2 instanceof o.SymbolValue);
            }
            throw o.AbstractValue.reportIntrospectionError(t3, r2), new l.FatalError();
          }
          if (e3.invariantLevel >= 2 && t3.isIntrinsic() && !o.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(t3)) {
            var x2 = e3.generator;
            x2 && "string" == typeof r2 && t3 !== e3.$GlobalObject && !e3.hasBindingBeenChecked(t3, r2) && (e3.markPropertyAsChecked(t3, r2), x2.emitPropertyInvariant(t3, r2, "MISSING"));
          }
        }
      } }, { key: "OrdinarySetPrototypeOf", value: function(e3, t3, r2) {
        if (P(e3, t3), !e3.ignoreLeakLogic && t3.mightBeLeakedObject()) throw new l.FatalError();
        (0, c.default)(r2 instanceof o.ObjectValue || r2 instanceof o.NullValue);
        var n2 = t3.getExtensible(), i2 = t3.$Prototype;
        if ((0, f.SameValuePartial)(e3, r2, i2)) return true;
        if (!n2) return false;
        for (var a2 = r2, s2 = false; !s2; ) if (a2 instanceof o.NullValue) s2 = true;
        else {
          if ((0, f.SameValuePartial)(e3, a2, t3)) return false;
          if (a2.usesOrdinaryObjectInternalPrototypeMethods()) {
            if ((a2 = a2.$Prototype) instanceof o.AbstractObjectValue) throw o.AbstractValue.reportIntrospectionError(a2), new l.FatalError();
          } else s2 = true;
        }
        return t3.$Prototype = r2, true;
      } }, { key: "EnumerateObjectProperties", value: function(t3, r2) {
        var n2 = this, i2 = new e2.Set(), a2 = r2, s2 = r2.$OwnPropertyKeys(), u2 = 0, l2 = new o.ObjectValue(t3);
        return l2.defineNativeMethod("next", 0, function() {
          for (; ; ) {
            if (u2 >= s2.length) {
              var e3 = a2.$GetPrototypeOf();
              if (e3 instanceof o.NullValue) return d.Create.CreateIterResultObject(t3, t3.intrinsics.undefined, true);
              s2 = (a2 = e3).$OwnPropertyKeys(), u2 = 0;
            }
            var r3 = s2[u2];
            if (r3 instanceof o.StringValue) {
              var l3 = a2.$GetOwnProperty(r3);
              if (!l3 || l3.throwIfNotConcrete(t3).enumerable) {
                if (!i2.has(r3.value)) return i2.add(r3.value), d.Create.CreateIterResultObject(t3, r3, false);
                u2 += 1;
              } else n2.ThrowIfMightHaveBeenDeleted(l3), u2 += 1, i2.add(r3.value);
            } else u2 += 1;
          }
        }), l2;
      } }, { key: "ThrowIfMightHaveBeenDeleted", value: function(e3) {
        e3 instanceof m.AbstractJoinedDescriptor && (e3.descriptor1 && this.ThrowIfMightHaveBeenDeleted(e3.descriptor1), e3.descriptor2 && this.ThrowIfMightHaveBeenDeleted(e3.descriptor2)), (0, c.default)(e3 instanceof m.PropertyDescriptor, "internal slots should never assert using this");
        var t3 = e3.value;
        if (void 0 !== t3 && (t3.mightHaveBeenDeleted() && ((0, c.default)(t3 instanceof o.AbstractValue), t3.$Realm.simplifyAndRefineAbstractValue(t3).mightHaveBeenDeleted()))) throw o.AbstractValue.reportIntrospectionError(t3), new l.FatalError();
      } }, { key: "ThrowIfInternalSlotNotWritable", value: function(e3, t3, r2) {
        if (!e3.isNewObject(t3)) throw o.AbstractValue.reportIntrospectionError(t3, r2), new l.FatalError();
        return t3;
      } }, { key: "PropertyDefinitionEvaluation", value: function(e3, t3, r2, n2, i2, a2) {
        if ("method" === t3.kind) {
          var o2 = d.Functions.DefineMethod(e3, t3, r2, n2, i2);
          d.Functions.SetFunctionName(e3, o2.$Closure, o2.$Key), o2.$Closure.$HasComputedName = !!t3.computed;
          var u2 = new m.PropertyDescriptor({ value: o2.$Closure, writable: true, enumerable: a2, configurable: true });
          return this.DefinePropertyOrThrow(e3, r2, o2.$Key, u2);
        }
        if ("generator" === t3.kind) {
          var l2 = (0, s.EvalPropertyName)(t3, n2, e3, i2), p2 = i2 || (0, h.default)(t3.body), v2 = n2, y2 = d.Functions.GeneratorFunctionCreate(e3, "method", t3.params, t3.body, v2, p2);
          d.Functions.MakeMethod(e3, y2, r2);
          var b2 = d.Create.ObjectCreate(e3, e3.intrinsics.GeneratorPrototype);
          b2.originalConstructor = y2, (0, f.MakeConstructor)(e3, y2, true, b2), d.Functions.SetFunctionName(e3, y2, l2);
          var g2 = new m.PropertyDescriptor({ value: y2, writable: true, enumerable: a2, configurable: true });
          return this.DefinePropertyOrThrow(e3, r2, l2, g2);
        }
        if ("get" === t3.kind) {
          var w2 = (0, s.EvalPropertyName)(t3, n2, e3, i2), E2 = i2 || (0, h.default)(t3.body), S2 = n2, T2 = d.Functions.FunctionCreate(e3, "method", [], t3.body, S2, E2);
          d.Functions.MakeMethod(e3, T2, r2), d.Functions.SetFunctionName(e3, T2, w2, "get"), T2.$HasComputedName = !!t3.computed;
          var A2 = new m.PropertyDescriptor({ get: T2, enumerable: true, configurable: true });
          return this.DefinePropertyOrThrow(e3, r2, w2, A2);
        }
        (0, c.default)("set" === t3.kind);
        var C2 = (0, s.EvalPropertyName)(t3, n2, e3, i2), P2 = i2 || (0, h.default)(t3.body), O2 = n2, x2 = d.Functions.FunctionCreate(e3, "method", t3.params, t3.body, O2, P2);
        d.Functions.MakeMethod(e3, x2, r2), d.Functions.SetFunctionName(e3, x2, C2, "set"), x2.$HasComputedName = !!t3.computed;
        var _ = new m.PropertyDescriptor({ set: x2, enumerable: true, configurable: true });
        return this.DefinePropertyOrThrow(e3, r2, C2, _);
      } }, { key: "GetOwnPropertyKeysArray", value: function(e3, t3, r2, n2) {
        if (t3.isPartialObject() && !n2 || t3.mightBeLeakedObject() || void 0 !== t3.unknownProperty) throw o.AbstractValue.reportIntrospectionError(t3), new l.FatalError();
        var i2 = Array.from(t3.properties.keys());
        return i2 = i2.filter(function(n3) {
          var i3 = t3.properties.get(n3);
          if (!i3 || void 0 === i3.descriptor) return false;
          var a2 = i3.descriptor.throwIfNotConcrete(e3).value;
          if (void 0 === a2) return true;
          if ((0, c.default)(a2 instanceof o.Value), !a2.mightHaveBeenDeleted()) return true;
          if ((0, c.default)(a2 instanceof o.AbstractValue), r2) return true;
          throw o.AbstractValue.reportIntrospectionError(a2), new l.FatalError();
        }), e3.callReportObjectGetOwnProperties(t3), i2;
      } }]), t2;
    })();
    t.PropertiesImplementation = x;
  }).call(this, r(55));
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function o(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function s(e2, t2, r2) {
    return t2 && o(e2.prototype, t2), r2 && o(e2, r2), e2;
  }
  function u(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function l(e2) {
    return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function c(e2, t2) {
    return (c = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.PathImplementation = t.PathConditionsImplementation = void 0;
  var f = r(4), p = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), d = (r(8), r(35)), h = r(0);
  var v = (function(e2) {
    function t2(e3) {
      var r2;
      return a(this, t2), (r2 = u(this, l(t2).call(this)))._assumedConditions = /* @__PURE__ */ new Set(), r2._readonly = false, void 0 !== e3 && ((0, p.default)(e3 instanceof t2), r2._baseConditions = e3), r2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && c(e3, t3);
    })(t2, d.PathConditions), s(t2, [{ key: "add", value: function(e3) {
      (0, p.default)(!this._readonly), this._assumedConditions.add(e3), this._failedImplications = void 0, this._failedNegativeImplications = void 0;
    } }, { key: "isReadOnly", value: function() {
      return this._readonly;
    } }, { key: "implies", value: function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      if (!e3.mightNotBeTrue()) return true;
      if (!e3.mightNotBeFalse()) return false;
      if ((0, p.default)(e3 instanceof h.AbstractValue), this._assumedConditions.has(e3)) return true;
      if (void 0 !== this._impliedConditions && this._impliedConditions.has(e3)) return true;
      if (void 0 !== this._impliedNegatives && this._impliedNegatives.has(e3)) return false;
      if (void 0 !== this._failedImplications && this._failedImplications.has(e3)) return false;
      if (t3 > 10) return false;
      if (void 0 !== this._baseConditions && this._baseConditions.implies(e3, t3 + 1)) return true;
      var r2 = true, n2 = false, a2 = void 0;
      try {
        for (var o2, s2 = this._assumedConditions[Symbol.iterator](); !(r2 = (o2 = s2.next()).done); r2 = true) {
          if (o2.value.implies(e3, t3 + 1)) return this.cacheImplicationSuccess(e3);
        }
      } catch (e4) {
        n2 = true, a2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (n2) throw a2;
        }
      }
      if ("||" === e3.kind) {
        var u2 = i(e3.args, 2), l2 = u2[0], c2 = u2[1];
        if (!l2.mightNotBeTrue() || !c2.mightNotBeTrue()) return this.cacheImplicationSuccess(e3);
        if (!l2.mightNotBeFalse() && this.implies(c2, t3 + 1)) return this.cacheImplicationSuccess(e3);
        if (!c2.mightNotBeFalse() && this.implies(l2, t3 + 1)) return this.cacheImplicationSuccess(e3);
        if (this.implies(l2, t3 + 1)) return this.cacheImplicationSuccess(e3);
        if (this.implies(c2, t3 + 1)) return this.cacheImplicationSuccess(e3);
      }
      if ("!==" === e3.kind || "!=" === e3.kind) {
        var f2 = i(e3.args, 2), d2 = f2[0], v2 = f2[1];
        if (d2 instanceof h.AbstractValue) {
          if ((v2 instanceof h.NullValue || v2 instanceof h.UndefinedValue) && this.implies(d2, t3 + 1)) return this.cacheImplicationSuccess(e3);
        } else if ((0, p.default)(v2 instanceof h.AbstractValue), (d2 instanceof h.NullValue || d2 instanceof h.UndefinedValue) && this.implies(v2, t3 + 1)) return this.cacheImplicationSuccess(e3);
      }
      if ("!" === e3.kind) {
        var y2 = i(e3.args, 1)[0];
        if (this.impliesNot(y2, t3 + 1)) return this.cacheImplicationSuccess(e3);
      }
      return void 0 === this._failedImplications && (this._failedImplications = /* @__PURE__ */ new Set()), this._failedImplications.add(e3), false;
    } }, { key: "cacheImplicationSuccess", value: function(e3) {
      return void 0 === this._impliedConditions && (this._impliedConditions = /* @__PURE__ */ new Set()), this._impliedConditions.add(e3), true;
    } }, { key: "impliesNot", value: function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      if (!e3.mightNotBeTrue()) return false;
      if (!e3.mightNotBeFalse()) return true;
      if ((0, p.default)(e3 instanceof h.AbstractValue), this._assumedConditions.has(e3)) return false;
      if (void 0 !== this._impliedConditions && this._impliedConditions.has(e3)) return false;
      if (void 0 !== this._impliedNegatives && this._impliedNegatives.has(e3)) return true;
      if (void 0 !== this._failedNegativeImplications && this._failedNegativeImplications.has(e3)) return false;
      if (t3 > 10) return false;
      if (void 0 !== this._baseConditions && this._baseConditions.impliesNot(e3, t3 + 1)) return true;
      var r2 = true, n2 = false, a2 = void 0;
      try {
        for (var o2, s2 = this._assumedConditions[Symbol.iterator](); !(r2 = (o2 = s2.next()).done); r2 = true) {
          if (o2.value.impliesNot(e3, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
        }
      } catch (e4) {
        n2 = true, a2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (n2) throw a2;
        }
      }
      if ("&&" === e3.kind) {
        var u2 = i(e3.args, 2), l2 = u2[0], c2 = u2[1];
        if (!l2.mightNotBeFalse() || !c2.mightNotBeFalse()) return this.cacheNegativeImplicationSuccess(e3);
        if (!l2.mightNotBeTrue() && this.impliesNot(c2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
        if (!c2.mightNotBeTrue() && this.impliesNot(l2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
        if (this.impliesNot(l2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
        if (this.impliesNot(c2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
      }
      if ("===" === e3.kind || "==" === e3.kind) {
        var f2 = i(e3.args, 2), d2 = f2[0], v2 = f2[1];
        if (d2 instanceof h.AbstractValue) {
          if ((v2 instanceof h.NullValue || v2 instanceof h.UndefinedValue) && this.implies(d2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
        } else if ((0, p.default)(v2 instanceof h.AbstractValue), (d2 instanceof h.NullValue || d2 instanceof h.UndefinedValue) && this.implies(v2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
      }
      if ("!" === e3.kind) {
        var y2 = i(e3.args, 1)[0];
        if (this.implies(y2, t3 + 1)) return this.cacheNegativeImplicationSuccess(e3);
      }
      return void 0 === this._failedNegativeImplications && (this._failedNegativeImplications = /* @__PURE__ */ new Set()), this._failedNegativeImplications.add(e3), false;
    } }, { key: "cacheNegativeImplicationSuccess", value: function(e3) {
      return void 0 === this._impliedNegatives && (this._impliedNegatives = /* @__PURE__ */ new Set()), this._impliedNegatives.add(e3), true;
    } }, { key: "isEmpty", value: function() {
      return 0 === this._assumedConditions.size;
    } }, { key: "getLength", value: function() {
      return this._assumedConditions.size;
    } }, { key: "getAssumedConditions", value: function() {
      return this._assumedConditions;
    } }, { key: "refineBaseConditons", value: function(e3) {
      var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this;
      try {
        if (e3.abstractValueImpliesMax > 0) return;
        var n2 = t3, i2 = function(t4) {
          var n3 = e3.simplifyAndRefineAbstractCondition(t4);
          if (n3 !== t4) {
            if (!n3.mightNotBeFalse()) throw new f.InfeasiblePathError();
            n3 instanceof h.AbstractValue && (r2._readonly = false, r2.add(n3));
          }
        };
        if (void 0 !== this._baseConditions) {
          var a2 = this._baseConditions;
          try {
            this._baseConditions = void 0;
            var o2 = true, s2 = false, u2 = void 0;
            try {
              for (var l2, c2 = a2._assumedConditions[Symbol.iterator](); !(o2 = (l2 = c2.next()).done); o2 = true) {
                var p2 = l2.value;
                if ("||" === p2.kind) {
                  if (++n2 > 4) break;
                  i2(p2);
                }
              }
            } catch (e4) {
              s2 = true, u2 = e4;
            } finally {
              try {
                o2 || null == c2.return || c2.return();
              } finally {
                if (s2) throw u2;
              }
            }
          } finally {
            this._baseConditions = a2;
          }
          a2.refineBaseConditons(e3, n2, r2);
        }
      } finally {
        r2._readonly = true;
      }
    } }]), t2;
  })();
  t.PathConditionsImplementation = v;
  var y = (function() {
    function e2() {
      a(this, e2);
    }
    return s(e2, [{ key: "implies", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      return !e3.mightNotBeTrue() || !!e3.mightNotBeFalse() && ((0, p.default)(e3 instanceof h.AbstractValue), e3.$Realm.pathConditions.implies(e3, t2));
    } }, { key: "impliesNot", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      return !e3.mightNotBeFalse() || !!e3.mightNotBeTrue() && ((0, p.default)(e3 instanceof h.AbstractValue), e3.$Realm.pathConditions.impliesNot(e3, t2));
    } }, { key: "withCondition", value: function(e3, t2) {
      var r2 = e3.$Realm;
      if (!e3.mightNotBeFalse()) {
        if (r2.impliesCounterOverflowed) throw new f.InfeasiblePathError();
        (0, p.default)(false, "assuming that false equals true is asking for trouble");
      }
      var n2 = r2.pathConditions;
      r2.pathConditions = new v(n2);
      try {
        return m(e3), r2.pathConditions.refineBaseConditons(r2), t2();
      } catch (t3) {
        throw t3 instanceof f.InfeasiblePathError && (r2.pathConditions = n2, b(e3)), t3;
      } finally {
        r2.pathConditions = n2;
      }
    } }, { key: "withInverseCondition", value: function(e3, t2) {
      var r2 = e3.$Realm;
      if (!e3.mightNotBeTrue()) {
        if (r2.impliesCounterOverflowed) throw new f.InfeasiblePathError();
        (0, p.default)(false, "assuming that false equals true is asking for trouble");
      }
      var n2 = r2.pathConditions;
      r2.pathConditions = new v(n2);
      try {
        return b(e3), r2.pathConditions.refineBaseConditons(r2), t2();
      } catch (t3) {
        throw t3 instanceof f.InfeasiblePathError && (r2.pathConditions = n2, m(e3)), t3;
      } finally {
        r2.pathConditions = n2;
      }
    } }, { key: "pushAndRefine", value: function(e3) {
      var t2 = e3.$Realm, r2 = t2.pathConditions;
      t2.pathConditions = new v(r2), m(e3), t2.pathConditions.refineBaseConditons(t2);
    } }, { key: "pushInverseAndRefine", value: function(e3) {
      var t2 = e3.$Realm, r2 = t2.pathConditions;
      t2.pathConditions = new v(r2), b(e3), t2.pathConditions.refineBaseConditons(t2);
    } }]), e2;
  })();
  function m(e2) {
    var t2 = e2.$Realm;
    if (t2.pathConditions.isReadOnly() && (t2.pathConditions = new v(t2.pathConditions)), !e2.mightNotBeFalse()) {
      if (t2.impliesCounterOverflowed) throw new f.InfeasiblePathError();
      (0, p.default)(false, "assuming that false equals true is asking for trouble");
    }
    if (!(e2 instanceof h.ConcreteValue) && e2.mightNotBeTrue()) if ((0, p.default)(e2 instanceof h.AbstractValue), "&&" === e2.kind) {
      var r2 = e2.args[0], n2 = e2.args[1];
      (0, p.default)(r2 instanceof h.AbstractValue), m(r2), m(n2);
    } else if ("===" === e2.kind) {
      var a2 = i(e2.args, 2), o2 = a2[0], s2 = a2[1];
      if (s2 instanceof h.AbstractValue && s2.kind, o2 instanceof h.AbstractValue && "conditional" === o2.kind) {
        var u2 = i(o2.args, 3), l2 = u2[0], c2 = u2[1], d2 = u2[2];
        s2 instanceof h.ConcreteValue && c2 instanceof h.ConcreteValue && d2 instanceof h.ConcreteValue && (s2.equals(c2) && !s2.equals(d2) ? m(l2) : !s2.equals(c2) && s2.equals(d2) && b(l2));
      }
      t2.pathConditions.add(e2);
    } else {
      if ("!=" === e2.kind || "==" === e2.kind) {
        var y2 = e2.args[0], g = e2.args[1];
        if (y2 instanceof h.ConcreteValue && g instanceof h.AbstractValue) {
          var w = [g, y2];
          y2 = w[0], g = w[1];
        }
        if (y2 instanceof h.AbstractValue && (g instanceof h.UndefinedValue || g instanceof h.NullValue)) {
          var E = "!=" === e2.kind ? "!==" : "===";
          "!==" === E ? m(y2) : b(y2);
          var S = h.AbstractValue.createFromBinaryOp(t2, E, y2, t2.intrinsics.null);
          S.mightNotBeFalse() && m(S);
          var T = h.AbstractValue.createFromBinaryOp(t2, E, y2, t2.intrinsics.undefined);
          return void (T.mightNotBeFalse() && m(T));
        }
      }
      t2.pathConditions.add(e2);
    }
  }
  function b(e2) {
    var t2 = e2.$Realm;
    if (t2.pathConditions.isReadOnly() && (t2.pathConditions = new v(t2.pathConditions)), !e2.mightNotBeTrue()) {
      if (t2.impliesCounterOverflowed) throw new f.InfeasiblePathError();
      (0, p.default)(false, "assuming that false equals true is asking for trouble");
    }
    if (!(e2 instanceof h.ConcreteValue)) if ((0, p.default)(e2 instanceof h.AbstractValue), "||" === e2.kind) {
      var r2 = e2.args[0], n2 = e2.args[1];
      (0, p.default)(r2 instanceof h.AbstractValue), b(r2), n2 instanceof h.AbstractValue && (n2 = t2.simplifyAndRefineAbstractCondition(n2)), n2.mightNotBeTrue() && b(n2);
    } else {
      if ("!=" === e2.kind || "==" === e2.kind) {
        var i2 = e2.args[0], a2 = e2.args[1];
        if (i2 instanceof h.ConcreteValue && a2 instanceof h.AbstractValue) {
          var o2 = [a2, i2];
          i2 = o2[0], a2 = o2[1];
        }
        if (i2 instanceof h.AbstractValue && (a2 instanceof h.UndefinedValue || a2 instanceof h.NullValue)) {
          var s2 = "!=" === e2.kind ? "===" : "!==";
          "!==" === s2 ? m(i2) : b(i2);
          var u2 = h.AbstractValue.createFromBinaryOp(t2, s2, i2, t2.intrinsics.null);
          u2.mightNotBeFalse() && m(u2);
          var l2 = h.AbstractValue.createFromBinaryOp(t2, s2, i2, t2.intrinsics.undefined);
          return void (l2.mightNotBeFalse() && m(l2));
        }
      }
      var c2 = h.AbstractValue.createFromUnaryOp(t2, "!", e2, false, void 0, true, true);
      if (m(c2), c2 instanceof h.AbstractValue) {
        var d2 = t2.simplifyAndRefineAbstractCondition(c2);
        d2.equals(c2) || m(d2);
      }
    }
  }
  t.PathImplementation = y;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.JoinImplementation = void 0;
  var a = r(8), o = r(6), s = r(7), u = r(3), l = r(2), c = r(9), f = r(0), p = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function d(e2, t2, r2, n2) {
    return (t2 && t2[0] || r2 && r2[0]) instanceof f.Value ? (function(e3, t3, r3, n3) {
      for (var i2 = Math.max(t3 && t3.length || 0, r3 && r3.length || 0), a2 = [], o2 = 0; o2 < i2; o2++) a2[o2] = n3(t3 && t3[o2] || void 0, r3 && r3[o2] || void 0);
      return a2;
    })(0, t2, r2, n2) : (function(e3, t3, r3, n3) {
      for (var i2 = e3.intrinsics.empty, a2 = Math.max(t3 && t3.length || 0, r3 && r3.length || 0), o2 = [], s2 = 0; s2 < a2; s2++) {
        var u2 = t3 && t3[s2] || { $Key: i2, $Value: i2 }, l2 = u2.$Key, c2 = u2.$Value, f2 = r3 && r3[s2] || { $Key: i2, $Value: i2 }, p2 = f2.$Key, d2 = f2.$Value;
        if (void 0 === l2 && void 0 === p2) o2[s2] = { $Key: void 0, $Value: void 0 };
        else {
          var h2 = n3(l2, p2), v = n3(c2, d2);
          o2[s2] = { $Key: h2, $Value: v };
        }
      }
      return o2;
    })(e2, t2, r2, n2);
  }
  var h = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "composeCompletions", value: function(e3, t2) {
      if (e3 instanceof s.AbruptCompletion) return e3;
      if (e3 instanceof s.JoinedNormalAndAbruptCompletions) {
        if (t2 instanceof s.JoinedNormalAndAbruptCompletions) return t2.composedWith = e3, t2.pathConditionsAtCreation = e3.pathConditionsAtCreation, t2;
        var r2 = this.composeCompletions(e3.consequent, t2);
        r2 instanceof f.Value && (r2 = new s.SimpleNormalCompletion(r2));
        var n2 = this.composeCompletions(e3.alternate, t2);
        n2 instanceof f.Value && (n2 = new s.SimpleNormalCompletion(n2));
        var i2 = this.joinCompletions(e3.joinCondition, r2, n2);
        return i2 instanceof s.JoinedNormalAndAbruptCompletions && (i2.composedWith = e3.composedWith, i2.pathConditionsAtCreation = e3.pathConditionsAtCreation, i2.savedEffects = e3.savedEffects), i2;
      }
      return e3 instanceof f.Value && (e3 = new s.SimpleNormalCompletion(e3)), e3 instanceof s.Completion && e3.value === e3.value.$Realm.intrinsics.__bottomValue ? e3 : (t2 instanceof f.Value && (t2 = new s.SimpleNormalCompletion(t2)), t2);
    } }, { key: "composeWithEffects", value: function(e3, t2) {
      if (e3 instanceof s.JoinedNormalAndAbruptCompletions) {
        var r2 = s.Completion.makeSelectedCompletionsInfeasibleInCopy(function(e4) {
          return e4 instanceof s.AbruptCompletion && e4.value !== e4.value.$Realm.intrinsics.__bottomValue;
        }, e3), n2 = this.composeCompletions(r2, t2.result);
        t2.result = n2;
        var i2 = function(e4) {
          return e4 instanceof s.SimpleNormalCompletion && e4.value !== e4.value.$Realm.intrinsics.__bottomValue;
        }, o2 = s.Completion.makeSelectedCompletionsInfeasibleInCopy(i2, e3), u2 = (0, a.construct_empty_effects)(e3.value.$Realm, o2), l2 = f.AbstractValue.createJoinConditionForSelectedCompletions(i2, e3);
        return this.joinEffects(l2, t2, u2);
      }
      return e3 instanceof s.AbruptCompletion ? (0, a.construct_empty_effects)(e3.value.$Realm, e3) : t2;
    } }, { key: "_collapseSimilarCompletions", value: function(e3, t2, r2) {
      var n2 = e3.$Realm, i2 = function(t3, r3) {
        return t3 instanceof f.EmptyValue ? r3 || n2.intrinsics.undefined : r3 instanceof f.EmptyValue ? t3 || n2.intrinsics.undefined : f.AbstractValue.createFromConditionalOp(n2, e3, t3, r3);
      };
      if (t2 instanceof s.BreakCompletion && r2 instanceof s.BreakCompletion && t2.target === r2.target) {
        var a2 = this.joinValues(n2, t2.value, r2.value, i2);
        return (0, p.default)(a2 instanceof f.Value), new s.BreakCompletion(a2, e3.expressionLocation, t2.target);
      }
      if (t2 instanceof s.ContinueCompletion && r2 instanceof s.ContinueCompletion && t2.target === r2.target) return new s.ContinueCompletion(n2.intrinsics.empty, e3.expressionLocation, t2.target);
      if (t2 instanceof s.ReturnCompletion && r2 instanceof s.ReturnCompletion) {
        var o2 = this.joinValues(n2, t2.value, r2.value, i2);
        return (0, p.default)(o2 instanceof f.Value), new s.ReturnCompletion(o2, e3.expressionLocation);
      }
      if (t2 instanceof s.ThrowCompletion && r2 instanceof s.ThrowCompletion) {
        i2 = function(t3, r3) {
          return f.AbstractValue.createFromConditionalOp(n2, e3, t3, r3);
        };
        var u2 = this.joinValues(n2, t2.value, r2.value, i2);
        return (0, p.default)(u2 instanceof f.Value), new s.ThrowCompletion(u2, t2.location);
      }
      return t2 instanceof s.SimpleNormalCompletion && r2 instanceof s.SimpleNormalCompletion ? new s.SimpleNormalCompletion(i2(t2.value, r2.value)) : void 0;
    } }, { key: "joinCompletions", value: function(e3, t2, r2) {
      if (!e3.mightNotBeTrue()) return t2;
      if (!e3.mightNotBeFalse()) return r2;
      (0, p.default)(e3 instanceof f.AbstractValue);
      var n2 = this._collapseSimilarCompletions(e3, t2, r2);
      return void 0 === n2 && (t2 instanceof s.AbruptCompletion && r2 instanceof s.AbruptCompletion ? n2 = new s.JoinedAbruptCompletions(e3, t2, r2) : ((0, p.default)(t2 instanceof s.AbruptCompletion || t2 instanceof s.NormalCompletion), (0, p.default)(r2 instanceof s.AbruptCompletion || r2 instanceof s.NormalCompletion), n2 = new s.JoinedNormalAndAbruptCompletions(e3, t2, r2))), n2;
    } }, { key: "joinEffects", value: function(e3, t2, r2) {
      if ((0, p.default)(t2.canBeApplied), (0, p.default)(r2.canBeApplied), !e3.mightNotBeTrue()) return t2;
      if (!e3.mightNotBeFalse()) return r2;
      (0, p.default)(e3 instanceof f.AbstractValue);
      var i2 = t2.result, o2 = t2.generator, s2 = t2.modifiedBindings, u2 = t2.modifiedProperties, l2 = t2.createdObjects, d2 = r2.result, h2 = r2.generator, v = r2.modifiedBindings, y = r2.modifiedProperties, m = r2.createdObjects, b = e3.$Realm, g = this.joinCompletions(e3, i2, d2), w = n(this._joinBindings(e3, o2, s2, h2, v), 3), E = w[0], S = w[1], T = w[2], A = (function(e4, t3, r3) {
        var n2 = e4.$Realm, i3 = new c.Generator(n2, "joined", n2.pathConditions);
        return t3.empty() && r3.empty() || i3.joinGenerators(e4, t3, r3), i3;
      })(e3, E, S), C = this.joinPropertyBindings(b, e3, u2, y, l2, m), P = /* @__PURE__ */ new Set();
      return l2.forEach(function(e4) {
        P.add(e4);
      }), m.forEach(function(e4) {
        P.add(e4);
      }), new a.Effects(g, A, T, C, P);
    } }, { key: "joinValuesOfSelectedCompletions", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n2 = t2.value.$Realm, i2 = n2.intrinsics.__bottomValue;
      if (t2 instanceof s.JoinedAbruptCompletions || t2 instanceof s.JoinedNormalAndAbruptCompletions) {
        var a2 = t2.joinCondition, o2 = this.joinValuesOfSelectedCompletions(e3, t2.consequent), u2 = this.joinValuesOfSelectedCompletions(e3, t2.alternate);
        if (o2 === i2) {
          if (u2 instanceof f.AbstractValue && (u2 = l.Path.withInverseCondition(a2, function() {
            return (0, p.default)(u2 instanceof f.AbstractValue), n2.simplifyAndRefineAbstractValue(u2);
          })), !r2) return u2;
        } else if (u2 === i2 && (o2 instanceof f.AbstractValue && (o2 = l.Path.withCondition(a2, function() {
          return (0, p.default)(o2 instanceof f.AbstractValue), n2.simplifyAndRefineAbstractValue(o2);
        })), !r2)) return o2;
        var c2 = function(e4, t3) {
          return e4 === i2 && (e4 = n2.intrinsics.empty), t3 === i2 && (t3 = n2.intrinsics.empty), f.AbstractValue.createFromConditionalOp(n2, a2, e4, t3);
        }, d2 = this.joinValues(n2, o2, u2, c2);
        if ((0, p.default)(d2 instanceof f.Value), t2 instanceof s.JoinedNormalAndAbruptCompletions && void 0 !== t2.composedWith) {
          var h2 = t2.composedWith;
          if (!h2.containsSelectedCompletion(e3)) return d2;
          var v = this.joinValuesOfSelectedCompletions(e3, h2);
          a2 = f.AbstractValue.createJoinConditionForSelectedCompletions(e3, h2), d2 = this.joinValues(n2, d2, v, c2), (0, p.default)(d2 instanceof f.Value);
        }
        return d2;
      }
      return e3(t2) ? t2.value : i2;
    } }, { key: "joinMaps", value: function(e3, t2, r2) {
      var n2 = /* @__PURE__ */ new Map();
      return e3.forEach(function(e4, i2, a2) {
        var o2 = t2.get(i2), s2 = r2(i2, e4, o2);
        n2.set(i2, s2);
      }), t2.forEach(function(t3, i2, a2) {
        e3.has(i2) || n2.set(i2, r2(i2, void 0, t3));
      }), n2;
    } }, { key: "_joinBindings", value: function(e3, t2, r2, i2, a2) {
      var o2 = this, s2 = e3.$Realm, u2 = function(t3, r3) {
        return f.AbstractValue.createFromConditionalOp(s2, e3, t3, r3, void 0, true, true);
      }, l2 = false, d2 = false, h2 = function(e4, t3, r3, n2) {
        if (!n2) {
          var i3 = new c.Generator(s2, "RewrittenToAppendBindingAssignments", t3.pathConditions);
          t3.empty() || i3.appendGenerator(t3, ""), t3 = i3, n2 = true;
        }
        return void 0 !== r3 && r3 !== s2.intrinsics.undefined && t3.emitBindingAssignment(e4, r3), [t3, n2];
      }, v = this.joinMaps(r2, a2, function(e4, r3, a3) {
        var c2 = void 0 === r3 ? e4.hasLeaked : r3.hasLeaked, v2 = void 0 === a3 ? e4.hasLeaked : a3.hasLeaked, y = void 0 === r3 ? e4.value : r3.value, m = void 0 === a3 ? e4.value : a3.value;
        if (!c2 && v2) {
          var b = n(h2(e4, t2, y, l2), 2);
          t2 = b[0], l2 = b[1];
        } else if (c2 && !v2) {
          var g = n(h2(e4, i2, m, d2), 2);
          i2 = g[0], d2 = g[1];
        }
        var w = c2 || v2, E = w ? void 0 : o2.joinValues(s2, y, m, u2);
        return (0, p.default)(void 0 === E || E instanceof f.Value), { hasLeaked: w, value: E };
      });
      return [t2, i2, v];
    } }, { key: "joinValues", value: function(e3, t2, r2, n2) {
      return Array.isArray(t2) || Array.isArray(r2) ? ((0, p.default)(void 0 === t2 || Array.isArray(t2)), (0, p.default)(void 0 === r2 || Array.isArray(r2)), d(e3, t2, r2, n2)) : ((0, p.default)(void 0 === t2 || t2 instanceof f.Value), (0, p.default)(void 0 === r2 || r2 instanceof f.Value), void 0 === t2 || void 0 === r2 || t2 instanceof f.AbstractValue || r2 instanceof f.AbstractValue || !(0, u.StrictEqualityComparison)(e3, t2.throwIfNotConcrete(), r2.throwIfNotConcrete()) ? n2(t2, r2) : t2);
    } }, { key: "joinPropertyBindings", value: function(e3, t2, r2, n2, i2, a2) {
      var s2 = this;
      return this.joinMaps(r2, n2, function(u2, l2, c2) {
        if (void 0 === l2) {
          if (a2.has(u2.object)) return c2;
          void 0 !== u2.descriptor && r2.has(u2) ? (l2 = (0, o.cloneDescriptor)(u2.descriptor.throwIfNotConcrete(e3)), (0, p.default)(void 0 !== l2), l2.value = e3.intrinsics.empty) : l2 = u2.descriptor;
        }
        if (void 0 === c2) {
          if (i2.has(u2.object)) return l2;
          void 0 !== u2.descriptor && n2.has(u2) ? (c2 = (0, o.cloneDescriptor)(u2.descriptor.throwIfNotConcrete(e3)), (0, p.default)(void 0 !== c2), c2.value = e3.intrinsics.empty) : c2 = u2.descriptor;
        }
        return s2.joinDescriptors(e3, t2, l2, c2);
      });
    } }, { key: "joinDescriptors", value: function(e3, t2, r2, n2) {
      var i2 = function(r3, n3) {
        return f.AbstractValue.createFromConditionalOp(e3, t2, r3, n3);
      }, a2 = function(a3) {
        if ((0, p.default)(a3 === r2 || a3 === n2), !(0, u.IsDataDescriptor)(e3, a3)) return new o.AbstractJoinedDescriptor(t2);
        var s3, l3;
        a3 instanceof o.InternalSlotDescriptor ? (l3 = (s3 = new o.InternalSlotDescriptor(a3.value)).value, Array.isArray(l3) && ((0, p.default)(l3.length > 0), l3[0] instanceof f.Value ? s3.value = l3.map(function(t3) {
          return a3 === r2 ? i2(t3, e3.intrinsics.empty) : i2(e3.intrinsics.empty, t3);
        }) : s3.value = l3.map(function(t3) {
          var n3 = t3.$Key, o2 = t3.$Value;
          return { $Key: a3 === r2 ? i2(n3, e3.intrinsics.empty) : i2(e3.intrinsics.empty, n3), $Value: a3 === r2 ? i2(o2, e3.intrinsics.empty) : i2(e3.intrinsics.empty, o2) };
        }))) : (s3 = (0, o.cloneDescriptor)(a3.throwIfNotConcrete(e3)), (0, p.default)(void 0 !== s3), l3 = s3.value);
        return (0, p.default)(void 0 === l3 || l3 instanceof f.Value), s3.value = a3 === r2 ? i2(l3, e3.intrinsics.empty) : i2(e3.intrinsics.empty, l3), s3;
      };
      if (void 0 === r2) {
        if (void 0 === n2) return;
        var s2 = a2(n2);
        return s2 instanceof o.AbstractJoinedDescriptor && (s2.descriptor2 = n2), s2;
      }
      if (void 0 === n2) {
        (0, p.default)(void 0 !== r2);
        var l2 = a2(r2);
        return l2 instanceof o.AbstractJoinedDescriptor && (l2.descriptor1 = r2), l2;
      }
      if (r2 instanceof o.PropertyDescriptor && n2 instanceof o.PropertyDescriptor && (0, o.equalDescriptors)(r2, n2) && (0, u.IsDataDescriptor)(e3, r2)) {
        var c2 = (0, o.cloneDescriptor)(r2);
        (0, p.default)(void 0 !== c2);
        var d2 = this.joinValues(e3, r2.value, n2.value, i2);
        return (0, p.default)(d2 instanceof f.Value), c2.value = d2, c2;
      }
      return r2 instanceof o.InternalSlotDescriptor && n2 instanceof o.InternalSlotDescriptor ? new o.InternalSlotDescriptor(this.joinValues(e3, r2.value, n2.value, i2)) : new o.AbstractJoinedDescriptor(t2, r2, n2);
    } }, { key: "mapAndJoin", value: function(e3, t2, r2, n2) {
      var i2, a2 = this;
      (0, p.default)(t2.size > 1);
      var o2 = true, s2 = false, u2 = void 0;
      try {
        for (var c2, d2 = function() {
          var t3 = c2.value, o3 = r2(t3), s3 = e3.evaluateForEffects(function() {
            return (0, p.default)(o3 instanceof f.AbstractValue), l.Path.withCondition(o3, function() {
              return n2(t3);
            });
          }, void 0, "mapAndJoin");
          i2 = void 0 === i2 ? s3 : a2.joinEffects(o3, s3, i2);
        }, h2 = t2[Symbol.iterator](); !(o2 = (c2 = h2.next()).done); o2 = true) d2();
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          o2 || null == h2.return || h2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return (0, p.default)(void 0 !== i2), e3.applyEffects(i2), e3.returnOrThrowCompletion(i2.result);
    } }]), e2;
  })();
  t.JoinImplementation = h;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2, r2) {
    return t2 && i(e2.prototype, t2), r2 && i(e2, r2), e2;
  }
  function o(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.MaterializeImplementation = t.LeakImplementation = void 0;
  var s = r(4), u = r(10), l = r(0), c = r(3), f = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), p = b(r(28)), d = b(r(1)), h = r(48), v = r(19), y = r(14), m = r(6);
  function b(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function g(e2, t2, r2, n2, i2) {
    e2.scope.hasBinding(r2, true) || (n2 && t2.unboundReads.add(r2), i2 && t2.unboundWrites.add(r2));
  }
  var w = { ReferencedIdentifier: function(e2, t2) {
    if (!(function(e3) {
      var t3 = e3.parent;
      return f.isLabeledStatement(t3) || f.isBreakStatement(t3) || f.isContinueStatement(t3);
    })(e2)) {
      var r2 = e2.node.name;
      "arguments" !== r2 && g(e2, t2, r2, true, false);
    }
  }, "AssignmentExpression|UpdateExpression": function(e2, t2) {
    var r2 = "=" !== e2.node.operator;
    for (var n2 in e2.getBindingIdentifiers()) g(e2, t2, n2, r2, true);
  } };
  function E(e2, t2, r2) {
    var n2 = e2.generator;
    if (t2.symbols.size > 0) throw new s.FatalError("TODO: Support havocing objects with symbols");
    t2.unknownProperty;
    var i2 = r2 || function() {
      return new h.HeapInspector(e2, new v.Logger(e2, false));
    }, a2 = true, u2 = false, c2 = void 0;
    try {
      for (var f2, p2 = t2.properties[Symbol.iterator](); !(a2 = (f2 = p2.next()).done); a2 = true) {
        var b2 = o(f2.value, 2), g2 = b2[0], w2 = b2[1];
        if (!i2().canIgnoreProperty(t2, g2)) {
          var E2 = w2.descriptor;
          if (void 0 === E2) void 0 !== n2 && n2.emitPropertyDelete(t2, g2);
          else {
            (0, d.default)(E2 instanceof m.PropertyDescriptor);
            var S2 = E2.value;
            if ((0, d.default)(void 0 === S2 || S2 instanceof l.Value, "cannot be an array because we are not dealing with intrinsics here"), void 0 === S2) ;
            else if ((0, d.default)(S2 instanceof l.Value), S2 instanceof l.EmptyValue) void 0 !== n2 && n2.emitPropertyDelete(t2, g2);
            else if (void 0 !== n2) {
              var T2 = i2().getTargetIntegrityDescriptor(t2);
              (0, y.isReactElement)(t2) || (E2.writable !== T2.writable || E2.configurable !== T2.configurable ? n2.emitDefineProperty(t2, g2, E2) : n2.emitPropertyAssignment(t2, g2, S2));
            }
          }
        }
      }
    } catch (e3) {
      u2 = true, c2 = e3;
    } finally {
      try {
        a2 || null == p2.return || p2.return();
      } finally {
        if (u2) throw c2;
      }
    }
  }
  var S = (function() {
    function e2(t2, r2) {
      n(this, e2), this.realm = t2, this.objectsTrackedForLeaks = r2, this.visitedValues = /* @__PURE__ */ new Set();
    }
    return a(e2, [{ key: "mustVisit", value: function(e3) {
      return !(e3 instanceof l.ObjectValue && !this.objectsTrackedForLeaks.has(e3)) && (!this.visitedValues.has(e3) && (this.visitedValues.add(e3), true));
    } }, { key: "visitObjectProperty", value: function(e3) {
      var t2 = e3.descriptor;
      void 0 !== t2 && this.visitDescriptor(t2);
    } }, { key: "visitObjectProperties", value: function(e3, t2) {
      var r2 = this, n2 = true, i2 = false, a2 = void 0;
      try {
        for (var s2, u2 = e3.symbols[Symbol.iterator](); !(n2 = (s2 = u2.next()).done); n2 = true) {
          var l2 = o(s2.value, 2)[1];
          (0, d.default)(l2), this.visitObjectProperty(l2);
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == u2.return || u2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      var f2 = true, p2 = false, y2 = void 0;
      try {
        for (var m2, b2 = e3.properties[Symbol.iterator](); !(f2 = (m2 = b2.next()).done); f2 = true) {
          l2 = o(m2.value, 2)[1];
          (0, d.default)(l2), this.visitObjectProperty(l2);
        }
      } catch (e4) {
        p2 = true, y2 = e4;
      } finally {
        try {
          f2 || null == b2.return || b2.return();
        } finally {
          if (p2) throw y2;
        }
      }
      if (void 0 !== e3.unknownProperty) {
        var g2 = e3.unknownProperty.descriptor;
        this.visitObjectPropertiesWithComputedNamesDescriptor(g2);
      }
      if (this.visitObjectPrototype(e3), !(0, c.TestIntegrityLevel)(this.realm, e3, "frozen") && e3.mightNotBeLeakedObject()) {
        e3.leak();
        (0, d.default)(void 0 !== this.realm.generator), E(this.realm, e3, function() {
          var e4 = r2._heapInspector;
          return void 0 !== e4 ? e4 : (e4 = new h.HeapInspector(r2.realm, new v.Logger(r2.realm, false)), r2._heapInspector = e4, e4);
        });
      }
    } }, { key: "visitObjectPrototype", value: function(e3) {
      var t2 = e3.$Prototype;
      this.visitValue(t2);
    } }, { key: "visitObjectPropertiesWithComputedNamesDescriptor", value: function(e3) {
      if (void 0 !== e3) if (e3 instanceof m.PropertyDescriptor) {
        var t2 = e3.value;
        (0, d.default)(t2 instanceof l.AbstractValue), this.visitObjectPropertiesWithComputedNames(t2);
      } else e3 instanceof m.AbstractJoinedDescriptor ? (this.visitValue(e3.joinCondition), this.visitObjectPropertiesWithComputedNamesDescriptor(e3.descriptor1), this.visitObjectPropertiesWithComputedNamesDescriptor(e3.descriptor2)) : (0, d.default)(false, "unknown descriptor");
    } }, { key: "visitObjectPropertiesWithComputedNames", value: function(e3) {
      if ("widened property" !== e3.kind && "template for prototype member expression" !== e3.kind) if ("conditional" === e3.kind) {
        var t2 = e3.args[0];
        if ((0, d.default)(t2 instanceof l.AbstractValue), "template for property name condition" === t2.kind) {
          var r2 = t2.args[0];
          (0, d.default)(r2 instanceof l.AbstractValue);
          var n2 = e3.args[1], i2 = e3.args[2];
          i2 instanceof l.AbstractValue && this.visitObjectPropertiesWithComputedNames(i2), this.visitValue(r2), this.visitValue(n2);
        } else {
          this.visitValue(t2);
          var a2 = e3.args[1];
          a2 instanceof l.AbstractValue && this.visitObjectPropertiesWithComputedNames(a2);
          var o2 = e3.args[2];
          o2 instanceof l.AbstractValue && this.visitObjectPropertiesWithComputedNames(o2);
        }
      } else this.visitValue(e3);
    } }, { key: "visitDescriptor", value: function(e3) {
      void 0 === e3 || (e3 instanceof m.PropertyDescriptor ? (void 0 !== e3.value && this.visitValue(e3.value), void 0 !== e3.get && this.visitValue(e3.get), void 0 !== e3.set && this.visitValue(e3.set)) : e3 instanceof m.AbstractJoinedDescriptor ? (this.visitValue(e3.joinCondition), void 0 !== e3.descriptor1 && this.visitDescriptor(e3.descriptor1), void 0 !== e3.descriptor2 && this.visitDescriptor(e3.descriptor2)) : (0, d.default)(false, "unknown descriptor"));
    } }, { key: "visitDeclarativeEnvironmentRecordBinding", value: function(e3, t2) {
      for (var r2 = e3.bindings, n2 = Object.keys(r2), i2 = 0; i2 < n2.length; i2++) {
        var a2 = n2[i2], o2 = r2[a2], s2 = t2.unboundReads.delete(a2), l2 = t2.unboundWrites.delete(a2);
        if (s2) {
          var c2 = o2.value;
          c2 && this.visitValue(c2);
        }
        (l2 || s2) && (0, u.leakBinding)(o2);
      }
    } }, { key: "visitValueMap", value: function(e3) {
      var t2, r2 = e3.getKind();
      "Map" === r2 ? t2 = e3.$MapData : ((0, d.default)("WeakMap" === r2), t2 = e3.$WeakMapData), (0, d.default)(void 0 !== t2);
      for (var n2 = t2.length, i2 = 0; i2 < n2; i2++) {
        var a2 = t2[i2], o2 = a2.$Key, s2 = a2.$Value;
        void 0 !== o2 && void 0 !== s2 && (this.visitValue(o2), this.visitValue(s2));
      }
    } }, { key: "visitValueSet", value: function(e3) {
      var t2, r2 = e3.getKind();
      "Set" === r2 ? t2 = e3.$SetData : ((0, d.default)("WeakSet" === r2), t2 = e3.$WeakSetData), (0, d.default)(void 0 !== t2);
      for (var n2 = t2.length, i2 = 0; i2 < n2; i2++) {
        var a2 = t2[i2];
        void 0 !== a2 && this.visitValue(a2);
      }
    } }, { key: "visitValueFunction", value: function(e3) {
      if (e3.mightNotBeLeakedObject()) if (this.visitObjectProperties(e3), e3 instanceof l.BoundFunctionValue) {
        this.visitValue(e3.$BoundTargetFunction), this.visitValue(e3.$BoundThis);
        var t2 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = e3.$BoundArguments[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
            var o2 = i2.value;
            this.visitValue(o2);
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t2 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
      } else {
        (0, d.default)(!(e3 instanceof l.NativeFunctionValue), "all native function values should have already been created outside this pure function");
        for (var s2 = (function(e4) {
          (0, d.default)(e4 instanceof l.ECMAScriptSourceFunctionValue), (0, d.default)(e4.constructor === l.ECMAScriptSourceFunctionValue);
          var t3 = { unboundReads: /* @__PURE__ */ new Set(), unboundWrites: /* @__PURE__ */ new Set() }, r3 = e4.$FormalParameters;
          (0, d.default)(null != r3);
          var n3 = e4.$ECMAScriptCode;
          return (0, d.default)(null != n3), (0, p.default)(f.file(f.program([f.expressionStatement(f.functionExpression(null, r3, n3))])), w, null, t3), p.default.cache.clear(), t3;
        })(e3), c2 = e3.$Environment; c2; ) {
          var h2 = c2.environmentRecord;
          if (h2 instanceof u.ObjectEnvironmentRecord) this.visitValue(h2.object);
          else {
            if (h2 instanceof u.GlobalEnvironmentRecord) break;
            if ((0, d.default)(h2 instanceof u.DeclarativeEnvironmentRecord), this.visitDeclarativeEnvironmentRecordBinding(h2, s2), h2 instanceof u.FunctionEnvironmentRecord) {
              var v2 = h2.$FunctionObject;
              if (!this.objectsTrackedForLeaks.has(v2)) break;
            }
            c2 = c2.parent;
          }
        }
      }
    } }, { key: "visitValueObject", value: function(e3) {
      if (e3.mightNotBeLeakedObject()) {
        var t2 = e3.getKind();
        switch (this.visitObjectProperties(e3, t2), t2) {
          case "RegExp":
          case "Number":
          case "String":
          case "Boolean":
          case "ReactElement":
          case "ArrayBuffer":
          case "Array":
            return;
          case "Date":
            var r2 = e3.$DateValue;
            return (0, d.default)(void 0 !== r2), void this.visitValue(r2);
          case "Float32Array":
          case "Float64Array":
          case "Int8Array":
          case "Int16Array":
          case "Int32Array":
          case "Uint8Array":
          case "Uint16Array":
          case "Uint32Array":
          case "Uint8ClampedArray":
          case "DataView":
            var n2 = e3.$ViewedArrayBuffer;
            return (0, d.default)(void 0 !== n2), void this.visitValue(n2);
          case "Map":
          case "WeakMap":
            return void this.visitValueMap(e3);
          case "Set":
          case "WeakSet":
            return void this.visitValueSet(e3);
          default:
            return (0, d.default)("Object" === t2, "Object of kind ".concat(t2, " is not supported in calls to abstract functions.")), void (0, d.default)(void 0 === e3.$ParameterMap, "Arguments object is not supported in calls to abstract functions.");
        }
      }
    } }, { key: "visitValueProxy", value: function(e3) {
      this.visitValue(e3.$ProxyTarget), this.visitValue(e3.$ProxyHandler);
    } }, { key: "visitAbstractValue", value: function(e3) {
      if (e3.mightBeObject()) if (e3.values.isTop()) {
        if ("conditional" === e3.kind) return this.visitValue(e3.args[1]), void this.visitValue(e3.args[2]);
        var t2 = e3.kind && ("widened numeric property" === e3.kind || e3.kind.startsWith("abstractCounted"));
        (0, d.default)(void 0 !== t2 || void 0 !== e3.intrinsicName || e3.args.length > 0, "Havoced unknown object requires havocable arguments");
        for (var r2 = 0, n2 = e3.args.length; r2 < n2; r2++) this.visitValue(e3.args[r2]);
      } else {
        var i2 = true, a2 = false, o2 = void 0;
        try {
          for (var s2, u2 = e3.values.getElements()[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
            var l2 = s2.value;
            this.visitValue(l2);
          }
        } catch (e4) {
          a2 = true, o2 = e4;
        } finally {
          try {
            i2 || null == u2.return || u2.return();
          } finally {
            if (a2) throw o2;
          }
        }
      }
    } }, { key: "visitValue", value: function(e3) {
      e3 instanceof l.AbstractValue ? this.mustVisit(e3) && this.visitAbstractValue(e3) : e3.isIntrinsic() ? e3 instanceof l.ArrayValue && l.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(e3) ? this.mustVisit(e3) && this.visitValueObject(e3) : this.mustVisit(e3) : e3 instanceof l.EmptyValue ? this.mustVisit(e3) : e3 instanceof l.PrimitiveValue ? this.mustVisit(e3) : e3 instanceof l.ProxyValue ? this.mustVisit(e3) && this.visitValueProxy(e3) : e3 instanceof l.FunctionValue ? ((0, d.default)(e3 instanceof l.FunctionValue), this.mustVisit(e3) && this.visitValueFunction(e3)) : ((0, d.default)(e3 instanceof l.ObjectValue), this.mustVisit(e3) && this.visitValueObject(e3));
    } }]), e2;
  })();
  var T = (function() {
    function e2() {
      n(this, e2);
    }
    return a(e2, [{ key: "value", value: function(e3, t2, r2) {
      if (!e3.instantRender.enabled) {
        var n2 = e3.createdObjectsTrackedForLeaks;
        if (void 0 === n2) !(function(e4, t3, r3) {
          if (t3 instanceof l.ObjectValue && !(0, c.TestIntegrityLevel)(e4, t3, "frozen")) {
            var n3 = new s.CompilerDiagnostic("Unfrozen object leaked before end of global code", r3 || e4.currentLocation, "PP0017", "RecoverableError");
            if ("Recover" !== e4.handleError(n3)) throw new s.FatalError();
          }
        })(e3, t2, r2);
        else new S(e3, n2).visitValue(t2);
      }
    } }]), e2;
  })();
  t.LeakImplementation = T;
  var A = (function() {
    function e2() {
      n(this, e2);
    }
    return a(e2, [{ key: "materializeObject", value: function(e3, t2) {
      E(e3, t2);
    } }, { key: "materializeObjectsTransitive", value: function(e3, t2) {
      (0, d.default)(e3.isInPureScope());
      var r2, n2 = /* @__PURE__ */ new Set(), i2 = /* @__PURE__ */ new Set();
      A2(t2), r2 = e3.instantRender.enabled ? function(e4) {
        e4.makeFinal();
      } : function(t3) {
        (0, c.TestIntegrityLevel)(e3, t3, "frozen") || E(e3, t3);
      };
      var a2 = true, h2 = false, v2 = void 0;
      try {
        for (var y2, b2 = n2[Symbol.iterator](); !(a2 = (y2 = b2.next()).done); a2 = true) {
          r2(y2.value);
        }
      } catch (e4) {
        h2 = true, v2 = e4;
      } finally {
        try {
          a2 || null == b2.return || b2.return();
        } finally {
          if (h2) throw v2;
        }
      }
      return;
      function g2(e4, t3) {
        for (var r3 = e4.bindings, n3 = Object.keys(r3), i3 = 0; i3 < n3.length; i3++) {
          var a3 = n3[i3], o2 = r3[a3];
          (0, d.default)(void 0 !== o2), t3.delete(a3) && void 0 !== o2.value && A2(o2.value);
        }
      }
      function S2(e4) {
        if (e4.values.isTop()) {
          var t3 = true, r3 = false, n3 = void 0;
          try {
            for (var i3, a3 = e4.args[Symbol.iterator](); !(t3 = (i3 = a3.next()).done); t3 = true) {
              A2(i3.value);
            }
          } catch (e5) {
            r3 = true, n3 = e5;
          } finally {
            try {
              t3 || null == a3.return || a3.return();
            } finally {
              if (r3) throw n3;
            }
          }
        } else {
          var o2 = true, s2 = false, u2 = void 0;
          try {
            for (var l2, c2 = e4.values.getElements()[Symbol.iterator](); !(o2 = (l2 = c2.next()).done); o2 = true) {
              A2(l2.value);
            }
          } catch (e5) {
            s2 = true, u2 = e5;
          } finally {
            try {
              o2 || null == c2.return || c2.return();
            } finally {
              if (s2) throw u2;
            }
          }
        }
      }
      function T2(e4) {
        A2(e4.$ProxyTarget), A2(e4.$ProxyHandler);
      }
      function A2(e4) {
        e4.isIntrinsic() || e4 instanceof l.EmptyValue || e4 instanceof l.PrimitiveValue ? (function(e5) {
          i2.add(e5);
        })(e4) : e4 instanceof l.AbstractValue ? D(e4, S2) : e4 instanceof l.FunctionValue ? D(e4, x) : e4 instanceof l.ObjectValue ? D(e4, C) : e4 instanceof l.ProxyValue && D(e4, T2);
      }
      function C(e4) {
        (0, d.default)(e4 instanceof l.ObjectValue);
        var t3 = e4.getKind();
        switch (O(e4, t3), t3) {
          case "RegExp":
          case "Number":
          case "String":
          case "Boolean":
          case "ReactElement":
          case "ArrayBuffer":
          case "Array":
            break;
          case "Date":
            var r3 = e4.$DateValue;
            (0, d.default)(void 0 !== r3), A2(r3);
            break;
          case "Float32Array":
          case "Float64Array":
          case "Int8Array":
          case "Int16Array":
          case "Int32Array":
          case "Uint8Array":
          case "Uint16Array":
          case "Uint32Array":
          case "Uint8ClampedArray":
          case "DataView":
            var i3 = e4.$ViewedArrayBuffer;
            (0, d.default)(void 0 !== i3), A2(i3);
            break;
          case "Map":
          case "WeakMap":
            D(e4, _);
            break;
          case "Set":
          case "WeakSet":
            D(e4, V);
            break;
          default:
            (0, d.default)("Object" === t3, "Object of kind ".concat(t3, " is not supported in calls to abstract functions.")), (0, d.default)(void 0 === e4.$ParameterMap, "Arguments object is not supported in calls to abstract functions.");
        }
        n2.has(e4) || n2.add(e4);
      }
      function P(e4) {
        var t3 = e4.descriptor;
        void 0 !== t3 && (function e5(t4) {
          void 0 === t4 || (t4 instanceof m.PropertyDescriptor ? (void 0 !== t4.value && A2(t4.value), void 0 !== t4.get && A2(t4.get), void 0 !== t4.set && A2(t4.set)) : t4 instanceof m.AbstractJoinedDescriptor ? (A2(t4.joinCondition), void 0 !== t4.descriptor1 && e5(t4.descriptor1), void 0 !== t4.descriptor2 && e5(t4.descriptor2)) : (0, d.default)(false, "unknown descriptor"));
        })(t3);
      }
      function O(r3, n3) {
        var i3 = true, a3 = false, u2 = void 0;
        try {
          for (var l2, c2 = r3.symbols[Symbol.iterator](); !(i3 = (l2 = c2.next()).done); i3 = true) {
            var f2 = o(l2.value, 2)[1];
            (0, d.default)(f2), P(f2);
          }
        } catch (e4) {
          a3 = true, u2 = e4;
        } finally {
          try {
            i3 || null == c2.return || c2.return();
          } finally {
            if (a3) throw u2;
          }
        }
        var p2 = true, h3 = false, v3 = void 0;
        try {
          for (var y3, m2 = r3.properties[Symbol.iterator](); !(p2 = (y3 = m2.next()).done); p2 = true) {
            f2 = o(y3.value, 2)[1];
            (0, d.default)(f2), P(f2);
          }
        } catch (e4) {
          h3 = true, v3 = e4;
        } finally {
          try {
            p2 || null == m2.return || m2.return();
          } finally {
            if (h3) throw v3;
          }
        }
        if (void 0 !== r3.unknownProperty) {
          r3.unknownProperty.descriptor;
          !(function() {
            var r4 = new s.CompilerDiagnostic("Not supported for transitive materialization", t2.expressionLocation, "PP0041", "FatalError");
            throw e3.handleError(r4), new s.FatalError();
          })();
        }
        !(function(e4) {
          A2(e4.$Prototype);
        })(r3);
      }
      function x(e4) {
        if (O(e4), e4 instanceof l.BoundFunctionValue) {
          A2(e4.$BoundTargetFunction), A2(e4.$BoundThis);
          var t3 = true, r3 = false, n3 = void 0;
          try {
            for (var i3, a3 = e4.$BoundArguments[Symbol.iterator](); !(t3 = (i3 = a3.next()).done); t3 = true) {
              A2(i3.value);
            }
          } catch (e5) {
            r3 = true, n3 = e5;
          } finally {
            try {
              t3 || null == a3.return || a3.return();
            } finally {
              if (r3) throw n3;
            }
          }
        } else {
          (0, d.default)(!(e4 instanceof l.NativeFunctionValue), "all native function values should have already been created outside this pure function"), (function(e5, t4) {
            (0, d.default)(e5 instanceof l.ECMAScriptSourceFunctionValue);
            for (var r4 = e5.$Environment; r4; ) {
              var n4 = r4.environmentRecord;
              if (n4 instanceof u.ObjectEnvironmentRecord) A2(n4.object);
              else if (n4 instanceof u.DeclarativeEnvironmentRecord || n4 instanceof u.FunctionEnvironmentRecord) g2(n4, t4);
              else if (n4 instanceof u.GlobalEnvironmentRecord) break;
              r4 = r4.parent;
            }
          })(e4, (function(e5) {
            var t4 = { unboundReads: /* @__PURE__ */ new Set(), unboundWrites: /* @__PURE__ */ new Set() };
            (0, d.default)(e5 instanceof l.ECMAScriptSourceFunctionValue);
            var r4 = e5.$FormalParameters;
            (0, d.default)(null != r4);
            var n4 = e5.$ECMAScriptCode;
            return (0, d.default)(null != n4), (0, p.default)(f.file(f.program([f.expressionStatement(f.functionExpression(null, r4, n4))])), w, null, t4), p.default.cache.clear(), t4.unboundReads;
          })(e4));
        }
      }
      function _(e4) {
        var t3, r3 = e4.getKind();
        "Map" === r3 ? t3 = e4.$MapData : ((0, d.default)("WeakMap" === r3), t3 = e4.$WeakMapData), (0, d.default)(void 0 !== t3);
        for (var n3 = t3.length, i3 = 0; i3 < n3; i3++) {
          var a3 = t3[i3], o2 = a3.$Key, s2 = a3.$Value;
          void 0 !== o2 && void 0 !== s2 && (A2(o2), A2(s2));
        }
      }
      function V(e4) {
        var t3, r3 = e4.getKind();
        "Set" === r3 ? t3 = e4.$SetData : ((0, d.default)("WeakSet" === r3), t3 = e4.$WeakSetData), (0, d.default)(void 0 !== t3);
        for (var n3 = t3.length, i3 = 0; i3 < n3; i3++) {
          var a3 = t3[i3];
          void 0 !== a3 && A2(a3);
        }
      }
      function D(e4, t3) {
        i2.has(e4) || (i2.add(e4), t3(e4));
      }
    } }]), e2;
  })();
  t.MaterializeImplementation = A;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function o(e2) {
    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.FunctionImplementation = void 0;
  var s = r(4), u = r(7), l = r(10), c = r(0), f = r(15), p = r(16), d = r(22), h = r(3), v = r(43), y = r(63), m = r(2), b = A(r(39)), g = A(r(1)), w = A(r(71)), E = A(r(37)), S = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), T = r(6);
  function A(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var C = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "FindVarScopedDeclarations", value: function(e3) {
      return (function e4(t2, r2) {
        var i2 = [];
        switch (t2.type) {
          case "Program":
          case "BlockStatement":
            i2 = t2.body;
            break;
          case "DoWhileStatement":
          case "WhileStatement":
            i2 = [t2.body];
            break;
          case "IfStatement":
            var a2 = t2;
            i2 = [a2.consequent, a2.alternate];
            break;
          case "ForStatement":
            var o2 = t2;
            i2 = [o2.init, o2.body];
            break;
          case "ForInStatement":
            var s2 = t2;
            i2 = [s2.left, s2.body];
            break;
          case "ForOfStatement":
            var u2 = t2;
            i2 = [u2.left, u2.body];
            break;
          case "LabeledStatement":
          case "WithStatement":
            i2 = [t2.body];
            break;
          case "SwitchStatement":
            var l2 = true, c2 = false, f2 = void 0;
            try {
              for (var p2, d2 = t2.cases[Symbol.iterator](); !(l2 = (p2 = d2.next()).done); l2 = true) {
                var h2, v2 = p2.value;
                (h2 = i2).push.apply(h2, n(v2.consequent));
              }
            } catch (e5) {
              c2 = true, f2 = e5;
            } finally {
              try {
                l2 || null == d2.return || d2.return();
              } finally {
                if (c2) throw f2;
              }
            }
            break;
          case "TryStatement":
            var y2 = t2;
            i2 = [y2.block], y2.finalizer && i2.push(y2.finalizer), y2.handler && i2.push(y2.handler.body);
            break;
          case "VariableDeclaration":
            return "var" === t2.kind ? [t2] : [];
          case "FunctionDeclaration":
            return r2 < 2 ? [t2] : [];
          default:
            return [];
        }
        var m2 = [], b2 = true, g2 = false, w2 = void 0;
        try {
          for (var E2, S2 = i2[Symbol.iterator](); !(b2 = (E2 = S2.next()).done); b2 = true) {
            var T2 = E2.value;
            T2 && (m2 = m2.concat(e4(T2, r2 + 1)));
          }
        } catch (e5) {
          g2 = true, w2 = e5;
        } finally {
          try {
            b2 || null == S2.return || S2.return();
          } finally {
            if (g2) throw w2;
          }
        }
        return m2;
      })(e3, 0);
    } }, { key: "FunctionDeclarationInstantiation", value: function(e3, t2, r2) {
      var n2 = e3.getRunningContext(), i2 = n2.lexicalEnvironment, a2 = i2.environmentRecord, o2 = t2.$ECMAScriptCode;
      (0, g.default)(void 0 !== o2);
      var s2 = t2.$Strict, u2 = t2.$FormalParameters;
      (0, g.default)(void 0 !== u2);
      var l2 = /* @__PURE__ */ Object.create(null), f2 = true, p2 = false, d2 = void 0;
      try {
        for (var h2, y2 = u2[Symbol.iterator](); !(f2 = (h2 = y2.next()).done); f2 = true) {
          var w2 = h2.value, E2 = S.getBindingIdentifiers(w2, true);
          for (var T2 in E2) l2[T2] = (l2[T2] || []).concat(E2[T2]);
        }
      } catch (e4) {
        p2 = true, d2 = e4;
      } finally {
        try {
          f2 || null == y2.return || y2.return();
        } finally {
          if (p2) throw d2;
        }
      }
      var A2 = false;
      for (var C2 in l2) {
        l2[C2].length > 1 && (A2 = true);
      }
      l2 = Object.keys(l2);
      var P = true, O = true, x = false, _ = void 0;
      try {
        for (var V, D = u2[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
          if ("Identifier" !== V.value.type) {
            P = false;
            break;
          }
        }
      } catch (e4) {
        x = true, _ = e4;
      } finally {
        try {
          O || null == D.return || D.return();
        } finally {
          if (x) throw _;
        }
      }
      var N = false;
      (0, g.default)(void 0 !== u2);
      var I = true, k = false, j = void 0;
      try {
        for (var F, R = u2[Symbol.iterator](); !(I = (F = R.next()).done); I = true) {
          var M = F.value;
          if (m.Environment.ContainsExpression(e3, M)) {
            N = true;
            break;
          }
        }
      } catch (e4) {
        k = true, j = e4;
      } finally {
        try {
          I || null == R.return || R.return();
        } finally {
          if (k) throw j;
        }
      }
      var B = [];
      (0, b.default)(o2, function(e4) {
        return "VariableDeclaration" === e4.type && "var" === e4.kind && (B = B.concat(Object.keys(S.getBindingIdentifiers(e4)))), "FunctionExpression" === e4.type || "FunctionDeclaration" === e4.type;
      });
      var L = this.FindVarScopedDeclarations(o2), $ = [], G = [], z = true, U = false, W = void 0;
      try {
        for (var q, H = L.reverse()[Symbol.iterator](); !(z = (q = H.next()).done); z = true) {
          var K = q.value;
          if ("VariableDeclaration" !== K.type) {
            (0, g.default)("FunctionDeclaration" === K.type || "GeneratorDeclaration" === K.type);
            var J = m.Environment.BoundNames(e3, K)[0];
            $.indexOf(J) < 0 && ($.unshift(J), G.unshift(K));
          }
        }
      } catch (e4) {
        U = true, W = e4;
      } finally {
        try {
          z || null == H.return || H.return();
        } finally {
          if (U) throw W;
        }
      }
      var Y = true;
      "lexical" === t2.$ThisMode ? Y = false : l2.indexOf("arguments") >= 0 ? Y = false : false === N && ($.indexOf("arguments") >= 0 || [].indexOf("arguments") >= 0) && (Y = true);
      var X, Q = true, Z = false, ee = void 0;
      try {
        for (var te, re = l2[Symbol.iterator](); !(Q = (te = re.next()).done); Q = true) {
          var ne = te.value;
          false === a2.HasBinding(ne) && (a2.CreateMutableBinding(ne, false), true === A2 && a2.InitializeBinding(ne, e3.intrinsics.undefined));
        }
      } catch (e4) {
        Z = true, ee = e4;
      } finally {
        try {
          Q || null == re.return || re.return();
        } finally {
          if (Z) throw ee;
        }
      }
      true === Y && (true === s2 || false === P ? X = m.Create.CreateUnmappedArgumentsObject(e3, r2) : ((0, g.default)(void 0 !== u2), X = m.Create.CreateMappedArgumentsObject(e3, t2, u2, r2, a2)), true === s2 ? a2.CreateImmutableBinding("arguments", false) : a2.CreateMutableBinding("arguments", false), a2.InitializeBinding("arguments", X), l2.push("arguments"));
      var ie, ae, oe, se = { $Iterator: (0, v.CreateListIterator)(e3, r2), $Done: false };
      if (true === A2 ? ((0, g.default)(void 0 !== u2), m.Environment.IteratorBindingInitialization(e3, u2, se, s2)) : ((0, g.default)(void 0 !== u2), m.Environment.IteratorBindingInitialization(e3, u2, se, s2, i2)), false === N) {
        var ue = l2.slice(), le = true, ce = false, fe = void 0;
        try {
          for (var pe, de = B[Symbol.iterator](); !(le = (pe = de.next()).done); le = true) {
            var he = pe.value;
            ue.indexOf(he) < 0 && (ue.push(he), a2.CreateMutableBinding(he, false), a2.InitializeBinding(he, e3.intrinsics.undefined));
          }
        } catch (e4) {
          ce = true, fe = e4;
        } finally {
          try {
            le || null == de.return || de.return();
          } finally {
            if (ce) throw fe;
          }
        }
        ie = i2, ae = a2;
      } else {
        ie = m.Environment.NewDeclarativeEnvironment(e3, i2), e3.activeLexicalEnvironments.delete(ie), ae = ie.environmentRecord, n2.variableEnvironment = ie;
        var ve = [], ye = true, me = false, be = void 0;
        try {
          for (var ge, we = B[Symbol.iterator](); !(ye = (ge = we.next()).done); ye = true) {
            var Ee = ge.value;
            if (ve.indexOf(Ee) < 0) {
              ve.push(Ee), ae.CreateMutableBinding(Ee, false);
              var Se = void 0;
              Se = l2.indexOf(Ee) < 0 || $.indexOf(Ee) < 0 ? e3.intrinsics.undefined : a2.GetBindingValue(Ee, false), ae.InitializeBinding(Ee, Se);
            }
          }
        } catch (e4) {
          me = true, be = e4;
        } finally {
          try {
            ye || null == we.return || we.return();
          } finally {
            if (me) throw be;
          }
        }
      }
      false === s2 ? oe = m.Environment.NewDeclarativeEnvironment(e3, ie) : (oe = ie, e3.activeLexicalEnvironments.add(ie));
      var Te = oe.environmentRecord;
      n2.lexicalEnvironment = oe;
      for (var Ae = [], Ce = 0; Ce < Ae.length; Ce++) {
        var Pe = Ae[Ce], Oe = true, xe = false, _e = void 0;
        try {
          for (var Ve, De = m.Environment.BoundNames(e3, Pe)[Symbol.iterator](); !(Oe = (Ve = De.next()).done); Oe = true) {
            var Ne = Ve.value;
            "const" === Pe.kind ? Te.CreateImmutableBinding(Ne, true) : Te.CreateMutableBinding(Ne, false);
          }
        } catch (e4) {
          xe = true, _e = e4;
        } finally {
          try {
            Oe || null == De.return || De.return();
          } finally {
            if (xe) throw _e;
          }
        }
      }
      for (var Ie = 0; Ie < G.length; Ie++) {
        var ke = G[Ie], je = m.Environment.BoundNames(e3, ke)[0], Fe = oe.evaluate(ke, s2);
        (0, g.default)(Fe instanceof c.Value), ae.SetMutableBinding(je, Fe, false);
      }
      return e3.intrinsics.empty;
    } }, { key: "SetFunctionName", value: function(e3, t2, r2, n2) {
      (0, g.default)(t2.getExtensible(), "expected object to be extensible and not have a name property"), (0, g.default)("string" == typeof r2 || r2 instanceof c.StringValue || r2 instanceof c.SymbolValue || r2 instanceof c.AbstractValue, "expected name to be a string or symbol");
      var i2 = "string" == typeof r2 ? new c.StringValue(e3, r2) : r2;
      if ((0, g.default)(void 0 === n2 || "string" == typeof n2, "expected prefix to be a string if passed"), i2 instanceof c.SymbolValue) {
        var a2 = i2.$Description;
        void 0 === a2 ? i2 = e3.intrinsics.emptyString : ((0, g.default)(a2 instanceof c.Value), i2 = new c.StringValue(e3, "[".concat(a2.throwIfNotConcreteString().value, "]")));
      }
      if (n2) if (i2 instanceof c.AbstractValue) {
        var o2 = new c.StringValue(e3, n2 + " ");
        i2 = c.AbstractValue.createFromBinaryOp(e3, "+", o2, i2, i2.expressionLocation);
      } else i2 = new c.StringValue(e3, "".concat(n2, " ").concat(i2.value));
      return m.Properties.DefinePropertyOrThrow(e3, t2, "name", new T.PropertyDescriptor({ value: i2, enumerable: false, writable: false, configurable: true }));
    } }, { key: "FunctionInitialize", value: function(e3, t2, r2, n2, i2, a2) {
      e3.markVisibleLocalBindingsAsPotentiallyCaptured(), (0, g.default)(e3.isNewObject(t2)), (0, g.default)(t2.getExtensible(), "expected to be extensible and no length property");
      var o2 = 0, s2 = true, u2 = false, l2 = void 0;
      try {
        for (var f2, p2 = n2[Symbol.iterator](); !(s2 = (f2 = p2.next()).done); s2 = true) {
          if ("AssignmentPattern" === f2.value.type) break;
          o2 += 1;
        }
      } catch (e4) {
        u2 = true, l2 = e4;
      } finally {
        try {
          s2 || null == p2.return || p2.return();
        } finally {
          if (u2) throw l2;
        }
      }
      m.Properties.DefinePropertyOrThrow(e3, t2, "length", new T.PropertyDescriptor({ value: new c.NumberValue(e3, o2), writable: false, enumerable: false, configurable: true }));
      var d2 = t2.$Strict;
      return d2 || m.Properties.DefinePropertyOrThrow(e3, t2, "caller", new T.PropertyDescriptor({ value: new c.UndefinedValue(e3), writable: true, enumerable: false, configurable: true })), t2.$Environment = a2, t2.initialize(n2, i2), t2.$ScriptOrModule = m.Environment.GetActiveScriptOrModule(e3), t2.$ThisMode = "arrow" === r2 ? "lexical" : true === d2 ? "strict" : "global", t2;
    } }, { key: "GeneratorFunctionCreate", value: function(e3, t2, r2, n2, i2, a2) {
      var o2 = e3.intrinsics.Generator, s2 = this.FunctionAllocate(e3, o2, a2, "generator");
      return this.FunctionInitialize(e3, s2, t2, r2, n2, i2);
    } }, { key: "AddRestrictedFunctionProperties", value: function(e3, t2) {
      var r2 = t2.intrinsics.ThrowTypeError;
      (0, g.default)(r2);
      var n2 = new T.PropertyDescriptor({ get: r2, set: r2, enumerable: false, configurable: true });
      return m.Properties.DefinePropertyOrThrow(t2, e3, "caller", n2), m.Properties.DefinePropertyOrThrow(t2, e3, "arguments", n2);
    } }, { key: "$Call", value: function(e3, t2, r2, n2) {
      return (function e4(t3, r3, n3, i2, a2) {
        t3.startCall();
        try {
          (0, g.default)(r3 instanceof c.FunctionValue, "expected function value");
          for (var s2 = function() {
            var o2 = t3.tracers[a2], s3 = ++a2, u2 = o2.detourCall(r3, n3, i2, void 0, function() {
              return e4(t3, r3, n3, i2, s3);
            });
            if (u2 instanceof c.Value) return { v: u2 };
          }; a2 < t3.tracers.length; ) {
            var l2 = s2();
            if ("object" === o(l2)) return l2.v;
          }
          if ("classConstructor" === r3.$FunctionKind) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError, "not callable");
          var p2, d2 = t3.getRunningContext(), h2 = (0, f.PrepareForOrdinaryCall)(t3, r3, void 0), v2 = h2.lexicalEnvironment;
          try {
            var y2 = true, m2 = false, b2 = void 0;
            try {
              for (var w2, E2 = t3.tracers[Symbol.iterator](); !(y2 = (w2 = E2.next()).done); y2 = true) w2.value.beforeCall(r3, n3, i2, void 0);
            } catch (e5) {
              m2 = true, b2 = e5;
            } finally {
              try {
                y2 || null == E2.return || E2.return();
              } finally {
                if (m2) throw b2;
              }
            }
            (0, g.default)(t3.getRunningContext() === h2, "calleeContext should be current execution context"), (0, f.OrdinaryCallBindThis)(t3, r3, h2, n3), p2 = (0, f.OrdinaryCallEvaluateBody)(t3, r3, i2);
          } finally {
            t3.popContext(h2), t3.onDestroyScope(h2.lexicalEnvironment), h2.lexicalEnvironment !== v2 && t3.onDestroyScope(v2), (0, g.default)(t3.getRunningContext() === d2);
            var S2 = true, T2 = false, A2 = void 0;
            try {
              for (var C2, P = t3.tracers[Symbol.iterator](); !(S2 = (C2 = P.next()).done); S2 = true) C2.value.afterCall(r3, n3, i2, void 0, p2);
            } catch (e5) {
              T2 = true, A2 = e5;
            } finally {
              try {
                S2 || null == P.return || P.return();
              } finally {
                if (T2) throw A2;
              }
            }
          }
          if (p2 instanceof u.ReturnCompletion) return p2.value;
          if (p2 instanceof u.AbruptCompletion) throw p2;
          return t3.intrinsics.undefined;
        } finally {
          t3.endCall();
        }
      })(e3, t2, r2, n2, 0);
    } }, { key: "$Construct", value: function(e3, t2, r2, n2) {
      return (function e4(t3, r3, n3, i2, l2, p2) {
        t3.startCall();
        try {
          if ((0, g.default)(r3 instanceof c.FunctionValue, "expected function"), (0, g.default)(i2 instanceof c.ObjectValue, "expected object"), !t3.hasRunningContext()) throw (0, g.default)(t3.useAbstractInterpretation), new s.FatalError("no running context");
          var d2 = t3.getRunningContext(), h2 = r3.$ConstructorKind;
          void 0 === l2 && "base" === h2 && (l2 = m.Create.OrdinaryCreateFromConstructor(t3, i2, "ObjectPrototype"));
          for (var v2 = function() {
            var a2 = t3.tracers[p2], o2 = ++p2, s2 = a2.detourCall(r3, l2, n3, i2, function() {
              return e4(t3, r3, n3, i2, l2, o2);
            });
            if (s2 instanceof c.ObjectValue) return { v: s2 };
            (0, g.default)(void 0 === s2);
          }; p2 < t3.tracers.length; ) {
            var y2 = v2();
            if ("object" === o(y2)) return y2.v;
          }
          var b2, w2, E2 = (0, f.PrepareForOrdinaryCall)(t3, r3, i2), S2 = E2.lexicalEnvironment;
          (0, g.default)(t3.getRunningContext() === E2, "expected calleeContext to be running context");
          try {
            var T2 = true, A2 = false, C2 = void 0;
            try {
              for (var P, O = t3.tracers[Symbol.iterator](); !(T2 = (P = O.next()).done); T2 = true) P.value.beforeCall(r3, l2, n3, i2);
            } catch (e5) {
              A2 = true, C2 = e5;
            } finally {
              try {
                T2 || null == O.return || O.return();
              } finally {
                if (A2) throw C2;
              }
            }
            "base" === h2 && ((0, g.default)(l2, "this wasn't initialized for some reason"), (0, f.OrdinaryCallBindThis)(t3, r3, E2, l2));
            var x = E2.lexicalEnvironment;
            w2 = x.environmentRecord, b2 = (0, f.OrdinaryCallEvaluateBody)(t3, r3, n3);
          } finally {
            t3.popContext(E2), t3.onDestroyScope(E2.lexicalEnvironment), E2.lexicalEnvironment !== S2 && t3.onDestroyScope(S2), (0, g.default)(t3.getRunningContext() === d2);
            var _ = true, V = false, D = void 0;
            try {
              for (var N, I = t3.tracers[Symbol.iterator](); !(_ = (N = I.next()).done); _ = true) N.value.afterCall(r3, l2, n3, i2, b2);
            } catch (e5) {
              V = true, D = e5;
            } finally {
              try {
                _ || null == I.return || I.return();
              } finally {
                if (V) throw D;
              }
            }
          }
          if (b2 instanceof u.ReturnCompletion) {
            var k = (function e5(r4) {
              if (r4 === t3.intrinsics.__bottomValue) return r4;
              if (r4 instanceof c.AbstractValue) {
                if ("conditional" === r4.kind) {
                  var n4 = a(r4.args, 3), i3 = n4[0], o2 = n4[1], s2 = n4[2];
                  return t3.evaluateWithAbstractConditional(i3, function() {
                    return t3.evaluateForEffects(function() {
                      return e5(o2);
                    }, void 0, "AbstractValue/conditional/true");
                  }, function() {
                    return t3.evaluateForEffects(function() {
                      return e5(s2);
                    }, void 0, "AbstractValue/conditional/false");
                  });
                }
                if (!(r4 instanceof c.AbstractObjectValue)) {
                  if ("base" === h2) return (0, g.default)(l2, "this wasn't initialized for some reason"), c.AbstractValue.createFromTemplate(t3, "typeof A === 'object' || typeof A === 'function' ? A : B", c.ObjectValue, [r4, l2]);
                  r4.throwIfNotConcreteObject();
                }
              }
              if (r4 instanceof c.ObjectValue || r4 instanceof c.AbstractObjectValue) return r4;
              if ("base" === h2) return (0, g.default)(l2, "this wasn't initialized for some reason"), l2;
              if (!r4.mightBeUndefined()) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError, "constructor must return Object");
              r4.throwIfNotConcrete();
              var u2 = w2.GetThisBinding();
              return (0, g.default)(u2 instanceof c.ObjectValue), u2;
            })(b2.value);
            return (0, g.default)(k instanceof c.ObjectValue || k instanceof c.AbstractObjectValue), k;
          }
          if (b2 instanceof u.AbruptCompletion) throw b2;
          var j = w2.GetThisBinding();
          return (0, g.default)(j instanceof c.ObjectValue), j;
        } finally {
          t3.endCall();
        }
      })(e3, t2, r2, n2, void 0, 0);
    } }, { key: "FunctionAllocate", value: function(e3, t2, r2, n2) {
      var i2, a2 = this;
      (0, g.default)(t2 instanceof c.ObjectValue, "expected functionPrototype to be an object"), (0, g.default)("normal" === n2 || "non-constructor" === n2 || "generator" === n2, "invalid functionKind"), i2 = "normal" === n2, "non-constructor" === n2 && (n2 = "normal");
      var o2 = new c.ECMAScriptSourceFunctionValue(e3);
      return o2.$Call = function(t3, r3) {
        return a2.$Call(e3, o2, t3, r3);
      }, true === i2 && (o2.$Construct = function(t3, r3) {
        return a2.$Construct(e3, o2, t3, r3);
      }, o2.$ConstructorKind = "base"), o2.$Strict = r2, o2.$FunctionKind = n2, o2.$Prototype = t2, o2.setExtensible(true), o2.$Realm = e3, o2;
    } }, { key: "BoundFunctionCreate", value: function(e3, t2, r2, n2) {
      (0, g.default)(t2 instanceof c.ObjectValue, "expected an object");
      var i2 = t2.$GetPrototypeOf(), a2 = new c.BoundFunctionValue(e3);
      return a2.$Call = function(t3, r3) {
        return (function(e4, t4, r4, n3) {
          var i3 = t4.$BoundTargetFunction, a3 = t4.$BoundThis, o2 = t4.$BoundArguments.concat(n3);
          return (0, f.Call)(e4, i3, a3, o2);
        })(e3, a2, 0, r3);
      }, t2.$Construct && (a2.$Construct = function(t3, r3) {
        return (function(e4, t4, r4, n3) {
          var i3 = t4.$BoundTargetFunction;
          (0, g.default)(void 0 !== i3.$Construct, "doesn't have a construct internal method");
          var a3 = t4.$BoundArguments.concat(r4);
          return (0, p.SameValue)(e4, t4, n3) && (n3 = i3), (0, d.Construct)(e4, i3, a3, n3);
        })(e3, a2, t3, r3);
      }), a2.$Prototype = i2, a2.setExtensible(true), a2.$BoundTargetFunction = t2, a2.$BoundThis = r2, a2.$BoundArguments = n2, a2;
    } }, { key: "PerformEval", value: function(e3, t2, r2, n2, i2) {
      if (false === i2 && (0, g.default)(false === n2, "strictCaller is only allowed on direct eval"), !(t2 instanceof c.StringValue)) return t2;
      var a2 = (0, w.default)(e3, t2.value, "eval", "script").program;
      if (!a2.body) return e3.intrinsics.undefined;
      var o2, s2 = S.blockStatement(a2.body, a2.directives);
      o2 = !!n2 || (0, E.default)(a2);
      var l2, f2, p2 = e3.getRunningContext();
      i2 ? (l2 = m.Environment.NewDeclarativeEnvironment(e3, p2.lexicalEnvironment), f2 = p2.variableEnvironment) : (l2 = m.Environment.NewDeclarativeEnvironment(e3, r2.$GlobalEnv), f2 = r2.$GlobalEnv), o2 && (f2 = l2), p2.suspend();
      var d2, h2 = e3.createExecutionContext();
      h2.isStrict = o2, h2.setFunction(null), h2.setRealm(r2), h2.ScriptOrModule = p2.ScriptOrModule, h2.variableEnvironment = f2, h2.lexicalEnvironment = l2, e3.pushContext(h2);
      try {
        (0, g.default)(f2);
        try {
          d2 = this.EvalDeclarationInstantiation(e3, s2, f2, l2, o2);
        } catch (e4) {
          if (!(e4 instanceof u.AbruptCompletion)) throw e4;
          d2 = e4;
        }
        if ((0, g.default)(d2 instanceof c.Value || d2 instanceof u.AbruptCompletion), d2 instanceof c.Value) {
          if (a2.directives) {
            var v2 = true, y2 = false, b2 = void 0;
            try {
              for (var T2, A2 = a2.directives[Symbol.iterator](); !(v2 = (T2 = A2.next()).done); v2 = true) {
                var C2 = T2.value;
                d2 = new c.StringValue(e3, C2.value.value);
              }
            } catch (e4) {
              y2 = true, b2 = e4;
            } finally {
              try {
                v2 || null == A2.return || A2.return();
              } finally {
                if (y2) throw b2;
              }
            }
          }
          d2 = this.EvaluateStatements(a2.body, d2, o2, l2, e3);
        }
        d2 instanceof c.EmptyValue && (d2 = e3.intrinsics.undefined);
      } finally {
        h2.suspend(), e3.popContext(h2), e3.onDestroyScope(h2.lexicalEnvironment);
      }
      if ((0, g.default)(e3.getRunningContext() === p2), p2.resume(), d2 instanceof c.Value) return d2;
      throw (0, g.default)(d2 instanceof u.AbruptCompletion), d2;
    } }, { key: "incorporateSavedCompletion", value: function(e3, t2) {
      var r2 = e3.savedCompletion;
      if (void 0 !== r2) {
        if (e3.savedCompletion = void 0, e3.pathConditions = r2.pathConditionsAtCreation, void 0 === t2 && (t2 = e3.intrinsics.empty), t2 instanceof c.Value && (t2 = new u.SimpleNormalCompletion(t2)), r2 instanceof u.JoinedNormalAndAbruptCompletions) {
          var n2 = e3.getCapturedEffects(t2);
          e3.stopEffectCaptureAndUndoEffects(r2);
          var i2 = m.Join.composeWithEffects(r2, n2);
          return e3.applyEffects(i2), e3.savedCompletion = r2.composedWith, void 0 !== e3.savedCompletion ? this.incorporateSavedCompletion(e3, i2.result) : i2.result;
        }
        return m.Join.composeCompletions(r2, t2);
      }
      return t2;
    } }, { key: "EvaluateStatements", value: function(e3, t2, r2, n2, i2) {
      var a2 = t2, o2 = true, s2 = false, l2 = void 0;
      try {
        for (var f2, p2 = e3[Symbol.iterator](); !(o2 = (f2 = p2.next()).done); o2 = true) {
          var d2 = f2.value;
          if ("FunctionDeclaration" !== d2.type) {
            var v2 = n2.evaluateCompletionDeref(d2, r2);
            if (!(v2 instanceof c.EmptyValue)) {
              if (v2 instanceof u.AbruptCompletion) throw (0, h.UpdateEmpty)(i2, v2, a2 || i2.intrinsics.empty);
              (0, g.default)(v2 instanceof c.Value), a2 = v2;
            }
          }
        }
      } catch (e4) {
        s2 = true, l2 = e4;
      } finally {
        try {
          o2 || null == p2.return || p2.return();
        } finally {
          if (s2) throw l2;
        }
      }
      return a2 || i2.intrinsics.empty;
    } }, { key: "FunctionCreate", value: function(e3, t2, r2, n2, i2, a2, o2) {
      var s2;
      o2 || (o2 = e3.intrinsics.FunctionPrototype), s2 = "normal" !== t2 ? "non-constructor" : "normal";
      var u2 = this.FunctionAllocate(e3, o2, a2, s2);
      a2 || "normal" !== t2 || m.Properties.DefinePropertyOrThrow(e3, u2, "arguments", new T.PropertyDescriptor({ value: e3.intrinsics.undefined, enumerable: false, writable: true, configurable: true }));
      var l2 = this.FunctionInitialize(e3, u2, t2, r2, n2, i2);
      return (0, g.default)(void 0 === u2.pathConditionDuringDeclaration, "Function should only have one declaration site"), u2.pathConditionDuringDeclaration = e3.pathConditions.isEmpty() ? void 0 : e3.pathConditions, u2.pathConditionDuringDeclaration && (0, g.default)(u2.pathConditionDuringDeclaration.isReadOnly()), l2;
    } }, { key: "EvalDeclarationInstantiation", value: function(e3, t2, r2, n2, i2) {
      var a2 = [];
      (0, b.default)(t2, function(e4) {
        return "VariableDeclaration" === e4.type && "var" === e4.kind && (a2 = a2.concat(Object.keys(S.getBindingIdentifiers(e4)))), "FunctionExpression" === e4.type || "FunctionDeclaration" === e4.type;
      });
      var o2 = this.FindVarScopedDeclarations(t2), s2 = n2.environmentRecord, u2 = r2.environmentRecord;
      if (!i2) {
        if (u2 instanceof l.GlobalEnvironmentRecord) {
          var f2 = true, p2 = false, d2 = void 0;
          try {
            for (var h2, v2 = a2[Symbol.iterator](); !(f2 = (h2 = v2.next()).done); f2 = true) {
              var y2 = h2.value;
              if (u2.HasLexicalDeclaration(y2)) throw e3.createErrorThrowCompletion(e3.intrinsics.SyntaxError, new c.StringValue(e3, y2 + " global object is restricted"));
            }
          } catch (e4) {
            p2 = true, d2 = e4;
          } finally {
            try {
              f2 || null == v2.return || v2.return();
            } finally {
              if (p2) throw d2;
            }
          }
        }
        for (var w2 = n2; w2 !== r2; ) {
          var E2 = w2.environmentRecord;
          if (!(E2 instanceof l.ObjectEnvironmentRecord)) {
            var T2 = true, A2 = false, C2 = void 0;
            try {
              for (var P, O = a2[Symbol.iterator](); !(T2 = (P = O.next()).done); T2 = true) {
                var x = P.value;
                if (E2.HasBinding(x)) throw e3.createErrorThrowCompletion(e3.intrinsics.SyntaxError, x + " global object is restricted");
              }
            } catch (e4) {
              A2 = true, C2 = e4;
            } finally {
              try {
                T2 || null == O.return || O.return();
              } finally {
                if (A2) throw C2;
              }
            }
          }
          w2 = w2.parent, (0, g.default)(null !== w2);
        }
      }
      var _ = [], V = [], D = true, N = false, I = void 0;
      try {
        for (var k, j = o2.reverse()[Symbol.iterator](); !(D = (k = j.next()).done); D = true) {
          var F = k.value;
          if ("VariableDeclaration" !== F.type) {
            (0, g.default)("FunctionDeclaration" === F.type || "GeneratorDeclaration" === F.type);
            var R = m.Environment.BoundNames(e3, F)[0];
            if (V.indexOf(R) < 0) {
              if (u2 instanceof l.GlobalEnvironmentRecord) {
                if (!u2.CanDeclareGlobalFunction(R)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, R + " is not definable");
              }
              V.push(R), _.unshift(F);
            }
          }
        }
      } catch (e4) {
        N = true, I = e4;
      } finally {
        try {
          D || null == j.return || j.return();
        } finally {
          if (N) throw I;
        }
      }
      var M = [], B = true, L = false, $ = void 0;
      try {
        for (var G, z = o2[Symbol.iterator](); !(B = (G = z.next()).done); B = true) {
          var U = G.value;
          if ("VariableDeclaration" === U.type) {
            var W = true, q = false, H = void 0;
            try {
              for (var K, J = m.Environment.BoundNames(e3, U)[Symbol.iterator](); !(W = (K = J.next()).done); W = true) {
                var Y = K.value;
                if (V.indexOf(Y) < 0) {
                  if (u2 instanceof l.GlobalEnvironmentRecord) {
                    if (!u2.CanDeclareGlobalVar(Y)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, Y + " is not definable");
                  }
                  M.indexOf(Y) < 0 && M.push(Y);
                }
              }
            } catch (e4) {
              q = true, H = e4;
            } finally {
              try {
                W || null == J.return || J.return();
              } finally {
                if (q) throw H;
              }
            }
          }
        }
      } catch (e4) {
        L = true, $ = e4;
      } finally {
        try {
          B || null == z.return || z.return();
        } finally {
          if (L) throw $;
        }
      }
      var X = [], Q = true, Z = false, ee = void 0;
      try {
        for (var te, re = t2.body[Symbol.iterator](); !(Q = (te = re.next()).done); Q = true) {
          var ne = te.value;
          "VariableDeclaration" === ne.type && "var" !== ne.kind && X.push(ne);
        }
      } catch (e4) {
        Z = true, ee = e4;
      } finally {
        try {
          Q || null == re.return || re.return();
        } finally {
          if (Z) throw ee;
        }
      }
      for (var ie = 0; ie < X.length; ie++) {
        var ae = X[ie], oe = true, se = false, ue = void 0;
        try {
          for (var le, ce = m.Environment.BoundNames(e3, ae)[Symbol.iterator](); !(oe = (le = ce.next()).done); oe = true) {
            var fe = le.value;
            "const" === ae.kind ? s2.CreateImmutableBinding(fe, true) : s2.CreateMutableBinding(fe, false);
          }
        } catch (e4) {
          se = true, ue = e4;
        } finally {
          try {
            oe || null == ce.return || ce.return();
          } finally {
            if (se) throw ue;
          }
        }
      }
      for (var pe = 0; pe < _.length; pe++) {
        var de = _[pe], he = m.Environment.BoundNames(e3, de)[0], ve = n2.evaluate(de, i2);
        if ((0, g.default)(ve instanceof c.Value), u2 instanceof l.GlobalEnvironmentRecord) u2.CreateGlobalFunctionBinding(he, ve, true);
        else u2.HasBinding(he) ? u2.SetMutableBinding(he, ve, false) : (u2.CreateMutableBinding(he, true), u2.InitializeBinding(he, ve));
      }
      for (var ye = 0; ye < M.length; ye++) {
        var me = M[ye];
        if (u2 instanceof l.GlobalEnvironmentRecord) u2.CreateGlobalVarBinding(me, true);
        else u2.HasBinding(me) || (u2.CreateMutableBinding(me, true), u2.InitializeBinding(me, e3.intrinsics.undefined));
      }
      return e3.intrinsics.empty;
    } }, { key: "MakeMethod", value: function(e3, t2, r2) {
      return (0, g.default)(e3.isNewObject(t2)), (0, g.default)(t2 instanceof c.ECMAScriptSourceFunctionValue, "F is an ECMAScript function object."), (0, g.default)(r2 instanceof c.ObjectValue, "Type(homeObject) is Object."), t2.$HomeObject = r2, e3.intrinsics.undefined;
    } }, { key: "DefineMethod", value: function(e3, t2, r2, n2, i2, a2) {
      var o2, s2 = (0, y.EvalPropertyName)(t2, n2, e3, i2), u2 = i2 || (0, E.default)(t2.body), l2 = n2;
      o2 = a2 ? "normal" : "method";
      var c2 = this.FunctionCreate(e3, o2, t2.params, t2.body, l2, u2, a2);
      return this.MakeMethod(e3, c2, r2), { $Key: s2, $Closure: c2 };
    } }]), e2;
  })();
  t.FunctionImplementation = C;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.EnvironmentImplementation = void 0;
  var a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), o = r(0), s = r(10), u = r(7), l = r(4), c = r(63), f = r(3), p = r(2), d = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
  var h = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "RestBindingInitialization", value: function(e3, t2, r2, n2, i2, a2) {
      var o2 = t2.argument, s2 = p.Create.ObjectCreate(e3, e3.intrinsics.ObjectPrototype);
      p.Create.CopyDataProperties(e3, s2, r2, n2);
      var u2 = o2.name, l2 = this.ResolveBinding(e3, u2, i2, a2);
      return void 0 === a2 ? p.Properties.PutValue(e3, l2, s2) : this.InitializeReferencedBinding(e3, l2, s2);
    } }, { key: "PropertyBindingInitialization", value: function(e3, t2, r2, n2, i2) {
      if (0 === t2.length) return [];
      var a2, o2 = t2.slice(-1)[0], s2 = t2.slice(0, -1), u2 = this.PropertyBindingInitialization(e3, s2, r2, n2, i2), l2 = i2 || e3.getRunningContext().lexicalEnvironment, f2 = (0, c.EvalPropertyName)(o2, l2, e3, n2);
      return this.KeyedBindingInitialization(e3, o2.value, r2, n2, i2, f2), a2 = [f2], u2 = u2.concat(a2);
    } }, { key: "IsSuperReference", value: function(e3, t2) {
      return void 0 !== t2.thisValue;
    } }, { key: "HasPrimitiveBase", value: function(e3, t2) {
      var r2 = this.GetBase(e3, t2);
      if (!r2 || r2 instanceof s.EnvironmentRecord) return false;
      var n2 = r2.getType();
      return n2 === o.BooleanValue || n2 === o.StringValue || n2 === o.SymbolValue || n2 === o.NumberValue || n2 === o.IntegralValue;
    } }, { key: "GetReferencedName", value: function(e3, t2) {
      if (t2.referencedName instanceof o.AbstractValue) throw o.AbstractValue.reportIntrospectionError(t2.referencedName), new l.FatalError();
      return t2.referencedName;
    } }, { key: "GetReferencedNamePartial", value: function(e3, t2) {
      return t2.referencedName;
    } }, { key: "GetValue", value: function(e3, t2) {
      var r2 = this._dereference(e3, t2);
      return r2 instanceof o.AbstractValue ? e3.simplifyAndRefineAbstractValue(r2) : r2;
    } }, { key: "GetConditionValue", value: function(e3, t2) {
      var r2 = this._dereference(e3, t2);
      return r2 instanceof o.AbstractValue ? e3.simplifyAndRefineAbstractCondition(r2) : r2;
    } }, { key: "_dereferenceConditional", value: function(e3, t2, r2, n2, i2) {
      var a2 = this;
      return e3.evaluateWithAbstractConditional(r2, function() {
        return e3.evaluateForEffects(function() {
          if ((0, s.isValidBaseValue)(n2)) {
            var r3 = new s.Reference(n2, t2.referencedName, t2.strict, t2.thisValue);
            return a2._dereference(e3, r3);
          }
          return a2._dereference(e3, t2, false);
        }, null, "_dereferenceConditional consequent");
      }, function() {
        return e3.evaluateForEffects(function() {
          if ((0, s.isValidBaseValue)(i2)) {
            var r3 = new s.Reference(i2, t2.referencedName, t2.strict, t2.thisValue);
            return a2._dereference(e3, r3);
          }
          return a2._dereference(e3, t2, false);
        }, null, "_dereferenceConditional alternate");
      });
    } }, { key: "_dereference", value: function(e3, t2) {
      var r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
      if (!(t2 instanceof s.Reference)) return t2;
      var i2 = this.GetBase(e3, t2);
      if (this.IsUnresolvableReference(e3, t2)) throw e3.createErrorThrowCompletion(e3.intrinsics.ReferenceError, "".concat(t2.referencedName.toString(), " is not defined"));
      if (this.IsPropertyReference(e3, t2)) {
        if (i2 instanceof o.AbstractValue) {
          if (r2 && !(i2 instanceof o.AbstractObjectValue)) if ("conditional" === i2.kind) {
            var u2 = n(i2.args, 3), l2 = u2[0], c2 = u2[1], d2 = u2[2];
            if ((0, a.default)(l2 instanceof o.AbstractValue), (0, s.isValidBaseValue)(c2) || (0, s.isValidBaseValue)(d2)) return this._dereferenceConditional(e3, t2, l2, c2, d2);
          } else {
            if ("||" === i2.kind) {
              var h2 = n(i2.args, 2), v = h2[0], y = h2[1];
              return (0, a.default)(v instanceof o.AbstractValue), this._dereferenceConditional(e3, t2, v, v, y);
            }
            if ("&&" === i2.kind) {
              var m = n(i2.args, 2), b = m[0], g = m[1];
              return (0, a.default)(b instanceof o.AbstractValue), this._dereferenceConditional(e3, t2, b, g, b);
            }
          }
          i2 = p.To.ToObject(e3, i2);
        }
        return this.HasPrimitiveBase(e3, t2) && ((0, a.default)(i2 instanceof o.Value && !(0, f.HasSomeCompatibleType)(i2, o.UndefinedValue, o.NullValue)), i2 = p.To.ToObject(e3, i2)), (0, a.default)(i2 instanceof o.ObjectValue || i2 instanceof o.AbstractObjectValue), i2.$GetPartial(this.GetReferencedNamePartial(e3, t2), (0, f.GetThisValue)(e3, t2));
      }
      if (i2 instanceof s.EnvironmentRecord) {
        var w = this.GetReferencedName(e3, t2);
        return (0, a.default)("string" == typeof w), i2.GetBindingValue(w, this.IsStrictReference(e3, t2));
      }
      (0, a.default)(false);
    } }, { key: "IsStrictReference", value: function(e3, t2) {
      return t2.strict;
    } }, { key: "IsPropertyReference", value: function(e3, t2) {
      return t2.base instanceof o.AbstractValue || t2.base instanceof o.ObjectValue || this.HasPrimitiveBase(e3, t2);
    } }, { key: "GetBase", value: function(e3, t2) {
      return t2.base;
    } }, { key: "IsUnresolvableReference", value: function(e3, t2) {
      return !t2.base;
    } }, { key: "NewDeclarativeEnvironment", value: function(e3, t2) {
      var r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], n2 = new s.LexicalEnvironment(e3);
      r2 && e3.activeLexicalEnvironments.add(n2);
      var i2 = new s.DeclarativeEnvironmentRecord(e3);
      return n2.environmentRecord = i2, n2.parent = t2, n2;
    } }, { key: "BoundNames", value: function(e3, t2) {
      return Object.keys(d.getOuterBindingIdentifiers(t2));
    } }, { key: "ContainsExpression", value: function(e3, t2) {
      if (!t2) return false;
      switch (t2.type) {
        case "ObjectPattern":
          var r2 = true, n2 = false, i2 = void 0;
          try {
            for (var a2, o2 = t2.properties[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
              var s2 = a2.value;
              if (this.ContainsExpression(e3, s2)) return true;
            }
          } catch (e4) {
            n2 = true, i2 = e4;
          } finally {
            try {
              r2 || null == o2.return || o2.return();
            } finally {
              if (n2) throw i2;
            }
          }
          return false;
        case "ArrayPattern":
          var u2 = true, l2 = false, c2 = void 0;
          try {
            for (var f2, p2 = t2.elements[Symbol.iterator](); !(u2 = (f2 = p2.next()).done); u2 = true) {
              var d2 = f2.value;
              if (this.ContainsExpression(e3, d2)) return true;
            }
          } catch (e4) {
            l2 = true, c2 = e4;
          } finally {
            try {
              u2 || null == p2.return || p2.return();
            } finally {
              if (l2) throw c2;
            }
          }
          return false;
        case "RestElement":
          return this.ContainsExpression(e3, t2.argument);
        case "AssignmentPattern":
          return true;
        default:
          return false;
      }
    } }, { key: "ResolveBinding", value: function(e3, t2, r2, n2) {
      return n2 || (n2 = e3.getRunningContext().lexicalEnvironment), (0, a.default)(n2 instanceof s.LexicalEnvironment, "expected lexical environment"), this.GetIdentifierReference(e3, n2, t2, r2);
    } }, { key: "GetIdentifierReference", value: function(e3, t2, r2, n2) {
      if (!t2) return new s.Reference(void 0, r2, n2);
      var i2 = t2.environmentRecord;
      if (i2.HasBinding(r2)) return new s.Reference(i2, r2, n2);
      var a2 = t2.parent;
      return this.GetIdentifierReference(e3, a2, r2, n2);
    } }, { key: "InitializeReferencedBinding", value: function(e3, t2, r2) {
      (0, a.default)(t2 instanceof s.Reference, "expected reference"), (0, a.default)(!this.IsUnresolvableReference(e3, t2), "expected resolvable reference");
      var n2 = this.GetBase(e3, t2);
      (0, a.default)(n2 instanceof s.EnvironmentRecord, "expected environment record");
      var i2 = this.GetReferencedName(e3, t2);
      return (0, a.default)("string" == typeof i2), n2.InitializeBinding(i2, r2);
    } }, { key: "BlockDeclarationInstantiation", value: function(e3, t2, r2, n2) {
      var i2 = n2.environmentRecord;
      (0, a.default)(i2 instanceof s.DeclarativeEnvironmentRecord, "expected declarative environment record");
      var u2 = [], l2 = true, c2 = false, f2 = void 0;
      try {
        for (var p2, d2 = r2[Symbol.iterator](); !(l2 = (p2 = d2.next()).done); l2 = true) {
          var h2 = p2.value;
          ("ClassDeclaration" === h2.type || "FunctionDeclaration" === h2.type || "VariableDeclaration" === h2.type && "var" !== h2.kind) && u2.push(h2);
        }
      } catch (e4) {
        c2 = true, f2 = e4;
      } finally {
        try {
          l2 || null == d2.return || d2.return();
        } finally {
          if (c2) throw f2;
        }
      }
      for (var v = 0; v < u2.length; v++) {
        var y = u2[v], m = true, b = false, g = void 0;
        try {
          for (var w, E = this.BoundNames(e3, y)[Symbol.iterator](); !(m = (w = E.next()).done); m = true) {
            var S = w.value;
            if (i2.HasBinding(S)) throw e3.createErrorThrowCompletion(e3.intrinsics.SyntaxError, S + " already declared");
            "VariableDeclaration" === y.type && "const" === y.kind ? i2.CreateImmutableBinding(S, true) : i2.CreateMutableBinding(S, false);
          }
        } catch (e4) {
          b = true, g = e4;
        } finally {
          try {
            m || null == E.return || E.return();
          } finally {
            if (b) throw g;
          }
        }
        if ("FunctionDeclaration" === y.type) {
          var T = this.BoundNames(e3, y)[0], A = n2.evaluate(y, t2);
          (0, a.default)(A instanceof o.Value), i2.InitializeBinding(T, A);
        }
      }
    } }, { key: "NewGlobalEnvironment", value: function(e3, t2, r2) {
      var n2 = new s.LexicalEnvironment(e3), i2 = new s.ObjectEnvironmentRecord(e3, t2), a2 = new s.DeclarativeEnvironmentRecord(e3), o2 = new s.GlobalEnvironmentRecord(e3);
      return o2.$ObjectRecord = i2, o2.$GlobalThisValue = r2, o2.$DeclarativeRecord = a2, o2.$VarNames = [], n2.environmentRecord = o2, e3.activeLexicalEnvironments.add(n2), n2.parent = null, n2;
    } }, { key: "NewObjectEnvironment", value: function(e3, t2, r2) {
      var n2 = new s.LexicalEnvironment(e3);
      e3.activeLexicalEnvironments.add(n2);
      var i2 = new s.ObjectEnvironmentRecord(e3, t2);
      return n2.environmentRecord = i2, n2.parent = r2, n2;
    } }, { key: "NewFunctionEnvironment", value: function(e3, t2, r2) {
      (0, a.default)(t2 instanceof o.ECMAScriptFunctionValue, "expected a function"), (0, a.default)(void 0 === r2 || r2 instanceof o.ObjectValue, "expected undefined or object value for new target");
      var n2 = new s.LexicalEnvironment(e3);
      e3.activeLexicalEnvironments.add(n2);
      var i2 = new s.FunctionEnvironmentRecord(e3);
      i2.$FunctionObject = t2, "lexical" === t2.$ThisMode ? i2.$ThisBindingStatus = "lexical" : i2.$ThisBindingStatus = "uninitialized";
      var u2 = t2.$HomeObject;
      return i2.$HomeObject = u2, i2.$NewTarget = r2, n2.environmentRecord = i2, n2.parent = t2.$Environment, n2;
    } }, { key: "GetActiveScriptOrModule", value: function(e3) {
      if (0 === e3.contextStack.length) return null;
      for (var t2, r2 = e3.contextStack.length - 1; r2 >= 0; r2--) {
        var n2 = (t2 = e3.contextStack[r2]).function;
        if (null != n2 && n2.$ScriptOrModule instanceof Object) return n2.$ScriptOrModule;
      }
      return t2 = e3.getRunningContext(), (0, a.default)(null !== t2.ScriptOrModule), t2.ScriptOrModule;
    } }, { key: "GetThisEnvironment", value: function(e3) {
      for (var t2 = e3.getRunningContext().lexicalEnvironment; ; ) {
        var r2 = t2.environmentRecord;
        if (r2.HasThisBinding()) return r2;
        var n2 = t2.parent;
        (0, a.default)(n2), t2 = n2;
      }
      (0, a.default)(false);
    } }, { key: "ResolveThisBinding", value: function(e3) {
      return this.GetThisEnvironment(e3).GetThisBinding();
    } }, { key: "BindingInitialization", value: function(e3, t2, r2, n2, i2) {
      if ("ArrayPattern" === t2.type) {
        var o2, s2 = (0, f.GetIterator)(e3, r2), l2 = { $Iterator: s2, $Done: false };
        try {
          o2 = this.IteratorBindingInitialization(e3, t2.elements, l2, n2, i2);
        } catch (t3) {
          if (false === l2.$Done && t3 instanceof u.AbruptCompletion) throw (0, f.IteratorClose)(e3, s2, t3);
          throw t3;
        }
        if (false === l2.$Done) {
          var c2 = (0, f.IteratorClose)(e3, s2, new u.SimpleNormalCompletion(e3.intrinsics.undefined));
          if (c2 instanceof u.AbruptCompletion) throw c2;
        }
        return o2;
      }
      if ("ObjectPattern" === t2.type) {
        (0, f.RequireObjectCoercible)(e3, r2);
        var p2 = [], d2 = null, h2 = true, v = false, y = void 0;
        try {
          for (var m, b = t2.properties[Symbol.iterator](); !(h2 = (m = b.next()).done); h2 = true) {
            var g = m.value;
            "RestElement" === g.type ? d2 = g : p2.push(g);
          }
        } catch (e4) {
          v = true, y = e4;
        } finally {
          try {
            h2 || null == b.return || b.return();
          } finally {
            if (v) throw y;
          }
        }
        if (!d2) return this.PropertyBindingInitialization(e3, p2, r2, n2, i2), e3.intrinsics.empty;
        if (0 === p2.length) {
          return this.RestBindingInitialization(e3, d2, r2, [], n2, i2);
        }
        var w = this.PropertyBindingInitialization(e3, p2, r2, n2, i2);
        return this.RestBindingInitialization(e3, d2, r2, w, n2, i2);
      }
      if ("Identifier" === t2.type) {
        var E = t2.name;
        return this.InitializeBoundName(e3, E, r2, i2);
      }
      (0, a.default)("VariableDeclaration" === t2.type);
      var S = true, T = false, A = void 0;
      try {
        for (var C, P = t2.declarations[Symbol.iterator](); !(S = (C = P.next()).done); S = true) {
          var O = C.value;
          this.BindingInitialization(e3, O.id, r2, n2, i2);
        }
      } catch (e4) {
        T = true, A = e4;
      } finally {
        try {
          S || null == P.return || P.return();
        } finally {
          if (T) throw A;
        }
      }
    } }, { key: "IteratorBindingInitialization", value: function(e3, t2, r2, n2, i2) {
      var s2, l2 = i2 || e3.getRunningContext().lexicalEnvironment;
      if (t2.length > 0) {
        var c2 = t2[t2.length - 1];
        null !== c2 && "RestElement" === c2.type && (s2 = c2, t2 = t2.slice(0, -1));
      }
      var d2 = true, h2 = false, v = void 0;
      try {
        for (var y, m = t2[Symbol.iterator](); !(d2 = (y = m.next()).done); d2 = true) {
          var b = y.value;
          if (null !== b) {
            var g = void 0;
            if ("AssignmentPattern" === b.type && (g = b.right, b = b.left), "Identifier" !== b.type) {
              (0, a.default)("ObjectPattern" === b.type || "ArrayPattern" === b.type);
              var w = void 0;
              if (false === r2.$Done) {
                var E = void 0;
                try {
                  E = (0, f.IteratorStep)(e3, r2.$Iterator);
                } catch (e4) {
                  throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
                }
                if (false === E) r2.$Done = true, w = e3.intrinsics.undefined;
                else try {
                  w = (0, f.IteratorValue)(e3, E);
                } catch (e4) {
                  throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
                }
              } else w = e3.intrinsics.undefined;
              if (g && w instanceof o.UndefinedValue) {
                var S = l2.evaluate(g, n2);
                w = this.GetValue(e3, S);
              }
              this.BindingInitialization(e3, b, w, n2, i2);
            } else {
              var T = b.name, A = this.ResolveBinding(e3, b.name, n2, i2), C = void 0;
              if (false === r2.$Done) {
                var P = void 0;
                try {
                  P = (0, f.IteratorStep)(e3, r2.$Iterator);
                } catch (e4) {
                  throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
                }
                if (false === P) r2.$Done = true, C = e3.intrinsics.undefined;
                else try {
                  C = (0, f.IteratorValue)(e3, P);
                } catch (e4) {
                  throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
                }
              } else C = e3.intrinsics.undefined;
              if (g && C instanceof o.UndefinedValue) {
                var O = l2.evaluate(g, n2);
                if (C = this.GetValue(e3, O), (0, f.IsAnonymousFunctionDefinition)(e3, g) && C instanceof o.ObjectValue) false === (0, f.HasOwnProperty)(e3, C, "name") && p.Functions.SetFunctionName(e3, C, T);
              }
              if (!i2) {
                p.Properties.PutValue(e3, A, C);
                continue;
              }
              this.InitializeReferencedBinding(e3, A, C);
            }
          } else if (false === r2.$Done) {
            var x = void 0;
            try {
              x = (0, f.IteratorStep)(e3, r2.$Iterator);
            } catch (e4) {
              throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
            }
            false === x && (r2.$Done = true);
          }
        }
      } catch (e4) {
        h2 = true, v = e4;
      } finally {
        try {
          d2 || null == m.return || m.return();
        } finally {
          if (h2) throw v;
        }
      }
      if (s2 && "Identifier" === s2.argument.type) for (var _ = this.ResolveBinding(e3, s2.argument.name, n2, i2), V = p.Create.ArrayCreate(e3, 0), D = 0; ; ) {
        var N = void 0;
        if (false === r2.$Done) {
          try {
            N = (0, f.IteratorStep)(e3, r2.$Iterator);
          } catch (e4) {
            throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
          }
          false === N && (r2.$Done = true);
        }
        if (true === r2.$Done) {
          if (!i2) {
            p.Properties.PutValue(e3, _, V);
            break;
          }
          this.InitializeReferencedBinding(e3, _, V);
          break;
        }
        (0, a.default)(N instanceof o.ObjectValue);
        var I = void 0;
        try {
          I = (0, f.IteratorValue)(e3, N);
        } catch (e4) {
          throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
        }
        var k = p.Create.CreateDataProperty(e3, V, D.toString(), I);
        (0, a.default)(k, "expected to create data property"), D += 1;
      }
      else if (s2) {
        (0, a.default)("ArrayPattern" === s2.argument.type || "ObjectPattern" === s2.argument.type);
        for (var j = p.Create.ArrayCreate(e3, 0), F = 0; ; ) {
          var R = void 0;
          if (false === r2.$Done) {
            try {
              R = (0, f.IteratorStep)(e3, r2.$Iterator);
            } catch (e4) {
              throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
            }
            false === R && (r2.$Done = true);
          }
          if (true === r2.$Done) {
            this.BindingInitialization(e3, s2.argument, j, n2, i2);
            break;
          }
          (0, a.default)(R instanceof o.ObjectValue);
          var M = void 0;
          try {
            M = (0, f.IteratorValue)(e3, R);
          } catch (e4) {
            throw e4 instanceof u.AbruptCompletion && (r2.$Done = true), e4;
          }
          var B = p.Create.CreateDataProperty(e3, j, F.toString(), M);
          (0, a.default)(B, "expected to create data property"), F += 1;
        }
      }
    } }, { key: "InitializeBoundName", value: function(e3, t2, r2, n2) {
      if ((0, a.default)("string" == typeof t2, "expected name to be a string"), n2) return n2.environmentRecord.InitializeBinding(t2, r2), e3.intrinsics.undefined;
      var i2 = this.ResolveBinding(e3, t2, false);
      return p.Properties.PutValue(e3, i2, r2);
    } }, { key: "IsDestructuring", value: function(e3) {
      switch (e3.type) {
        case "VariableDeclaration":
          var t2 = true, r2 = false, n2 = void 0;
          try {
            for (var i2, a2 = e3.declarations[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
              var o2 = i2.value;
              switch (o2.type) {
                case "VariableDeclarator":
                  switch (o2.id.type) {
                    case "ArrayPattern":
                    case "AssignmentPattern":
                    case "ObjectPattern":
                      return true;
                  }
              }
            }
          } catch (e4) {
            r2 = true, n2 = e4;
          } finally {
            try {
              t2 || null == a2.return || a2.return();
            } finally {
              if (r2) throw n2;
            }
          }
          return false;
        case "ArrayLiteral":
        case "ObjectLiteral":
          return true;
        case "ArrayPattern":
        case "ObjectPattern":
          return true;
        default:
          return false;
      }
    } }, { key: "KeyedBindingInitialization", value: function(e3, t2, r2, n2, i2, a2) {
      var s2, u2 = i2 || e3.getRunningContext().lexicalEnvironment;
      if ("AssignmentPattern" === t2.type && (s2 = t2.right, t2 = t2.left), "Identifier" === t2.type) {
        var l2 = t2.name, c2 = this.ResolveBinding(e3, l2, n2, i2), d2 = (0, f.GetV)(e3, r2, a2);
        if (s2 && d2 instanceof o.UndefinedValue) {
          var h2 = u2.evaluate(s2, n2);
          if (d2 = this.GetValue(e3, h2), (0, f.IsAnonymousFunctionDefinition)(e3, s2) && d2 instanceof o.ObjectValue) false === (0, f.HasOwnProperty)(e3, d2, "name") && p.Functions.SetFunctionName(e3, d2, l2);
        }
        return i2 ? this.InitializeReferencedBinding(e3, c2, d2) : p.Properties.PutValue(e3, c2, d2);
      }
      if ("ObjectPattern" === t2.type || "ArrayPattern" === t2.type) {
        var v = (0, f.GetV)(e3, r2, a2);
        if (s2 && v instanceof o.UndefinedValue) {
          var y = u2.evaluate(s2, n2);
          v = this.GetValue(e3, y);
        }
        return this.BindingInitialization(e3, t2, v, n2, u2);
      }
    } }]), e2;
  })();
  t.EnvironmentImplementation = h;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.CreateImplementation = void 0;
  var a = r(0), o = r(13), s = r(11), u = r(16), l = r(22), c = r(2), f = y(r(37)), p = y(r(1)), d = y(r(71)), h = y(r(39)), v = r(6);
  function y(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var m = ["Undefined", "Null", "Boolean", "String", "Symbol", "Number", "Object"], b = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "StringCreate", value: function(e3, t2, r2) {
      (0, p.default)(t2 instanceof a.StringValue, "expected string value");
      var n2 = new a.StringExotic(e3);
      n2.$StringData = t2, n2.$Prototype = r2, n2.setExtensible(true);
      var i2 = t2.value.length;
      return c.Properties.DefinePropertyOrThrow(e3, n2, "length", new v.PropertyDescriptor({ value: new a.NumberValue(e3, i2), writable: false, enumerable: false, configurable: false })), n2;
    } }, { key: "CreateHTML", value: function(e3, t2, r2, n2, i2) {
      var o2 = (0, u.RequireObjectCoercible)(e3, t2), s2 = c.To.ToStringPartial(e3, o2), l2 = "<".concat(r2);
      if (n2) {
        var f2 = c.To.ToStringPartial(e3, i2).replace(/"/g, "&quot;");
        l2 = "".concat(l2, " ").concat(n2, '="').concat(f2, '"');
      }
      var p2 = "".concat(l2, ">"), d2 = "".concat(p2).concat(s2), h2 = "".concat(d2, "</").concat(r2, ">");
      return new a.StringValue(e3, h2);
    } }, { key: "MakeArgGetter", value: function(e3, t2, r2) {
      return new a.NativeFunctionValue(e3, void 0, void 0, 0, function(e4) {
        return r2.GetBindingValue(t2, false);
      }, false);
    } }, { key: "MakeArgSetter", value: function(e3, t2, r2) {
      return new a.NativeFunctionValue(e3, void 0, void 0, 1, function(e4, i2) {
        var a2 = n(i2, 1)[0];
        return r2.SetMutableBinding(t2, a2, false);
      }, false);
    } }, { key: "CreateStringIterator", value: function(e3, t2) {
      (0, p.default)(t2 instanceof a.StringValue, "expected string to be a string value");
      var r2 = this.ObjectCreate(e3, e3.intrinsics.StringIteratorPrototype, { $IteratedString: void 0, $StringIteratorNextIndex: void 0 });
      return r2.$IteratedString = t2, r2.$StringIteratorNextIndex = 0, r2;
    } }, { key: "ArraySpeciesCreate", value: function(e3, t2, r2) {
      (0, p.default)(r2 >= 0, "expected length >= 0"), Object.is(r2, -0) && (r2 = 0);
      var n2 = e3.intrinsics.undefined;
      if ((0, s.IsArray)(e3, t2)) {
        if (n2 = (0, o.Get)(e3, t2, "constructor"), (0, s.IsConstructor)(e3, n2)) {
          (0, p.default)(n2 instanceof a.ObjectValue);
          var i2 = e3, c2 = (0, o.GetFunctionRealm)(e3, n2);
          i2 !== c2 && (0, u.SameValue)(e3, n2, c2.intrinsics.Array) && (n2 = e3.intrinsics.undefined);
        }
        n2.mightBeObject() && (n2.mightNotBeObject() && n2.throwIfNotConcrete(), (0, p.default)(n2 instanceof a.ObjectValue || n2 instanceof a.AbstractObjectValue), (n2 = (0, o.Get)(e3, n2, e3.intrinsics.SymbolSpecies)) instanceof a.NullValue && (n2 = e3.intrinsics.undefined));
      }
      if (n2 instanceof a.UndefinedValue) return this.ArrayCreate(e3, r2);
      if (!(0, s.IsConstructor)(e3, n2)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "not a constructor");
      return (0, l.Construct)(e3, n2.throwIfNotConcreteObject(), [new a.NumberValue(e3, r2)]).throwIfNotConcreteObject();
    } }, { key: "CreateIterResultObject", value: function(e3, t2, r2) {
      (0, p.default)("boolean" == typeof r2, "expected done to be a boolean");
      var n2 = this.ObjectCreate(e3, e3.intrinsics.ObjectPrototype);
      return this.CreateDataProperty(e3, n2, "value", t2), this.CreateDataProperty(e3, n2, "done", new a.BooleanValue(e3, r2)), n2;
    } }, { key: "CreateArrayIterator", value: function(e3, t2, r2) {
      (0, p.default)(t2 instanceof a.ObjectValue, "expected object");
      var n2 = this.ObjectCreate(e3, e3.intrinsics.ArrayIteratorPrototype, { $IteratedObject: void 0, $ArrayIteratorNextIndex: void 0, $ArrayIterationKind: void 0 });
      return n2.$IteratedObject = t2, n2.$ArrayIteratorNextIndex = new a.NumberValue(e3, 0), n2.$ArrayIterationKind = r2, n2;
    } }, { key: "ArrayCreate", value: function(e3, t2, r2) {
      if ((0, p.default)(t2 >= 0), Object.is(t2, -0) && (t2 = 0), t2 > Math.pow(2, 32) - 1) throw e3.createErrorThrowCompletion(e3.intrinsics.RangeError, "length>2^32-1");
      r2 = r2 || e3.intrinsics.ArrayPrototype;
      var n2 = new a.ArrayValue(e3);
      return n2.$Prototype = r2, n2.setExtensible(true), c.Properties.OrdinaryDefineOwnProperty(e3, n2, "length", new v.PropertyDescriptor({ value: new a.NumberValue(e3, t2), writable: true, enumerable: false, configurable: false })), n2;
    } }, { key: "CreateArrayFromList", value: function(e3, t2) {
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var o2, s2 = t2[Symbol.iterator](); !(r2 = (o2 = s2.next()).done); r2 = true) {
          var u2 = o2.value;
          (0, p.default)(u2 instanceof a.Value, "value expected");
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (n2) throw i2;
        }
      }
      var l2 = this.ArrayCreate(e3, 0), c2 = 0, f2 = true, d2 = false, h2 = void 0;
      try {
        for (var v2, y2 = t2[Symbol.iterator](); !(f2 = (v2 = y2.next()).done); f2 = true) {
          var m2 = v2.value, b2 = this.CreateDataProperty(e3, l2, new a.StringValue(e3, c2 + ""), m2);
          (0, p.default)(b2, "couldn't create data property"), c2++;
        }
      } catch (e4) {
        d2 = true, h2 = e4;
      } finally {
        try {
          f2 || null == y2.return || y2.return();
        } finally {
          if (d2) throw h2;
        }
      }
      return l2;
    } }, { key: "CreateUnmappedArgumentsObject", value: function(e3, t2) {
      var r2 = t2.length, n2 = this.ObjectCreate(e3, e3.intrinsics.ObjectPrototype);
      n2.$ParameterMap = n2, c.Properties.DefinePropertyOrThrow(e3, n2, "length", new v.PropertyDescriptor({ value: new a.NumberValue(e3, r2), writable: true, enumerable: false, configurable: true }));
      for (var i2 = 0; i2 < r2; ) {
        var o2 = t2[i2];
        this.CreateDataProperty(e3, n2, new a.StringValue(e3, i2 + ""), o2), i2++;
      }
      return c.Properties.DefinePropertyOrThrow(e3, n2, e3.intrinsics.SymbolIterator, new v.PropertyDescriptor({ value: e3.intrinsics.ArrayProto_values, writable: true, enumerable: false, configurable: true })), c.Properties.DefinePropertyOrThrow(e3, n2, "callee", new v.PropertyDescriptor({ get: e3.intrinsics.ThrowTypeError, set: e3.intrinsics.ThrowTypeError, enumerable: false, configurable: false })), n2;
    } }, { key: "CreateMappedArgumentsObject", value: function(e3, t2, r2, n2, i2) {
      var o2 = true, s2 = false, u2 = void 0;
      try {
        for (var l2, f2 = r2[Symbol.iterator](); !(o2 = (l2 = f2.next()).done); o2 = true) {
          var d2 = l2.value;
          (0, p.default)("Identifier" === d2.type, "expected only simple params");
        }
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          o2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      var h2 = n2.length, y2 = new a.ArgumentsExotic(e3);
      y2.$Prototype = e3.intrinsics.ObjectPrototype, y2.setExtensible(true);
      var m2 = new a.ObjectValue(e3);
      y2.$ParameterMap = m2;
      var b2 = [], g = true, w = false, E = void 0;
      try {
        for (var S, T = r2[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
          var A = S.value;
          b2.push(A.name);
        }
      } catch (e4) {
        w = true, E = e4;
      } finally {
        try {
          g || null == T.return || T.return();
        } finally {
          if (w) throw E;
        }
      }
      for (var C = b2.length, P = 0; P < h2; ) {
        var O = n2[P];
        this.CreateDataProperty(e3, y2, new a.StringValue(e3, P + ""), O), P++;
      }
      c.Properties.DefinePropertyOrThrow(e3, y2, "length", new v.PropertyDescriptor({ value: new a.NumberValue(e3, h2), writable: true, enumerable: false, configurable: true }));
      var x = [];
      for (P = C - 1; P >= 0; ) {
        var _ = b2[P];
        if (x.indexOf(_) < 0 && (x.push(_), P < h2)) {
          var V = this.MakeArgGetter(e3, _, i2), D = this.MakeArgSetter(e3, _, i2);
          m2.$DefineOwnProperty(new a.StringValue(e3, P + ""), new v.PropertyDescriptor({ set: D, get: V, enumerable: false, configurable: true }));
        }
        P--;
      }
      return c.Properties.DefinePropertyOrThrow(e3, y2, e3.intrinsics.SymbolIterator, new v.PropertyDescriptor({ value: e3.intrinsics.ArrayProto_values, writable: true, enumerable: false, configurable: true })), c.Properties.DefinePropertyOrThrow(e3, y2, "callee", new v.PropertyDescriptor({ value: t2, writable: true, enumerable: false, configurable: true })), y2;
    } }, { key: "CreateDataProperty", value: function(e3, t2, r2, n2) {
      (0, p.default)((0, s.IsPropertyKey)(e3, r2), "Not a property key");
      var i2 = new v.PropertyDescriptor({ value: n2, writable: true, enumerable: true, configurable: true });
      return t2.$DefineOwnProperty(r2, i2);
    } }, { key: "CopyDataProperties", value: function(e3, t2, r2, n2) {
      if ((0, p.default)(t2 instanceof a.ObjectValue, "Not an object value"), (0, p.default)(n2 instanceof Array, "Not an array"), r2 === e3.intrinsics.null || r2 === e3.intrinsics.undefined) ;
      else {
        var i2 = c.To.ToObject(e3, r2), s2 = i2.$OwnPropertyKeys(), l2 = true, f2 = false, d2 = void 0;
        try {
          for (var h2, v2 = s2[Symbol.iterator](); !(l2 = (h2 = v2.next()).done); l2 = true) {
            var y2 = h2.value, m2 = false, b2 = true, g = false, w = void 0;
            try {
              for (var E, S = n2[Symbol.iterator](); !(b2 = (E = S.next()).done); b2 = true) {
                var T = E.value;
                (0, p.default)(T instanceof a.StringValue), (0, p.default)(y2 instanceof a.StringValue), !T.mightBeFalse() && (0, u.SameValue)(e3, T, y2) && (m2 = true);
              }
            } catch (e4) {
              g = true, w = e4;
            } finally {
              try {
                b2 || null == S.return || S.return();
              } finally {
                if (g) throw w;
              }
            }
            if (false === m2) {
              var A = i2.$GetOwnProperty(y2);
              if (void 0 !== A && true === A.throwIfNotConcrete(e3).enumerable) {
                var C = (0, o.Get)(e3, i2, y2);
                this.CreateDataProperty(e3, t2, y2, C);
              }
            }
          }
        } catch (e4) {
          f2 = true, d2 = e4;
        } finally {
          try {
            l2 || null == v2.return || v2.return();
          } finally {
            if (f2) throw d2;
          }
        }
      }
      return t2;
    } }, { key: "CreateMethodProperty", value: function(e3, t2, r2, n2) {
      (0, p.default)(t2 instanceof a.ObjectValue, "Not an object value"), (0, p.default)((0, s.IsPropertyKey)(e3, r2), "Not a property key");
      var i2 = new v.PropertyDescriptor({ value: n2, writable: true, enumerable: false, configurable: true });
      return t2.$DefineOwnProperty(r2, i2);
    } }, { key: "CreateDataPropertyOrThrow", value: function(e3, t2, r2, n2) {
      (0, p.default)(t2 instanceof a.ObjectValue, "Not an object value"), (0, p.default)((0, s.IsPropertyKey)(e3, r2), "Not a property key");
      var i2 = this.CreateDataProperty(e3, t2, r2, n2);
      if (false === i2) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "not a function");
      return i2;
    } }, { key: "ObjectCreate", value: function(e3, t2, r2) {
      r2 = r2 || {};
      var n2 = new a.ObjectValue(e3);
      return Object.assign(n2, r2), n2.$Prototype = t2, n2.setExtensible(true), n2;
    } }, { key: "OrdinaryCreateFromConstructor", value: function(e3, t2, r2, n2) {
      (0, p.default)(e3.intrinsics[r2], "not a valid proto ref");
      var i2 = (0, o.GetPrototypeFromConstructor)(e3, t2, r2);
      return this.ObjectCreate(e3, i2, n2);
    } }, { key: "CreateListFromArrayLike", value: function(e3, t2, r2) {
      if (r2 = r2 || m, !(t2 instanceof a.ObjectValue)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "Not an object");
      for (var n2 = c.To.ToLength(e3, (0, o.Get)(e3, t2, "length")), i2 = [], s2 = 0; s2 < n2; ) {
        var l2 = s2 + "", f2 = (0, o.Get)(e3, t2, l2);
        if (r2 !== m && r2.indexOf((0, u.Type)(e3, f2)) < 0) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "invalid element type");
        i2.push(f2), s2++;
      }
      return i2;
    } }, { key: "CreateDynamicFunction", value: function(e3, t2, r2, i2, a2) {
      var s2;
      r2 = r2 || t2, s2 = "normal" === i2 ? "FunctionPrototype" : "Generator";
      var u2, y2, m2 = a2.length, b2 = "";
      if (0 === m2) u2 = e3.intrinsics.emptyString;
      else if (1 === m2) u2 = a2[0];
      else {
        var g = a2[0];
        b2 = c.To.ToStringPartial(e3, g);
        for (var w = 1; w < m2 - 1; ) {
          var E = a2[w];
          b2 = b2 + "," + c.To.ToStringPartial(e3, E), w += 1;
        }
        u2 = a2[w];
      }
      u2 = c.To.ToStringPartial(e3, u2);
      try {
        y2 = (0, d.default)(e3, "function" + ("generator" === i2 ? "*" : "") + " _(" + b2 + "){" + u2 + "}", "eval");
      } catch (t3) {
        throw e3.createErrorThrowCompletion(e3.intrinsics.SyntaxError, "parse failed");
      }
      var S = n(y2.program.body, 1)[0];
      if (!S) throw e3.createErrorThrowCompletion(e3.intrinsics.SyntaxError, "parse failed");
      (0, p.default)("FunctionDeclaration" === S.type);
      var T = S.params, A = S.body, C = (0, f.default)(A);
      if ("generator" === i2) {
        var P = false, O = true, x = false, _ = void 0;
        try {
          for (var V, D = T[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
            var N = V.value;
            (0, h.default)(N, function(e4) {
              return "YieldExpression" === e4.type ? (P = true, true) : "Identifier" === e4.type && "yield" === e4.name && (P = true, true);
            });
          }
        } catch (e4) {
          x = true, _ = e4;
        } finally {
          try {
            O || null == D.return || D.return();
          } finally {
            if (x) throw _;
          }
        }
        if (P) throw e3.createErrorThrowCompletion(e3.intrinsics.SyntaxError, "parse failed");
      }
      var I = (0, o.GetPrototypeFromConstructor)(e3, r2, s2), k = c.Functions.FunctionAllocate(e3, I, C, i2), j = k.$Realm.$GlobalEnv;
      if (c.Functions.FunctionInitialize(e3, k, "normal", T, A, j), "generator" === i2) {
        var F = this.ObjectCreate(e3, e3.intrinsics.GeneratorPrototype);
        F.originalConstructor = k, c.Properties.DefinePropertyOrThrow(e3, k, "prototype", new v.PropertyDescriptor({ value: F, writable: true, enumerable: false, configurable: false }));
      } else (0, l.MakeConstructor)(e3, k);
      return c.Functions.SetFunctionName(e3, k, "anonymous"), k;
    } }]), e2;
  })();
  t.CreateImplementation = b;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function() {
    n.setCreate(new i.CreateImplementation()), n.setEnvironment(new a.EnvironmentImplementation()), n.setFunctions(new o.FunctionImplementation()), n.setLeak(new s.LeakImplementation()), n.setMaterialize(new s.MaterializeImplementation()), n.setJoin(new u.JoinImplementation()), n.setPath(new l.PathImplementation()), n.setPathConditions(function(e2) {
      return new l.PathConditionsImplementation(e2);
    }), n.setProperties(new c.PropertiesImplementation()), n.setTo(new f.ToImplementation()), n.setWiden(new p.WidenImplementation()), n.setConcretize(d.concretize), n.setUtils(v), n.setDebugReproManager(new h.DebugReproManagerImplementation());
  };
  var n = y(r(2)), i = r(416), a = r(415), o = r(414), s = r(413), u = r(412), l = r(411), c = r(410), f = r(409), p = r(408), d = r(407), h = r(406), v = (r(35), y(r(94)));
  function y(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function() {
    var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t2 = arguments.length > 1 ? arguments[1] : void 0, r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, h2 = arguments.length > 3 ? arguments[3] : void 0;
    (0, i.default)();
    var v = new n.Realm(e2, r2 || new s.RealmStatistics());
    if (t2) {
      var y = t2.debugChannel;
      y && ((0, d.default)(y.debuggerIsAttached(), "Debugger intends to be used but is not attached."), v.debuggerInstance = new f.DebugServer(y, v, t2));
    }
    void 0 !== h2 && (v.debugReproManager = l.DebugReproManager.construct(h2));
    var m = v.intrinsics;
    for (var b in (0, a.initialize)(m, v), v.$GlobalObject = new c.ObjectValue(v, m.ObjectPrototype, "global"), (0, o.default)(v), u) v.evaluators[b] = u[b];
    return v.simplifyAndRefineAbstractValue = p.default.bind(null, v, false), v.simplifyAndRefineAbstractCondition = p.default.bind(null, v, true), v.$GlobalEnv = l.Environment.NewGlobalEnvironment(v, v.$GlobalObject, v.$GlobalObject), v;
  };
  var n = r(8), i = h(r(417)), a = r(405), o = h(r(310)), s = r(117), u = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(309)), l = r(2), c = r(0), f = r(258), p = h(r(250)), d = h(r(1));
  function h(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualOptimizedFunctions = void 0;
  var a = r(0), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = (r(69), r(10)), u = r(9);
  var l = (function() {
    function e2(t2, r2, n2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._generatorTree = t2, this._optimizedFunctionsAndEffects = r2, this._residualValues = n2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "_isDefinedInsideFunction", value: function(e3, t2) {
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = t2[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var u2 = a2.value;
          if (e3 !== u2) {
            var l2 = this._optimizedFunctionsAndEffects.get(u2);
            if (l2 && l2.effects.createdObjects.has(e3)) return true;
            for (var c = e3.$Environment; null !== c.parent; ) {
              var f = c.environmentRecord;
              if (f instanceof s.FunctionEnvironmentRecord && f.$FunctionObject === u2) return true;
              c = c.parent;
            }
          }
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
      return false;
    } }, { key: "_definesFunctions", value: function(e3, t2) {
      var r2 = this._optimizedFunctionsAndEffects.get(e3);
      (0, o.default)(r2);
      var n2 = r2.effects.createdObjects, i2 = true, a2 = false, s2 = void 0;
      try {
        for (var u2, l2 = t2[Symbol.iterator](); !(i2 = (u2 = l2.next()).done); i2 = true) {
          var c = u2.value;
          if (c !== e3 && !n2.has(c)) return false;
        }
      } catch (e4) {
        a2 = true, s2 = e4;
      } finally {
        try {
          i2 || null == l2.return || l2.return();
        } finally {
          if (a2) throw s2;
        }
      }
      return true;
    } }, { key: "tryGetOptimizedFunctionRoot", value: function(e3) {
      var t2 = this._residualValues.get(e3);
      return (0, o.default)(void 0 !== t2), this.tryGetOutermostOptimizedFunction(t2);
    } }, { key: "tryGetOutermostOptimizedFunction", value: function(e3) {
      var t2 = /* @__PURE__ */ new Set();
      (0, o.default)(void 0 !== e3);
      var r2 = true, i2 = false, s2 = void 0;
      try {
        for (var l2, c = e3[Symbol.iterator](); !(r2 = (l2 = c.next()).done); r2 = true) {
          for (var f = l2.value; f instanceof u.Generator; ) f = this._generatorTree.getParent(f);
          if ("GLOBAL" === f) return;
          (0, o.default)(f instanceof a.FunctionValue), t2.add(f);
        }
      } catch (e4) {
        i2 = true, s2 = e4;
      } finally {
        try {
          r2 || null == c.return || c.return();
        } finally {
          if (i2) throw s2;
        }
      }
      var p = /* @__PURE__ */ new Set(), d = true, h = false, v = void 0;
      try {
        for (var y, m = t2[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
          var b = y.value;
          if (this._optimizedFunctionsAndEffects.has(b)) this._isDefinedInsideFunction(b, t2) || p.add(b);
          else {
            var g = this.tryGetOptimizedFunctionRoot(b);
            if (void 0 === g) return;
            this._isDefinedInsideFunction(g, t2) || p.add(g);
          }
        }
      } catch (e4) {
        h = true, v = e4;
      } finally {
        try {
          d || null == m.return || m.return();
        } finally {
          if (h) throw v;
        }
      }
      if (1 === p.size) return n(p)[0];
      for (var w = n(p); w.length > 0; ) {
        var E = w.shift();
        if (this._definesFunctions(E, p)) return E;
        var S = this._optimizedFunctionsAndEffects.get(E);
        (0, o.default)(S);
        var T = S.parentAdditionalFunction;
        T && w.push(T);
      }
    } }]), e2;
  })();
  t.ResidualOptimizedFunctions = l;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function s(e2) {
    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualHeapGraphGenerator = void 0;
  var l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(0), f = r(48), p = r(49);
  var d = (function(e2) {
    function t2(e3, r2, n2, i2, a2, u2) {
      var l2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (l2 = o(this, s(t2).call(this, e3, r2, n2, i2)))._valueToEdgeRecord = u2, l2._valueIdentifiers = a2, l2._visitedValues = /* @__PURE__ */ new Set(), l2._valueIds = /* @__PURE__ */ new Map(), l2._idSeed = 0, l2._path = [], l2._edges = [], l2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && u(e3, t3);
    })(t2, p.ResidualHeapVisitor), (function(e3, t3, r2) {
      t3 && a(e3.prototype, t3), r2 && a(e3, r2);
    })(t2, [{ key: "preProcessValue", value: function(e3) {
      return !!this._shouldIgnore(e3) || (this._updateEdge(e3), !this._visitedValues.has(e3) && (this._visitedValues.add(e3), true));
    } }, { key: "postProcessValue", value: function(e3) {
      this._shouldIgnore(e3) || ((0, l.default)(this._path.length > 0), this._path.pop());
    } }, { key: "_getValueId", value: function(e3) {
      var t3 = this._valueIds.get(e3);
      return void 0 === t3 && (this._valueIds.set(e3, ++this._idSeed), t3 = this._idSeed), t3;
    } }, { key: "_shouldIgnore", value: function(e3) {
      return e3 instanceof c.EmptyValue || e3.isIntrinsic() || f.HeapInspector.isLeaf(e3);
    } }, { key: "_updateEdge", value: function(e3) {
      if (this._path.length > 0) {
        var t3 = this._path[this._path.length - 1];
        this._edges.push({ fromId: this._getValueId(t3), toId: this._getValueId(e3) });
      }
      this._path.push(e3);
    } }, { key: "_getValueLabel", value: function(e3) {
      var t3 = this._valueIdentifiers.getIdentifier(e3);
      return (0, l.default)(t3), void 0 !== e3.__originalName ? "".concat(t3.name, "(").concat(e3.__originalName, ")") : t3.name;
    } }, { key: "_generateDotGraphData", value: function(e3, t3) {
      var r2 = "digraph{\n", n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
          var u2 = o2.value, l2 = this._getValueId(u2);
          r2 += "  node".concat(l2, " [shape=").concat(this._getValueShape(u2), " label=").concat(this._getValueLabel(u2), "];\n");
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      var c2 = true, f2 = false, p2 = void 0;
      try {
        for (var d2, h = t3[Symbol.iterator](); !(c2 = (d2 = h.next()).done); c2 = true) {
          var v = d2.value;
          r2 += "  node".concat(v.fromId, " -> node").concat(v.toId, ";\n");
        }
      } catch (e4) {
        f2 = true, p2 = e4;
      } finally {
        try {
          c2 || null == h.return || h.return();
        } finally {
          if (f2) throw p2;
        }
      }
      return r2 += "}";
    } }, { key: "_generateVisJSGraphData", value: function(e3, t3) {
      var r2 = [], n2 = [], a2 = true, o2 = false, s2 = void 0;
      try {
        for (var u2, l2 = e3[Symbol.iterator](); !(a2 = (u2 = l2.next()).done); a2 = true) {
          var c2 = u2.value, f2 = this._getValueId(c2), p2 = { id: "".concat(f2), label: this._getValueLabel(c2), shape: this._getValueShape(c2), color: this._getValueColor(c2) };
          r2.push(p2);
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          a2 || null == l2.return || l2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      var d2 = true, h = false, v = void 0;
      try {
        for (var y, m = t3.entries()[Symbol.iterator](); !(d2 = (y = m.next()).done); d2 = true) {
          var b = i(y.value, 2), g = b[0], w = b[1], E = { id: g, from: "".concat(w.fromId), to: "".concat(w.toId), arrows: "to" };
          n2.push(E);
        }
      } catch (e4) {
        h = true, v = e4;
      } finally {
        try {
          d2 || null == m.return || m.return();
        } finally {
          if (h) throw v;
        }
      }
      var S = { nodes: r2, edges: n2 };
      return JSON.stringify(S);
    } }, { key: "_getValueShape", value: function(e3) {
      return e3 instanceof c.FunctionValue ? "circle" : e3 instanceof c.AbstractValue ? "diamond" : e3 instanceof c.ProxyValue ? "triangle" : e3 instanceof c.SymbolValue ? "star" : e3 instanceof c.ObjectValue ? "box" : "ellipse";
    } }, { key: "_getValueColor", value: function(e3) {
      return e3 instanceof c.FunctionValue ? "red" : e3 instanceof c.AbstractValue ? "green" : e3 instanceof c.ProxyValue ? "orange" : e3 instanceof c.SymbolValue ? "yellow" : e3 instanceof c.ObjectValue ? "#3BB9FF" : "grey";
    } }, { key: "generateResult", value: function(e3) {
      return "DotLanguage" === e3 ? this._generateDotGraphData(this._visitedValues, this._edges) : this._generateVisJSGraphData(this._visitedValues, this._edges);
    } }]), t2;
  })();
  t.ResidualHeapGraphGenerator = d;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2, t2, r2) {
    return (o = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = s(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function s(e2) {
    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualHeapRefCounter = void 0;
  var l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(0), f = r(48), p = r(49);
  var d = (function(e2) {
    function t2(e3, r2, n2, i2) {
      var o2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (o2 = a(this, s(t2).call(this, e3, r2, n2, i2)))._valueToEdgeRecord = /* @__PURE__ */ new Map(), o2._path = [], o2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && u(e3, t3);
    })(t2, p.ResidualHeapVisitor), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "getResult", value: function() {
      return this._valueToEdgeRecord;
    } }, { key: "_shouldIgnore", value: function(e3) {
      return e3 instanceof c.EmptyValue || e3.isIntrinsic() || f.HeapInspector.isLeaf(e3);
    } }, { key: "preProcessValue", value: function(e3) {
      return !this._shouldIgnore(e3) && (this._path.length > 0 && this._updateParentOutgoingEdgeCount(), this._path.push(e3), this._updateValueIncomingEdgeCount(e3));
    } }, { key: "_updateParentOutgoingEdgeCount", value: function() {
      var e3 = this._path[this._path.length - 1], t3 = this._valueToEdgeRecord.get(e3);
      (0, l.default)(t3), ++t3.outGoing;
    } }, { key: "_updateValueIncomingEdgeCount", value: function(e3) {
      var t3 = this._valueToEdgeRecord.get(e3);
      return void 0 === t3 ? (this._valueToEdgeRecord.set(e3, { inComing: 1, outGoing: 0 }), true) : (++t3.inComing, false);
    } }, { key: "postProcessValue", value: function(e3) {
      this._shouldIgnore(e3) || ((0, l.default)(this._path.length > 0), this._path.pop());
    } }, { key: "visitRoots", value: function() {
      o(s(t2.prototype), "visitRoots", this).call(this), (0, l.default)(0 === this._path.length, "Path should be balanced empty after traversal.");
    } }]), t2;
  })();
  t.ResidualHeapRefCounter = d;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function s(e2, t2, r2) {
    return (s = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = u(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function u(e2) {
    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function l(e2, t2) {
    return (l = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.LazyObjectsSerializer = void 0;
  r(8);
  var c = r(0), f = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), p = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), d = (r(19), r(38), r(48), r(95), r(97)), h = r(32);
  r(69);
  var v = (function(e2) {
    function t2(e3, r2, n2, i2, a2, s2, l2, c2, d2, h2, v2) {
      var y;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (y = o(this, u(t2).call(this, e3, r2, n2, i2, a2, s2, l2, c2, d2, h2, v2)))._lazyObjectIdSeed = 1, y._valueLazyIds = /* @__PURE__ */ new Map(), y._lazyObjectInitializers = /* @__PURE__ */ new Map(), y._callbackLazyObjectParam = f.identifier("obj"), (0, p.default)(null != y._options.lazyObjectsRuntime), y._lazyObjectJSRuntimeName = f.identifier(y._options.lazyObjectsRuntime), y._initializationCallbackName = f.identifier("__initializerCallback"), y;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && l(e3, t3);
    })(t2, d.ResidualHeapSerializer), (function(e3, t3, r2) {
      t3 && a(e3.prototype, t3), r2 && a(e3, r2);
    })(t2, [{ key: "_getValueLazyId", value: function(e3) {
      var t3 = this;
      return (0, h.getOrDefault)(this._valueLazyIds, e3, function() {
        return t3._lazyObjectIdSeed++;
      });
    } }, { key: "_serializeLazyObjectInitializer", value: function(e3, t3) {
      var r2 = { type: "LazyObjectInitializer", parentBody: void 0, entries: [], done: false }, n2 = this.emitter.beginEmitting("LazyObjectInitializer", r2);
      return this._emitObjectProperties(e3), void 0 !== t3 && t3(this.emitter.getBody()), this.emitter.endEmitting("LazyObjectInitializer", n2), r2;
    } }, { key: "_serializeLazyObjectInitializerSwitchCase", value: function(e3, t3) {
      var r2 = t3.entries.concat(f.breakStatement()), n2 = this._getValueLazyId(e3);
      return f.switchCase(f.numericLiteral(n2), r2);
    } }, { key: "_serializeInitializationCallback", value: function() {
      var e3 = [], t3 = [], r2 = true, n2 = false, a2 = void 0;
      try {
        for (var o2, s2 = this._lazyObjectInitializers[Symbol.iterator](); !(r2 = (o2 = s2.next()).done); r2 = true) {
          var u2 = i(o2.value, 2), l2 = u2[0], c2 = u2[1];
          t3.push(this._serializeLazyObjectInitializerSwitchCase(l2, c2));
        }
      } catch (e4) {
        n2 = true, a2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (n2) throw a2;
        }
      }
      t3.push(f.switchCase(null, [f.throwStatement(f.newExpression(f.identifier("Error"), [f.stringLiteral("Unknown lazy id")]))]));
      var p2 = f.identifier("id");
      e3.push(f.switchStatement(p2, t3));
      var d2 = [this._callbackLazyObjectParam, p2], h2 = f.functionExpression(null, d2, f.blockStatement(e3));
      return f.variableDeclaration("var", [f.variableDeclarator(this._initializationCallbackName, h2)]);
    } }, { key: "_serializeRegisterInitializationCallback", value: function() {
      return f.expressionStatement(f.callExpression(f.memberExpression(this._lazyObjectJSRuntimeName, f.identifier("setLazyObjectInitializer")), [this._initializationCallbackName]));
    } }, { key: "_serializeCreateLazyObject", value: function(e3) {
      var t3 = this._getValueLazyId(e3);
      return f.callExpression(f.memberExpression(this._lazyObjectJSRuntimeName, f.identifier("createLazyObject"), false), [f.numericLiteral(t3)]);
    } }, { key: "_isEmittingIntoLazyObjectInitializerBody", value: function(e3) {
      var t3 = this._lazyObjectInitializers.get(e3);
      return void 0 !== t3 && this.emitter.isCurrentBodyOffspringOf(t3);
    } }, { key: "getSerializeObjectIdentifier", value: function(e3) {
      return e3 instanceof c.ObjectValue && this._isEmittingIntoLazyObjectInitializerBody(e3) ? this._callbackLazyObjectParam : s(u(t2.prototype), "getSerializeObjectIdentifier", this).call(this, e3);
    } }, { key: "serializeValueRawObject", value: function(e3, r2, n2) {
      return void 0 !== e3.temporalAlias ? s(u(t2.prototype), "serializeValueRawObject", this).call(this, e3, r2, n2) : (this._lazyObjectInitializers.set(e3, this._serializeLazyObjectInitializer(e3, n2)), this._serializeCreateLazyObject(e3));
    } }, { key: "postGeneratorSerialization", value: function() {
      this._lazyObjectInitializers.size > 0 && (this.prelude.push(this._serializeInitializationCallback()), this.prelude.push(this._serializeRegisterInitializationCallback()));
    } }]), t2;
  })();
  t.LazyObjectsSerializer = v;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || a(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2) {
    return u(e2) || a(e2) || s();
  }
  function a(e2) {
    if (Symbol.iterator in Object(e2) || "[object Arguments]" === Object.prototype.toString.call(e2)) return Array.from(e2);
  }
  function o(e2, t2) {
    return u(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || s();
  }
  function s() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }
  function u(e2) {
    if (Array.isArray(e2)) return e2;
  }
  function l(e2) {
    if (null == e2) throw new TypeError("Cannot destructure undefined");
  }
  function c(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualOperationSerializer = void 0;
  r(8), r(9);
  var f = r(44), p = r(31), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), h = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), v = r(0), y = r(2);
  function m(e2, t2, r2) {
    var n2 = t2.serializeGenerator(e2, r2);
    return 1 === n2.length && "BlockStatement" === n2[0].type ? n2[0] : h.blockStatement(n2);
  }
  var b = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.preludeGenerator = r2;
    }
    return (function(e3, t2, r2) {
      t2 && c(e3.prototype, t2), r2 && c(e3, r2);
    })(e2, [{ key: "getErrorStatement", value: function(e3) {
      if ("throw" === this.realm.invariantMode) return h.throwStatement(h.newExpression(this.preludeGenerator.memoizeReference("Error"), [e3]));
      var t2 = this.realm.invariantMode, r2 = [e3], n2 = t2.indexOf("+");
      if (-1 !== n2) {
        var i2 = t2.substr(n2 + 1), a2 = Number.parseInt(i2, 10);
        r2.push(isNaN(a2) ? h.stringLiteral(i2) : h.numericLiteral(a2)), t2 = t2.substr(0, n2);
      }
      return h.expressionStatement(h.callExpression(this.preludeGenerator.memoizeReference(t2), r2));
    } }, { key: "serializeStatement", value: function(e3, t2, r2, n2, i2) {
      var a2, o2 = e3.data;
      switch (e3.type) {
        case "ASSUME_CALL":
          a2 = this._serializeAssumeCall(o2, t2);
          break;
        case "CONCRETE_MODEL":
          a2 = this._serializeConcreteModel(o2, t2);
          break;
        case "CONDITIONAL_PROPERTY_ASSIGNMENT":
          a2 = this._serializeConditionalPropertyAssignment(o2, t2, r2, n2);
          break;
        case "CONDITIONAL_THROW":
          a2 = this._serializeConditionalThrow(o2, t2, r2);
          break;
        case "CONSOLE_LOG":
          a2 = this._serializeConsoleLog(o2, t2);
          break;
        case "DEFINE_PROPERTY":
          a2 = this._serializeDefineProperty(o2, t2, r2);
          break;
        case "DO_WHILE":
          a2 = this._serializeDoWhile(o2, t2, r2, n2);
          break;
        case "EMIT_CALL":
          a2 = this._serializeEmitCall(o2, t2);
          break;
        case "EMIT_PROPERTY_ASSIGNMENT":
          a2 = this._serializeEmitPropertyAssignment(o2, t2, r2);
          break;
        case "FOR_IN":
          a2 = this._serializeForIn(o2, t2);
          break;
        case "GLOBAL_ASSIGNMENT":
          a2 = this._serializeGlobalAssignment(o2, t2);
          break;
        case "GLOBAL_DELETE":
          a2 = this._serializeGlobalDelete(o2, t2);
          break;
        case "JOIN_GENERATORS":
          a2 = this._serializeJoinGenerators(o2, t2, r2, n2);
          break;
        case "LOCAL_ASSIGNMENT":
          a2 = this._serializeLocalAssignment(o2, t2, r2, n2);
          break;
        case "NOOP":
          a2 = h.emptyStatement();
          break;
        case "OBJECT_SET_PARTIAL":
          a2 = this._serializeObjectSetPartial(o2, t2);
          break;
        case "PROPERTY_ASSIGNMENT":
          a2 = this._serializePropertyAssignment(o2, t2, r2, n2);
          break;
        case "PROPERTY_DELETE":
          a2 = this._serializePropertyDelete(o2, t2);
          break;
        case "THROW":
          a2 = this._serializeThrow(o2, t2);
          break;
        case "INVARIANT":
          a2 = this._serializeInvariant(o2, t2);
          break;
        case "REACT_SSR_REGEX_CONSTANT":
          return h.variableDeclaration("var", [h.variableDeclarator(h.identifier("matchHtmlRegExp"), h.regExpLiteral(`["'&<>]`))]);
        case "REACT_SSR_PREV_TEXT_NODE":
          return h.variableDeclaration("var", [h.variableDeclarator(h.identifier("previousWasTextNode"), h.booleanLiteral(false))]);
        default:
          var s2 = this.serializeExpression(e3, t2, r2);
          return a2 = void 0 !== i2 ? this._serializeDerivedOperationDescriptor(i2, s2) : this._serializeVoidOperationDescriptor(s2);
      }
      return (0, d.default)(void 0 === i2), a2;
    } }, { key: "serializeExpression", value: function(e3, t2, r2, n2) {
      var i2, a2 = e3.data;
      switch (e3.type) {
        case "IDENTIFIER":
          i2 = this._serializeIdentifier(a2, t2);
          break;
        case "REBUILT_OBJECT":
          i2 = this._serializeRebuiltObject(a2, t2);
          break;
        case "BINARY_EXPRESSION":
          i2 = this._serializeBinaryExpression(a2, t2);
          break;
        case "LOGICAL_EXPRESSION":
          i2 = this._serializeLogicalExpression(a2, t2);
          break;
        case "CONDITIONAL_EXPRESSION":
          i2 = this._serializeConditionalExpression(a2, t2);
          break;
        case "UNARY_EXPRESSION":
          i2 = this._serializeUnaryExpression(a2, t2);
          break;
        case "ABSTRACT_PROPERTY":
          i2 = this._serializeAbstractProperty(a2, t2);
          break;
        case "ABSTRACT_FROM_TEMPLATE":
          i2 = this._serializeAbstractFromTemplate(a2, t2);
          break;
        case "COERCE_TO_STRING":
          i2 = this._serializeCoerceToString(a2, t2);
          break;
        case "OBJECT_ASSIGN":
          i2 = this._serializeObjectAssign(a2, t2);
          break;
        case "SINGLE_ARG":
          i2 = this._serializeSingleArg(a2, t2);
          break;
        case "CALL_BAILOUT":
          i2 = this._serializeCallBailout(a2, t2);
          break;
        case "EMIT_CALL_AND_CAPTURE_RESULT":
          i2 = this._serializeEmitCallAndCaptureResults(a2, t2);
          break;
        case "NEW_EXPRESSION":
          i2 = this._serializeNewExpression(a2, t2);
          break;
        case "FOR_STATEMENT_FUNC":
          i2 = this._serializeForFunctionCall(a2, t2);
          break;
        case "GET_BINDING":
          i2 = this._serializeGetBinding(a2, t2, r2);
          break;
        case "UNKNOWN_ARRAY_METHOD_CALL":
          i2 = this._serializeUnknownArrayMethodCall(a2, t2);
          break;
        case "UNKNOWN_ARRAY_METHOD_PROPERTY_CALL":
          i2 = this._serializeUnknownArrayMethodPropertyCall(a2, t2);
          break;
        case "UNKNOWN_ARRAY_LENGTH":
          i2 = this._serializeUnknownArrayLength(a2, t2);
          break;
        case "UNKNOWN_ARRAY_GET_PARTIAL":
          i2 = this._serializeUnknownArrayGetPartial(a2, t2);
          break;
        case "OBJECT_GET_PARTIAL":
          i2 = this._serializeObjectGetPartial(a2, t2);
          break;
        case "ABSTRACT_OBJECT_GET_PARTIAL":
          i2 = this._serializeAbstractObjectGetPartial(a2, t2);
          break;
        case "ABSTRACT_OBJECT_GET_PROTO_OF":
          i2 = this._serializeAbstractObjectGetProtoOf(a2, t2);
          break;
        case "ABSTRACT_OBJECT_GET":
          i2 = this._serializeAbstractObjectGet(a2, t2);
          break;
        case "OBJECT_PROTO_HAS_OWN_PROPERTY":
          i2 = this._serializeObjectProtoHasOwnProperty(a2, t2);
          break;
        case "OBJECT_PROTO_GET_OWN_PROPERTY_DESCRIPTOR":
          i2 = this._serializeObjectProtoGetOwnPropertyDescriptor(a2, t2);
          break;
        case "DIRECT_CALL_WITH_ARG_LIST":
          i2 = this._serializeDirectCallWithArgList(a2, t2);
          break;
        case "CALL_ABSTRACT_FUNC":
          i2 = this._serializeCallAbstractFunc(a2, t2);
          break;
        case "CALL_ABSTRACT_FUNC_THIS":
          i2 = this._serializeCallAbstractFuncThis(a2, t2);
          break;
        case "LOGICAL_PROPERTY_ASSIGNMENT":
          i2 = this._serializeLogicalPropertyAssignment(a2, t2);
          break;
        case "UPDATE_INCREMENTOR":
          i2 = this._serializeUpdateIncrementor(a2, t2);
          break;
        case "MODULES_REQUIRE":
          i2 = this._serializeModulesRequires(a2, t2);
          break;
        case "RESIDUAL_CALL":
          i2 = this._serializeResidualCall(a2, t2);
          break;
        case "CANNOT_BECOME_OBJECT":
          i2 = this._serializeCannotBecomeObject(a2, t2);
          break;
        case "WIDENED_IDENTIFIER":
          i2 = this._serializeIdentifier(a2, t2);
          break;
        case "WIDEN_PROPERTY":
          i2 = this._serializeWidenProperty(a2, t2);
          break;
        case "WIDEN_PROPERTY_ASSIGNMENT":
          i2 = this._serializeWidenPropertyAssignment(a2, t2);
          break;
        case "DERIVED_ABSTRACT_INVARIANT":
          i2 = this._serializeDerivedAbstractInvariant(a2, t2);
          break;
        case "PROPERTY_INVARIANT":
          i2 = this._serializePropertyInvariant(a2, t2);
          break;
        case "INVARIANT_APPEND":
          i2 = this._serializeInvariantAppend(a2, t2);
          break;
        case "FULL_INVARIANT":
          i2 = this._serializeFullInvariant(a2, t2);
          break;
        case "FULL_INVARIANT_ABSTRACT":
          i2 = this._serializeFullInvariantAbstract(a2, t2);
          break;
        case "FULL_INVARIANT_FUNCTION":
          i2 = this._serializeFullInvariantFunction(a2, t2);
          break;
        case "REACT_DEFAULT_PROPS_HELPER":
          i2 = this._serializeReactDefaultPropsHelper(a2, t2);
          break;
        case "REACT_SSR_RENDER_VALUE_HELPER":
          i2 = this._serializeReactRenderValueHelper(a2, t2);
          break;
        case "REACT_SSR_TEMPLATE_LITERAL":
          i2 = this._serializeReactSSRTemplateLiteral(a2, t2);
          break;
        case "REACT_TEMPORAL_FUNC":
          i2 = this._serializeReactTemporalFunc(a2, t2);
          break;
        case "REACT_CREATE_CONTEXT_PROVIDER":
          i2 = this._serializeReactCreateContextProvider(a2, t2);
          break;
        case "REACT_NATIVE_STRING_LITERAL":
          i2 = this._serializeReactNativeStringLiteral(a2, t2);
          break;
        case "REACT_RELAY_MOCK_CONTAINER":
          i2 = this._serializeReactRelayMockContainer(a2, t2);
          break;
        case "FB_MOCKS_BOOTLOADER_LOAD_MODULES":
          i2 = this._serializeFBMocksBootloaderLoadModules(a2, t2);
          break;
        case "FB_MOCKS_MAGIC_GLOBAL_FUNCTION":
          i2 = this._serializeFBMocksMagicGlobalFunction(a2, t2);
          break;
        case "BABEL_HELPERS_OBJECT_WITHOUT_PROPERTIES":
          i2 = this._serializeBabelHelpersObjectWithoutProperties(a2, t2);
          break;
        default:
          (0, d.default)(false, 'operation descriptor "type" not recognized when serializing operation descriptor');
      }
      return i2;
    } }, { key: "_serializeAssumeCall", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1], a2 = "StringLiteral" === i2.type ? i2 : h.stringLiteral("Assumption violated");
      return h.ifStatement(h.unaryExpression("!", n2), h.blockStatement([h.throwStatement(h.newExpression(h.identifier("Error"), [a2]))]));
    } }, { key: "_serializeWidenPropertyAssignment", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 3), n2 = r2[0], i2 = r2[1], a2 = r2[2];
      return h.assignmentExpression("=", (0, p.memberExpressionHelper)(n2, i2), a2);
    } }, { key: "_serializeWidenAbstractProperty", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(n2, i2);
    } }, { key: "_serializeWidenProperty", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(n2, i2);
    } }, { key: "_serializeAbstractObjectGet", value: function(e3, t2) {
      var r2 = e3.propertyGetter, n2 = o(t2, 2), i2 = n2[0], a2 = n2[1];
      return void 0 !== r2 ? h.callExpression(h.memberExpression(h.identifier("global"), h.identifier("__prop_" + r2)), [i2, a2]) : (0, p.memberExpressionHelper)(i2, a2);
    } }, { key: "_serializeAbstractObjectGetProtoOf", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0];
      (0, d.default)(void 0 !== this.realm.preludeGenerator);
      var n2 = this.realm.preludeGenerator.memoizeReference("Object.getPrototypeOf");
      return this.realm.isCompatibleWith(this.realm.MOBILE_JSC_VERSION) || this.realm.isCompatibleWith("mobile") ? h.memberExpression(r2, p.protoExpression) : h.callExpression(n2, [r2]);
    } }, { key: "_serializeCannotBecomeObject", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0], n2 = h.identifier("global.__cannotBecomeObject");
      return h.callExpression(n2, [r2]);
    } }, { key: "_serializeResidualCall", value: function(e3, t2) {
      return l(e3), h.callExpression(t2[0], t2.slice(1));
    } }, { key: "_serializeModulesRequires", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0];
      return h.callExpression(h.identifier("require"), [r2]);
    } }, { key: "_serializeConcreteModel", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1].value;
      return h.expressionStatement(h.assignmentExpression("=", this.preludeGenerator.globalReference(i2, false), n2));
    } }, { key: "_serializeConsoleLog", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), a2 = r2[0], o2 = r2.slice(1), s2 = a2.value;
      return h.expressionStatement(h.callExpression(h.memberExpression(h.identifier("console"), h.identifier(s2)), n(o2)));
    } }, { key: "_serializeDoWhile", value: function(e3, t2, r2, n2) {
      var i2 = e3.generator, a2 = e3.value;
      (0, d.default)(void 0 !== r2), (0, d.default)(void 0 !== n2), (0, d.default)(void 0 !== a2);
      var o2 = a2.intrinsicName;
      (0, d.default)(void 0 !== o2), (0, d.default)(void 0 !== i2);
      var s2 = r2.serializeGenerator(i2, n2), u2 = h.blockStatement(s2);
      return h.doWhileStatement(h.identifier(o2), u2);
    } }, { key: "_serializeForIn", value: function(e3, t2) {
      var r2 = e3.boundName, n2 = e3.lh, i2 = o(t2, 3), a2 = i2[0], s2 = i2[1], u2 = i2[2];
      return (0, d.default)(void 0 !== r2), (0, d.default)(void 0 !== n2), h.forInStatement(n2, a2, h.blockStatement([h.expressionStatement(h.assignmentExpression("=", (0, p.memberExpressionHelper)(s2, r2), (0, p.memberExpressionHelper)(u2, r2)))]));
    } }, { key: "_serializeFullInvariant", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 3), n2 = r2[0], i2 = r2[1], a2 = r2[2];
      return h.binaryExpression("!==", (0, p.memberExpressionHelper)(i2, n2), a2);
    } }, { key: "_serializeFullInvariantFunction", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return h.binaryExpression("!==", h.unaryExpression("typeof", (0, p.memberExpressionHelper)(i2, n2), true), h.stringLiteral("function"));
    } }, { key: "_serializeFullInvariantAbstract", value: function(e3, t2) {
      var r2 = e3.concreteComparisons, i2 = e3.typeComparisons, a2 = o(t2, 2), s2 = (a2[0], a2[1]);
      (0, d.default)(void 0 !== r2), (0, d.default)(void 0 !== i2);
      var u2 = r2.map(function(e4) {
        return h.binaryExpression("!==", s2, h.valueToNode(e4.serialize()));
      });
      return (u2 = u2.concat(n(i2).map(function(e4) {
        var t3 = y.Utils.typeToString(e4);
        return (0, d.default)(void 0 !== t3, e4), h.binaryExpression("!==", h.unaryExpression("typeof", s2, true), h.stringLiteral(t3));
      }))).reduce(function(e4, t3) {
        return h.logicalExpression("&&", e4, t3);
      });
    } }, { key: "_serializeInvariantAppend", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(i2, n2);
    } }, { key: "_serializePropertyInvariant", value: function(e3, t2) {
      var r2 = e3.state, n2 = o(t2, 2), i2 = n2[0], a2 = n2[1];
      (0, d.default)(void 0 !== r2);
      var s2 = h.callExpression(h.memberExpression(this.preludeGenerator.memoizeReference("Object.prototype.hasOwnProperty"), h.identifier("call")), [a2, i2]);
      return "MISSING" !== r2 && (s2 = h.unaryExpression("!", s2, true), "DEFINED" === r2 && (s2 = h.logicalExpression("||", s2, h.binaryExpression("===", (0, p.memberExpressionHelper)(a2, i2), h.valueToNode(void 0))))), s2;
    } }, { key: "_serializeUpdateIncrementor", value: function(e3, t2) {
      var r2 = e3.incrementor, n2 = o(t2, 1)[0];
      return (0, d.default)(void 0 !== r2), h.binaryExpression(r2, n2, h.numericLiteral(1));
    } }, { key: "_serializeDerivedAbstractInvariant", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1], a2 = n2.value, s2 = h.binaryExpression("!==", h.unaryExpression("typeof", i2), h.stringLiteral(a2));
      return "object" === a2 && (s2 = h.logicalExpression("&&", s2, h.binaryExpression("!==", h.unaryExpression("typeof", i2), h.stringLiteral("function"))), s2 = h.logicalExpression("||", s2, h.binaryExpression("===", i2, p.nullExpression))), s2;
    } }, { key: "_serializeInvariant", value: function(e3, t2) {
      var r2 = e3.appendLastToInvariantOperationDescriptor, n2 = e3.violationConditionOperationDescriptor;
      (0, d.default)(void 0 !== n2);
      var i2 = [h.stringLiteral("Prepack model invariant violation ("), h.numericLiteral(this.preludeGenerator.nextInvariantId++)];
      if (r2) {
        var a2 = t2[0], o2 = t2.pop();
        i2.push(h.stringLiteral("): ")), i2.push(this.serializeExpression(r2, [a2, o2]));
      } else i2.push(h.stringLiteral(")"));
      for (var s2 = i2[0], u2 = 1; u2 < i2.length; u2++) s2 = h.binaryExpression("+", s2, i2[u2]);
      var l2 = this.serializeExpression(n2, t2), c2 = this.getErrorStatement(s2);
      return h.ifStatement(l2, c2);
    } }, { key: "_serializeReactRelayMockContainer", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2[1], o2 = r2.slice(2), s2 = a2.value;
      return h.callExpression(h.memberExpression(n2, h.identifier(s2)), o2);
    } }, { key: "_serializePropertyAssignment", value: function(e3, t2, r2, n2) {
      var i2 = e3.path, a2 = o(t2, 4), s2 = a2[0], u2 = a2[1], l2 = a2[2];
      a2[3];
      (0, d.default)(i2 instanceof v.AbstractValue), (0, d.default)(void 0 !== i2.operationDescriptor);
      var c2 = this.serializeExpression(i2.operationDescriptor, [s2, u2], r2, n2);
      return h.expressionStatement(h.assignmentExpression("=", c2, l2));
    } }, { key: "_serializeConditionalPropertyAssignment", value: function(e3, t2, r2, n2) {
      var i2 = e3.path, a2 = e3.value, s2 = o(t2, 4), u2 = s2[0], l2 = s2[1], c2 = s2[2], f2 = s2[3];
      (0, d.default)(a2 instanceof v.AbstractValue), (0, d.default)(i2 instanceof v.AbstractValue);
      var y2 = a2.mightHaveBeenDeleted(), m2 = a2.mightBeUndefined();
      (0, d.default)(void 0 !== i2.operationDescriptor);
      var b2 = this.serializeExpression(i2.operationDescriptor, [u2, f2], r2, n2), g = h.expressionStatement(h.assignmentExpression("=", b2, l2));
      if (y2) {
        var w = h.binaryExpression("===", l2, c2), E = h.binaryExpression("===", l2, p.voidExpression), S = h.unaryExpression("!", h.binaryExpression("in", f2, u2)), T = h.logicalExpression("||", w, h.logicalExpression("&&", E, S)), A = h.expressionStatement(h.unaryExpression("delete", b2));
        return h.ifStatement(m2 ? w : T, A, g);
      }
      return g;
    } }, { key: "_serializeLogicalPropertyAssignment", value: function(e3, t2) {
      var r2 = e3.propertyBinding, n2 = e3.value, i2 = o(t2, 2), a2 = i2[0], s2 = i2[1];
      if ((0, d.default)(n2 instanceof v.Value), (0, d.default)(void 0 !== r2), "string" == typeof r2.key && n2.mightHaveBeenDeleted() && (function e4(t3, r3) {
        if (t3 === r3) return true;
        if (t3 instanceof v.AbstractValue && void 0 !== r3) {
          var n3 = true, i3 = false, a3 = void 0;
          try {
            for (var o2, s3 = t3.args[Symbol.iterator](); !(n3 = (o2 = s3.next()).done); n3 = true) if (e4(o2.value, r3)) return true;
          } catch (e5) {
            i3 = true, a3 = e5;
          } finally {
            try {
              n3 || null == s3.return || s3.return();
            } finally {
              if (i3) throw a3;
            }
          }
        }
        return false;
      })(n2, r2.pathNode)) {
        var u2 = h.binaryExpression("in", h.stringLiteral(r2.key), a2), l2 = h.conditionalExpression(u2, s2, p.emptyExpression);
        s2 = h.logicalExpression("||", s2, l2);
      }
      return s2;
    } }, { key: "_serializeLocalAssignment", value: function(e3, t2, r2, n2) {
      var i2 = e3.value, a2 = o(t2, 1)[0];
      (0, d.default)(i2 instanceof v.AbstractValue), (0, d.default)(void 0 !== i2.operationDescriptor);
      var s2 = this.serializeExpression(i2.operationDescriptor, [], r2, n2);
      return h.expressionStatement(h.assignmentExpression("=", s2, a2));
    } }, { key: "_serializeReactNativeStringLiteral", value: function(e3, t2) {
      return l(e3), o(t2, 1)[0];
    } }, { key: "_serializeReactCreateContextProvider", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0];
      return h.memberExpression(r2, h.identifier("Provider"));
    } }, { key: "_serializeReactTemporalFunc", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2.slice(1);
      return h.callExpression(n2, a2);
    } }, { key: "_serializeCallAbstractFunc", value: function(e3, t2) {
      l(e3);
      var r2 = t2.slice(1);
      return h.callExpression(t2[0], r2);
    } }, { key: "_serializeCallAbstractFuncThis", value: function(e3, t2) {
      l(e3);
      var r2 = t2.slice(1);
      return h.callExpression(h.memberExpression(t2[0], h.identifier("call")), r2);
    } }, { key: "_serializeDirectCallWithArgList", value: function(e3, t2) {
      l(e3);
      var r2 = t2.slice(1);
      return h.callExpression(t2[0], r2);
    } }, { key: "_serializeObjectProtoHasOwnProperty", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 3), n2 = r2[0], i2 = r2[1], a2 = r2[2];
      return h.callExpression(h.memberExpression(n2, h.identifier("call")), [i2, a2]);
    } }, { key: "_serializeRebuiltObject", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1], a2 = i2.value;
      return h.isValidIdentifier(a2) ? h.memberExpression(n2, h.identifier(a2), false) : h.memberExpression(n2, i2, true);
    } }, { key: "_serializeGlobalDelete", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0].value;
      return h.expressionStatement(h.unaryExpression("delete", this.preludeGenerator.globalReference(r2, false)));
    } }, { key: "_serializeDefineProperty", value: function(e3, t2, r2) {
      var n2 = e3.object, i2 = e3.descriptor, a2 = o(t2, 1)[0].value;
      return (0, d.default)(void 0 !== n2), (0, d.default)(void 0 !== i2), (0, d.default)(void 0 !== r2), r2.emitDefinePropertyBody(n2, a2, i2);
    } }, { key: "_serializeFBMocksMagicGlobalFunction", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2.slice(1), o2 = n2.value;
      return h.callExpression(h.identifier(o2), a2);
    } }, { key: "_serializeFBMocksBootloaderLoadModules", value: function(e3, t2) {
      return l(e3), h.callExpression(h.memberExpression(h.identifier("Bootloader"), h.identifier("loadModules")), t2);
    } }, { key: "_serializeUnknownArrayGetPartial", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(n2, i2);
    } }, { key: "_serializeObjectGetPartial", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(n2, i2);
    } }, { key: "_serializeAbstractObjectGetPartial", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(n2, i2);
    } }, { key: "_serializeObjectSetPartial", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 3), n2 = r2[0], i2 = r2[1], a2 = r2[2];
      return h.expressionStatement(h.assignmentExpression("=", (0, p.memberExpressionHelper)(n2, i2), a2));
    } }, { key: "_serializeIdentifier", value: function(e3, t2) {
      var r2 = e3.id;
      return (0, d.default)(void 0 !== r2), h.identifier(r2);
    } }, { key: "_serializeCoerceToString", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0];
      return h.binaryExpression("+", h.stringLiteral(""), r2);
    } }, { key: "_serializeBabelHelpersObjectWithoutProperties", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 3), n2 = r2[0], i2 = r2[1], a2 = r2[2];
      return h.callExpression(n2, [i2, a2]);
    } }, { key: "_serializeReactDefaultPropsHelper", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2.slice(1);
      return h.callExpression(n2, a2);
    } }, { key: "_serializeUnknownArrayMethodCall", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2.slice(1);
      return h.callExpression(n2, a2);
    } }, { key: "_serializeUnknownArrayLength", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0];
      return h.memberExpression(r2, h.identifier("length"), false);
    } }, { key: "_serializeUnknownArrayMethodPropertyCall", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2[1], o2 = r2.slice(2), s2 = a2.value;
      return h.callExpression(h.memberExpression(n2, h.identifier(s2)), o2);
    } }, { key: "_serializeThrow", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 1)[0];
      return h.throwStatement(r2);
    } }, { key: "_serializeConditionalThrow", value: function(e3, t2, r2) {
      var n2 = e3.value;
      return (0, d.default)(n2 instanceof v.Value), (function e4(t3) {
        if ((0, d.default)(void 0 !== r2), !(t3 instanceof v.AbstractValue) || "conditional" !== t3.kind) return h.throwStatement(r2.serializeValue(t3));
        var n3, i2, a2 = o(t3.args, 3), s2 = a2[0], u2 = a2[1], l2 = a2[2], c2 = r2.serializeValue(s2);
        return n3 = u2 instanceof v.EmptyValue ? h.blockStatement([]) : e4(u2), i2 = l2 instanceof v.EmptyValue ? h.blockStatement([]) : e4(l2), h.ifStatement(c2, n3, i2);
      })(n2);
    } }, { key: "_serializeReactSSRTemplateLiteral", value: function(e3, t2) {
      var r2 = e3.quasis;
      return (0, d.default)(void 0 !== r2), h.templateLiteral(r2, t2);
    } }, { key: "_serializeReactRenderValueHelper", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return h.callExpression(n2, [i2]);
    } }, { key: "_serializePropertyDelete", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return h.expressionStatement(h.unaryExpression("delete", (0, p.memberExpressionHelper)(n2, i2)));
    } }, { key: "_serializeGetBinding", value: function(e3, t2, r2) {
      var n2 = e3.binding;
      return (0, d.default)(void 0 !== n2), (0, d.default)(void 0 !== r2), r2.serializeBinding(n2);
    } }, { key: "_serializeForFunctionCall", value: function(e3, t2) {
      var r2 = e3.usesThis, n2 = o(t2, 2), i2 = n2[0], a2 = n2[1];
      return r2 ? h.callExpression(h.memberExpression(i2, h.identifier("call")), [a2]) : h.callExpression(i2, []);
    } }, { key: "_serializeNewExpression", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2.slice(1);
      return h.newExpression(n2, a2);
    } }, { key: "_serializeEmitCall", value: function(e3, t2) {
      var r2 = e3.callFunctionRef;
      (0, d.default)(void 0 !== r2);
      var i2 = this.preludeGenerator.memoizeReference(r2);
      return h.expressionStatement(h.callExpression(i2, n(t2)));
    } }, { key: "_serializeEmitCallAndCaptureResults", value: function(e3, t2) {
      var r2 = e3.callFunctionRef;
      (0, d.default)(void 0 !== r2);
      var n2 = this.preludeGenerator.memoizeReference(r2);
      return h.callExpression(n2, t2);
    } }, { key: "_serializeObjectProtoGetOwnPropertyDescriptor", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), n2 = r2[0], a2 = r2.slice(1);
      return h.callExpression(n2, a2);
    } }, { key: "_serializeCallBailout", value: function(e3, t2) {
      var r2, n2 = e3.propRef, i2 = 1;
      e3.thisArg instanceof v.Value ? "string" == typeof n2 ? r2 = (0, p.memberExpressionHelper)(t2[0], n2) : (r2 = (0, p.memberExpressionHelper)(t2[0], t2[1]), i2 = 2) : r2 = t2[0];
      var a2 = t2.slice(i2);
      return h.callExpression(r2, a2);
    } }, { key: "_serializeJoinGenerators", value: function(e3, t2, r2, n2) {
      var i2 = e3.generators, a2 = o(t2, 1)[0];
      (0, d.default)(void 0 !== r2), (0, d.default)(void 0 !== n2), (0, d.default)(void 0 !== i2);
      var s2 = o(i2, 2), u2 = s2[0], l2 = s2[1], c2 = u2.empty() ? null : m(u2, r2, n2), f2 = l2.empty() ? null : m(l2, r2, n2);
      return c2 ? h.ifStatement(a2, c2, f2) : ((0, d.default)(f2), h.ifStatement(h.unaryExpression("!", a2), f2));
    } }, { key: "_serializeEmitPropertyAssignment", value: function(e3, t2, r2) {
      var n2 = e3.value, i2 = o(t2, 3), a2 = i2[0], s2 = (i2[1], i2[2]);
      return (0, d.default)(void 0 !== r2), (0, d.default)(n2 instanceof v.Value), r2.getPropertyAssignmentStatement((0, p.memberExpressionHelper)(a2, s2), n2, n2.mightHaveBeenDeleted(), true);
    } }, { key: "_serializeGlobalAssignment", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1].value;
      return h.expressionStatement(h.assignmentExpression("=", this.preludeGenerator.globalReference(i2, false), n2));
    } }, { key: "_serializeSingleArg", value: function(e3, t2) {
      return l(e3), o(t2, 1)[0];
    } }, { key: "_serializeAbstractProperty", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 2), n2 = r2[0], i2 = r2[1];
      return (0, p.memberExpressionHelper)(n2, i2);
    } }, { key: "_serializeUnaryExpression", value: function(e3, t2) {
      var r2 = e3.unaryOperator, n2 = e3.prefix, i2 = o(t2, 2), a2 = i2[0];
      i2[1];
      return (0, d.default)(void 0 !== r2), h.unaryExpression(r2, a2, n2);
    } }, { key: "_serializeBinaryExpression", value: function(e3, t2) {
      var r2 = e3.binaryOperator, n2 = o(t2, 2), i2 = n2[0], a2 = n2[1];
      return (0, d.default)(void 0 !== r2), h.binaryExpression(r2, i2, a2);
    } }, { key: "_serializeLogicalExpression", value: function(e3, t2) {
      var r2 = e3.logicalOperator, n2 = o(t2, 2), i2 = n2[0], a2 = n2[1];
      return (0, d.default)(void 0 !== r2), h.logicalExpression(r2, i2, a2);
    } }, { key: "_serializeConditionalExpression", value: function(e3, t2) {
      l(e3);
      var r2 = o(t2, 3), n2 = r2[0], i2 = r2[1], a2 = r2[2];
      return h.conditionalExpression(n2, i2, a2);
    } }, { key: "_serializeDerivedOperationDescriptor", value: function(e3, t2) {
      return h.variableDeclaration("var", [h.variableDeclarator(h.identifier(e3), t2)]);
    } }, { key: "_serializeVoidOperationDescriptor", value: function(e3) {
      return h.expressionStatement(e3);
    } }, { key: "_serializeAbstractFromTemplate", value: function(e3, t2) {
      var r2 = e3.templateSource, n2 = {}, i2 = 0, a2 = true, o2 = false, s2 = void 0;
      try {
        for (var u2, l2 = t2[Symbol.iterator](); !(a2 = (u2 = l2.next()).done); a2 = true) {
          var c2 = u2.value;
          n2[f.Placeholders[i2++]] = c2;
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          a2 || null == l2.return || l2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      return (0, d.default)(void 0 !== r2), this.preludeGenerator.buildExpression(r2, n2);
    } }, { key: "_serializeObjectAssign", value: function(e3, t2) {
      l(e3);
      var r2 = i(t2), a2 = r2[0], o2 = r2.slice(1);
      return h.callExpression(this.preludeGenerator.memoizeReference("Object.assign"), [a2].concat(n(o2)));
    } }]), e2;
  })();
  t.ResidualOperationSerializer = b;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualReactElementSerializer = void 0;
  r(8), r(97);
  var o = r(99), s = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), u = r(0), l = r(96), c = (r(19), (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1))), f = r(4), p = r(59), d = r(14);
  var h = (function() {
    function e2(t2, r2, n2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.residualHeapSerializer = r2, this.logger = r2.logger, this.reactOutput = t2.react.output || "create-element", this._lazilyHoistedNodes = /* @__PURE__ */ new Map(), this._residualOptimizedFunctions = n2;
    }
    return (function(e3, t2, r2) {
      t2 && a(e3.prototype, t2), r2 && a(e3, r2);
    })(e2, [{ key: "_createReactElement", value: function(e3) {
      return { attributes: [], children: [], declared: false, type: void 0, value: e3 };
    } }, { key: "_createReactElementAttribute", value: function() {
      return { expr: void 0, key: void 0, type: "PENDING" };
    } }, { key: "_createReactElementChild", value: function() {
      return { expr: void 0, type: "PENDING" };
    } }, { key: "_emitHoistedReactElement", value: function(e3, t2, r2, n2, i2) {
      var a2 = this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(e3);
      (0, c.default)(a2);
      var o2 = this._lazilyHoistedNodes.get(a2);
      if (void 0 === o2) {
        var u2 = s.identifier(this.residualHeapSerializer.functionNameGenerator.generate());
        o2 = { id: u2, createElementIdentifier: n2, nodes: [] }, this._lazilyHoistedNodes.set(a2, o2);
        var l2 = s.expressionStatement(s.logicalExpression("&&", s.binaryExpression("===", t2, s.unaryExpression("void", s.numericLiteral(0), true)), s.callExpression(u2, i2 ? [i2] : [])));
        this.residualHeapSerializer.getPrelude(a2).push(l2);
      }
      o2.nodes.push({ id: t2, astNode: r2 });
    } }, { key: "_getReactLibraryValue", value: function() {
      var e3 = this.realm.fbLibraries.react;
      if (void 0 === e3) throw new f.FatalError("unable to find React library reference in scope");
      return e3;
    } }, { key: "_getReactCreateElementValue", value: function() {
      var e3 = this._getReactLibraryValue();
      return (0, d.getProperty)(this.realm, e3, "createElement");
    } }, { key: "_emitReactElement", value: function(e3) {
      var t2, r2, n2 = this, i2 = e3.value, a2 = (0, d.getProperty)(this.realm, i2, "type"), u2 = (0, d.getProperty)(this.realm, i2, "key"), l2 = (0, d.getProperty)(this.realm, i2, "ref"), f2 = (0, d.getProperty)(this.realm, i2, "props"), p2 = void 0 !== this._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(i2) && (0, o.canHoistReactElement)(this.realm, i2), h2 = this.residualHeapSerializer.getSerializeObjectIdentifier(i2), v = null, y = null, m = [a2, u2, l2, f2, i2];
      return "create-element" === this.reactOutput && (r2 = this._getReactCreateElementValue(), m.push(r2)), this.residualHeapSerializer.emitter.emitNowOrAfterWaitingForDependencies(m, function() {
        if ("jsx" === n2.reactOutput) t2 = n2._serializeReactElementToJSXElement(i2, e3);
        else if ("create-element" === n2.reactOutput) {
          if (v = n2.residualHeapSerializer.serializeValue(r2), p2) {
            var a3 = n2._residualOptimizedFunctions.tryGetOptimizedFunctionRoot(i2);
            (0, c.default)(a3);
            var o2 = n2._lazilyHoistedNodes.get(a3);
            y = void 0 === o2 ? s.identifier(n2.residualHeapSerializer.intrinsicNameGenerator.generate()) : o2.createElementIdentifier;
          }
          var u3 = p2 ? y : v;
          t2 = n2._serializeReactElementToCreateElement(i2, e3, u3);
        } else (0, c.default)(false, "Unknown reactOutput specified");
        p2 ? n2._emitHoistedReactElement(i2, h2, t2, y, v) : e3.declared ? n2.residualHeapSerializer.emitter.emit(s.expressionStatement(s.assignmentExpression("=", h2, t2))) : (e3.declared = true, n2.residualHeapSerializer.emitter.emit(s.variableDeclaration("var", [s.variableDeclarator(h2, t2)])));
      }, this.residualHeapSerializer.emitter.getBody()), h2;
    } }, { key: "_serializeNowOrAfterWaitingForDependencies", value: function(e3, t2, r2) {
      var n2 = this, i2 = (!(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], this.residualHeapSerializer.emitter.getReasonToWaitForDependencies(e3)), a2 = function() {
        r2();
      };
      i2 ? this.residualHeapSerializer.emitter.emitAfterWaiting(i2, [e3], function() {
        a2(), n2._emitReactElement(t2);
      }, this.residualHeapSerializer.emitter.getBody()) : a2();
    } }, { key: "_serializeReactFragmentType", value: function(e3) {
      var t2 = this._getReactLibraryValue();
      return s.memberExpression(this.residualHeapSerializer.serializeValue(t2), s.identifier("Fragment"));
    } }, { key: "serializeReactElement", value: function(e3) {
      var t2 = this, r2 = this.realm.react.reactElements.get(e3);
      (0, c.default)(void 0 !== r2);
      var n2 = r2.firstRenderOnly, a2 = this._createReactElement(e3);
      return (0, p.traverseReactElement)(this.realm, a2.value, { visitType: function(e4) {
        t2._serializeNowOrAfterWaitingForDependencies(e4, a2, function() {
          var r3;
          e4 instanceof u.SymbolValue && e4 === (0, d.getReactSymbol)("react.fragment", t2.realm) ? r3 = t2._serializeReactFragmentType(e4) : (r3 = t2.residualHeapSerializer.serializeValue(e4), t2.residualHeapSerializer.residualHeapValueIdentifiers.incrementReferenceCount(e4)), a2.type = r3;
        });
      }, visitKey: function(e4) {
        var r3 = t2._createReactElementAttribute();
        t2._serializeNowOrAfterWaitingForDependencies(e4, a2, function() {
          var n3 = t2.residualHeapSerializer.serializeValue(e4);
          r3.expr = n3, r3.key = "key", r3.type = "PROPERTY";
        }), a2.attributes.push(r3);
      }, visitRef: function(e4) {
        if (!n2) {
          var r3 = t2._createReactElementAttribute();
          t2._serializeNowOrAfterWaitingForDependencies(e4, a2, function() {
            var n3 = t2.residualHeapSerializer.serializeValue(e4);
            r3.expr = n3, r3.key = "ref", r3.type = "PROPERTY";
          }), a2.attributes.push(r3);
        }
      }, visitAbstractOrPartialProps: function(e4) {
        var r3 = t2._createReactElementAttribute();
        t2._serializeNowOrAfterWaitingForDependencies(e4, a2, function() {
          var n3 = t2.residualHeapSerializer.serializeValue(e4);
          r3.expr = n3, r3.type = "SPREAD";
        }), a2.attributes.push(r3);
      }, visitConcreteProps: function(r3) {
        var n3 = true, o2 = false, s2 = void 0;
        try {
          for (var u2, l2 = function() {
            var n4 = i(u2.value, 2), o3 = n4[0];
            if (void 0 === n4[1].descriptor || "children" === o3) return "continue";
            var s3 = (0, d.getProperty)(t2.realm, r3, o3);
            if ((0, d.canExcludeReactElementObjectProperty)(t2.realm, e3, o3, s3)) return "continue";
            var l3 = t2._createReactElementAttribute();
            t2._serializeNowOrAfterWaitingForDependencies(s3, a2, function() {
              var e4 = t2.residualHeapSerializer.serializeValue(s3);
              l3.expr = e4, l3.key = o3, l3.type = "PROPERTY";
            }), a2.attributes.push(l3);
          }, c2 = r3.properties[Symbol.iterator](); !(n3 = (u2 = c2.next()).done); n3 = true) l2();
        } catch (e4) {
          o2 = true, s2 = e4;
        } finally {
          try {
            n3 || null == c2.return || c2.return();
          } finally {
            if (o2) throw s2;
          }
        }
      }, visitChildNode: function(e4) {
        a2.children.push(t2._serializeReactElementChild(e4, a2));
      } }), this._emitReactElement(a2);
    } }, { key: "_addSerializedValueToJSXAttriutes", value: function(e3, t2, r2) {
      null === e3 ? r2.push(s.jSXSpreadAttribute(t2)) : r2.push((0, l.convertKeyValueToJSXAttribute)(e3, t2));
    } }, { key: "_serializeReactElementToCreateElement", value: function(e3, t2, r2) {
      var n2 = t2.type, i2 = t2.attributes, a2 = t2.children, o2 = [n2];
      if (0 !== i2.length) {
        var u2 = [], l2 = true, f2 = false, p2 = void 0;
        try {
          for (var d2, h2 = i2[Symbol.iterator](); !(l2 = (d2 = h2.next()).done); l2 = true) {
            var v = d2.value, y = v.expr;
            if ("SPREAD" === v.type) u2.push(s.spreadElement(y));
            else if ("PROPERTY" === v.type) {
              var m = v.key, b = void 0;
              (0, c.default)("string" == typeof m), b = m.includes("-") ? s.stringLiteral(m) : s.identifier(m), u2.push(s.objectProperty(b, y));
            }
          }
        } catch (e4) {
          f2 = true, p2 = e4;
        } finally {
          try {
            l2 || null == h2.return || h2.return();
          } finally {
            if (f2) throw p2;
          }
        }
        o2.push(s.objectExpression(u2));
      }
      if (0 !== a2.length) {
        0 === i2.length && o2.push(s.nullLiteral());
        var g = [], w = true, E = false, S = void 0;
        try {
          for (var T, A = a2[Symbol.iterator](); !(w = (T = A.next()).done); w = true) {
            var C = T.value, P = C.expr;
            "NORMAL" === C.type && g.push(P);
          }
        } catch (e4) {
          E = true, S = e4;
        } finally {
          try {
            w || null == A.return || A.return();
          } finally {
            if (E) throw S;
          }
        }
        o2.push.apply(o2, g);
      }
      var O = s.callExpression(r2, o2);
      return this._addBailOutMessageToBabelNode(e3, O), O;
    } }, { key: "_serializeReactElementToJSXElement", value: function(e3, t2) {
      var r2 = t2.type, n2 = t2.attributes, i2 = t2.children, a2 = (0, l.convertExpressionToJSXIdentifier)(r2, true), o2 = [], u2 = true, f2 = false, p2 = void 0;
      try {
        for (var d2, h2 = n2[Symbol.iterator](); !(u2 = (d2 = h2.next()).done); u2 = true) {
          var v = d2.value, y = v.expr;
          if ("SPREAD" === v.type) o2.push(s.jSXSpreadAttribute(y));
          else if ("PROPERTY" === v.type) {
            var m = v.key;
            (0, c.default)("string" == typeof m), o2.push((0, l.convertKeyValueToJSXAttribute)(m, y));
          }
        }
      } catch (e4) {
        f2 = true, p2 = e4;
      } finally {
        try {
          u2 || null == h2.return || h2.return();
        } finally {
          if (f2) throw p2;
        }
      }
      var b = [], g = true, w = false, E = void 0;
      try {
        for (var S, T = i2[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
          var A = S.value, C = A.expr;
          "NORMAL" === A.type && (s.isStringLiteral(C) || s.isNumericLiteral(C) ? b.push(s.jSXText(C.value + "")) : s.isJSXElement(C) ? b.push(C) : b.push(s.jSXExpressionContainer(C)));
        }
      } catch (e4) {
        w = true, E = e4;
      } finally {
        try {
          g || null == T.return || T.return();
        } finally {
          if (w) throw E;
        }
      }
      var P = s.jSXOpeningElement(a2, o2, 0 === b.length), O = s.jSXClosingElement(a2), x = s.jSXElement(P, O, b, 0 === b.length);
      return this._addBailOutMessageToBabelNode(e3, x), x;
    } }, { key: "_addBailOutMessageToBabelNode", value: function(e3, t2) {
      void 0 !== e3.$BailOutReason && (t2.leadingComments = [{ type: "BlockComment", value: "".concat(e3.$BailOutReason) }]);
    } }, { key: "_serializeReactElementChild", value: function(e3, t2) {
      var r2 = this, n2 = this._createReactElementChild();
      return this._serializeNowOrAfterWaitingForDependencies(e3, t2, function() {
        var t3 = r2.residualHeapSerializer.serializeValue(e3);
        n2.expr = t3, n2.type = "NORMAL";
      }), n2;
    } }, { key: "serializeLazyHoistedNodes", value: function(e3) {
      var t2 = [], r2 = this._lazilyHoistedNodes.get(e3);
      if (void 0 !== r2) {
        var i2 = r2.id, a2 = r2.nodes, o2 = r2.createElementIdentifier, u2 = s.functionExpression(null, o2 ? [o2] : [], s.blockStatement(a2.map(function(e4) {
          return s.expressionStatement(s.assignmentExpression("=", e4.id, e4.astNode));
        })));
        t2.push(s.variableDeclaration("var", [s.variableDeclarator(i2, u2)])), t2.push.apply(t2, n(a2.map(function(e4) {
          return s.variableDeclaration("var", [s.variableDeclarator(e4.id)]);
        }))), this._lazilyHoistedNodes.delete(e3);
      }
      return t2;
    } }]), e2;
  })();
  t.ResidualReactElementSerializer = h;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Emitter = void 0;
  var a = r(0), o = r(9), s = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), u = r(33), l = (r(144), r(14));
  var c = (function() {
    function e2(t2, r2, n2, i2) {
      var a2 = this;
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._mainBody = { type: "MainGenerator", parentBody: void 0, entries: [], done: false }, this._waitingForValues = /* @__PURE__ */ new Map(), this._waitingForBodies = /* @__PURE__ */ new Map(), this._body = this._mainBody, this._residualFunctions = t2, this._activeStack = [], this._activeValues = /* @__PURE__ */ new Set(), this._activeGeneratorStack = [this._mainBody], this._finalized = false;
      var o2 = function(e3) {
        if (a2.cannotDeclare()) return false;
        if (a2.hasBeenDeclared(e3)) return false;
        var t3 = a2.getActiveOptimizedFunction();
        return void 0 === t3 || r2.get(e3) === t3;
      };
      this._getReasonToWaitForDependenciesCallbacks = { onActive: function(e3) {
        return e3;
      }, onFunction: function(e3) {
        a2._residualFunctions.addFunctionUsage(e3, a2.getBodyReference());
      }, onAbstractValueWithIdentifier: function(e3) {
        return i2.has(e3.getIdentifier()) && o2(e3) ? e3 : void 0;
      }, onArrayWithWidenedNumericProperty: function(e3) {
        return o2(e3) ? e3 : void 0;
      } }, this._conditionalFeasibility = n2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "beginEmitting", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
      (0, s.default)(!this._finalized), (0, s.default)("OptimizedFunction" === t2.type == !!t2.optimizedFunction), this._activeStack.push(e3), e3 instanceof a.Value ? ((0, s.default)(!this._activeValues.has(e3)), this._activeValues.add(e3)) : e3 instanceof o.Generator && ((0, s.default)(!this._activeGeneratorStack.includes(t2)), this._activeGeneratorStack.push(t2)), r2 && (t2.parentBody = this._body, t2.nestingLevel = (this._body.nestingLevel || 0) + 1);
      var n2 = this._body;
      return this._body = t2, n2;
    } }, { key: "emit", value: function(e3) {
      (0, s.default)(!this._finalized), this._body.entries.push(e3), this._processCurrentBody();
    } }, { key: "finalizeCurrentBody", value: function() {
      (0, s.default)(!this._finalized), this._processCurrentBody();
    } }, { key: "endEmitting", value: function(e3, t2, r2) {
      var i2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
      (0, s.default)(!this._finalized);
      var u2 = this._activeStack.pop();
      (0, s.default)(e3 === u2), e3 instanceof a.Value ? ((0, s.default)(this._activeValues.has(e3)), this._activeValues.delete(e3), this._processValue(e3)) : e3 instanceof o.Generator && ((0, s.default)(this._isEmittingActiveGenerator()), this._activeGeneratorStack.pop());
      var l2 = this._body;
      if (this._body = t2, i2 && ((0, s.default)(l2.parentBody === t2), (0, s.default)((l2.nestingLevel || 0) > 0), (0, s.default)(!l2.done), l2.done = true, l2.declaredValues)) for (var c2 = true, f = l2; f.done && void 0 !== f.parentBody && c2; f = f.parentBody) {
        c2 = false;
        var p = f.parentBody.declaredValues;
        void 0 === p && (f.parentBody.declaredValues = p = /* @__PURE__ */ new Map()), (0, s.default)(f.declaredValues);
        var d = true, h = false, v = void 0;
        try {
          for (var y, m = f.declaredValues[Symbol.iterator](); !(d = (y = m.next()).done); d = true) {
            var b = n(y.value, 2), g = b[0], w = b[1];
            p.has(g) || (p.set(g, w), void 0 !== r2 && r2.add(g), c2 = true);
          }
        } catch (e4) {
          h = true, v = e4;
        } finally {
          try {
            d || null == m.return || m.return();
          } finally {
            if (h) throw v;
          }
        }
      }
      return l2;
    } }, { key: "processValues", value: function(e3) {
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = e3[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value;
          this._processValue(o2);
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }, { key: "finalize", value: function() {
      (0, s.default)(!this._finalized), (0, s.default)(1 === this._activeGeneratorStack.length), (0, s.default)(this._activeGeneratorStack[0] === this._body), (0, s.default)(this._body === this._mainBody), this._processCurrentBody(), this._activeGeneratorStack.pop(), this._finalized = true, (0, s.default)(0 === this._waitingForBodies.size), (0, s.default)(0 === this._waitingForValues.size), (0, s.default)(0 === this._activeStack.length), (0, s.default)(0 === this._activeValues.size), (0, s.default)(0 === this._activeGeneratorStack.length);
    } }, { key: "_isEmittingActiveGenerator", value: function() {
      return (0, s.default)(this._activeGeneratorStack.length > 0), this._activeGeneratorStack[this._activeGeneratorStack.length - 1] === this._body;
    } }, { key: "_isGeneratorBody", value: function(e3) {
      return "MainGenerator" === e3.type || "Generator" === e3.type || "OptimizedFunction" === e3.type;
    } }, { key: "_processCurrentBody", value: function() {
      if (this._isEmittingActiveGenerator() && !this._body.processing) {
        var e3 = this._waitingForBodies.get(this._body);
        if (void 0 !== e3) {
          for (this._body.processing = true; e3.length > 0; ) {
            var t2 = e3.shift(), r2 = t2.dependencies, n2 = t2.func;
            this.emitNowOrAfterWaitingForDependencies(r2, n2, this._body);
          }
          this._waitingForBodies.delete(this._body), this._body.processing = false;
        }
      }
    } }, { key: "_processValue", value: function(e3) {
      var t2 = this._waitingForValues.get(e3);
      if (void 0 !== t2) {
        for (var r2 = this._body; t2.length > 0; ) {
          var n2 = t2.shift(), i2 = n2.body, a2 = n2.dependencies, o2 = n2.func;
          this._isGeneratorBody(i2) && i2 !== r2 ? this._emitAfterWaitingForGeneratorBody(i2, a2, o2) : this.emitNowOrAfterWaitingForDependencies(a2, o2, i2);
        }
        this._waitingForValues.delete(e3);
      }
    } }, { key: "_getFirstAncestorGeneratorWithActiveBody", value: function(e3) {
      var t2 = this, r2 = e3.slice().reverse().find(function(e4) {
        return t2._activeGeneratorStack.includes(e4);
      });
      return (0, s.default)(r2), r2;
    } }, { key: "getReasonToWaitForDependencies", value: function(e3) {
      return this.dependenciesVisitor(e3, this._getReasonToWaitForDependenciesCallbacks);
    } }, { key: "dependenciesVisitor", value: function(e3, t2) {
      var r2, n2 = this;
      (0, s.default)(!this._finalized);
      var i2 = function(e4) {
        return n2.dependenciesVisitor(e4, t2);
      };
      if (Array.isArray(e3)) {
        var o2 = e3, u2 = true, c2 = false, f = void 0;
        try {
          for (var p, d = o2[Symbol.iterator](); !(u2 = (p = d.next()).done); u2 = true) {
            if (void 0 !== (r2 = i2(p.value))) return r2;
          }
        } catch (e4) {
          c2 = true, f = e4;
        } finally {
          try {
            u2 || null == d.return || d.return();
          } finally {
            if (c2) throw f;
          }
        }
      } else {
        var h = e3;
        if (this._activeValues.has(h)) {
          if (h instanceof a.FunctionValue && !(h instanceof a.BoundFunctionValue)) return r2 = t2.onFunction ? t2.onFunction(h) : void 0;
          if (void 0 !== (r2 = t2.onActive ? t2.onActive(h) : void 0)) return r2;
        }
        if (h instanceof a.BoundFunctionValue) {
          if (void 0 !== (r2 = i2(h.$BoundTargetFunction))) return r2;
          if (void 0 !== (r2 = i2(h.$BoundThis))) return r2;
          if (void 0 !== (r2 = i2(h.$BoundArguments))) return r2;
        } else if (h instanceof a.FunctionValue) {
          if (void 0 !== (r2 = t2.onFunction ? t2.onFunction(h) : void 0)) return r2;
        } else if (h instanceof a.AbstractValue) {
          if (h.hasIdentifier() && void 0 !== (r2 = t2.onAbstractValueWithIdentifier ? t2.onAbstractValueWithIdentifier(h) : void 0)) return r2;
          var v;
          if ("conditional" === h.kind) {
            var y = this._conditionalFeasibility.get(h);
            (0, s.default)(void 0 !== y), v = [], y.t && y.f && v.push(h.args[0]), y.t && v.push(h.args[1]), y.f && v.push(h.args[2]);
          } else v = h.args;
          if (void 0 !== (r2 = i2(v))) return r2;
        } else if (h instanceof a.ProxyValue) {
          if (void 0 !== (r2 = i2(h.$ProxyTarget))) return r2;
          if (void 0 !== (r2 = i2(h.$ProxyHandler))) return r2;
        } else if (h instanceof a.SymbolValue) {
          if (h.$Description instanceof a.Value && void 0 !== (r2 = i2(h.$Description))) return r2;
        } else if (h instanceof a.ArrayValue && a.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(h)) {
          if (void 0 !== (r2 = t2.onArrayWithWidenedNumericProperty ? t2.onArrayWithWidenedNumericProperty(h) : void 0)) return r2;
        } else if (h instanceof a.ObjectValue) {
          switch (h.getKind()) {
            case "Object":
              var m = h.$Prototype;
              if (m instanceof a.ObjectValue && m.usesOrdinaryObjectInternalPrototypeMethods() && void 0 !== (r2 = i2(h.$Prototype))) return r2;
              break;
            case "Date":
              if ((0, s.default)(void 0 !== h.$DateValue), void 0 !== (r2 = i2(h.$DateValue))) return r2;
              break;
            case "ReactElement":
              var b = h.$Realm, g = (0, l.getProperty)(b, h, "type"), w = (0, l.getProperty)(b, h, "props"), E = (0, l.getProperty)(b, h, "key"), S = (0, l.getProperty)(b, h, "ref");
              if (void 0 !== (r2 = i2(g))) return r2;
              if (void 0 !== (r2 = i2(w))) return r2;
              if (void 0 !== (r2 = i2(E))) return r2;
              if (void 0 !== (r2 = i2(S))) return r2;
          }
        }
      }
    } }, { key: "getReasonToWaitForActiveValue", value: function(e3, t2) {
      return (0, s.default)(!this._finalized), (0, s.default)(this._activeValues.has(e3)), t2 ? e3 : void 0;
    } }, { key: "emitAfterWaiting", value: function(e3, t2, r2, n2) {
      if (void 0 === e3 && this._isGeneratorBody(n2) && (e3 = n2), void 0 === e3 || e3 === this._body) if (n2 === this._body) r2();
      else {
        (0, s.default)(!this._isGeneratorBody(n2));
        var i2 = this.beginEmitting(n2.type, n2);
        r2(), this.endEmitting(n2.type, i2);
      }
      else (0, s.default)(void 0 !== e3), e3 instanceof a.Value ? this._emitAfterWaitingForValue(e3, t2, n2, r2) : this._isGeneratorBody(e3) ? this._emitAfterWaitingForGeneratorBody(e3, t2, r2) : (0, s.default)(false);
    } }, { key: "_emitAfterWaitingForValue", value: function(e3, t2, r2, n2) {
      (0, s.default)(!this._finalized), (0, s.default)(!(e3 instanceof a.AbstractValue && this.hasBeenDeclared(e3)) || this._activeValues.has(e3));
      var i2 = this._waitingForValues.get(e3);
      void 0 === i2 && this._waitingForValues.set(e3, i2 = []), i2.push({ body: r2, dependencies: t2, func: n2 });
    } }, { key: "_emitAfterWaitingForGeneratorBody", value: function(e3, t2, r2) {
      (0, s.default)(this._isGeneratorBody(e3)), (0, s.default)(!this._finalized), (0, s.default)(this._activeGeneratorStack.includes(e3));
      var n2 = this._waitingForBodies.get(e3);
      void 0 === n2 && this._waitingForBodies.set(e3, n2 = []), n2.push({ dependencies: t2, func: r2 });
    } }, { key: "emitNowOrAfterWaitingForDependencies", value: function(e3, t2, r2) {
      this.emitAfterWaiting(this.getReasonToWaitForDependencies(e3), e3, t2, r2);
    } }, { key: "declare", value: function(e3) {
      (0, s.default)(!this._finalized), (0, s.default)(!this._activeValues.has(e3)), (0, s.default)(e3 instanceof a.ObjectValue || e3.hasIdentifier()), (0, s.default)(this._isEmittingActiveGenerator()), (0, s.default)(!this.cannotDeclare()), (0, s.default)(!this._body.done), void 0 === this._body.declaredValues && (this._body.declaredValues = /* @__PURE__ */ new Map()), this._body.declaredValues.set(e3, this._body), this._processValue(e3);
    } }, { key: "getActiveOptimizedFunction", value: function() {
      for (var e3 = this._body; void 0 !== e3; e3 = e3.parentBody) if ("OptimizedFunction" === e3.type) return e3.optimizedFunction;
    } }, { key: "cannotDeclare", value: function() {
      return "DelayInitializations" === this._body.type || "LazyObjectInitializer" === this._body.type;
    } }, { key: "hasBeenDeclared", value: function(e3) {
      return void 0 !== this.getDeclarationBody(e3);
    } }, { key: "getDeclarationBody", value: function(e3) {
      for (var t2 = this._body; void 0 !== t2; t2 = t2.parentBody) if (void 0 !== t2.declaredValues && t2.declaredValues.has(e3)) return t2;
    } }, { key: "declaredCount", value: function() {
      var e3 = this._body.declaredValues;
      return void 0 === e3 ? 0 : e3.size;
    } }, { key: "getBody", value: function() {
      return this._body;
    } }, { key: "isCurrentBodyOffspringOf", value: function(e3) {
      for (var t2 = this._body; void 0 !== t2; ) {
        if (t2 === e3) return true;
        t2 = t2.parentBody;
      }
      return false;
    } }, { key: "getBodyReference", value: function() {
      return (0, s.default)(!this._finalized), new u.BodyReference(this._body, this._body.entries.length);
    } }]), e2;
  })();
  t.Emitter = c;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ResidualFunctionInitializers = void 0;
  var a = r(0), o = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), s = (r(64), f(r(39))), u = f(r(1)), l = r(31), c = r(142);
  function f(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var p = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.functionInitializerInfos = /* @__PURE__ */ new Map(), this.initializers = /* @__PURE__ */ new Map(), this.sharedInitializers = /* @__PURE__ */ new Map(), this.locationService = t2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "registerValueOnlyReferencedByResidualFunctions", value: function(e3, t2) {
      (0, u.default)(e3.length >= 1);
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
          var l2 = o2.value, c2 = this.functionInitializerInfos.get(l2);
          void 0 === c2 && this.functionInitializerInfos.set(l2, c2 = { ownId: this.functionInitializerInfos.size.toString(), initializerIds: /* @__PURE__ */ new Set() }), r2.push(c2);
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      for (var f2 = r2.map(function(e4) {
        return e4.ownId;
      }).sort().join(), p2 = 0; p2 < r2.length; p2++) {
        r2[p2].initializerIds.add(f2);
      }
      var d = this.initializers.get(f2);
      return void 0 === d && this.initializers.set(f2, d = { id: f2, order: r2.length, values: [], body: { type: "DelayInitializations", parentBody: void 0, entries: [], done: false } }), d.values.push(t2), d.body;
    } }, { key: "scrubFunctionInitializers", value: function() {
      var e3 = true, t2 = false, r2 = void 0;
      try {
        for (var i2, a2 = this.initializers.values()[Symbol.iterator](); !(e3 = (i2 = a2.next()).done); e3 = true) {
          var o2 = i2.value;
          0 === o2.body.entries.length && this.initializers.delete(o2.id);
        }
      } catch (e4) {
        t2 = true, r2 = e4;
      } finally {
        try {
          e3 || null == a2.return || a2.return();
        } finally {
          if (t2) throw r2;
        }
      }
      var s2 = true, u2 = false, l2 = void 0;
      try {
        for (var c2, f2 = this.functionInitializerInfos[Symbol.iterator](); !(s2 = (c2 = f2.next()).done); s2 = true) {
          var p2 = n(c2.value, 2), d = p2[0], h = p2[1], v = true, y = false, m = void 0;
          try {
            for (var b, g = h.initializerIds[Symbol.iterator](); !(v = (b = g.next()).done); v = true) {
              var w = b.value;
              void 0 === this.initializers.get(w) && h.initializerIds.delete(w);
            }
          } catch (e4) {
            y = true, m = e4;
          } finally {
            try {
              v || null == g.return || g.return();
            } finally {
              if (y) throw m;
            }
          }
          0 === h.initializerIds.size && this.functionInitializerInfos.delete(d);
        }
      } catch (e4) {
        u2 = true, l2 = e4;
      } finally {
        try {
          s2 || null == f2.return || f2.return();
        } finally {
          if (u2) throw l2;
        }
      }
    } }, { key: "_conditionalInitialization", value: function(e3, t2, r2) {
      if (1 === r2.length && o.isIfStatement(r2[0])) return r2[0];
      var n2, i2 = true, s2 = false, u2 = void 0;
      try {
        for (var c2, f2 = t2[Symbol.iterator](); !(i2 = (c2 = f2.next()).done); i2 = true) {
          var p2 = c2.value;
          if (!(p2.mightBeUndefined() || p2 instanceof a.FunctionValue) && void 0 !== (n2 = this.locationService.getLocation(p2))) break;
        }
      } catch (e4) {
        s2 = true, u2 = e4;
      } finally {
        try {
          i2 || null == f2.return || f2.return();
        } finally {
          if (s2) throw u2;
        }
      }
      return void 0 === n2 && (n2 = this.locationService.createLocation(e3), r2.unshift(o.expressionStatement(o.assignmentExpression("=", n2, l.nullExpression)))), o.ifStatement(o.binaryExpression("===", n2, l.voidExpression), o.blockStatement(r2));
    } }, { key: "hasInitializerStatement", value: function(e3) {
      return !!this.functionInitializerInfos.get(e3);
    } }, { key: "factorifyInitializers", value: function(e3) {
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this.initializers.values()[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          var o2 = i2.value;
          (0, c.factorifyObjects)(o2.body.entries, e3);
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
    } }, { key: "getInitializerStatement", value: function(e3) {
      var t2 = this, r2 = this.functionInitializerInfos.get(e3);
      if (void 0 !== r2) {
        var n2 = this.locationService.getContainingAdditionalFunction(e3);
        (0, u.default)(r2.initializerIds.size > 0);
        var i2, a2 = this.initializers.get(r2.ownId), l2 = [], c2 = [], f2 = true, p2 = false, d = void 0;
        try {
          for (var h, v = r2.initializerIds[Symbol.iterator](); !(f2 = (h = v.next()).done); f2 = true) {
            var y = h.value, m = this.initializers.get(y);
            (0, u.default)(void 0 !== m), (0, u.default)(m.body.entries.length > 0), c2.push(m);
          }
        } catch (e4) {
          p2 = true, d = e4;
        } finally {
          try {
            f2 || null == v.return || v.return();
          } finally {
            if (p2) throw d;
          }
        }
        c2.sort(function(e4, t3) {
          return t3.order - e4.order;
        });
        for (var b = 0; b < c2.length; b++) {
          var g = c2[b];
          if (1 !== r2.initializerIds.size && g !== a2 || (i2 = g.values), g === a2) l2 = l2.concat(g.body.entries);
          else {
            var w = this.sharedInitializers.get(g.id);
            void 0 === w && (function() {
              w = t2._conditionalInitialization(n2, g.values, g.body.entries);
              var e4 = 0;
              if ((0, s.default)(o.file(o.program([w])), function(t3) {
                return e4++, false;
              }), e4 > 24) {
                var r3 = t2.locationService.createFunction(n2, [w]);
                w = o.expressionStatement(o.callExpression(r3, []));
              }
              t2.sharedInitializers.set(g.id, w);
            })(), l2.push(w);
          }
        }
        return this._conditionalInitialization(n2, i2 || [], l2);
      }
    } }]), e2;
  })();
  t.ResidualFunctionInitializers = p;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ReactPropsSet = void 0;
  r(8);
  var a = r(0), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(98);
  var u = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.reactEquivalenceSet = r2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "add", value: function(e3, t2) {
      t2 || (t2 = /* @__PURE__ */ new Set());
      var r2, i2 = this.reactEquivalenceSet, u2 = i2.reactPropsRoot, l = true, c = false, f = void 0;
      try {
        for (var p, d = e3.properties[Symbol.iterator](); !(l = (p = d.next()).done); l = true) {
          var h = n(p.value, 1)[0];
          u2 = i2.getKey(h, u2, t2), u2 = (r2 = i2.getEquivalentPropertyValue(e3, h, u2, t2)).map;
        }
      } catch (e4) {
        c = true, f = e4;
      } finally {
        try {
          l || null == d.return || d.return();
        } finally {
          if (c) throw f;
        }
      }
      var v = e3.temporalAlias;
      return void 0 !== v && (u2 = i2.getKey(s.temporalAliasSymbol, u2, t2), u2 = (r2 = i2.getTemporalAliasValue(v, u2, t2)).map), void 0 === r2 ? void 0 === v && void 0 !== this.realm.react.emptyObject ? this.realm.react.emptyObject : e3 : (null === r2.value && (r2.value = e3), (0, o.default)(r2.value instanceof a.ObjectValue), r2.value);
    } }]), e2;
  })();
  t.ReactPropsSet = u;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ReactElementSet = void 0;
  r(8);
  var i = r(0), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  r(98);
  var o = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.reactEquivalenceSet = r2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "add", value: function(e3, t2) {
      t2 || (t2 = /* @__PURE__ */ new Set());
      var r2 = this.reactEquivalenceSet, n2 = r2.reactElementRoot;
      n2 = r2.getKey("type", n2, t2);
      var o2 = r2.getEquivalentPropertyValue(e3, "type", n2, t2);
      return n2 = o2.map, n2 = r2.getKey("key", n2, t2), n2 = (o2 = r2.getEquivalentPropertyValue(e3, "key", n2, t2)).map, n2 = r2.getKey("ref", n2, t2), n2 = (o2 = r2.getEquivalentPropertyValue(e3, "ref", n2, t2)).map, n2 = r2.getKey("props", n2, t2), null === (o2 = r2.getEquivalentPropertyValue(e3, "props", n2, t2)).value && (o2.value = e3), (0, a.default)(o2.value instanceof i.ObjectValue), o2.value;
    } }]), e2;
  })();
  t.ReactElementSet = o;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.ClosureRefVisitor = void 0;
  r(8);
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
  function i(e2, t2, r2, n2) {
    if (!e2.scope.hasBinding(r2.name, true)) {
      var i2 = t2.functionInfo.unbound.get(r2.name);
      void 0 === i2 && t2.functionInfo.unbound.set(r2.name, i2 = []), i2.push(r2), n2 && t2.functionInfo.modified.add(r2.name);
    }
  }
  var a = { "FunctionDeclaration|ArrowFunctionExpression|FunctionExpression": { enter: function(e2, t2) {
    t2.functionInfo.depth++;
  }, exit: function(e2, t2) {
    t2.functionInfo.depth--;
  } }, ArrowFunctionExpression: { enter: function(e2, t2) {
    t2.functionInfo.depth++, t2.functionInfo.lexicalDepth++;
  }, exit: function(e2, t2) {
    t2.functionInfo.depth--, t2.functionInfo.lexicalDepth--;
  } }, CallExpression: function(e2, t2) {
    if (void 0 !== t2.getModuleIdIfNodeIsRequireFunction) {
      var r2 = t2.getModuleIdIfNodeIsRequireFunction(e2.scope, e2.node);
      void 0 !== r2 && t2.functionInfo.requireCalls.set(e2.node, r2);
    }
  }, ReferencedIdentifier: function(e2, t2) {
    (function(e3) {
      var t3 = e3.parent;
      return n.isLabeledStatement(t3) || n.isBreakStatement(t3) || n.isContinueStatement(t3);
    })(e2) || ("arguments" !== e2.node.name ? i(e2, t2, e2.node, false) : 1 === t2.functionInfo.depth && (t2.functionInfo.usesArguments = true));
  }, ThisExpression: function(e2, t2) {
    t2.functionInfo.depth - t2.functionInfo.lexicalDepth == 1 && (t2.functionInfo.usesThis = true);
  }, "AssignmentExpression|UpdateExpression": function(e2, t2) {
    var r2 = e2.getBindingIdentifiers();
    for (var n2 in r2) i(e2, t2, r2[n2], true);
  }, "ForInStatement|ForOfStatement": function(e2, t2) {
    if ("VariableDeclaration" !== e2.node.left) {
      var r2 = e2.get("left").getBindingIdentifiers();
      for (var n2 in r2) i(e2, t2, r2[n2], true);
    }
  } };
  t.ClosureRefVisitor = a;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.LoggingTracer = void 0;
  r(10);
  var u = r(8), l = r(3), c = r(7), f = r(0), p = r(2), d = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), h = r(31);
  function v(e2, t2) {
    return t2 instanceof f.NumberValue || t2 instanceof f.BooleanValue ? t2.value.toString() : t2 instanceof f.UndefinedValue ? "undefined" : t2 instanceof f.NullValue ? "null" : t2 instanceof f.StringValue ? JSON.stringify(t2.value) : t2 instanceof f.FunctionValue ? p.To.ToStringPartial(e2, (0, l.Get)(e2, t2, "name")) || "(anonymous function)" : t2 instanceof f.ObjectValue ? "(some object)" : t2 instanceof f.AbstractValue ? "(some abstract value)" : void (0, d.default)(false);
  }
  var y = (function(e2) {
    function t2(e3) {
      var r2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (r2 = a(this, o(t2).call(this))).realm = e3, r2.nesting = [], r2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.Tracer), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "log", value: function(e3) {
      console.log("[calls] ".concat(this.nesting.map(function(e4) {
        return "  ";
      }).join("")).concat(e3));
    } }, { key: "beginEvaluateForEffects", value: function(e3) {
      this.log(">evaluate for effects"), this.nesting.push("(evaluate for effects)");
    } }, { key: "endEvaluateForEffects", value: function(e3, t3) {
      var r2 = this.nesting.pop();
      (0, d.default)("(evaluate for effects)" === r2), this.log("<evaluate for effects");
    } }, { key: "beforeCall", value: function(e3, t3, r2, n2) {
      var i2 = this.realm, a2 = v(i2, e3);
      this.log(">".concat(a2, "(").concat(r2.map(function(e4) {
        return v(i2, e4);
      }).join(", "), ")")), this.nesting.push(a2);
    } }, { key: "afterCall", value: function(e3, t3, r2, n2, i2) {
      var a2 = this.nesting.pop();
      this.log("<".concat(a2).concat(i2 instanceof c.ThrowCompletion ? ": error" : ""));
    } }, { key: "beginOptimizingFunction", value: function(e3, t3) {
      this.log(">Starting Optimized Function ".concat(e3, " ").concat(t3.intrinsicName ? t3.intrinsicName : "[unknown name]", " ").concat(t3.expressionLocation ? (0, h.stringOfLocation)(t3.expressionLocation) : ""));
    } }, { key: "endOptimizingFunction", value: function(e3) {
      this.log("<Ending Optimized Function ".concat(e3));
    } }]), t2;
  })();
  t.LoggingTracer = y;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.stripFlowTypeAnnotations = function(e2) {
    (0, n.default)(e2, { ImportDeclaration: function(e3) {
      if (e3.node.specifiers.length) {
        var t2 = 0;
        e3.node.specifiers.forEach(function(e4) {
          var r2 = e4.importKind;
          "type" !== r2 && "typeof" !== r2 || t2++;
        }), t2 === e3.node.specifiers.length && e3.remove();
      }
    }, Flow: function(e3) {
      e3.remove();
    }, ClassProperty: function(e3) {
      e3.node.variance = null, e3.node.typeAnnotation = null, e3.node.value || e3.remove();
    }, Class: function(e3) {
      e3.node.implements = null, e3.get("body.body").forEach(function(e4) {
        e4.isClassProperty() && (e4.node.typeAnnotation = null, e4.node.value || e4.remove());
      });
    }, AssignmentPattern: function(e3) {
      var t2 = e3.node;
      t2.left.optional = false;
    }, Function: function(e3) {
      for (var t2 = e3.node, r2 = 0; r2 < t2.params.length; r2++) {
        var n2 = t2.params[r2];
        n2.optional = false, "AssignmentPattern" === n2.type && (n2.left.optional = false);
      }
      t2.predicate = null;
    }, TypeCastExpression: function(e3) {
      var t2 = e3.node;
      do {
        t2 = t2.expression;
      } while (i.isTypeCastExpression(t2));
      e3.replaceWith(t2);
    } }, void 0, {}, void 0), n.default.cache.clear();
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(28)), i = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.getInitialProps = function(e2, t2, r2) {
    var n2 = r2.modelString, s2 = void 0 !== n2 ? JSON.parse(n2) : void 0, u2 = d.ShapeInformation.createForReactComponentProps(s2), l2 = null;
    if (null !== t2) {
      var f2;
      if ((0, o.valueIsClassComponent)(e2, t2)) l2 = "this.props";
      else if (t2 instanceof i.BoundFunctionValue ? ((0, c.default)(t2.$BoundTargetFunction instanceof i.ECMAScriptSourceFunctionValue), f2 = t2.$BoundTargetFunction.$FormalParameters) : f2 = t2.$FormalParameters, f2.length > 0) {
        var p2 = f2[0];
        a.isIdentifier(p2) && (l2 = p2.name);
      }
    }
    var h2 = i.AbstractValue.createAbstractObject(e2, l2 || "props", u2);
    return (0, c.default)(h2 instanceof i.AbstractObjectValue), (0, o.flagPropsWithNoPartialKeyOrRef)(e2, h2), h2.makeFinal(), h2;
  }, t.getInitialContext = function(e2, t2) {
    var r2 = null;
    if ((0, o.valueIsClassComponent)(e2, t2)) {
      var n2 = t2.$SuperTypeParameters;
      if (r2 = "this.context", void 0 !== n2) throw new s.ExpectedBailOut("context on class components not yet supported");
    } else {
      var u2;
      if (t2 instanceof i.BoundFunctionValue ? ((0, c.default)(t2.$BoundTargetFunction instanceof i.ECMAScriptSourceFunctionValue), u2 = t2.$BoundTargetFunction.$FormalParameters) : u2 = t2.$FormalParameters, u2.length > 1) {
        var l2 = u2[1];
        a.isIdentifier(l2) && (r2 = l2.name);
      }
    }
    return i.AbstractValue.createAbstractObject(e2, r2 || "context");
  }, t.createSimpleClassInstance = function(e2, t2, r2, a2) {
    var o2 = (0, u.Get)(e2, t2, "prototype");
    (0, c.default)(o2 instanceof i.ObjectValue);
    var f2 = new i.ObjectValue(e2, o2, "this", true), p2 = /* @__PURE__ */ new Set(["props", "context"]), d2 = true, h2 = false, v2 = void 0;
    try {
      for (var m2, g = o2.properties[Symbol.iterator](); !(d2 = (m2 = g.next()).done); d2 = true) {
        var w = n(m2.value, 1), E = w[0];
        if (y.has(E)) throw new s.SimpleClassBailOut("lifecycle methods are not supported on simple classes");
        if ("constructor" !== E) {
          p2.add(E);
          var S = (0, u.Get)(e2, o2, E);
          S instanceof i.ECMAScriptSourceFunctionValue && b(e2, S), l.Properties.Set(e2, f2, E, S, true);
        }
      }
    } catch (e3) {
      h2 = true, v2 = e3;
    } finally {
      try {
        d2 || null == g.return || g.return();
      } finally {
        if (h2) throw v2;
      }
    }
    l.Properties.Set(e2, f2, "props", r2, true), l.Properties.Set(e2, f2, "context", a2, true);
    var T = f2.$GetOwnProperty;
    return f2.$GetOwnProperty = function(e3) {
      if (!p2.has(e3)) throw new s.SimpleClassBailOut("access to basic class instance properties is not supported on simple classes");
      return T.call(f2, e3);
    }, f2.refuseSerialization = false, f2;
  }, t.createClassInstanceForFirstRenderOnly = function(e2, t2, r2, a2, s2) {
    var f2 = (0, o.getValueFromFunctionCall)(e2, t2, e2.intrinsics.undefined, [r2, a2], true), p2 = (0, u.Get)(e2, e2.intrinsics.Object, "assign");
    (0, c.default)(p2 instanceof i.ECMAScriptFunctionValue);
    var d2 = p2.$Call;
    (0, c.default)(void 0 !== d2), (0, c.default)(f2 instanceof i.ObjectValue), f2.refuseSerialization = true, l.Properties.Set(e2, f2, "props", r2, true), l.Properties.Set(e2, f2, "context", a2, true);
    var v2 = (0, u.Get)(e2, f2, "state");
    (v2 instanceof i.AbstractObjectValue || v2 instanceof i.ObjectValue) && v2.makeFinal();
    var y2 = new i.NativeFunctionValue(e2, void 0, "setState", 1, function(t3, r3) {
      var a3 = n(r3, 2), s3 = a3[0], p3 = a3[1];
      (0, c.default)(f2 instanceof i.ObjectValue);
      var v3 = (0, u.Get)(e2, f2, "state");
      if ((0, c.default)(v3 instanceof i.ObjectValue), s3 instanceof i.ECMAScriptSourceFunctionValue && s3.$Call && (s3 = s3.$Call(f2, [v3])), s3 instanceof i.ObjectValue) {
        var y3 = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype);
        d2(e2.intrinsics.undefined, [y3, v3]), y3.makeFinal();
        var m2 = true, b2 = false, g = void 0;
        try {
          for (var w, E = s3.properties[Symbol.iterator](); !(m2 = (w = E.next()).done); m2 = true) {
            var S = n(w.value, 2), T = S[0], A = S[1];
            if (A && A.descriptor && ((0, c.default)(A.descriptor instanceof h.PropertyDescriptor), A.descriptor.enumerable)) {
              var C = (0, o.getProperty)(e2, s3, T);
              (0, o.hardModifyReactObjectPropertyBinding)(e2, y3, T, C);
            }
          }
        } catch (e3) {
          b2 = true, g = e3;
        } finally {
          try {
            m2 || null == E.return || E.return();
          } finally {
            if (b2) throw g;
          }
        }
        l.Properties.Set(e2, f2, "state", y3, true);
      }
      return p3 instanceof i.ECMAScriptSourceFunctionValue && p3.$Call && p3.$Call(f2, []), e2.intrinsics.undefined;
    });
    return y2.intrinsicName = "(function() {})", l.Properties.Set(e2, f2, "setState", y2, true), f2.refuseSerialization = false, f2;
  }, t.createClassInstance = function(e2, t2, r2, a2, o2) {
    var s2 = (0, u.Get)(e2, t2, "prototype");
    (0, c.default)(s2 instanceof i.ObjectValue);
    var f2 = new i.ObjectValue(e2, s2, "this", true);
    (function e3(t3, r3, a3, o3) {
      var s3 = o3.instanceProperties, c2 = o3.instanceSymbols;
      var f3 = a3.$Prototype;
      f3 instanceof i.ObjectValue && f3 !== t3.intrinsics.ObjectPrototype && e3(t3, r3, f3, o3);
      var p3 = true;
      var d2 = false;
      var h2 = void 0;
      try {
        for (var v2, y2 = a3.properties[Symbol.iterator](); !(p3 = (v2 = y2.next()).done); p3 = true) {
          var m2 = n(v2.value, 1), b2 = m2[0];
          "constructor" === b2 || s3.has(b2) || l.Properties.Set(t3, r3, b2, (0, u.Get)(t3, a3, b2), true);
        }
      } catch (e4) {
        d2 = true, h2 = e4;
      } finally {
        try {
          p3 || null == y2.return || y2.return();
        } finally {
          if (d2) throw h2;
        }
      }
      var g = true;
      var w = false;
      var E = void 0;
      try {
        for (var S, T = a3.symbols[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
          var A = n(S.value, 1), C = A[0];
          c2.has(C) || l.Properties.Set(t3, r3, C, (0, u.Get)(t3, a3, C), true);
        }
      } catch (e4) {
        w = true, E = e4;
      } finally {
        try {
          g || null == T.return || T.return();
        } finally {
          if (w) throw E;
        }
      }
    })(e2, f2, s2, o2), l.Properties.Set(e2, f2, "refs", i.AbstractValue.createAbstractObject(e2, "this.refs"), true), l.Properties.Set(e2, f2, "props", r2, true), l.Properties.Set(e2, f2, "context", a2, true), f2.refuseSerialization = false;
    var p2 = i.AbstractValue.createAbstractObject(e2, "this", f2);
    return (0, c.default)(p2 instanceof i.AbstractObjectValue), p2;
  }, t.evaluateClassConstructor = function(e2, t2, r2, a2) {
    var o2 = /* @__PURE__ */ new Set(), s2 = /* @__PURE__ */ new Set();
    return e2.evaluatePure(function() {
      return e2.evaluateForEffects(function() {
        var l2 = (0, u.Construct)(e2, t2, [r2, a2]);
        (0, c.default)(l2 instanceof i.ObjectValue);
        var f2 = true, p2 = false, d2 = void 0;
        try {
          for (var h2, v2 = l2.properties[Symbol.iterator](); !(f2 = (h2 = v2.next()).done); f2 = true) {
            var y2 = n(h2.value, 1)[0];
            m.has(y2) || o2.add(y2);
          }
        } catch (e3) {
          p2 = true, d2 = e3;
        } finally {
          try {
            f2 || null == v2.return || v2.return();
          } finally {
            if (p2) throw d2;
          }
        }
        var b2 = true, g = false, w = void 0;
        try {
          for (var E, S = l2.symbols[Symbol.iterator](); !(b2 = (E = S.next()).done); b2 = true) {
            var T = n(E.value, 1)[0];
            s2.add(T);
          }
        } catch (e3) {
          g = true, w = e3;
        } finally {
          try {
            b2 || null == S.return || S.return();
          } finally {
            if (g) throw w;
          }
        }
        return l2;
      }, null, "react component constructor: ".concat(t2.getName()));
    }, true, null), { instanceProperties: o2, instanceSymbols: s2 };
  }, t.applyGetDerivedStateFromProps = function(e2, t2, r2, n2) {
    var a2 = (0, u.Get)(e2, r2, "state"), o2 = t2.$Call;
    (0, c.default)(void 0 !== o2);
    var s2 = (function t3(r3) {
      var n3 = (0, u.Get)(e2, e2.intrinsics.Object, "assign");
      (0, c.default)(n3 instanceof i.ECMAScriptFunctionValue);
      var o3 = n3.$Call;
      if ((0, c.default)(void 0 !== o3), r3 instanceof i.AbstractValue && !(r3 instanceof i.AbstractObjectValue)) {
        var s3 = r3.kind;
        if ("conditional" === s3) {
          var l2 = r3.args[0], f2 = t3(r3.args[1]), d2 = t3(r3.args[2]);
          return (0, c.default)(l2 instanceof i.AbstractValue), null === f2 && null === d2 ? null : null === f2 ? ((0, c.default)(d2 instanceof i.Value), i.AbstractValue.createFromConditionalOp(e2, l2, e2.intrinsics.false, d2)) : null === d2 ? ((0, c.default)(f2 instanceof i.Value), i.AbstractValue.createFromConditionalOp(e2, l2, f2, e2.intrinsics.false)) : ((0, c.default)(f2 instanceof i.Value), (0, c.default)(d2 instanceof i.Value), i.AbstractValue.createFromConditionalOp(e2, l2, f2, d2));
        }
        if ("||" === s3 || "&&" === s3) {
          var h2 = t3(r3.args[0]), v2 = t3(r3.args[1]);
          return null === v2 ? ((0, c.default)(h2 instanceof i.Value), i.AbstractValue.createFromLogicalOp(e2, s3, h2, e2.intrinsics.false)) : ((0, c.default)(h2 instanceof i.Value), (0, c.default)(v2 instanceof i.Value), i.AbstractValue.createFromLogicalOp(e2, s3, h2, v2));
        }
        (0, c.default)(void 0 !== r3.args, "TODO: unknown abstract value passed to deriveState");
        var y2 = i.AbstractValue.createFromBinaryOp(e2, "!==", r3, e2.intrinsics.null), m2 = i.AbstractValue.createFromBinaryOp(e2, "!==", r3, e2.intrinsics.undefined), b2 = i.AbstractValue.createFromLogicalOp(e2, "&&", y2, m2);
        (0, c.default)(b2 instanceof i.AbstractValue);
        var g = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype), w = e2.preludeGenerator;
        (0, c.default)(void 0 !== w), i.AbstractValue.createTemporalObjectAssign(e2, g, [a2, r3]), g.makeSimple(), g.makePartial(), g.makeFinal();
        var E = i.AbstractValue.createFromLogicalOp(e2, "&&", b2, g);
        return E;
      }
      if (r3 !== e2.intrinsics.null && r3 !== e2.intrinsics.undefined) {
        var S = new i.ObjectValue(e2, e2.intrinsics.ObjectPrototype);
        try {
          o3(e2.intrinsics.undefined, [S, a2, r3]);
        } catch (t4) {
          if (e2.isInPureScope() && t4 instanceof p.FatalError) {
            var T = e2.preludeGenerator;
            return (0, c.default)(void 0 !== T), i.AbstractValue.createTemporalObjectAssign(e2, S, [a2, r3]), S.makeSimple(), S.makePartial(), S;
          }
          throw t4;
        }
        return S.makeFinal(), S;
      }
      return null;
    })(o2(e2.intrinsics.null, [n2, a2]));
    null !== s2 && (s2 instanceof i.AbstractValue && (s2 = i.AbstractValue.createFromLogicalOp(e2, "||", s2, a2)), (0, c.default)(s2 instanceof i.Value), l.Properties.Set(e2, r2, "state", s2, true));
  };
  r(8);
  var i = r(0), a = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), o = r(14), s = r(70), u = r(3), l = r(2), c = v(r(1)), f = v(r(28)), p = r(4), d = r(100), h = r(6);
  function v(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var y = /* @__PURE__ */ new Set(["componentWillUnmount", "componentDidMount", "componentWillMount", "componentDidUpdate", "componentWillUpdate", "componentDidCatch", "componentWillReceiveProps"]), m = /* @__PURE__ */ new Set(["props", "context", "refs", "setState"]);
  function b(e2, t2) {
    var r2 = t2.$FormalParameters, n2 = t2.$ECMAScriptCode;
    (0, f.default)(a.file(a.program([a.expressionStatement(a.functionExpression(null, r2, n2))])), { ThisExpression: function(e3) {
      var t3 = e3.parentPath.node;
      if (!a.isMemberExpression(t3)) throw new s.SimpleClassBailOut('possible leakage of independent "this" reference found');
    } }, null, {});
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.getValueWithBranchingLogicApplied = function(e2, t2, r2, o2) {
    var l2 = false;
    if ((function t3(r3, a2, u2) {
      if (r3 instanceof i.ObjectValue && (0, s.isReactElement)(r3) && a2 instanceof i.ObjectValue && (0, s.isReactElement)(a2)) {
        var c2 = (0, s.getProperty)(e2, r3, "type"), f = (0, s.getProperty)(e2, a2, "type");
        if (c2 instanceof i.StringValue && f instanceof i.StringValue) {
          var p = (0, s.getProperty)(e2, r3, "props"), d = (0, s.getProperty)(e2, a2, "props");
          if (p instanceof i.ObjectValue && d instanceof i.ObjectValue) {
            var h = (0, s.getProperty)(e2, p, "children"), v = (0, s.getProperty)(e2, d, "children");
            h instanceof i.Value && v instanceof i.Value && t3(h, v, u2);
          }
        } else if (!c2.equals(f)) {
          var y = n(o2.args, 3), m = y[1], b = y[2];
          !(function t4(r4, a3, o3, u3) {
            if (r4 instanceof i.ObjectValue && (0, s.isReactElement)(r4) && a3 instanceof i.ObjectValue && (0, s.isReactElement)(a3)) {
              var c3 = (0, s.getProperty)(e2, r4, "type"), f2 = (0, s.getProperty)(e2, a3, "type");
              !c3.equals(f2) || o3.equals(c3) || u3.equals(f2) || (l2 = true);
            } else if (r4 instanceof i.ArrayValue) (0, s.forEachArrayValue)(e2, r4, function(r5, n2) {
              var l3 = a3;
              a3 instanceof i.ArrayValue && (l3 = (0, s.getProperty)(e2, a3, n2 + "")), t4(r5, l3, o3, u3);
            });
            else if (a3 instanceof i.ArrayValue) (0, s.forEachArrayValue)(e2, a3, function(n2, a4) {
              var l3 = r4;
              r4 instanceof i.ArrayValue && (l3 = (0, s.getProperty)(e2, r4, a4 + "")), t4(l3, n2, o3, u3);
            });
            else if (r4 instanceof i.AbstractValue && "conditional" === r4.kind) {
              var p2 = n(r4.args, 3), d2 = p2[1], h2 = p2[2];
              t4(d2, a3, o3, u3), t4(h2, a3, o3, u3);
            } else if (a3 instanceof i.AbstractValue && "conditional" === a3.kind) {
              var v2 = n(a3.args, 3), y2 = v2[1], m2 = v2[2];
              t4(r4, y2, o3, u3), t4(r4, m2, o3, u3);
            }
          })(m, b, c2, f);
        }
      } else i.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(r3) || i.ArrayValue.isIntrinsicAndHasWidenedNumericProperty(a2) || (r3 instanceof i.ArrayValue && 0 === u2 ? (0, s.forEachArrayValue)(e2, r3, function(r4, n2) {
        var o3;
        a2 instanceof i.ArrayValue ? o3 = (0, s.getProperty)(e2, a2, n2 + "") : 0 === n2 && (o3 = a2), r4 instanceof i.Value && o3 instanceof i.Value && t3(r4, o3, u2 + 1);
      }) : a2 instanceof i.ArrayValue && 0 === u2 && (0, s.forEachArrayValue)(e2, a2, function(n2, a3) {
        var o3;
        r3 instanceof i.ArrayValue ? o3 = (0, s.getProperty)(e2, r3, a3 + "") : 0 === a3 && (o3 = r3), o3 instanceof i.Value && n2 instanceof i.Value && t3(o3, n2, u2 + 1);
      }));
    })(t2, r2, 0), l2) return (function e3(t3, r3) {
      if (r3 instanceof i.StringValue || r3 instanceof i.NumberValue || r3 instanceof i.BooleanValue || r3 instanceof i.NullValue || r3 instanceof i.UndefinedValue) ;
      else {
        if (r3 instanceof i.ObjectValue && (0, s.isReactElement)(r3)) return (0, s.addKeyToReactElement)(t3, r3);
        if (r3 instanceof i.ArrayValue) {
          var o3 = (0, s.mapArrayValue)(t3, r3, function(r4) {
            return e3(t3, r4);
          });
          return o3.makeFinal(), o3;
        }
        if (r3 instanceof i.AbstractValue && "conditional" === r3.kind) {
          var l3 = n(r3.args, 3), f = l3[0], p = l3[1], d = l3[2];
          return (0, a.default)(f instanceof i.AbstractValue), t3.evaluateWithAbstractConditional(f, function() {
            return t3.evaluateForEffects(function() {
              return c(t3, e3(t3, p));
            }, null, "applyBranchedLogicValue consequent");
          }, function() {
            return t3.evaluateForEffects(function() {
              return c(t3, e3(t3, d));
            }, null, "applyBranchedLogicValue alternate");
          });
        }
        if (!(r3 instanceof i.AbstractValue) || "||" !== r3.kind && "&&" !== r3.kind) throw new u.ExpectedBailOut("Unsupported value encountered when applying branched logic to values");
        (0, a.default)(false, "applyBranchedLogicValue encounterted a logical expression (|| or &&), this should never occur");
      }
      return r3;
    })(e2, o2);
    return o2;
  }, t.wrapReactElementInBranchOrReturnValue = c;
  r(8);
  var i = r(0), a = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), o = r(12), s = r(14), u = r(70), l = r(9);
  function c(e2, t2) {
    if (t2 instanceof i.ObjectValue && (0, s.isReactElement)(t2)) {
      var r2 = i.AbstractValue.createTemporalFromBuildFunction(e2, i.ObjectValue, [(0, s.cloneReactElement)(e2, t2, false)], (0, l.createOperationDescriptor)("SINGLE_ARG"), { isPure: true, skipInvariant: true });
      (0, a.default)(r2 instanceof i.AbstractObjectValue), r2.values = new o.ValuesDomain(t2), t2.temporalAlias = r2;
    }
    return t2;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.optimizeReactComponentTreeRoot = function(e2, t2, r2, n2, i2, s2, u2, l2) {
    var c2 = new o.Reconciler(e2, r2, l2, u2, s2), d = (0, a.getComponentTypeFromRootValue)(e2, t2);
    if (null === d) return;
    if (l2.has(d)) return;
    var h = (0, a.createReactEvaluatedNode)("ROOT", (0, a.getComponentName)(e2, d));
    u2.evaluatedRootNodes.push(h), l2.set(d, h), e2.react.verbose && s2.logInformation("  Evaluating ".concat(h.name, " (root)"));
    var v = c2.resolveReactComponentTree(d, null, null, h);
    e2.react.verbose && s2.logInformation("  \u2714 ".concat(h.name, " (root)"));
    f(e2, d, v, c2.componentTreeState, h, n2, i2);
    var y = 0;
    do {
      y = c2.branchedComponentTrees.length, p(e2, c2, n2, i2, s2, l2);
    } while (y !== c2.branchedComponentTrees.length);
  };
  r(8);
  var n = r(0), i = r(32), a = r(14), o = (r(33), r(146)), s = r(70), u = r(2), l = r(3), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  r(19);
  function f(e2, t2, r2, o2, f2, p2, d) {
    var h = r2, v = (0, i.createAdditionalEffects)(e2, h, false, "ReactAdditionalFunctionEffects", d);
    if (null === v) throw new s.ReconcilerFatalError('Failed to optimize React component tree for "'.concat(f2.name, '" due to an unsupported completion'), f2);
    if ((h = v.effects).result !== e2.intrinsics.undefined) {
      if ((0, a.valueIsClassComponent)(e2, t2)) if ("SIMPLE" === o2.status) if (t2 instanceof n.BoundFunctionValue) {
        var y = t2.$BoundTargetFunction;
        (0, c.default)(y instanceof n.ECMAScriptSourceFunctionValue), (0, a.convertSimpleClassComponentToFunctionalComponent)(e2, y, v), (0, a.normalizeFunctionalComponentParamaters)(y), p2.set(y, v);
      } else (0, a.convertSimpleClassComponentToFunctionalComponent)(e2, t2, v), (0, a.normalizeFunctionalComponentParamaters)(t2), p2.set(t2, v);
      else {
        var m = (0, l.Get)(e2, t2, "prototype");
        (0, c.default)(m instanceof n.ObjectValue);
        var b = (0, l.Get)(e2, m, "render");
        (0, c.default)(b instanceof n.ECMAScriptSourceFunctionValue), p2.set(b, v);
      }
      else if ("COMPLEX" === o2.status) {
        (0, a.convertFunctionalComponentToComplexClassComponent)(e2, t2, o2.componentType, v);
        var g = (0, l.Get)(e2, t2, "prototype");
        (0, c.default)(g instanceof n.ObjectValue);
        var w = (0, l.Get)(e2, g, "render");
        (0, c.default)(w instanceof n.ECMAScriptSourceFunctionValue), p2.set(w, v);
      } else if (t2 instanceof n.BoundFunctionValue) {
        var E = t2.$BoundTargetFunction;
        (0, c.default)(E instanceof n.ECMAScriptSourceFunctionValue), (0, a.normalizeFunctionalComponentParamaters)(E), p2.set(E, v);
      } else (0, a.normalizeFunctionalComponentParamaters)(t2), p2.set(t2, v);
      if (o2.contextTypes.size > 0) {
        var S = new n.ObjectValue(e2, e2.intrinsics.ObjectPrototype), T = (0, a.createNoopFunction)(e2), A = true, C = false, P = void 0;
        try {
          for (var O, x = o2.contextTypes[Symbol.iterator](); !(A = (O = x.next()).done); A = true) {
            var _ = O.value;
            u.Properties.Set(e2, S, _, T, true);
          }
        } catch (e3) {
          C = true, P = e3;
        } finally {
          try {
            A || null == x.return || x.return();
          } finally {
            if (C) throw P;
          }
        }
        u.Properties.Set(e2, t2, "contextTypes", S, true);
      }
    }
  }
  function p(e2, t2, r2, n2, i2, o2) {
    e2.react.verbose && t2.branchedComponentTrees.length > 0 && i2.logInformation("  Evaluating React component tree branches...");
    var s2 = true, u2 = false, l2 = void 0;
    try {
      for (var c2, p2 = t2.branchedComponentTrees[Symbol.iterator](); !(s2 = (c2 = p2.next()).done); s2 = true) {
        var d = c2.value, h = d.rootValue, v = d.evaluatedNode, y = (0, a.getComponentTypeFromRootValue)(e2, h);
        if (null !== y) {
          if (o2.has(y)) return;
          o2.set(y, v), t2.clearComponentTreeState(), e2.react.verbose && i2.logInformation("    Evaluating ".concat(v.name, " (branch)"));
          var m = t2.resolveReactComponentTree(y, null, null, v);
          e2.react.verbose && i2.logInformation("    \u2714 ".concat(v.name, " (branch)")), f(e2, y, m, t2.componentTreeState, v, r2, n2);
        } else v.status = "UNKNOWN_TYPE";
      }
    } catch (e3) {
      u2 = true, l2 = e3;
    } finally {
      try {
        s2 || null == p2.return || p2.return();
      } finally {
        if (u2) throw l2;
      }
    }
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.ignoreErrorsIn = function(e2, t2) {
    var r2 = e2.errorHandler;
    e2.errorHandler = function(e3) {
      return "Recover";
    };
    try {
      return t2();
    } catch (e3) {
      if (e3 instanceof n.FatalError) return;
      throw e3;
    } finally {
      e2.errorHandler = r2;
    }
  };
  var n = r(4);
  r(8);
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Functions = void 0;
  var o = r(7), s = r(4), u = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), l = (r(8), r(435)), c = r(0), f = r(3), p = (r(38), r(32)), d = (r(33), r(14)), h = r(434), v = r(31), y = r(2), m = r(6);
  var b = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.realm = t2, this.moduleTracer = r2, this.writeEffects = /* @__PURE__ */ new Map(), this._noopFunction = void 0, this._optimizedFunctionId = 0;
    }
    return (function(e3, t2, r2) {
      t2 && a(e3.prototype, t2), r2 && a(e3, r2);
    })(e2, [{ key: "_unwrapAbstract", value: function(e3) {
      var t2 = e3.values.getElements();
      if (t2) {
        var r2 = i(t2).filter(function(e4) {
          return !(e4 instanceof c.EmptyValue || e4 instanceof c.UndefinedValue);
        });
        if (1 === r2.length) return r2[0];
      }
      return e3;
    } }, { key: "_optimizedFunctionEntryOfValue", value: function(e3) {
      var t2 = this.realm;
      e3 instanceof c.AbstractValue && (e3 = this._unwrapAbstract(e3)), (0, u.default)(e3 instanceof c.ObjectValue);
      var r2 = (0, f.Get)(t2, e3, "config"), n2 = (0, f.Get)(t2, e3, "rootComponent"), i2 = r2 instanceof c.ObjectValue || r2 === t2.intrinsics.undefined, a2 = n2 instanceof c.ECMAScriptSourceFunctionValue || n2 instanceof c.BoundFunctionValue || n2 instanceof c.AbstractValue && (0, d.valueIsKnownReactAbstraction)(this.realm, n2);
      if (i2 && a2) return { value: n2, config: (0, d.convertConfigObjectToReactComponentTreeConfig)(t2, r2) };
      var o2 = (0, v.optionalStringOfLocation)(e3.expressionLocation);
      if ("Recover" !== t2.handleError(new s.CompilerDiagnostic("Optimized Function Value ".concat(o2, " is an not a function or react element"), t2.currentLocation, "PP0033", "Warning"))) throw new s.FatalError("Optimized Function Values must be functions or react elements");
    } }, { key: "_generateInitialAdditionalFunctions", value: function(e3) {
      var t2 = [], r2 = this.realm, n2 = this.moduleTracer.modules.logger.tryQuery(function() {
        return (0, f.Get)(r2, r2.$GlobalObject, e3);
      }, r2.intrinsics.undefined);
      (0, u.default)(n2 instanceof c.ObjectValue);
      var i2 = true, a2 = false, o2 = void 0;
      try {
        for (var s2, l2 = y.Properties.GetOwnPropertyKeysArray(r2, n2, true, false)[Symbol.iterator](); !(i2 = (s2 = l2.next()).done); i2 = true) {
          var p2 = s2.value, d2 = n2.properties.get(p2);
          if (d2) {
            (0, u.default)(d2.descriptor instanceof m.PropertyDescriptor);
            var h2 = d2.descriptor.value;
            (0, u.default)(void 0 !== h2);
            var v2 = this._optimizedFunctionEntryOfValue(h2);
            v2 && t2.push(v2);
          }
        }
      } catch (e4) {
        a2 = true, o2 = e4;
      } finally {
        try {
          i2 || null == l2.return || l2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      return t2;
    } }, { key: "_generateOptimizedFunctionsFromRealm", value: function() {
      var e3 = this.realm, t2 = [], r2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, l2 = e3.optimizedFunctions[Symbol.iterator](); !(r2 = (o2 = l2.next()).done); r2 = true) {
          var f2 = n(o2.value, 2), p2 = f2[0], d2 = f2[1], h2 = p2 instanceof c.AbstractValue ? this._unwrapAbstract(p2) : p2;
          if ((0, u.default)(h2 instanceof c.ECMAScriptSourceFunctionValue), h2.isValid()) t2.push({ value: h2, argModel: d2 });
          else {
            var v2 = new s.CompilerDiagnostic("Called __optimize on function in failed speculative context", h2.expressionLocation, "PP1008", "RecoverableError");
            if ("Recover" !== e3.handleError(v2)) throw new s.FatalError();
          }
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          r2 || null == l2.return || l2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return t2;
    } }, { key: "optimizeReactComponentTreeRoots", value: function(e3, t2) {
      var r2 = this.moduleTracer.modules.logger, n2 = this._generateInitialAdditionalFunctions("__reactComponentTrees");
      this.realm.react.verbose && r2.logInformation("Evaluating ".concat(n2.length, " React component tree roots..."));
      var i2 = /* @__PURE__ */ new Map(), a2 = true, o2 = false, s2 = void 0;
      try {
        for (var l2, c2 = n2[Symbol.iterator](); !(a2 = (l2 = c2.next()).done); a2 = true) {
          var f2 = l2.value, p2 = f2.value, d2 = f2.config;
          (0, u.default)(d2), (0, h.optimizeReactComponentTreeRoot)(this.realm, p2, d2, this.writeEffects, t2, r2, e3, i2);
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          a2 || null == c2.return || c2.return();
        } finally {
          if (o2) throw s2;
        }
      }
    } }, { key: "getDeclaringOptimizedFunction", value: function(e3) {
      var t2 = true, r2 = false, i2 = void 0;
      try {
        for (var a2, o2 = this.writeEffects[Symbol.iterator](); !(t2 = (a2 = o2.next()).done); t2 = true) {
          var s2 = n(a2.value, 2), u2 = s2[0];
          if (s2[1].effects.createdObjects.has(e3)) return u2;
        }
      } catch (e4) {
        r2 = true, i2 = e4;
      } finally {
        try {
          t2 || null == o2.return || o2.return();
        } finally {
          if (r2) throw i2;
        }
      }
    } }, { key: "processCollectedNestedOptimizedFunctions", value: function(e3) {
      var t2 = true, r2 = false, i2 = void 0;
      try {
        for (var a2, o2 = this.realm.collectedNestedOptimizedFunctionEffects[Symbol.iterator](); !(t2 = (a2 = o2.next()).done); t2 = true) {
          var s2 = n(a2.value, 2), l2 = s2[0], c2 = s2[1], f2 = (0, p.createAdditionalEffects)(this.realm, c2, true, "AdditionalFunctionEffects", e3, this.getDeclaringOptimizedFunction(l2));
          (0, u.default)(null !== f2), this.writeEffects.set(l2, f2);
        }
      } catch (e4) {
        r2 = true, i2 = e4;
      } finally {
        try {
          t2 || null == o2.return || o2.return();
        } finally {
          if (r2) throw i2;
        }
      }
    } }, { key: "_withEmptyOptimizedFunctionList", value: function(e3, t2) {
      var r2 = e3.value, i2 = e3.argModel, a2 = this.realm.optimizedFunctions;
      this.realm.optimizedFunctions = /* @__PURE__ */ new Map();
      var o2 = this._optimizedFunctionId++;
      (0, u.default)(r2 instanceof c.ECMAScriptSourceFunctionValue);
      var s2 = true, l2 = false, f2 = void 0;
      try {
        for (var p2, d2 = this.realm.tracers[Symbol.iterator](); !(s2 = (p2 = d2.next()).done); s2 = true) {
          p2.value.beginOptimizingFunction(o2, r2);
        }
      } catch (e4) {
        l2 = true, f2 = e4;
      } finally {
        try {
          s2 || null == d2.return || d2.return();
        } finally {
          if (l2) throw f2;
        }
      }
      t2(r2, i2);
      var h2 = true, v2 = false, y2 = void 0;
      try {
        for (var m2, b2 = this.realm.tracers[Symbol.iterator](); !(h2 = (m2 = b2.next()).done); h2 = true) {
          m2.value.endOptimizingFunction(o2);
        }
      } catch (e4) {
        v2 = true, y2 = e4;
      } finally {
        try {
          h2 || null == b2.return || b2.return();
        } finally {
          if (v2) throw y2;
        }
      }
      var g = true, w = false, E = void 0;
      try {
        for (var S, T = a2[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
          var A = n(S.value, 2), C = A[0], P = A[1];
          this.realm.optimizedFunctions.set(C, P);
        }
      } catch (e4) {
        w = true, E = e4;
      } finally {
        try {
          g || null == T.return || T.return();
        } finally {
          if (w) throw E;
        }
      }
    } }, { key: "checkThatFunctionsAreIndependent", value: function(e3) {
      var t2 = this, r2 = this._generateOptimizedFunctionsFromRealm(), n2 = [], i2 = new Set(r2.map(function(e4) {
        return e4.value;
      })), a2 = function r3(a3, o2) {
        n2.push(a3);
        var l3 = y.Utils.createModelledFunctionCall(t2.realm, a3, o2), c2 = t2.realm, f3 = function(e4, t3) {
          var r4 = new s.CompilerDiagnostic(e4, t3, "PP1007", "Warning");
          c2.handleError(r4);
        }, d3 = c2.evaluatePure(function() {
          return c2.evaluateForEffectsInGlobalEnv(l3, void 0, "additional function");
        }, true, function(e4, t3, r4) {
          return (0, p.handleReportedSideEffect)(f3, e4, t3, r4);
        });
        (0, u.default)(d3);
        var h3 = (0, p.createAdditionalEffects)(t2.realm, d3, true, "AdditionalFunctionEffects", e3, t2.getDeclaringOptimizedFunction(a3));
        if ((0, u.default)(h3), d3 = h3.effects, t2.writeEffects.has(a3)) {
          var v2 = new s.CompilerDiagnostic("Trying to optimize a function with two parent optimized functions, which is not currently allowed.", a3.expressionLocation, "PP1009", "RecoverableError");
          if ("Recover" !== c2.handleError(v2)) throw new s.FatalError();
        } else t2.writeEffects.set(a3, h3);
        t2.realm.withEffectsAppliedInGlobalEnv(function() {
          var e4 = t2._generateOptimizedFunctionsFromRealm(), n3 = true, a4 = false, o3 = void 0;
          try {
            for (var s2, u2 = e4[Symbol.iterator](); !(n3 = (s2 = u2.next()).done); n3 = true) {
              var l4 = s2.value;
              i2.add(l4.value), t2._withEmptyOptimizedFunctionList(l4, r3);
            }
          } catch (e5) {
            a4 = true, o3 = e5;
          } finally {
            try {
              n3 || null == u2.return || u2.return();
            } finally {
              if (a4) throw o3;
            }
          }
          return null;
        }, h3.effects), (0, u.default)(n2.pop() === a3);
      }, l2 = true, f2 = false, d2 = void 0;
      try {
        for (var h2, m2 = r2[Symbol.iterator](); !(l2 = (h2 = m2.next()).done); l2 = true) {
          var b2 = h2.value;
          this._withEmptyOptimizedFunctionList(b2, a2);
        }
      } catch (e4) {
        f2 = true, d2 = e4;
      } finally {
        try {
          l2 || null == m2.return || m2.return();
        } finally {
          if (f2) throw d2;
        }
      }
      (0, u.default)(0 === n2.length);
      var g = /* @__PURE__ */ new Map(), w = true, E = false, S = void 0;
      try {
        for (var T, A = function() {
          var e4 = T.value;
          (0, u.default)(e4 instanceof c.FunctionValue);
          var r3 = e4.expressionLocation, n3 = e4.getDebugName() || (0, v.optionalStringOfLocation)(r3), a3 = t2.writeEffects.get(e4);
          (0, u.default)(void 0 !== a3);
          var l3 = a3.effects;
          if ((0, u.default)(void 0 !== l3), l3.result instanceof o.AbruptCompletion) {
            var f3 = new s.CompilerDiagnostic("Additional function ".concat(n3, " will terminate abruptly"), l3.result.location, "PP1002", "RecoverableError");
            if ("Recover" !== t2.realm.handleError(f3)) throw new s.FatalError();
          }
          var p2 = true, d3 = false, h3 = void 0;
          try {
            for (var m3, b3 = function() {
              var r4 = m3.value;
              if (e4 === r4) return "continue";
              (0, u.default)(r4 instanceof c.FunctionValue);
              var i3 = r4.expressionLocation, a4 = r4.getDebugName() || (0, v.optionalStringOfLocation)(i3);
              !(function e5(r5, n4) {
                var i4 = t2.writeEffects.get(n4);
                (0, u.default)(void 0 !== i4);
                var a5 = i4.parentAdditionalFunction;
                if (void 0 !== a5) {
                  var o2 = t2.writeEffects.get(a5);
                  (0, u.default)(void 0 !== o2), e5(function() {
                    return t2.realm.withEffectsAppliedInGlobalEnv(r5, o2.effects);
                  }, a5);
                } else r5();
              })(function() {
                return t2.reportWriteConflicts(n3, a4, g, l3.modifiedProperties, (function e5(r5, n4) {
                  if (void 0 === n4) return false;
                  var i4 = t2.writeEffects.get(n4);
                  return (0, u.default)(void 0 !== i4), void 0 !== i4.parentAdditionalFunction && (i4.parentAdditionalFunction === r5 || e5(r5, i4.parentAdditionalFunction));
                })(e4, r4), y.Utils.createModelledFunctionCall(t2.realm, r4)), null;
              }, r4);
            }, w2 = i2[Symbol.iterator](); !(p2 = (m3 = w2.next()).done); p2 = true) b3();
          } catch (e5) {
            d3 = true, h3 = e5;
          } finally {
            try {
              p2 || null == w2.return || w2.return();
            } finally {
              if (d3) throw h3;
            }
          }
        }, C = i2[Symbol.iterator](); !(w = (T = C.next()).done); w = true) A();
      } catch (e4) {
        E = true, S = e4;
      } finally {
        try {
          w || null == C.return || C.return();
        } finally {
          if (E) throw S;
        }
      }
      if (g.size > 0) {
        var P = true, O = false, x = void 0;
        try {
          for (var _, V = g.values()[Symbol.iterator](); !(P = (_ = V.next()).done); P = true) {
            var D = _.value;
            if ("Recover" !== this.realm.handleError(D)) throw new s.FatalError();
          }
        } catch (e4) {
          O = true, x = e4;
        } finally {
          try {
            P || null == V.return || V.return();
          } finally {
            if (O) throw x;
          }
        }
      }
    } }, { key: "getAdditionalFunctionValuesToEffects", value: function() {
      return this.writeEffects;
    } }, { key: "reportWriteConflicts", value: function(e3, t2, r2, n2, i2, a2) {
      var o2 = this, f2 = function(n3) {
        var i3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", a3 = arguments.length > 2 ? arguments[2] : void 0, o3 = arguments.length > 3 ? arguments[3] : void 0, u2 = (0, v.optionalStringOfLocation)(o3), l2 = (0, v.optionalStringOfLocation)(n3), c2 = a3 ? ' "'.concat(a3, '"') : "", f3 = i3 ? ' on object "'.concat(i3, '" ') : "";
        !f3 && a3 && (f3 = " on <unnamed object> ");
        var p3 = new s.CompilerDiagnostic("Write to property".concat(c2).concat(f3, "at optimized function ").concat(e3).concat(u2, " conflicts with access in function ").concat(t2).concat(l2), n3, "PP1003", "RecoverableError");
        r2.set(n3, p3);
      }, p2 = /* @__PURE__ */ new Set();
      n2.forEach(function(e4, t3, r3) {
        p2.add(t3.object);
      });
      var d2 = this.realm.reportObjectGetOwnProperties;
      this.realm.reportObjectGetOwnProperties = function(e4) {
        var t3 = o2.realm.currentLocation;
        (0, u.default)(t3), p2.has(e4) && !r2.has(t3) && f2(t3, e4.getDebugName(), void 0, e4.expressionLocation);
      };
      var h2 = this.realm.reportPropertyAccess;
      this.realm.reportPropertyAccess = function(e4, t3) {
        if (!c.ObjectValue.refuseSerializationOnPropertyBinding(e4)) {
          var a3 = o2.realm.currentLocation;
          if (a3 && n2.has(e4) && (!i2 || t3) && !r2.has(a3)) {
            var s2 = e4.descriptor instanceof m.PropertyDescriptor && e4.descriptor.value && !Array.isArray(e4.descriptor.value) ? e4.descriptor.value.expressionLocation : void 0, u2 = e4.key instanceof c.Value ? e4.key.toDisplayString() : e4.key;
            f2(a3, e4.object ? e4.object.getDebugName() : void 0, u2, s2);
          }
        }
      };
      try {
        (0, l.ignoreErrorsIn)(this.realm, function() {
          return o2.realm.evaluateForEffectsInGlobalEnv(a2);
        });
      } finally {
        this.realm.reportPropertyAccess = h2, this.realm.reportObjectGetOwnProperties = d2;
      }
    } }]), e2;
  })();
  t.Functions = b;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function a(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function o(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function s(e2) {
    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function l(e2) {
    if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var c = r(7), f = r(4), p = r(9), d = r(44), h = r(0), v = r(3), y = r(12), m = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var b = (function(e2) {
    function t2(e3, r2, i2, a2, o2, u2, c2) {
      var f2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (0, m.default)(e3.useAbstractInterpretation), f2 = (function(e4, t3) {
        return !t3 || "object" !== n(t3) && "function" != typeof t3 ? l(e4) : t3;
      })(this, s(t2).call(this, e3, c2 ? c2.intrinsicName : void 0)), (0, m.default)(!h.Value.isTypeCompatibleWith(r2.getType(), h.ObjectValue) || l(l(f2)) instanceof h.AbstractObjectValue), (0, m.default)(r2.getType() !== h.NullValue && r2.getType() !== h.UndefinedValue), f2.types = r2, f2.values = i2, f2.mightBeEmpty = false, f2.operationDescriptor = u2, f2.args = o2, f2.hashValue = a2, f2.kind = c2 ? c2.kind : void 0, f2.shape = c2 ? c2.shape : void 0, f2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && u(e3, t3);
    })(t2, h.Value), (function(e3, t3, r2) {
      t3 && o(e3.prototype, t3), r2 && o(e3, r2);
    })(t2, [{ key: "toDisplayString", value: function() {
      return "[Abstract " + this.hashValue.toString() + "]";
    } }, { key: "addSourceLocationsTo", value: function(e3) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : /* @__PURE__ */ new Set();
      if (!r2.has(this)) {
        r2.add(this);
        var n2 = true, i2 = false, a2 = void 0;
        try {
          for (var o2, s2 = this.args[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
            var u2 = o2.value;
            u2 instanceof t2 && u2.addSourceLocationsTo(e3, r2);
          }
        } catch (e4) {
          i2 = true, a2 = e4;
        } finally {
          try {
            n2 || null == s2.return || s2.return();
          } finally {
            if (i2) throw a2;
          }
        }
      }
    } }, { key: "addSourceNamesTo", value: function(e3) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : /* @__PURE__ */ new Set();
      if (!r2.has(this)) {
        r2.add(this);
        var n2 = this.$Realm;
        this.intrinsicName && i2(this.intrinsicName), a2(this.args);
      }
      function i2(t3) {
        if (t3.startsWith("_$")) {
          var r3 = n2.derivedIds.get(t3);
          (0, m.default)(void 0 !== r3), a2(r3.args);
        } else e3.indexOf(t3) < 0 && e3.push(t3);
      }
      function a2(n3) {
        if (void 0 !== n3) {
          var a3 = true, o2 = false, s2 = void 0;
          try {
            for (var u2, l2 = n3[Symbol.iterator](); !(a3 = (u2 = l2.next()).done); a3 = true) {
              var c2 = u2.value;
              c2.intrinsicName ? i2(c2.intrinsicName) : c2 instanceof t2 ? c2.addSourceNamesTo(e3, r2) : c2 instanceof h.StringValue && c2.value.startsWith("__") && e3.push(c2.value.slice(2));
            }
          } catch (e4) {
            o2 = true, s2 = e4;
          } finally {
            try {
              a3 || null == l2.return || l2.return();
            } finally {
              if (o2) throw s2;
            }
          }
        }
      }
    } }, { key: "equals", value: function(e3) {
      if (e3 instanceof h.ConcreteValue) return false;
      var r2 = this.args, n2 = r2.length;
      return this === e3 || e3 instanceof t2 && this.kind === e3.kind && this.hashValue === e3.hashValue && (this.intrinsicName && this.intrinsicName.length > 0 && this.intrinsicName === e3.intrinsicName || n2 > 0 && (function() {
        (0, m.default)(e3 instanceof t2);
        var i2 = e3.args, a2 = i2.length;
        (0, m.default)(n2 === a2);
        for (var o2 = 0; o2 < n2; o2++) {
          var s2 = r2[o2], u2 = i2[o2];
          if (!s2.equals(u2)) return false;
        }
        return true;
      })());
    } }, { key: "getHash", value: function() {
      return this.hashValue;
    } }, { key: "getType", value: function() {
      return this.types.getType();
    } }, { key: "getIdentifier", value: function() {
      (0, m.default)(this.hasIdentifier()), (0, m.default)(void 0 !== this.operationDescriptor);
      var e3 = this.operationDescriptor.data.id;
      return (0, m.default)(void 0 !== e3), e3;
    } }, { key: "hasIdentifier", value: function() {
      return !!this.operationDescriptor && "IDENTIFIER" === this.operationDescriptor.type;
    } }, { key: "implies", value: function(e3) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      if (r2 > 5) return false;
      if (this.equals(e3)) return true;
      if ("||" === this.kind) {
        var n2 = a(this.args, 2), i2 = n2[0], o2 = n2[1];
        return !!(i2.implies(e3, r2 + 1) || i2 instanceof t2 && this.$Realm.pathConditions.impliesNot(i2, r2 + 1)) && (o2.implies(e3, r2 + 1) || o2 instanceof t2 && this.$Realm.pathConditions.impliesNot(o2, r2 + 1));
      }
      if ("&&" === this.kind) {
        var s2 = a(this.args, 2), u2 = s2[0], l2 = s2[1];
        return !!(u2.implies(e3, r2 + 1) || u2 instanceof t2 && this.$Realm.pathConditions.impliesNot(u2, r2 + 1)) || (l2.implies(e3, r2 + 1) || l2 instanceof t2 && this.$Realm.pathConditions.impliesNot(l2, r2 + 1));
      }
      if ("!" === this.kind) {
        var c2 = a(this.args, 1)[0];
        if ((0, m.default)(c2 instanceof t2), "!" === c2.kind) {
          var f2 = a(c2.args, 1)[0];
          return (0, m.default)(f2 instanceof t2), f2.implies(e3, r2 + 1);
        }
      } else if ("conditional" === this.kind) {
        var p2 = a(this.args, 3), d2 = p2[0], v2 = p2[1], y2 = p2[2];
        if (!v2.mightNotBeTrue() && !y2.mightNotBeFalse()) return d2.equals(e3);
        if ("!==" === e3.kind || "!=" === e3.kind) {
          var b2 = a(e3.args, 2), g = b2[0], w = b2[1];
          if (v2.mightNotBeFalse()) {
            if (!y2.mightNotBeFalse()) {
              if (g instanceof t2 && (w instanceof h.NullValue || w instanceof h.UndefinedValue)) return v2.implies(g, r2 + 1);
              if ((g instanceof h.NullValue || g instanceof h.UndefinedValue) && w instanceof t2) return v2.implies(w, r2 + 1);
            }
          } else {
            if (g instanceof t2 && (w instanceof h.NullValue || w instanceof h.UndefinedValue)) return y2.implies(g, r2 + 1);
            if ((g instanceof h.NullValue || g instanceof h.UndefinedValue) && w instanceof t2) return y2.implies(w, r2 + 1);
          }
        }
        if (!y2.mightNotBeFalse()) {
          if (d2.implies(e3, r2 + 1)) return true;
          if (v2.implies(e3, r2 + 1)) return true;
        }
      } else if ("!==" === this.kind) {
        var E = a(this.args, 2), S = E[0], T = E[1];
        if (S instanceof h.NumberValue && 0 === S.value) return T.equals(e3);
        if (T instanceof h.NumberValue && 0 === T.value) return S.equals(e3);
      } else if (!("===" !== this.kind && "==" !== this.kind || "===" !== e3.kind && "==" !== e3.kind)) {
        var A = a(this.args, 2), C = A[0], P = A[1], O = a(e3.args, 2), x = O[0], _ = O[1];
        if (C instanceof h.NullValue || C instanceof h.UndefinedValue) if ("==" === e3.kind) {
          if (x instanceof h.NullValue || x instanceof h.UndefinedValue) return P.equals(_);
          if (_ instanceof h.NullValue || _ instanceof h.UndefinedValue) return P.equals(x);
        } else {
          if ((0, m.default)("===" === e3.kind), C.equals(x)) return P.equals(_);
          if (C.equals(_)) return P.equals(x);
        }
        if (P instanceof h.NullValue || P instanceof h.UndefinedValue) if ("==" === e3.kind) {
          if (x instanceof h.NullValue || x instanceof h.UndefinedValue) return C.equals(_);
          if (_ instanceof h.NullValue || _ instanceof h.UndefinedValue) return C.equals(x);
        } else {
          if ((0, m.default)("===" === e3.kind), P.equals(x)) return C.equals(_);
          if (P.equals(_)) return C.equals(x);
        }
      }
      if ("!" === e3.kind) {
        var V = a(e3.args, 1)[0];
        return (0, m.default)(V instanceof t2), V.impliesNot(this, r2 + 1);
      }
      return false;
    } }, { key: "impliesNot", value: function(e3) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      if (r2 > 5) return false;
      if (this.equals(e3)) return false;
      if ("||" === this.kind) {
        var n2 = a(this.args, 2), i2 = n2[0], o2 = n2[1];
        return !!i2.impliesNot(e3, r2 + 1) && o2.impliesNot(e3, r2 + 1);
      }
      if ("&&" === this.kind) {
        var s2 = a(this.args, 2), u2 = s2[0], l2 = s2[1];
        return !!u2.impliesNot(e3, r2 + 1) || l2.impliesNot(e3, r2 + 1);
      }
      if ("!" === this.kind) {
        var c2 = a(this.args, 1)[0];
        if ((0, m.default)(c2 instanceof t2), "!" === c2.kind) {
          var f2 = a(c2.args, 1)[0];
          return (0, m.default)(f2 instanceof t2), f2.impliesNot(e3, r2 + 1);
        }
        return "abstractConcreteUnion" !== c2.kind && e3.implies(c2);
      }
      if ("conditional" === this.kind) {
        var p2 = a(this.args, 3), d2 = p2[0], v2 = p2[1], y2 = p2[2];
        if (!v2.mightNotBeFalse() && !y2.mightNotBeTrue()) return d2.equals(e3);
        if ("===" === e3.kind || "==" === e3.kind) {
          var b2 = a(e3.args, 2), g = b2[0], w = b2[1];
          if (v2.mightNotBeFalse()) {
            if (!y2.mightNotBeFalse()) {
              if (g instanceof t2 && (w instanceof h.NullValue || w instanceof h.UndefinedValue)) return v2.implies(g, r2 + 1);
              if ((g instanceof h.NullValue || g instanceof h.UndefinedValue) && w instanceof t2) return v2.implies(w, r2 + 1);
            }
          } else {
            if (g instanceof t2 && (w instanceof h.NullValue || w instanceof h.UndefinedValue)) return y2.implies(g, r2 + 1);
            if ((g instanceof h.NullValue || g instanceof h.UndefinedValue) && w instanceof t2) return y2.implies(w, r2 + 1);
          }
        }
        if (!y2.mightNotBeFalse()) {
          if (d2.impliesNot(e3, r2 + 1)) return true;
          if (v2.impliesNot(e3, r2 + 1)) return true;
        }
      } else if ("===" === this.kind && "===" === e3.kind) {
        var E = a(this.args, 2), S = E[0], T = E[1], A = a(e3.args, 2), C = A[0], P = A[1];
        if (S.equals(C) && T instanceof h.ConcreteValue && P instanceof h.ConcreteValue && !T.equals(P)) return true;
        if (T.equals(P) && S instanceof h.ConcreteValue && C instanceof h.ConcreteValue && !S.equals(C)) return true;
      }
      return false;
    } }, { key: "isTemporal", value: function() {
      return void 0 !== this.$Realm.getTemporalOperationEntryFromDerivedValue(this);
    } }, { key: "mightBeFalse", value: function() {
      var e3 = this.getType();
      if (e3 === h.UndefinedValue) return true;
      if (e3 === h.NullValue) return true;
      if (e3 === h.SymbolValue) return false;
      if (h.Value.isTypeCompatibleWith(e3, h.ObjectValue)) return false;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightBeFalse()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.mightBeFalse();
    } }, { key: "mightNotBeFalse", value: function() {
      var e3 = this.getType();
      if (e3 === h.UndefinedValue) return false;
      if (e3 === h.NullValue) return false;
      if (e3 === h.SymbolValue) return true;
      if (h.Value.isTypeCompatibleWith(e3, h.ObjectValue)) return true;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightNotBeFalse()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.mightNotBeFalse();
    } }, { key: "mightBeNull", value: function() {
      var e3 = this.getType();
      if (e3 === h.NullValue) return true;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return false;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightBeNull()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueOfType(h.NullValue);
    } }, { key: "mightNotBeNull", value: function() {
      var e3 = this.getType();
      if (e3 === h.NullValue) return false;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return true;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightNotBeNull()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueNotOfType(h.NullValue);
    } }, { key: "mightBeNumber", value: function() {
      var e3 = this.getType();
      if (h.Value.isTypeCompatibleWith(e3, h.NumberValue)) return true;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return false;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightBeNumber()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueOfType(h.NumberValue);
    } }, { key: "mightNotBeNumber", value: function() {
      var e3 = this.getType();
      if (h.Value.isTypeCompatibleWith(e3, h.NumberValue)) return false;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return true;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightNotBeNumber()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueNotOfType(h.NumberValue);
    } }, { key: "mightNotBeObject", value: function() {
      var e3 = this.getType();
      if (h.Value.isTypeCompatibleWith(e3, h.PrimitiveValue)) return true;
      if (h.Value.isTypeCompatibleWith(e3, h.ObjectValue)) return false;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightNotBeObject()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueNotOfType(h.ObjectValue);
    } }, { key: "mightBeObject", value: function() {
      var e3 = this.getType();
      if (h.Value.isTypeCompatibleWith(e3, h.PrimitiveValue)) return false;
      if (h.Value.isTypeCompatibleWith(e3, h.ObjectValue)) return true;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightBeObject()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueOfType(h.ObjectValue);
    } }, { key: "mightBeString", value: function() {
      var e3 = this.getType();
      if (e3 === h.StringValue) return true;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return false;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightBeString()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueOfType(h.StringValue);
    } }, { key: "mightNotBeString", value: function() {
      var e3 = this.getType();
      if (e3 === h.StringValue) return false;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return true;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightNotBeString()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueNotOfType(h.StringValue);
    } }, { key: "mightBeUndefined", value: function() {
      var e3 = this.getType();
      if (e3 === h.UndefinedValue) return true;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return false;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightBeUndefined()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueOfType(h.UndefinedValue);
    } }, { key: "mightNotBeUndefined", value: function() {
      var e3 = this.getType();
      if (e3 === h.UndefinedValue) return false;
      if (e3 === h.EmptyValue) return false;
      if (e3 !== h.PrimitiveValue && e3 !== h.Value) return true;
      if ("abstractConcreteUnion" === this.kind) {
        var t3 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = this.args[Symbol.iterator](); !(t3 = (i2 = a2.next()).done); t3 = true) {
            if (i2.value.mightNotBeUndefined()) return true;
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t3 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
        return false;
      }
      return !!this.values.isTop() || this.values.includesValueNotOfType(h.UndefinedValue);
    } }, { key: "mightHaveBeenDeleted", value: function() {
      return this.mightBeEmpty;
    } }, { key: "promoteEmptyToUndefined", value: function() {
      if (this.values.isTop()) return this;
      if (!this.mightBeEmpty) return this;
      var e3 = t2.createFromBinaryOp(this.$Realm, "===", this, this.$Realm.intrinsics.empty), r2 = t2.createFromConditionalOp(this.$Realm, e3, this.$Realm.intrinsics.undefined, this);
      return r2 instanceof t2 && (r2.values = this.values.promoteEmptyToUndefined()), r2;
    } }, { key: "throwIfNotConcrete", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotConcreteNumber", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotConcreteString", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotConcreteBoolean", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotConcreteSymbol", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotConcreteObject", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotConcretePrimitive", value: function() {
      throw t2.reportIntrospectionError(this), new f.FatalError();
    } }, { key: "throwIfNotObject", value: function() {
      throw (0, m.default)(!(this instanceof h.AbstractObjectValue)), t2.reportIntrospectionError(this), new f.FatalError();
    } }], [{ key: "createJoinConditionForSelectedCompletions", value: function(e3, r2) {
      var n2, i2 = r2.joinCondition, a2 = i2.$Realm, o2 = t2.createFromUnaryOp(a2, "!", i2, true, void 0, true);
      r2 instanceof c.JoinedNormalAndAbruptCompletions && void 0 !== r2.composedWith && (n2 = t2.createJoinConditionForSelectedCompletions(e3, r2.composedWith), i2 = t2.createFromLogicalOp(a2, "&&", n2, i2, void 0, true), o2 = t2.createFromLogicalOp(a2, "&&", n2, o2, void 0, true));
      var s2 = r2.consequent, u2 = r2.alternate, l2 = s2.containsSelectedCompletion(e3), f2 = u2.containsSelectedCompletion(e3);
      if (!l2 && !f2) return void 0 !== n2 ? n2 : a2.intrinsics.false;
      var p2 = i2;
      if (l2) {
        if (s2 instanceof c.JoinedAbruptCompletions || s2 instanceof c.JoinedNormalAndAbruptCompletions) {
          var d2 = t2.createJoinConditionForSelectedCompletions(e3, s2);
          p2 = t2.createFromLogicalOp(a2, "&&", p2, d2, void 0, true);
        }
        if (!f2) return p2;
      }
      var h2 = o2;
      if (f2) {
        if (u2 instanceof c.JoinedAbruptCompletions || u2 instanceof c.JoinedNormalAndAbruptCompletions) {
          var v2 = t2.createJoinConditionForSelectedCompletions(e3, u2);
          h2 = t2.createFromLogicalOp(a2, "&&", h2, v2, void 0, true);
        }
        if (!l2) return h2;
      }
      var y2 = t2.createFromLogicalOp(a2, "||", p2, h2, void 0, true);
      if (r2 instanceof c.JoinedNormalAndAbruptCompletions && void 0 !== r2.composedWith) {
        var m2 = t2.createJoinConditionForSelectedCompletions(e3, r2.composedWith);
        return t2.createFromLogicalOp(a2, "&&", m2, y2, void 0, true);
      }
      return y2;
    } }, { key: "createFromBinaryOp", value: function(e3, r2, n2, i2, o2, s2, u2, l2) {
      var c2, f2, d2, b2;
      n2 instanceof t2 ? (c2 = n2.types, f2 = n2.values) : (c2 = new y.TypesDomain(n2.getType()), (0, m.default)(n2 instanceof h.ConcreteValue), f2 = new y.ValuesDomain(n2)), i2 instanceof t2 ? (d2 = i2.types, b2 = i2.values) : (d2 = new y.TypesDomain(i2.getType()), (0, m.default)(i2 instanceof h.ConcreteValue), b2 = new y.ValuesDomain(i2));
      var g = y.TypesDomain.binaryOp(r2, c2, d2), w = "template for property name condition" === s2 ? y.ValuesDomain.topVal : y.ValuesDomain.binaryOp(e3, r2, f2, b2), E = a(void 0 === s2 ? (0, v.hashBinary)(r2, n2, i2) : (0, v.hashCall)(s2, n2, i2), 2), S = new t2(e3, g, w, E[0], E[1], (0, p.createOperationDescriptor)("BINARY_EXPRESSION", { binaryOperator: r2 }));
      return S.kind = s2 || r2, S.expressionLocation = o2, l2 ? S : u2 ? e3.simplifyAndRefineAbstractCondition(S) : e3.simplifyAndRefineAbstractValue(S);
    } }, { key: "createFromLogicalOp", value: function(e3, r2, n2, i2, o2, s2, u2) {
      var l2, c2, f2, d2;
      n2 instanceof t2 ? (l2 = n2.types, c2 = n2.values) : (l2 = new y.TypesDomain(n2.getType()), (0, m.default)(n2 instanceof h.ConcreteValue), c2 = new y.ValuesDomain(n2)), i2 instanceof t2 ? (f2 = i2.types, d2 = i2.values) : (f2 = new y.TypesDomain(i2.getType()), (0, m.default)(i2 instanceof h.ConcreteValue), d2 = new y.ValuesDomain(i2));
      var b2 = y.TypesDomain.logicalOp(r2, l2, f2), g = y.ValuesDomain.logicalOp(e3, r2, c2, d2), w = a((0, v.hashCall)(r2, n2, i2), 2), E = w[0], S = w[1], T = new (h.Value.isTypeCompatibleWith(b2.getType(), h.ObjectValue) ? h.AbstractObjectValue : t2)(e3, b2, g, E, S, (0, p.createOperationDescriptor)("LOGICAL_EXPRESSION", { logicalOperator: r2 }));
      return T.kind = r2, T.expressionLocation = o2, u2 ? T : s2 ? e3.simplifyAndRefineAbstractCondition(T) : e3.simplifyAndRefineAbstractValue(T);
    } }, { key: "createFromConditionalOp", value: function(e3, r2, n2, i2, o2, s2, u2) {
      if (n2 === i2) return n2 || e3.intrinsics.undefined;
      if (!r2.mightNotBeTrue()) return n2 || e3.intrinsics.undefined;
      if (!r2.mightNotBeFalse()) return i2 || e3.intrinsics.undefined;
      var l2 = y.TypesDomain.joinValues(n2, i2);
      if (l2.getType() === h.NullValue) return e3.intrinsics.null;
      if (l2.getType() === h.UndefinedValue) return e3.intrinsics.undefined;
      var c2 = y.ValuesDomain.joinValues(e3, n2, i2), f2 = a((0, v.hashTernary)(r2, n2 || e3.intrinsics.undefined, i2 || e3.intrinsics.undefined), 2), d2 = f2[0], m2 = f2[1], b2 = new (h.Value.isTypeCompatibleWith(l2.getType(), h.ObjectValue) ? h.AbstractObjectValue : t2)(e3, l2, c2, d2, m2, (0, p.createOperationDescriptor)("CONDITIONAL_EXPRESSION"), { kind: "conditional" });
      return b2.expressionLocation = o2, n2 && (b2.mightBeEmpty = n2.mightHaveBeenDeleted()), i2 && !b2.mightBeEmpty && (b2.mightBeEmpty = i2.mightHaveBeenDeleted()), u2 || b2.mightBeEmpty ? b2 : s2 ? e3.simplifyAndRefineAbstractCondition(b2) : e3.simplifyAndRefineAbstractValue(b2);
    } }, { key: "createFromUnaryOp", value: function(e3, r2, n2, i2, a2, o2, s2) {
      (0, m.default)("delete" !== r2 && "++" !== r2 && "--" !== r2);
      var u2 = y.TypesDomain.unaryOp(r2, new y.TypesDomain(n2.getType())), l2 = y.ValuesDomain.unaryOp(e3, r2, n2.values), c2 = (0, p.createOperationDescriptor)("UNARY_EXPRESSION", { unaryOperator: r2, prefix: i2 }), f2 = new t2(e3, u2, l2, (0, v.hashUnary)(r2, n2), [n2], c2);
      return f2.kind = r2, f2.expressionLocation = a2, s2 ? f2 : o2 ? e3.simplifyAndRefineAbstractCondition(f2) : e3.simplifyAndRefineAbstractValue(f2);
    } }, { key: "createFromTemplate", value: function(e3, r2, n2, o2, s2) {
      var u2, l2 = t2.makeKind("template", r2), c2 = new y.TypesDomain(n2), f2 = y.ValuesDomain.topVal, b2 = a(v.hashCall.apply(void 0, [l2].concat(i(o2))), 2);
      u2 = b2[0], o2 = b2[1];
      var g = h.Value.isTypeCompatibleWith(n2, h.ObjectValue) ? h.AbstractObjectValue : t2;
      (0, m.default)(d.Placeholders.length >= o2.length);
      var w = (0, p.createOperationDescriptor)("ABSTRACT_FROM_TEMPLATE", { templateSource: r2 });
      h.Value.isTypeCompatibleWith(n2, h.ObjectValue) && (u2 = ++e3.objectCount);
      var E = new g(e3, c2, f2, u2, o2, w);
      return E.kind = l2, E.expressionLocation = s2 || e3.currentLocation, E;
    } }, { key: "createFromType", value: function(e3, r2, n2, o2) {
      var s2 = new y.TypesDomain(r2), u2 = h.Value.isTypeCompatibleWith(r2, h.ObjectValue) ? h.AbstractObjectValue : t2, l2 = a(v.hashCall.apply(void 0, [r2.name + (n2 || "")].concat(i(o2 || []))), 2), c2 = l2[0], f2 = l2[1];
      h.Value.isTypeCompatibleWith(r2, h.ObjectValue) && (c2 = ++e3.objectCount);
      var p2 = new u2(e3, s2, y.ValuesDomain.topVal, c2, f2);
      return n2 && (p2.kind = n2), p2.expressionLocation = e3.currentLocation, p2;
    } }, { key: "createTemporalFromTemplate", value: function(e3, r2, n2, i2, a2) {
      (0, m.default)(n2 !== h.UndefinedValue);
      var o2 = t2.createFromTemplate(e3, r2, n2, i2), s2 = o2.types, u2 = o2.values, l2 = o2.args;
      return (0, m.default)(void 0 !== e3.generator), (0, m.default)(void 0 !== o2.operationDescriptor), e3.generator.deriveAbstract(s2, u2, l2, o2.operationDescriptor, a2);
    } }, { key: "createFromBuildFunction", value: function(e3, r2, n2, o2, s2) {
      var u2 = new y.TypesDomain(r2), l2 = y.ValuesDomain.topVal, c2 = h.Value.isTypeCompatibleWith(r2, h.ObjectValue) ? h.AbstractObjectValue : t2, f2 = s2 && s2.kind || "build function", p2 = a(v.hashCall.apply(void 0, [f2].concat(i(n2))), 2), d2 = new c2(e3, u2, l2, p2[0], n2 = p2[1], o2);
      return d2.kind = f2, d2;
    } }, { key: "createTemporalFromBuildFunction", value: function(e3, t3, r2, n2, i2) {
      var a2 = new y.TypesDomain(t3), o2 = y.ValuesDomain.topVal;
      return (0, m.default)(void 0 !== e3.generator), t3 === h.UndefinedValue ? e3.generator.emitVoidExpression(a2, o2, r2, n2) : e3.generator.deriveAbstract(a2, o2, r2, n2, i2);
    } }, { key: "convertToTemporalIfArgsAreTemporal", value: function(e3, t3, r2) {
      if (void 0 === r2 && (r2 = t3.args), void 0 !== r2.find(function(e4) {
        return e4.isTemporal();
      })) {
        var n2 = e3.generator;
        return (0, m.default)(void 0 !== n2), (0, m.default)(void 0 !== t3.operationDescriptor), n2.deriveAbstract(t3.types, t3.values, t3.args, t3.operationDescriptor);
      }
      return t3;
    } }, { key: "dischargeValuesFromUnion", value: function(e3, r2) {
      (0, m.default)(r2 instanceof t2 && "abstractConcreteUnion" === r2.kind);
      var n2 = r2.args[0];
      (0, m.default)(n2 instanceof t2);
      var i2 = r2.args.filter(function(e4) {
        return e4 instanceof h.ConcreteValue;
      });
      if ((0, m.default)(i2.length === r2.args.length - 1), !n2.isTemporal()) {
        var a2 = e3.generator;
        (0, m.default)(void 0 !== a2), (0, m.default)(void 0 !== n2.operationDescriptor), n2 = a2.deriveAbstract(n2.types, n2.values, n2.args, n2.operationDescriptor, { isPure: true, skipInvariant: true });
      }
      return [n2, i2];
    } }, { key: "createAbstractConcreteUnion", value: function(e3, r2, n2) {
      (0, m.default)(n2.length > 0), (0, m.default)(r2 instanceof t2);
      var o2 = n2.filter(function(e4) {
        return e4 instanceof h.ConcreteValue;
      });
      (0, m.default)(o2.length === n2.length);
      var s2, u2 = new Set(o2);
      r2.values.isTop() ? s2 = y.ValuesDomain.topVal : (r2.values.getElements().forEach(function(e4) {
        return u2.add(e4);
      }), s2 = new y.ValuesDomain(u2));
      var l2 = y.TypesDomain.topVal, c2 = a(v.hashCall.apply(void 0, ["abstractConcreteUnion", r2].concat(i(o2))), 2), f2 = new t2(e3, l2, s2, c2[0], c2[1], (0, p.createOperationDescriptor)("SINGLE_ARG"), { kind: "abstractConcreteUnion" });
      return f2.expressionLocation = e3.currentLocation, f2;
    } }, { key: "createFromWidenedProperty", value: function(e3, r2, n2, o2) {
      var s2 = r2.types, u2 = r2.values, l2 = a(v.hashCall.apply(void 0, ["widened property"].concat(i(n2))), 1)[0], c2 = new (h.Value.isTypeCompatibleWith(s2.getType(), h.ObjectValue) ? h.AbstractObjectValue : t2)(e3, s2, u2, l2, n2, o2);
      return c2.kind = "widened property", c2.mightBeEmpty = r2.mightBeEmpty, c2.expressionLocation = r2.expressionLocation, c2;
    } }, { key: "createFromWidening", value: function(e3, r2, n2) {
      var i2 = y.TypesDomain.joinValues(r2, n2), o2 = y.ValuesDomain.topVal, s2 = a((0, v.hashCall)("widened"), 1)[0], u2 = new (h.Value.isTypeCompatibleWith(i2.getType(), h.ObjectValue) ? h.AbstractObjectValue : t2)(e3, i2, o2, s2, []);
      return u2.kind = "widened", u2.mightBeEmpty = r2.mightHaveBeenDeleted() || n2.mightHaveBeenDeleted(), u2.expressionLocation = r2.expressionLocation, u2;
    } }, { key: "createAbstractArgument", value: function(e3, r2, n2) {
      var i2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : h.Value, a2 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0;
      if (!e3.useAbstractInterpretation) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "realm is not partial");
      var o2 = e3.preludeGenerator;
      (0, m.default)(o2);
      var s2 = new y.TypesDomain(i2), u2 = y.ValuesDomain.topVal, l2 = h.Value.isTypeCompatibleWith(i2, h.ObjectValue) ? h.AbstractObjectValue : t2, c2 = (0, p.createOperationDescriptor)("IDENTIFIER", { id: r2 }), f2 = new l2(e3, s2, u2, 943586754858 + (0, v.hashString)(r2), [], c2);
      return f2.kind = t2.makeKind("abstractCounted", (e3.objectCount++).toString()), f2.expressionLocation = n2, f2.shape = a2, f2;
    } }, { key: "generateErrorInformationForAbstractVal", value: function(e3) {
      var t3 = [];
      return e3.addSourceNamesTo(t3), "abstract value".concat(t3.length > 1 ? "s" : "", " ").concat(t3.join(" and "));
    } }, { key: "describe", value: function(e3, r2) {
      var n2;
      n2 = e3 === e3.$Realm.$GlobalObject ? "global" : e3 instanceof t2 ? this.generateErrorInformationForAbstractVal(e3) : e3.intrinsicName || "(some value)";
      var i2, a2 = [];
      if (e3 instanceof t2 && e3.addSourceLocationsTo(a2), r2 instanceof h.SymbolValue) {
        var o2 = r2.$Description;
        i2 = "at symbol [".concat(o2 ? o2.throwIfNotConcreteString().value : "(no description)", "]");
      } else i2 = r2 instanceof h.StringValue ? "at ".concat(r2.value) : "string" == typeof r2 ? "at ".concat(r2) : 0 === a2.length ? "" : "at ".concat(a2.join("\n"));
      return "".concat(n2, " ").concat(i2);
    } }, { key: "reportIntrospectionError", value: function(e3, r2) {
      var n2 = "";
      return e3.$Realm.suppressDiagnostics || (n2 = "This operation is not yet supported on ".concat(t2.describe(e3, r2))), e3.$Realm.reportIntrospectionError(n2);
    } }, { key: "createAbstractObject", value: function(e3, r2, n2) {
      var i2;
      return void 0 === n2 && (n2 = new h.ObjectValue(e3, e3.intrinsics.ObjectPrototype)), i2 = t2.createFromTemplate(e3, r2, h.ObjectValue, []), e3.isNameStringUnique(r2) ? e3.saveNameString(r2) : i2.hashValue = ++e3.objectCount, i2.intrinsicName = r2, n2 instanceof h.ObjectValue ? (n2.makePartial(), n2.makeSimple(), i2.values = new y.ValuesDomain(/* @__PURE__ */ new Set([n2])), e3.rebuildNestedProperties(i2, r2)) : i2.shape = n2, (0, m.default)(i2 instanceof h.AbstractObjectValue), i2;
    } }, { key: "makeKind", value: function(e3, t3) {
      return "".concat(e3, ":").concat(t3);
    } }, { key: "createTemporalObjectAssign", value: function(e3, r2, n2) {
      var a2 = [r2].concat(i(n2)), o2 = e3.preludeGenerator;
      (0, m.default)(void 0 !== o2);
      var s2 = t2.createTemporalFromBuildFunction(e3, h.ObjectValue, a2, (0, p.createOperationDescriptor)("OBJECT_ASSIGN"), { skipInvariant: true, mutatesOnly: [r2] });
      return (0, m.default)(s2 instanceof h.AbstractObjectValue), r2 instanceof h.AbstractObjectValue ? s2.values = r2.values : ((0, m.default)(r2 instanceof h.ObjectValue), s2.values = new y.ValuesDomain(r2)), r2.temporalAlias = s2, s2;
    } }]), t2;
  })();
  t.default = b;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (i2 = a(this, o(t2).call(this, e3, n2))).$Description = r2, i2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.PrimitiveValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "equals", value: function(e3) {
      return this === e3;
    } }, { key: "getHash", value: function() {
      return void 0 === this.hashValue && (this.hashValue = ++this.$Realm.symbolCount), this.hashValue;
    } }, { key: "mightBeFalse", value: function() {
      return false;
    } }, { key: "throwIfNotConcreteSymbol", value: function() {
      return this;
    } }, { key: "_serialize", value: function() {
      return Symbol(this.$Description);
    } }, { key: "toDisplayString", value: function() {
      return this.$Description && this.$Description instanceof u.PrimitiveValue ? "Symbol(".concat(this.$Description.toDisplayString(), ")") : "Symbol(to be supported)";
    } }]), t2;
  })();
  t.default = l;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(3), l = r(0), c = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (i2 = a(this, o(t2).call(this, e3, n2))).value = r2, i2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, l.PrimitiveValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "equals", value: function(e3) {
      return e3 instanceof t2 && this.value === e3.value;
    } }, { key: "getHash", value: function() {
      return (0, u.hashString)(this.value);
    } }, { key: "mightBeFalse", value: function() {
      return 0 === this.value.length;
    } }, { key: "throwIfNotConcreteString", value: function() {
      return this;
    } }, { key: "_serialize", value: function() {
      return this.value;
    } }, { key: "toDisplayString", value: function() {
      return JSON.stringify(this.value);
    } }]), t2;
  })();
  t.default = c;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    function t2(e3, r2, n2) {
      var i2;
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (i2 = a(this, o(t2).call(this, e3, n2))).value = r2, r2 && e3.intrinsics.true ? a(i2, e3.intrinsics.true) : !r2 && e3.intrinsics.false ? a(i2, e3.intrinsics.false) : i2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.PrimitiveValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "equals", value: function(e3) {
      return e3 instanceof t2 && this.value === e3.value;
    } }, { key: "getHash", value: function() {
      return this.value ? 12484058682847432 : 3777063795205331;
    } }, { key: "mightBeFalse", value: function() {
      return !this.value;
    } }, { key: "throwIfNotConcreteBoolean", value: function() {
      return this;
    } }, { key: "_serialize", value: function() {
      return this.value;
    } }, { key: "toDisplayString", value: function() {
      return this.value.toString();
    } }]), t2;
  })();
  t.default = l;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = r(11), c = r(13), f = r(20), p = r(72), d = r(2), h = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), v = r(6);
  var y = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).call(this, e3, e3.intrinsics.ObjectPrototype, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.ObjectValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "$GetOwnProperty", value: function(e3) {
      var t3 = this;
      if ((0, h.default)((0, l.IsPropertyKey)(this.$Realm, e3), "IsPropertyKey(P) is true"), (0, h.default)(t3 instanceof u.ObjectValue && t3.$ViewedArrayBuffer), "string" == typeof e3 || e3 instanceof u.StringValue) {
        var r2 = d.To.CanonicalNumericIndexString(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (void 0 !== r2) {
          var n2 = (0, p.IntegerIndexedElementGet)(this.$Realm, t3, r2);
          if (n2 instanceof u.UndefinedValue) return;
          return new v.PropertyDescriptor({ value: n2, writable: true, enumerable: true, configurable: false });
        }
      }
      return d.Properties.OrdinaryGetOwnProperty(this.$Realm, t3, e3);
    } }, { key: "$HasProperty", value: function(e3) {
      var t3 = this;
      if ((0, h.default)((0, l.IsPropertyKey)(this.$Realm, e3), "IsPropertyKey(P) is true"), (0, h.default)(t3 instanceof u.ObjectValue && t3.$ViewedArrayBuffer), "string" == typeof e3 || e3 instanceof u.StringValue) {
        var r2 = d.To.CanonicalNumericIndexString(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (void 0 !== r2) {
          var n2 = t3.$ViewedArrayBuffer;
          if ((0, h.default)(n2), true === (0, l.IsDetachedBuffer)(this.$Realm, n2)) throw this.$Realm.createErrorThrowCompletion(this.$Realm.intrinsics.TypeError, "IsDetachedBuffer(buffer) is true");
          return false !== (0, l.IsInteger)(this.$Realm, r2) && (!Object.is(r2, -0) && (!(r2 < 0) && ((0, h.default)(void 0 !== t3.$ArrayLength), !(r2 >= t3.$ArrayLength))));
        }
      }
      return (0, f.OrdinaryHasProperty)(this.$Realm, t3, e3);
    } }, { key: "$DefineOwnProperty", value: function(e3, t3) {
      var r2 = this;
      if ((0, h.default)((0, l.IsPropertyKey)(this.$Realm, e3), "IsPropertyKey(P) is true"), (0, h.default)(r2 instanceof u.ObjectValue && this.$ViewedArrayBuffer), "string" == typeof e3 || e3 instanceof u.StringValue) {
        var n2 = d.To.CanonicalNumericIndexString(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (void 0 !== n2) {
          if (false === (0, l.IsInteger)(this.$Realm, n2)) return false;
          if (Object.is(n2, -0)) return false;
          if (n2 < 0) return false;
          var i2 = this.$ArrayLength;
          if ((0, h.default)("number" == typeof i2), n2 >= i2) return false;
          var a2 = t3.throwIfNotConcrete(this.$Realm);
          if (true === (0, l.IsAccessorDescriptor)(this.$Realm, a2)) return false;
          if (true === a2.configurable) return false;
          if (false === a2.enumerable) return false;
          if (false === a2.writable) return false;
          if (a2.value) {
            var o2 = a2.value;
            return (0, h.default)(void 0 === o2 || o2 instanceof u.Value), (0, p.IntegerIndexedElementSet)(this.$Realm, r2, n2, o2);
          }
          return true;
        }
      }
      return d.Properties.OrdinaryDefineOwnProperty(this.$Realm, r2, e3, t3);
    } }, { key: "$Get", value: function(e3, t3) {
      if ((0, h.default)((0, l.IsPropertyKey)(this.$Realm, e3), "IsPropertyKey(P) is true"), "string" == typeof e3 || e3 instanceof u.StringValue) {
        var r2 = d.To.CanonicalNumericIndexString(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (void 0 !== r2) return (0, p.IntegerIndexedElementGet)(this.$Realm, this, r2);
      }
      return (0, c.OrdinaryGet)(this.$Realm, this, e3, t3);
    } }, { key: "$Set", value: function(e3, t3, r2) {
      if ((0, h.default)((0, l.IsPropertyKey)(this.$Realm, e3), "IsPropertyKey(P) is true"), "string" == typeof e3 || e3 instanceof u.StringValue) {
        var n2 = d.To.CanonicalNumericIndexString(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (void 0 !== n2) return (0, p.IntegerIndexedElementSet)(this.$Realm, this, n2, t3);
      }
      return d.Properties.OrdinarySet(this.$Realm, this, e3, t3, r2);
    } }, { key: "$OwnPropertyKeys", value: function() {
      var e3 = this, t3 = [];
      (0, h.default)(e3 instanceof u.ObjectValue && e3.$ViewedArrayBuffer && void 0 !== e3.$ArrayLength && void 0 !== e3.$ByteOffset && e3.$TypedArrayName);
      var r2 = e3.$ArrayLength;
      (0, h.default)("number" == typeof r2);
      for (var n2 = 0; n2 < r2; ++n2) t3.push(new u.StringValue(this.$Realm, d.To.ToString(this.$Realm, new u.NumberValue(this.$Realm, n2))));
      var i2 = this.$Realm, a2 = d.Properties.GetOwnPropertyKeysArray(i2, e3, false, false), o2 = true, s2 = false, c2 = void 0;
      try {
        for (var f2, p2 = a2.filter(function(e4) {
          return !(0, l.IsArrayIndex)(i2, e4);
        })[Symbol.iterator](); !(o2 = (f2 = p2.next()).done); o2 = true) {
          var v2 = f2.value;
          t3.push(new u.StringValue(i2, v2));
        }
      } catch (e4) {
        s2 = true, c2 = e4;
      } finally {
        try {
          o2 || null == p2.return || p2.return();
        } finally {
          if (s2) throw c2;
        }
      }
      var y2 = true, m = false, b = void 0;
      try {
        for (var g, w = e3.symbols.keys()[Symbol.iterator](); !(y2 = (g = w.next()).done); y2 = true) {
          var E = g.value;
          t3.push(E);
        }
      } catch (e4) {
        m = true, b = e4;
      } finally {
        try {
          y2 || null == w.return || w.return();
        } finally {
          if (m) throw b;
        }
      }
      return t3;
    } }]), t2;
  })();
  t.default = y;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = r(11), c = r(20), f = r(16), p = r(13), d = r(2), h = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), v = r(6);
  var y = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).call(this, e3, e3.intrinsics.ObjectPrototype, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.ObjectValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "$GetOwnProperty", value: function(e3) {
      var t3 = d.Properties.OrdinaryGetOwnProperty(this.$Realm, this, e3);
      if (void 0 !== t3) {
        d.Properties.ThrowIfMightHaveBeenDeleted(t3), t3 = t3.throwIfNotConcrete(this.$Realm);
        var r2 = this.$ParameterMap;
        return (0, h.default)(r2), true === (0, c.HasOwnProperty)(this.$Realm, r2, e3) && (t3.value = (0, p.Get)(this.$Realm, r2, e3)), t3;
      }
    } }, { key: "$DefineOwnProperty", value: function(e3, t3) {
      var r2 = t3.throwIfNotConcrete(this.$Realm), n2 = this.$ParameterMap;
      (0, h.default)(n2);
      var i2 = (0, c.HasOwnProperty)(this.$Realm, n2, e3), a2 = r2;
      if (true === i2 && true === (0, l.IsDataDescriptor)(this.$Realm, r2) && void 0 === r2.value && false === r2.writable && ((a2 = new v.PropertyDescriptor(r2)).value = (0, p.Get)(this.$Realm, n2, e3)), false === d.Properties.OrdinaryDefineOwnProperty(this.$Realm, this, e3, a2)) return false;
      if (true === i2) if (true === (0, l.IsAccessorDescriptor)(this.$Realm, r2)) n2.$Delete(e3);
      else {
        if (void 0 !== r2.value) {
          (0, h.default)(r2.value instanceof u.Value);
          var o2 = d.Properties.Set(this.$Realm, n2, e3, r2.value, false);
          (0, h.default)(true === o2);
        }
        false === r2.writable && n2.$Delete(e3);
      }
      return true;
    } }, { key: "$Get", value: function(e3, t3) {
      var r2 = this.$ParameterMap;
      return (0, h.default)(r2), false === (0, c.HasOwnProperty)(this.$Realm, r2, e3) ? (0, p.OrdinaryGet)(this.$Realm, this, e3, t3) : (0, p.Get)(this.$Realm, r2, e3);
    } }, { key: "$Set", value: function(e3, t3, r2) {
      var n2, i2;
      if (false === (0, f.SameValuePartial)(this.$Realm, this, r2) ? n2 = false : (i2 = this.$ParameterMap, (0, h.default)(i2), n2 = (0, c.HasOwnProperty)(this.$Realm, i2, e3)), true === n2) {
        (0, h.default)(i2);
        var a2 = d.Properties.Set(this.$Realm, i2, e3, t3, false);
        (0, h.default)(true === a2);
      }
      return d.Properties.OrdinarySet(this.$Realm, this, e3, t3, r2);
    } }, { key: "$Delete", value: function(e3) {
      var t3 = this.$ParameterMap;
      (0, h.default)(t3);
      var r2 = (0, c.HasOwnProperty)(this.$Realm, t3, e3), n2 = d.Properties.OrdinaryDelete(this.$Realm, this, e3);
      return true === n2 && true === r2 && t3.$Delete(e3), n2;
    } }]), t2;
  })();
  t.default = y;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = r(11), c = r(2), f = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), p = r(6);
  var d = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).call(this, e3, e3.intrinsics.StringPrototype, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.ObjectValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "$GetOwnProperty", value: function(e3) {
      var t3 = c.Properties.OrdinaryGetOwnProperty(this.$Realm, this, e3);
      if (void 0 !== t3) return c.Properties.ThrowIfMightHaveBeenDeleted(t3), t3;
      if ("string" == typeof e3 || e3 instanceof u.StringValue) {
        var r2 = c.To.CanonicalNumericIndexString(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (null != r2 && false !== (0, l.IsInteger)(this.$Realm, r2) && 1 / r2 != -1 / 0) {
          var n2 = this.$StringData;
          (0, f.default)(n2);
          var i2 = (n2 = n2.throwIfNotConcreteString()).value.length;
          if (!(r2 < 0 || i2 <= r2)) {
            var a2 = new u.StringValue(this.$Realm, n2.value.charAt(r2));
            return new p.PropertyDescriptor({ value: a2, writable: false, enumerable: true, configurable: false });
          }
        }
      }
    } }, { key: "$OwnPropertyKeys", value: function() {
      var e3 = [], t3 = this.$StringData;
      (0, f.default)(t3);
      for (var r2 = (t3 = t3.throwIfNotConcreteString()).value.length, n2 = this.$Realm, i2 = 0; i2 < r2; ++i2) e3.push(new u.StringValue(n2, c.To.ToString(n2, new u.NumberValue(n2, i2))));
      var a2 = c.Properties.GetOwnPropertyKeysArray(n2, this, false, false), o2 = true, s2 = false, p2 = void 0;
      try {
        for (var d2, h = a2.filter(function(e4) {
          return (0, l.IsArrayIndex)(n2, e4);
        }).map(function(e4) {
          return parseInt(e4, 10);
        }).filter(function(e4) {
          return c.To.ToInteger(n2, e4) >= r2;
        }).sort(function(e4, t4) {
          return e4 - t4;
        })[Symbol.iterator](); !(o2 = (d2 = h.next()).done); o2 = true) {
          var v = d2.value;
          e3.push(new u.StringValue(n2, v + ""));
        }
      } catch (e4) {
        s2 = true, p2 = e4;
      } finally {
        try {
          o2 || null == h.return || h.return();
        } finally {
          if (s2) throw p2;
        }
      }
      var y = true, m = false, b = void 0;
      try {
        for (var g, w = a2.filter(function(e4) {
          return !(0, l.IsArrayIndex)(n2, e4);
        })[Symbol.iterator](); !(y = (g = w.next()).done); y = true) {
          var E = g.value;
          e3.push(new u.StringValue(n2, E));
        }
      } catch (e4) {
        m = true, b = e4;
      } finally {
        try {
          y || null == w.return || w.return();
        } finally {
          if (m) throw b;
        }
      }
      var S = true, T = false, A = void 0;
      try {
        for (var C, P = this.symbols.keys()[Symbol.iterator](); !(S = (C = P.next()).done); S = true) {
          var O = C.value;
          e3.push(O);
        }
      } catch (e4) {
        T = true, A = e4;
      } finally {
        try {
          S || null == P.return || P.return();
        } finally {
          if (T) throw A;
        }
      }
      return e3;
    } }]), t2;
  })();
  t.default = d;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  r(8);
  var u = r(0), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), c = r(16), f = r(13), p = r(11), d = r(2), h = r(15);
  function v(e2, t2, r2) {
    for (var n2 = 0; n2 < t2.length; ++n2) if ((0, c.SamePropertyKey)(e2, r2, t2[n2])) return n2;
    return -1;
  }
  var y = (function(e2) {
    function t2(e3) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).call(this, e3));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.ObjectValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "getTrackedPropertyNames", value: function() {
      return t2.trackedPropertyNames;
    } }, { key: "isSimpleObject", value: function() {
      return false;
    } }, { key: "usesOrdinaryObjectInternalPrototypeMethods", value: function() {
      return false;
    } }, { key: "$GetPrototypeOf", value: function() {
      var e3 = this.$Realm, t3 = this.$ProxyHandler;
      if (t3 instanceof u.NullValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      (0, l.default)(t3 instanceof u.ObjectValue, "expected an object");
      var r2 = this.$ProxyTarget;
      (0, l.default)(r2 instanceof u.ObjectValue);
      var n2 = (0, f.GetMethod)(e3, t3, "getPrototypeOf");
      if (n2 instanceof u.UndefinedValue) return r2.$GetPrototypeOf();
      var i2 = (0, h.Call)(e3, n2, t3, [r2]);
      if (!(i2 instanceof u.ObjectValue || i2 instanceof u.NullValue)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      if ((0, p.IsExtensible)(e3, r2)) return i2;
      var a2 = r2.$GetPrototypeOf();
      if (!(0, c.SameValuePartial)(e3, i2, a2)) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      return i2;
    } }, { key: "$SetPrototypeOf", value: function(e3) {
      var t3 = this.$Realm;
      (0, l.default)(e3 instanceof u.ObjectValue || e3 instanceof u.NullValue, "expected object or null");
      var r2 = this.$ProxyHandler;
      if (r2 instanceof u.NullValue) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      (0, l.default)(r2 instanceof u.ObjectValue, "expected object");
      var n2 = this.$ProxyTarget;
      (0, l.default)(n2 instanceof u.ObjectValue);
      var i2 = (0, f.GetMethod)(t3, r2, "setPrototypeOf");
      if (i2 instanceof u.UndefinedValue) return n2.$SetPrototypeOf(e3);
      if (!d.To.ToBooleanPartial(t3, (0, h.Call)(t3, i2, r2, [n2, e3]))) return false;
      if ((0, p.IsExtensible)(t3, n2)) return true;
      var a2 = n2.$GetPrototypeOf();
      if (!(0, c.SameValuePartial)(t3, e3, a2)) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      return true;
    } }, { key: "$IsExtensible", value: function() {
      var e3 = this.$Realm, t3 = this.$ProxyHandler;
      if (t3 instanceof u.NullValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      (0, l.default)(t3 instanceof u.ObjectValue, "expected object");
      var r2 = this.$ProxyTarget, n2 = (0, f.GetMethod)(e3, t3, "isExtensible");
      if (n2 instanceof u.UndefinedValue) return (0, l.default)(r2 instanceof u.ObjectValue), r2.$IsExtensible();
      var i2 = d.To.ToBooleanPartial(e3, (0, h.Call)(e3, n2, t3, [r2]));
      if ((0, l.default)(r2 instanceof u.ObjectValue), i2 !== r2.$IsExtensible()) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      return i2;
    } }, { key: "$PreventExtensions", value: function() {
      var e3 = this.$Realm, t3 = this.$ProxyHandler;
      if (t3 instanceof u.NullValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      (0, l.default)(t3 instanceof u.ObjectValue, "expected object");
      var r2 = this.$ProxyTarget, n2 = (0, f.GetMethod)(e3, t3, "preventExtensions");
      if (n2 instanceof u.UndefinedValue) return (0, l.default)(r2 instanceof u.ObjectValue), r2.$PreventExtensions();
      var i2 = d.To.ToBooleanPartial(e3, (0, h.Call)(e3, n2, t3, [r2]));
      if (i2 && ((0, l.default)(r2 instanceof u.ObjectValue), r2.$IsExtensible())) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      return i2;
    } }, { key: "$GetOwnProperty", value: function(e3) {
      var t3 = this.$Realm;
      (0, l.default)((0, p.IsPropertyKey)(t3, e3), "expected property key");
      var r2 = this.$ProxyHandler;
      if (r2 instanceof u.NullValue) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      (0, l.default)(r2 instanceof u.ObjectValue, "expected object");
      var n2 = this.$ProxyTarget;
      (0, l.default)(n2 instanceof u.ObjectValue);
      var i2 = (0, f.GetMethod)(t3, r2, "getOwnPropertyDescriptor");
      if (i2 instanceof u.UndefinedValue) return n2.$GetOwnProperty(e3);
      var a2 = (0, h.Call)(t3, i2, r2, [n2, "string" == typeof e3 ? new u.StringValue(t3, e3) : e3]);
      if (!(a2 instanceof u.ObjectValue || a2 instanceof u.UndefinedValue)) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      var o2 = n2.$GetOwnProperty(e3);
      if (!(a2 instanceof u.UndefinedValue)) {
        var s2 = (0, p.IsExtensible)(t3, n2), c2 = d.To.ToPropertyDescriptor(t3, a2);
        if (d.Properties.CompletePropertyDescriptor(t3, c2), !d.Properties.IsCompatiblePropertyDescriptor(t3, s2, c2, o2)) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
        if (!(c2 = c2.throwIfNotConcrete(t3)).configurable && (!o2 || o2.throwIfNotConcrete(t3).configurable)) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
        return c2;
      }
      if (o2) {
        if (d.Properties.ThrowIfMightHaveBeenDeleted(o2), !(o2 = o2.throwIfNotConcrete(t3)).configurable) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
        var v2 = (0, p.IsExtensible)(t3, n2);
        if ((0, l.default)("boolean" == typeof v2, "expected boolean"), !v2) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      }
    } }, { key: "$DefineOwnProperty", value: function(e3, t3) {
      var r2 = this.$Realm;
      (0, l.default)((0, p.IsPropertyKey)(r2, e3), "expected property key");
      var n2 = this.$ProxyHandler;
      if (n2 instanceof u.NullValue) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      (0, l.default)(n2 instanceof u.ObjectValue, "expected object");
      var i2 = this.$ProxyTarget;
      (0, l.default)(i2 instanceof u.ObjectValue);
      var a2 = (0, f.GetMethod)(r2, n2, "defineProperty");
      if (a2 instanceof u.UndefinedValue) return i2.$DefineOwnProperty(e3, t3);
      var o2 = d.Properties.FromPropertyDescriptor(r2, t3);
      if (!d.To.ToBooleanPartial(r2, (0, h.Call)(r2, a2, n2, [i2, "string" == typeof e3 ? new u.StringValue(r2, e3) : e3, o2]))) return false;
      var s2, c2 = i2.$GetOwnProperty(e3), v2 = (0, p.IsExtensible)(r2, i2);
      if (s2 = false === t3.throwIfNotConcrete(r2).configurable, c2) {
        if (d.Properties.ThrowIfMightHaveBeenDeleted(c2), !d.Properties.IsCompatiblePropertyDescriptor(r2, v2, t3, c2)) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
        if (s2 && c2.throwIfNotConcrete(r2).configurable) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      } else {
        if (!v2) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
        if (s2) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      }
      return true;
    } }, { key: "$HasProperty", value: function(e3) {
      var t3 = this.$Realm;
      (0, l.default)((0, p.IsPropertyKey)(t3, e3), "expected property key");
      var r2 = this.$ProxyHandler;
      if (r2 instanceof u.NullValue) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      (0, l.default)(r2 instanceof u.ObjectValue, "expected object");
      var n2 = this.$ProxyTarget;
      (0, l.default)(n2 instanceof u.ObjectValue);
      var i2 = (0, f.GetMethod)(t3, r2, "has");
      if (i2 instanceof u.UndefinedValue) return n2.$HasProperty(e3);
      var a2 = d.To.ToBooleanPartial(t3, (0, h.Call)(t3, i2, r2, [n2, "string" == typeof e3 ? new u.StringValue(t3, e3) : e3]));
      if (!a2) {
        var o2 = n2.$GetOwnProperty(e3);
        if (o2) {
          if (d.Properties.ThrowIfMightHaveBeenDeleted(o2), !(o2 = o2.throwIfNotConcrete(t3)).configurable) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
          if (!(0, p.IsExtensible)(t3, n2)) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
        }
      }
      return a2;
    } }, { key: "$Get", value: function(e3, t3) {
      var r2 = this.$Realm;
      (0, l.default)((0, p.IsPropertyKey)(r2, e3), "expected property key");
      var n2 = this.$ProxyHandler;
      if (n2 instanceof u.NullValue) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      (0, l.default)(n2 instanceof u.ObjectValue, "expected object");
      var i2 = this.$ProxyTarget;
      (0, l.default)(i2 instanceof u.ObjectValue);
      var a2 = (0, f.GetMethod)(r2, n2, "get");
      if (a2 instanceof u.UndefinedValue) return i2.$Get(e3, t3);
      var o2 = (0, h.Call)(r2, a2, n2, [i2, "string" == typeof e3 ? new u.StringValue(r2, e3) : e3, t3]), s2 = i2.$GetOwnProperty(e3);
      if (s2) {
        if (d.Properties.ThrowIfMightHaveBeenDeleted(s2), (0, p.IsDataDescriptor)(r2, s2) && false === s2.configurable && false === s2.writable) {
          var v2 = s2.value || r2.intrinsics.undefined;
          if ((0, l.default)(v2 instanceof u.Value), !(0, c.SameValuePartial)(r2, o2, v2)) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
        }
        if ((0, p.IsAccessorDescriptor)(r2, s2) && false === s2.configurable && (!s2.get || s2.get instanceof u.UndefinedValue) && !(o2 instanceof u.UndefinedValue)) throw r2.createErrorThrowCompletion(r2.intrinsics.TypeError);
      }
      return o2;
    } }, { key: "$Set", value: function(e3, t3, r2) {
      var n2 = this.$Realm;
      (0, l.default)((0, p.IsPropertyKey)(n2, e3), "expected property key");
      var i2 = this.$ProxyHandler;
      if (i2 instanceof u.NullValue) throw n2.createErrorThrowCompletion(n2.intrinsics.TypeError);
      (0, l.default)(i2 instanceof u.ObjectValue, "expected object");
      var a2 = this.$ProxyTarget, o2 = (0, f.GetMethod)(n2, i2, "set");
      if (o2 instanceof u.UndefinedValue) return (0, l.default)(a2 instanceof u.ObjectValue), a2.$Set(e3, t3, r2);
      if (!d.To.ToBooleanPartial(n2, (0, h.Call)(n2, o2, i2, [a2, "string" == typeof e3 ? new u.StringValue(n2, e3) : e3, t3, r2]))) return false;
      (0, l.default)(a2 instanceof u.ObjectValue);
      var s2 = a2.$GetOwnProperty(e3);
      if (s2) {
        if (d.Properties.ThrowIfMightHaveBeenDeleted(s2), (0, p.IsDataDescriptor)(n2, s2) && !s2.configurable && !s2.writable) {
          var v2 = s2.value || n2.intrinsics.undefined;
          if ((0, l.default)(v2 instanceof u.Value), !(0, c.SameValuePartial)(n2, t3, v2)) throw n2.createErrorThrowCompletion(n2.intrinsics.TypeError);
        }
        if ((0, p.IsAccessorDescriptor)(n2, s2) && !s2.configurable && (!s2.set || s2.set instanceof u.UndefinedValue)) throw n2.createErrorThrowCompletion(n2.intrinsics.TypeError);
      }
      return true;
    } }, { key: "$Delete", value: function(e3) {
      var t3 = this.$Realm;
      (0, l.default)((0, p.IsPropertyKey)(t3, e3), "expected property key");
      var r2 = this.$ProxyHandler;
      if (r2 instanceof u.NullValue) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      (0, l.default)(r2 instanceof u.ObjectValue, "expected object");
      var n2 = this.$ProxyTarget, i2 = (0, f.GetMethod)(t3, r2, "deleteProperty");
      if (i2 instanceof u.UndefinedValue) return (0, l.default)(n2 instanceof u.ObjectValue), n2.$Delete(e3);
      if (!d.To.ToBooleanPartial(t3, (0, h.Call)(t3, i2, r2, [n2, "string" == typeof e3 ? new u.StringValue(t3, e3) : e3]))) return false;
      (0, l.default)(n2 instanceof u.ObjectValue);
      var a2 = n2.$GetOwnProperty(e3);
      if (!a2) return true;
      if (d.Properties.ThrowIfMightHaveBeenDeleted(a2), !(a2 = a2.throwIfNotConcrete(t3)).configurable) throw t3.createErrorThrowCompletion(t3.intrinsics.TypeError);
      return true;
    } }, { key: "$OwnPropertyKeys", value: function() {
      var e3 = this.$Realm, t3 = this.$ProxyHandler;
      if (t3 instanceof u.NullValue) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      (0, l.default)(t3 instanceof u.ObjectValue, "expected object");
      var r2 = this.$ProxyTarget;
      (0, l.default)(r2 instanceof u.ObjectValue);
      var n2 = (0, f.GetMethod)(e3, t3, "ownKeys");
      if (n2 instanceof u.UndefinedValue) return r2.$OwnPropertyKeys();
      var i2 = (0, h.Call)(e3, n2, t3, [r2]), a2 = d.Create.CreateListFromArrayLike(e3, i2, ["String", "Symbol"]), o2 = (0, p.IsExtensible)(e3, r2), s2 = r2.$OwnPropertyKeys(), c2 = true, y2 = false, m = void 0;
      try {
        for (var b, g = s2[Symbol.iterator](); !(c2 = (b = g.next()).done); c2 = true) {
          var w = b.value;
          (0, l.default)(w instanceof u.SymbolValue || w instanceof u.StringValue, "expected string or symbol");
        }
      } catch (e4) {
        y2 = true, m = e4;
      } finally {
        try {
          c2 || null == g.return || g.return();
        } finally {
          if (y2) throw m;
        }
      }
      var E = [], S = [], T = true, A = false, C = void 0;
      try {
        for (var P, O = s2[Symbol.iterator](); !(T = (P = O.next()).done); T = true) {
          var x = P.value, _ = r2.$GetOwnProperty(x);
          _ && d.Properties.ThrowIfMightHaveBeenDeleted(_), _ && false === _.throwIfNotConcrete(e3).configurable ? S.push(x) : E.push(x);
        }
      } catch (e4) {
        A = true, C = e4;
      } finally {
        try {
          T || null == O.return || O.return();
        } finally {
          if (A) throw C;
        }
      }
      if (o2 && !S.length) return a2;
      for (var V = a2.slice(), D = 0; D < S.length; D++) {
        var N = v(e3, V, S[D]);
        if (N < 0) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "key is not an element of uncheckedResultKeys");
        V.splice(N, 1);
      }
      if (o2) return a2;
      for (var I = 0; I < E.length; I++) {
        var k = v(e3, V, E[I]);
        if (k < 0) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError, "key is not an element of uncheckedResultKeys");
        V.splice(k, 1);
      }
      if (V.length) throw e3.createErrorThrowCompletion(e3.intrinsics.TypeError);
      return a2;
    } }]), t2;
  })();
  t.default = y, (function(e2, t2, r2) {
    t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2;
  })(y, "trackedPropertyNames", u.ObjectValue.trackedPropertyNames.concat(["$ProxyTarget", "$ProxyHandler"]));
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2, t2, r2) {
    return t2 && a(e2.prototype, t2), r2 && a(e2, r2), e2;
  }
  function s(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function u(e2) {
    return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function l(e2, t2) {
    if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
    e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), t2 && c(e2, t2);
  }
  function c(e2, t2) {
    return (c = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.IntegralValue = t.NumberValue = void 0;
  var f = r(0), p = (function(e2) {
    function t2(e3, r2, n2) {
      var a2;
      return i(this, t2), (a2 = s(this, u(t2).call(this, e3, n2))).value = r2, a2;
    }
    return l(t2, f.PrimitiveValue), o(t2, [{ key: "equals", value: function(e3) {
      return e3 instanceof t2 && Object.is(this.value, e3.value);
    } }, { key: "getHash", value: function() {
      var e3 = Math.abs(this.value);
      return e3 < 100 && (e3 *= 1e7), 0 | e3;
    } }, { key: "mightBeFalse", value: function() {
      return 0 === this.value || isNaN(this.value);
    } }, { key: "throwIfNotConcreteNumber", value: function() {
      return this;
    } }, { key: "_serialize", value: function() {
      return this.value;
    } }, { key: "toDisplayString", value: function() {
      return this.value.toString();
    } }]), t2;
  })();
  t.NumberValue = p;
  var d = (function(e2) {
    function t2(e3, r2, n2) {
      return i(this, t2), s(this, u(t2).call(this, e3, r2, n2));
    }
    return l(t2, p), o(t2, null, [{ key: "createFromNumberValue", value: function(e3, r2, n2) {
      return Number.isInteger(r2) ? new t2(e3, r2, n2) : new p(e3, r2, n2);
    } }]), t2;
  })();
  t.IntegralValue = d;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    function t2() {
      return (function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).apply(this, arguments));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.PrimitiveValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "_serialize", value: function() {
      return null;
    } }, { key: "equals", value: function(e3) {
      return e3 instanceof t2;
    } }, { key: "getHash", value: function() {
      return 5613143836447527;
    } }, { key: "mightBeFalse", value: function() {
      return true;
    } }, { key: "toDisplayString", value: function() {
      return "null";
    } }]), t2;
  })();
  t.default = l;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    function t2() {
      return (function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).apply(this, arguments));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.PrimitiveValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "_serialize", value: function() {
    } }, { key: "equals", value: function(e3) {
      return e3 instanceof t2 && !(e3 instanceof u.EmptyValue);
    } }, { key: "getHash", value: function() {
      return 792057514635681;
    } }, { key: "mightBeFalse", value: function() {
      return true;
    } }, { key: "toDisplayString", value: function() {
      return "undefined";
    } }]), t2;
  })();
  t.default = l;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function i(e2, t2) {
    return !t2 || "object" !== s(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function a(e2) {
    return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function o(e2, t2) {
    return (o = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function s(e2) {
    return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = r(11), c = r(2), f = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), p = r(4), d = r(6);
  function h(e2, t2, r2) {
    var n2 = new v(e2, t2);
    if (void 0 !== r2) if (!e2.arrayNestedOptimizedFunctionsEnabled || e2.react.enabled && !e2.react.optimizeNestedFunctions) {
      var i2 = true, a2 = false, o2 = void 0;
      try {
        for (var l2, h2 = r2[Symbol.iterator](); !(i2 = (l2 = h2.next()).done); i2 = true) {
          var y = l2.value.func;
          c.Leak.value(e2, y);
        }
      } catch (e3) {
        a2 = true, o2 = e3;
      } finally {
        try {
          i2 || null == h2.return || h2.return();
        } finally {
          if (a2) throw o2;
        }
      }
    } else !(function(e3, t3, r3) {
      var n3 = true, i3 = false, a3 = void 0;
      try {
        for (var o3, l3 = function() {
          var r4 = o3.value, n4 = r4.func, i4 = r4.thisValue, a4 = n4;
          n4 instanceof u.BoundFunctionValue && (a4 = n4.$BoundTargetFunction, i4 = n4.$BoundThis), (0, f.default)(a4 instanceof u.ECMAScriptSourceFunctionValue), e3.instantRender.enabled && e3.collectedNestedOptimizedFunctionEffects.has(a4) && e3.instantRenderBailout("Array operators may only be optimized once", a4.expressionLocation);
          var s2 = c.Utils.createModelledFunctionCall(e3, a4, void 0, i4), l4 = void 0;
          try {
            l4 = e3.evaluateForEffects(function() {
              return e3.evaluatePure(s2, false, function() {
                throw new p.NestedOptimizedFunctionSideEffect();
              });
            }, null, "temporalArray nestedOptimizedFunction");
          } catch (t4) {
            if (t4 instanceof p.NestedOptimizedFunctionSideEffect) return e3.instantRender.enabled && e3.instantRenderBailout("InstantRender does not support impure array operators", s2.expressionLocation), c.Leak.value(e3, n4), { v: void 0 };
            throw t4;
          }
          c.Materialize.materializeObjectsTransitive(e3, n4), (0, f.default)(t3.isIntrinsic()), void 0 === t3.nestedOptimizedFunctionEffects && (t3.nestedOptimizedFunctionEffects = /* @__PURE__ */ new Map()), t3.nestedOptimizedFunctionEffects.set(a4, l4), e3.collectedNestedOptimizedFunctionEffects.set(a4, l4);
        }, d2 = r3[Symbol.iterator](); !(n3 = (o3 = d2.next()).done); n3 = true) {
          var h3 = l3();
          if ("object" === s(h3)) return h3.v;
        }
      } catch (e4) {
        i3 = true, a3 = e4;
      } finally {
        try {
          n3 || null == d2.return || d2.return();
        } finally {
          if (i3) throw a3;
        }
      }
    })(e2, n2, r2);
    return n2.unknownProperty = { key: void 0, descriptor: new d.PropertyDescriptor({ value: u.AbstractValue.createFromType(e2, u.Value, "widened numeric property") }), object: n2 }, n2;
  }
  var v = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), i(this, a(t2).call(this, e3, e3.intrinsics.ArrayPrototype, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && o(e3, t3);
    })(t2, u.ObjectValue), (function(e3, t3, r2) {
      t3 && n(e3.prototype, t3), r2 && n(e3, r2);
    })(t2, [{ key: "getKind", value: function() {
      return "Array";
    } }, { key: "isSimpleObject", value: function() {
      return void 0 === this.$TypedArrayName;
    } }, { key: "$DefineOwnProperty", value: function(e3, r2) {
      var n2 = this;
      if ((0, f.default)((0, l.IsPropertyKey)(this.$Realm, e3), "expected a property key"), "length" === e3 || e3 instanceof u.StringValue && "length" === e3.value) return c.Properties.ArraySetLength(this.$Realm, n2, r2);
      if ((0, l.IsArrayIndex)(this.$Realm, e3)) {
        if (t2.isIntrinsicAndHasWidenedNumericProperty(this)) return false !== c.Properties.OrdinaryDefineOwnProperty(this.$Realm, n2, e3, r2);
        var i2 = c.Properties.OrdinaryGetOwnProperty(this.$Realm, n2, "length");
        (0, f.default)(void 0 !== i2 && !(0, l.IsAccessorDescriptor)(this.$Realm, i2), "cannot be undefined or an accessor descriptor"), c.Properties.ThrowIfMightHaveBeenDeleted(i2);
        var a2 = (i2 = i2.throwIfNotConcrete(this.$Realm)).value;
        (0, f.default)(a2 instanceof u.Value), a2 = a2.throwIfNotConcrete(), (0, f.default)(a2 instanceof u.NumberValue, "expected number value"), a2 = a2.value;
        var o2 = c.To.ToUint32(this.$Realm, "string" == typeof e3 ? new u.StringValue(this.$Realm, e3) : e3);
        if (o2 >= a2 && false === i2.writable) return false;
        var s2 = c.Properties.OrdinaryDefineOwnProperty(this.$Realm, n2, e3, r2);
        return false !== s2 && (o2 >= a2 && (i2.value = new u.NumberValue(this.$Realm, o2 + 1), s2 = c.Properties.OrdinaryDefineOwnProperty(this.$Realm, n2, "length", i2), (0, f.default)(s2, "expected length definition to succeed")), true);
      }
      return c.Properties.OrdinaryDefineOwnProperty(this.$Realm, n2, e3, r2);
    } }], [{ key: "createTemporalWithWidenedNumericProperty", value: function(e3, r2, n2, i2) {
      (0, f.default)(void 0 !== e3.generator);
      var a2 = e3.generator.deriveConcreteObject(function(t3) {
        return h(e3, t3, i2);
      }, r2, n2, { isPure: true });
      return (0, f.default)(a2 instanceof t2), a2;
    } }, { key: "isIntrinsicAndHasWidenedNumericProperty", value: function(e3) {
      if (e3 instanceof t2 && void 0 !== e3.intrinsicName) {
        var r2 = e3.unknownProperty;
        if (void 0 !== r2 && void 0 !== r2.descriptor) {
          var n2 = r2.descriptor.throwIfNotConcrete(e3.$Realm);
          return n2.value instanceof u.AbstractValue && "widened numeric property" === n2.value.kind;
        }
      }
      return false;
    } }]), t2;
  })();
  t.default = v;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2) {
    return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function o(e2, t2) {
    return (o = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function s(e2) {
    if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = r(7), c = r(2), f = r(6);
  var p = (function(e2) {
    function t2(e3, r2, i2, o2, l2) {
      var p2, d = !(arguments.length > 5 && void 0 !== arguments[5]) || arguments[5];
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (p2 = (function(e4, t3) {
        return !t3 || "object" !== n(t3) && "function" != typeof t3 ? s(e4) : t3;
      })(this, a(t2).call(this, e3, r2))).$ThisMode = "strict", p2.$HomeObject = void 0, p2.$FunctionKind = "normal", p2.$Call = function(e4, t3) {
        return c.Functions.$Call(p2.$Realm, s(s(p2)), e4, t3);
      }, d && (p2.$ConstructorKind = "base", p2.$Construct = function(e4, t3) {
        return c.Functions.$Construct(p2.$Realm, s(s(p2)), e4, t3);
      }), p2.$Environment = e3.$GlobalEnv, p2.callback = l2, p2.length = o2, p2.$DefineOwnProperty("length", new f.PropertyDescriptor({ value: new u.NumberValue(e3, o2), writable: false, configurable: true, enumerable: false })), void 0 !== i2 && "" !== i2 ? (i2 instanceof u.SymbolValue ? p2.name = i2.$Description ? "[".concat(i2.$Description.throwIfNotConcreteString().value, "]") : "[native]" : p2.name = i2, p2.$DefineOwnProperty("name", new f.PropertyDescriptor({ value: new u.StringValue(e3, p2.name), writable: false, configurable: true, enumerable: false }))) : p2.name = "native", p2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && o(e3, t3);
    })(t2, u.ECMAScriptFunctionValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "getTrackedPropertyNames", value: function() {
      return t2.trackedPropertyNames;
    } }, { key: "hasDefaultLength", value: function() {
      return this.getLength() === this.length;
    } }, { key: "getName", value: function() {
      return this.name;
    } }, { key: "callCallback", value: function(e3, t3, r2) {
      for (var n2 = t3.length, i2 = t3.slice(), a2 = 0; a2 < this.length; a2++) i2[a2] = t3[a2] || this.$Realm.intrinsics.undefined;
      return new l.ReturnCompletion(this.callback(e3, i2, n2, r2), this.$Realm.currentLocation);
    } }]), t2;
  })();
  t.default = p, (function(e2, t2, r2) {
    t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2;
  })(p, "trackedPropertyNames", u.ObjectValue.trackedPropertyNames.concat("$RevocableProxy"));
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var c = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).call(this, e3, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.FunctionValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "getName", value: function() {
      return "Bound";
    } }, { key: "hasDefaultLength", value: function() {
      var e3 = this.$BoundTargetFunction;
      if (!(e3 instanceof u.FunctionValue && e3.hasDefaultLength())) return false;
      var t3 = e3.getLength();
      return (0, l.default)(void 0 !== t3), this.getLength() === Math.max(t3 - this.$BoundArguments.length, 0);
    } }]), t2;
  })();
  t.default = c;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var f = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, o(t2).call(this, e3, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.ECMAScriptFunctionValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "initialize", value: function(e3, t3) {
      var r2 = t3;
      this.getHash(), void 0 === r2.uniqueOrderedTag && (r2.uniqueOrderedTag = this.$Realm.functionBodyUniqueTagSeed++), this.$ECMAScriptCode = t3, this.$FormalParameters = e3;
    } }, { key: "getName", value: function() {
      var e3 = this.$ECMAScriptCode.uniqueOrderedTag;
      return (0, c.default)(e3), this.__originalName ? this.__originalName : "function#".concat(e3);
    } }, { key: "hasDefaultLength", value: function() {
      for (var e3 = this.$FormalParameters, t3 = e3.length, r2 = 0; r2 < e3.length; r2++) {
        var n2 = e3[r2];
        if (l.isAssignmentPattern(n2) || l.isRestElement(n2)) {
          t3 = r2;
          break;
        }
      }
      return t3 === this.getLength();
    } }]), t2;
  })();
  t.default = f;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function a(e2) {
    return (a = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function o(e2, t2) {
    return (o = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var s = r(0), u = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), i(this, a(t2).call(this, e3, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && o(e3, t3);
    })(t2, s.FunctionValue), t2;
  })();
  t.default = u;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2, t2, r2) {
    return (o = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e3, t3, r3) {
      var n2 = (function(e4, t4) {
        for (; !Object.prototype.hasOwnProperty.call(e4, t4) && null !== (e4 = s(e4)); ) ;
        return e4;
      })(e3, t3);
      if (n2) {
        var i2 = Object.getOwnPropertyDescriptor(n2, t3);
        return i2.get ? i2.get.call(r3) : i2.value;
      }
    })(e2, t2, r2 || e2);
  }
  function s(e2) {
    return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function u(e2, t2) {
    return (u = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var l = r(0), c = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var f = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a(this, s(t2).call(this, e3, e3.intrinsics.FunctionPrototype, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && u(e3, t3);
    })(t2, l.ObjectValue), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "getName", value: function() {
      throw new Error("Abstract method");
    } }, { key: "getKind", value: function() {
      return "Function";
    } }, { key: "getLength", value: function() {
      var e3 = this.properties.get("length");
      (0, c.default)(e3);
      var t3 = e3.descriptor;
      (0, c.default)(t3);
      var r2 = t3.throwIfNotConcrete(this.$Realm).value;
      if (r2 instanceof l.NumberValue) return r2.value;
    } }, { key: "hasDefaultLength", value: function() {
      (0, c.default)(false, "abstract method; please override");
    } }, { key: "getDebugName", value: function() {
      return o(s(t2.prototype), "getDebugName", this).call(this) || this.getName();
    } }]), t2;
  })();
  t.default = f;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var i = (function() {
    function e2() {
      !(function(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "getCode", value: function() {
    } }, { key: "getScope", value: function() {
    } }, { key: "addHelper", value: function() {
      throw new Error("Helpers are not supported by the default hub.");
    } }, { key: "buildError", value: function(e3, t2) {
      return new (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : TypeError)(t2);
    } }]), e2;
  })();
  t.default = i;
}, function(e, t, r) {
  "use strict";
  var n = r(102), i = r(41), a = "[object Set]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(455), i = r(112), a = r(111), o = a && a.isSet, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = r(102), i = r(41), a = "[object Map]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(457), i = r(112), a = r(111), o = a && a.isMap, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = r(42), i = Object.create, a = /* @__PURE__ */ (function() {
    function e2() {
    }
    return function(t2) {
      if (!n(t2)) return {};
      if (i) return i(t2);
      e2.prototype = t2;
      var r2 = new e2();
      return e2.prototype = void 0, r2;
    };
  })();
  e.exports = a;
}, function(e, t, r) {
  "use strict";
  var n = r(459), i = r(150), a = r(110);
  e.exports = function(e2) {
    return "function" != typeof e2.constructor || a(e2) ? {} : n(i(e2));
  };
}, function(e, t, r) {
  "use strict";
  var n = r(101);
  e.exports = function(e2, t2) {
    var r2 = t2 ? n(e2.buffer) : e2.buffer;
    return new e2.constructor(r2, e2.byteOffset, e2.length);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(81), i = n ? n.prototype : void 0, a = i ? i.valueOf : void 0;
  e.exports = function(e2) {
    return a ? Object(a.call(e2)) : {};
  };
}, function(e, t, r) {
  "use strict";
  var n = /\w*$/;
  e.exports = function(e2) {
    var t2 = new e2.constructor(e2.source, n.exec(e2));
    return t2.lastIndex = e2.lastIndex, t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(101);
  e.exports = function(e2, t2) {
    var r2 = t2 ? n(e2.buffer) : e2.buffer;
    return new e2.constructor(r2, e2.byteOffset, e2.byteLength);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(27).Uint8Array;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(101), i = r(464), a = r(463), o = r(462), s = r(461), u = "[object Boolean]", l = "[object Date]", c = "[object Map]", f = "[object Number]", p = "[object RegExp]", d = "[object Set]", h = "[object String]", v = "[object Symbol]", y = "[object ArrayBuffer]", m = "[object DataView]", b = "[object Float32Array]", g = "[object Float64Array]", w = "[object Int8Array]", E = "[object Int16Array]", S = "[object Int32Array]", T = "[object Uint8Array]", A = "[object Uint8ClampedArray]", C = "[object Uint16Array]", P = "[object Uint32Array]";
  e.exports = function(e2, t2, r2) {
    var O = e2.constructor;
    switch (t2) {
      case y:
        return n(e2);
      case u:
      case l:
        return new O(+e2);
      case m:
        return i(e2, r2);
      case b:
      case g:
      case w:
      case E:
      case S:
      case T:
      case A:
      case C:
      case P:
        return s(e2, r2);
      case c:
        return new O();
      case f:
      case h:
        return new O(e2);
      case p:
        return a(e2);
      case d:
        return new O();
      case v:
        return o(e2);
    }
  };
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    var t2 = e2.length, r2 = new e2.constructor(t2);
    return t2 && "string" == typeof e2[0] && n.call(e2, "index") && (r2.index = e2.index, r2.input = e2.input), r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(40)(r(27), "WeakMap");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(40)(r(27), "Set");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(40)(r(27), "Promise");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(40)(r(27), "DataView");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(149), i = r(152), a = r(109);
  e.exports = function(e2) {
    return n(e2, a, i);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(149), i = r(103), a = r(80);
  e.exports = function(e2) {
    return n(e2, a, i);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(73), i = r(152);
  e.exports = function(e2, t2) {
    return n(e2, i(e2), t2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = null == e2 ? 0 : e2.length, i = 0, a = []; ++r2 < n; ) {
      var o = e2[r2];
      t2(o, r2, e2) && (a[i++] = o);
    }
    return a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(73), i = r(103);
  e.exports = function(e2, t2) {
    return n(e2, i(e2), t2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    var r2 = -1, n = e2.length;
    for (t2 || (t2 = Array(n)); ++r2 < n; ) t2[r2] = e2[r2];
    return t2;
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3) {
      return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var i = r(27), a = "object" == n(t) && t && !t.nodeType && t, o = a && "object" == n(e2) && e2 && !e2.nodeType && e2, s = o && o.exports === a ? i.Buffer : void 0, u = s ? s.allocUnsafe : void 0;
    e2.exports = function(e3, t2) {
      if (t2) return e3.slice();
      var r2 = e3.length, n2 = u ? u(r2) : new e3.constructor(r2);
      return e3.copy(n2), n2;
    };
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  var n = r(73), i = r(109);
  e.exports = function(e2, t2) {
    return e2 && n(t2, i(t2), e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(73), i = r(80);
  e.exports = function(e2, t2) {
    return e2 && n(t2, i(t2), e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = null == e2 ? 0 : e2.length; ++r2 < n && false !== t2(e2[r2], r2, e2); ) ;
    return e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(74);
  e.exports = function(e2, t2) {
    var r2 = n(this, e2), i = r2.size;
    return r2.set(e2, t2), this.size += r2.size == i ? 0 : 1, this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(74);
  e.exports = function(e2) {
    return n(this, e2).has(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(74);
  e.exports = function(e2) {
    return n(this, e2).get(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    var t2 = n(e2);
    return "string" == t2 || "number" == t2 || "symbol" == t2 || "boolean" == t2 ? "__proto__" !== e2 : null === e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(74);
  e.exports = function(e2) {
    var t2 = n(this, e2).delete(e2);
    return this.size -= t2 ? 1 : 0, t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(75), i = "__lodash_hash_undefined__";
  e.exports = function(e2, t2) {
    var r2 = this.__data__;
    return this.size += this.has(e2) ? 0 : 1, r2[e2] = n && void 0 === t2 ? i : t2, this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(75), i = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    var t2 = this.__data__;
    return n ? void 0 !== t2[e2] : i.call(t2, e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(75), i = "__lodash_hash_undefined__", a = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    var t2 = this.__data__;
    if (n) {
      var r2 = t2[e2];
      return r2 === i ? void 0 : r2;
    }
    return a.call(t2, e2) ? t2[e2] : void 0;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = this.has(e2) && delete this.__data__[e2];
    return this.size -= t2 ? 1 : 0, t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(75);
  e.exports = function() {
    this.__data__ = n ? n(null) : {}, this.size = 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(491), i = r(490), a = r(489), o = r(488), s = r(487);
  function u(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e2[t2];
      this.set(n2[0], n2[1]);
    }
  }
  u.prototype.clear = n, u.prototype.delete = i, u.prototype.get = a, u.prototype.has = o, u.prototype.set = s, e.exports = u;
}, function(e, t, r) {
  "use strict";
  var n = r(492), i = r(77), a = r(104);
  e.exports = function() {
    this.size = 0, this.__data__ = { hash: new n(), map: new (a || i)(), string: new n() };
  };
}, function(e, t, r) {
  "use strict";
  var n = r(493), i = r(486), a = r(484), o = r(483), s = r(482);
  function u(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e2[t2];
      this.set(n2[0], n2[1]);
    }
  }
  u.prototype.clear = n, u.prototype.delete = i, u.prototype.get = a, u.prototype.has = o, u.prototype.set = s, e.exports = u;
}, function(e, t, r) {
  "use strict";
  var n = r(77), i = r(104), a = r(494), o = 200;
  e.exports = function(e2, t2) {
    var r2 = this.__data__;
    if (r2 instanceof n) {
      var s = r2.__data__;
      if (!i || s.length < o - 1) return s.push([e2, t2]), this.size = ++r2.size, this;
      r2 = this.__data__ = new a(s);
    }
    return r2.set(e2, t2), this.size = r2.size, this;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return this.__data__.has(e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return this.__data__.get(e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = this.__data__, r2 = t2.delete(e2);
    return this.size = t2.size, r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(77);
  e.exports = function() {
    this.__data__ = new n(), this.size = 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(76);
  e.exports = function(e2, t2) {
    var r2 = this.__data__, i = n(r2, e2);
    return i < 0 ? (++this.size, r2.push([e2, t2])) : r2[i][1] = t2, this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(76);
  e.exports = function(e2) {
    return n(this.__data__, e2) > -1;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(76);
  e.exports = function(e2) {
    var t2 = this.__data__, r2 = n(t2, e2);
    return r2 < 0 ? void 0 : t2[r2][1];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(76), i = Array.prototype.splice;
  e.exports = function(e2) {
    var t2 = this.__data__, r2 = n(t2, e2);
    return !(r2 < 0 || (r2 == t2.length - 1 ? t2.pop() : i.call(t2, r2, 1), --this.size, 0));
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
    this.__data__ = [], this.size = 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(77), i = r(499), a = r(498), o = r(497), s = r(496), u = r(495);
  function l(e2) {
    var t2 = this.__data__ = new n(e2);
    this.size = t2.size;
  }
  l.prototype.clear = i, l.prototype.delete = a, l.prototype.get = o, l.prototype.has = s, l.prototype.set = u, e.exports = l;
}, function(e, t, r) {
  "use strict";
  var n = r(505), i = r(481), a = r(155), o = r(480), s = r(479), u = r(478), l = r(477), c = r(476), f = r(474), p = r(473), d = r(472), h = r(102), v = r(467), y = r(466), m = r(460), b = r(61), g = r(172), w = r(458), E = r(42), S = r(456), T = r(80), A = 1, C = 2, P = 4, O = "[object Arguments]", x = "[object Function]", _ = "[object GeneratorFunction]", V = "[object Object]", D = {};
  D[O] = D["[object Array]"] = D["[object ArrayBuffer]"] = D["[object DataView]"] = D["[object Boolean]"] = D["[object Date]"] = D["[object Float32Array]"] = D["[object Float64Array]"] = D["[object Int8Array]"] = D["[object Int16Array]"] = D["[object Int32Array]"] = D["[object Map]"] = D["[object Number]"] = D[V] = D["[object RegExp]"] = D["[object Set]"] = D["[object String]"] = D["[object Symbol]"] = D["[object Uint8Array]"] = D["[object Uint8ClampedArray]"] = D["[object Uint16Array]"] = D["[object Uint32Array]"] = true, D["[object Error]"] = D[x] = D["[object WeakMap]"] = false, e.exports = function e2(t2, r2, N, I, k, j) {
    var F, R = r2 & A, M = r2 & C, B = r2 & P;
    if (N && (F = k ? N(t2, I, k, j) : N(t2)), void 0 !== F) return F;
    if (!E(t2)) return t2;
    var L = b(t2);
    if (L) {
      if (F = v(t2), !R) return l(t2, F);
    } else {
      var $ = h(t2), G = $ == x || $ == _;
      if (g(t2)) return u(t2, R);
      if ($ == V || $ == O || G && !k) {
        if (F = M || G ? {} : m(t2), !R) return M ? f(t2, s(F, t2)) : c(t2, o(F, t2));
      } else {
        if (!D[$]) return k ? t2 : {};
        F = y(t2, $, R);
      }
    }
    j || (j = new n());
    var z = j.get(t2);
    if (z) return z;
    if (j.set(t2, F), S(t2)) return t2.forEach(function(n2) {
      F.add(e2(n2, r2, N, n2, t2, j));
    }), F;
    if (w(t2)) return t2.forEach(function(n2, i2) {
      F.set(i2, e2(n2, r2, N, i2, t2, j));
    }), F;
    var U = B ? M ? d : p : M ? keysIn : T, W = L ? void 0 : U(t2);
    return i(W || t2, function(n2, i2) {
      W && (n2 = t2[i2 = n2]), a(F, i2, e2(n2, r2, N, i2, t2, j));
    }), F;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(506), i = 4;
  e.exports = function(e2) {
    return n(e2, i);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.explode = u, t.verify = l, t.merge = function(e2) {
    for (var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], r2 = arguments.length > 2 ? arguments[2] : void 0, n2 = {}, i2 = 0; i2 < e2.length; i2++) {
      var a2 = e2[i2], o2 = t2[i2];
      for (var s2 in u(a2), a2) {
        var l2 = a2[s2];
        (o2 || r2) && (l2 = f(l2, o2, r2));
        var c2 = n2[s2] = n2[s2] || {};
        v(c2, l2);
      }
    }
    return n2;
  };
  var i = s(r(181));
  function a() {
    var e2 = s(r(5));
    return a = function() {
      return e2;
    }, e2;
  }
  function o() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(507));
    return o = function() {
      return e2;
    }, e2;
  }
  function s(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  function u(e2) {
    if (e2._exploded) return e2;
    for (var t2 in e2._exploded = true, e2) if (!h(t2)) {
      var r2 = t2.split("|");
      if (1 !== r2.length) {
        var n2 = e2[t2];
        delete e2[t2];
        var s2 = true, u2 = false, c2 = void 0;
        try {
          for (var f2, y = r2[Symbol.iterator](); !(s2 = (f2 = y.next()).done); s2 = true) {
            e2[f2.value] = n2;
          }
        } catch (e3) {
          u2 = true, c2 = e3;
        } finally {
          try {
            s2 || null == y.return || y.return();
          } finally {
            if (u2) throw c2;
          }
        }
      }
    }
    l(e2), delete e2.__esModule, (function(e3) {
      for (var t3 in e3) if (!h(t3)) {
        var r3 = e3[t3];
        "function" == typeof r3 && (e3[t3] = { enter: r3 });
      }
    })(e2), p(e2);
    for (var m = Object.keys(e2), b = 0; b < m.length; b++) {
      var g = m[b];
      if (!h(g)) {
        var w = i[g];
        if (w) {
          var E = e2[g];
          for (var S in E) E[S] = d(w, E[S]);
          if (delete e2[g], w.types) {
            var T = true, A = false, C = void 0;
            try {
              for (var P, O = w.types[Symbol.iterator](); !(T = (P = O.next()).done); T = true) {
                var x = P.value;
                e2[x] ? v(e2[x], E) : e2[x] = E;
              }
            } catch (e3) {
              A = true, C = e3;
            } finally {
              try {
                T || null == O.return || O.return();
              } finally {
                if (A) throw C;
              }
            }
          } else v(e2, E);
        }
      }
    }
    for (var _ in e2) if (!h(_)) {
      var V = e2[_], D = a().FLIPPED_ALIAS_KEYS[_], N = a().DEPRECATED_KEYS[_];
      if (N && (console.trace("Visitor defined for ".concat(_, " but it has been renamed to ").concat(N)), D = [N]), D) {
        delete e2[_];
        var I = true, k = false, j = void 0;
        try {
          for (var F, R = D[Symbol.iterator](); !(I = (F = R.next()).done); I = true) {
            var M = F.value, B = e2[M];
            B ? v(B, V) : e2[M] = (0, o().default)(V);
          }
        } catch (e3) {
          k = true, j = e3;
        } finally {
          try {
            I || null == R.return || R.return();
          } finally {
            if (k) throw j;
          }
        }
      }
    }
    for (var L in e2) h(L) || p(e2[L]);
    return e2;
  }
  function l(e2) {
    if (!e2._verified) {
      if ("function" == typeof e2) throw new Error("You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?");
      for (var t2 in e2) if ("enter" !== t2 && "exit" !== t2 || c(t2, e2[t2]), !h(t2)) {
        if (a().TYPES.indexOf(t2) < 0) throw new Error("You gave us a visitor for the node type ".concat(t2, " but it's not a valid type"));
        var r2 = e2[t2];
        if ("object" === n(r2)) for (var i2 in r2) {
          if ("enter" !== i2 && "exit" !== i2) throw new Error("You passed `traverse()` a visitor object with the property " + "".concat(t2, " that has the invalid property ").concat(i2));
          c("".concat(t2, ".").concat(i2), r2[i2]);
        }
      }
      e2._verified = true;
    }
  }
  function c(e2, t2) {
    var r2 = [].concat(t2), i2 = true, a2 = false, o2 = void 0;
    try {
      for (var s2, u2 = r2[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
        var l2 = s2.value;
        if ("function" != typeof l2) throw new TypeError("Non-function found defined in ".concat(e2, " with type ").concat(n(l2)));
      }
    } catch (e3) {
      a2 = true, o2 = e3;
    } finally {
      try {
        i2 || null == u2.return || u2.return();
      } finally {
        if (a2) throw o2;
      }
    }
  }
  function f(e2, t2, r2) {
    var n2 = {}, i2 = function(i3) {
      var a3 = e2[i3];
      if (!Array.isArray(a3)) return "continue";
      a3 = a3.map(function(e3) {
        var n3 = e3;
        return t2 && (n3 = function(r3) {
          return e3.call(t2, r3, t2);
        }), r2 && (n3 = r2(t2.key, i3, n3)), n3;
      }), n2[i3] = a3;
    };
    for (var a2 in e2) i2(a2);
    return n2;
  }
  function p(e2) {
    e2.enter && !Array.isArray(e2.enter) && (e2.enter = [e2.enter]), e2.exit && !Array.isArray(e2.exit) && (e2.exit = [e2.exit]);
  }
  function d(e2, t2) {
    var r2 = function(r3) {
      if (e2.checkPath(r3)) return t2.apply(this, arguments);
    };
    return r2.toString = function() {
      return t2.toString();
    }, r2;
  }
  function h(e2) {
    return "_" === e2[0] || ("enter" === e2 || "exit" === e2 || "shouldSkip" === e2 || ("blacklist" === e2 || "noScope" === e2 || "skipKeys" === e2));
  }
  function v(e2, t2) {
    for (var r2 in t2) e2[r2] = [].concat(e2[r2] || [], t2[r2]);
  }
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.shareCommentsWithSiblings = function() {
    if ("string" == typeof this.key) return;
    var e2 = this.node;
    if (!e2) return;
    var t2 = e2.trailingComments, r2 = e2.leadingComments;
    if (!t2 && !r2) return;
    var n2 = this.getSibling(this.key - 1), i = this.getSibling(this.key + 1), a = Boolean(n2.node), o = Boolean(i.node);
    a && o || (a ? n2.addComments("trailing", t2) : o && i.addComments("leading", r2));
  }, t.addComment = function(e2, t2, r2) {
    n().addComment(this.node, e2, t2, r2);
  }, t.addComments = function(e2, t2) {
    n().addComments(this.node, e2, t2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.getOpposite = function() {
    if ("left" === this.key) return this.getSibling("right");
    if ("right" === this.key) return this.getSibling("left");
  }, t.getCompletionRecords = function() {
    var e2 = [];
    if (this.isIfStatement()) e2 = a(this.get("consequent"), e2), e2 = a(this.get("alternate"), e2);
    else if (this.isDoExpression() || this.isFor() || this.isWhile()) e2 = a(this.get("body"), e2);
    else if (this.isProgram() || this.isBlockStatement()) e2 = a(this.get("body").pop(), e2);
    else {
      if (this.isFunction()) return this.get("body").getCompletionRecords();
      this.isTryStatement() ? (e2 = a(this.get("block"), e2), e2 = a(this.get("handler"), e2), e2 = a(this.get("finalizer"), e2)) : this.isCatchClause() ? e2 = a(this.get("body"), e2) : e2.push(this);
    }
    return e2;
  }, t.getSibling = function(e2) {
    return n.default.get({ parentPath: this.parentPath, parent: this.parent, container: this.container, listKey: this.listKey, key: e2 });
  }, t.getPrevSibling = function() {
    return this.getSibling(this.key - 1);
  }, t.getNextSibling = function() {
    return this.getSibling(this.key + 1);
  }, t.getAllNextSiblings = function() {
    var e2 = this.key, t2 = this.getSibling(++e2), r2 = [];
    for (; t2.node; ) r2.push(t2), t2 = this.getSibling(++e2);
    return r2;
  }, t.getAllPrevSiblings = function() {
    var e2 = this.key, t2 = this.getSibling(--e2), r2 = [];
    for (; t2.node; ) r2.push(t2), t2 = this.getSibling(--e2);
    return r2;
  }, t.get = function(e2, t2) {
    true === t2 && (t2 = this.context);
    var r2 = e2.split(".");
    return 1 === r2.length ? this._getKey(e2, t2) : this._getPattern(r2, t2);
  }, t._getKey = function(e2, t2) {
    var r2 = this, i2 = this.node, a2 = i2[e2];
    return Array.isArray(a2) ? a2.map(function(o, s) {
      return n.default.get({ listKey: e2, parentPath: r2, parent: i2, container: a2, key: s }).setContext(t2);
    }) : n.default.get({ parentPath: this, parent: i2, container: i2, key: e2 }).setContext(t2);
  }, t._getPattern = function(e2, t2) {
    var r2 = this, n2 = true, i2 = false, a2 = void 0;
    try {
      for (var o, s = e2[Symbol.iterator](); !(n2 = (o = s.next()).done); n2 = true) {
        var u = o.value;
        r2 = "." === u ? r2.parentPath : Array.isArray(r2) ? r2[u] : r2.get(u, t2);
      }
    } catch (e3) {
      i2 = true, a2 = e3;
    } finally {
      try {
        n2 || null == s.return || s.return();
      } finally {
        if (i2) throw a2;
      }
    }
    return r2;
  }, t.getBindingIdentifiers = function(e2) {
    return i().getBindingIdentifiers(this.node, e2);
  }, t.getOuterBindingIdentifiers = function(e2) {
    return i().getOuterBindingIdentifiers(this.node, e2);
  }, t.getBindingIdentifierPaths = function() {
    var e2 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r2 = [].concat(this), n2 = /* @__PURE__ */ Object.create(null);
    for (; r2.length; ) {
      var a2 = r2.shift();
      if (a2 && a2.node) {
        var o = i().getBindingIdentifiers.keys[a2.node.type];
        if (a2.isIdentifier()) if (e2) {
          var s = n2[a2.node.name] = n2[a2.node.name] || [];
          s.push(a2);
        } else n2[a2.node.name] = a2;
        else if (a2.isExportDeclaration()) {
          var u = a2.get("declaration");
          u.isDeclaration() && r2.push(u);
        } else {
          if (t2) {
            if (a2.isFunctionDeclaration()) {
              r2.push(a2.get("id"));
              continue;
            }
            if (a2.isFunctionExpression()) continue;
          }
          if (o) for (var l = 0; l < o.length; l++) {
            var c = o[l], f = a2.get(c);
            (Array.isArray(f) || f.node) && (r2 = r2.concat(f));
          }
        }
      }
    }
    return n2;
  }, t.getOuterBindingIdentifierPaths = function(e2) {
    return this.getBindingIdentifierPaths(e2, true);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(52));
  function i() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return i = function() {
      return e2;
    }, e2;
  }
  function a(e2, t2) {
    return e2 ? t2.concat(e2.getCompletionRecords()) : t2;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return a = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var o = { ReferencedIdentifier: function(e2, t2) {
    if (!e2.isJSXIdentifier() || !a().react.isCompatTag(e2.node.name) || e2.parentPath.isJSXMemberExpression()) {
      if ("this" === e2.node.name) {
        var r2 = e2.scope;
        do {
          if (r2.path.isFunction() && !r2.path.isArrowFunctionExpression()) break;
        } while (r2 = r2.parent);
        r2 && t2.breakOnScopePaths.push(r2.path);
      }
      var n2 = e2.scope.getBinding(e2.node.name);
      n2 && n2 === t2.scope.getBinding(e2.node.name) && (t2.bindings[e2.node.name] = n2);
    }
  } }, s = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.breakOnScopePaths = [], this.bindings = {}, this.scopes = [], this.scope = r2, this.path = t2, this.attachAfter = false;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "isCompatibleScope", value: function(e3) {
      for (var t2 in this.bindings) {
        var r2 = this.bindings[t2];
        if (!e3.bindingIdentifierEquals(t2, r2.identifier)) return false;
      }
      return true;
    } }, { key: "getCompatibleScopes", value: function() {
      var e3 = this.path.scope;
      do {
        if (!this.isCompatibleScope(e3)) break;
        if (this.scopes.push(e3), this.breakOnScopePaths.indexOf(e3.path) >= 0) break;
      } while (e3 = e3.parent);
    } }, { key: "getAttachmentPath", value: function() {
      var e3 = this._getAttachmentPath();
      if (e3) {
        var t2 = e3.scope;
        if (t2.path === e3 && (t2 = e3.scope.parent), t2.path.isProgram() || t2.path.isFunction()) {
          for (var r2 in this.bindings) if (t2.hasOwnBinding(r2)) {
            var n2 = this.bindings[r2];
            if ("param" !== n2.kind && "params" !== n2.path.parentKey) {
              if (this.getAttachmentParentForPath(n2.path).key >= e3.key) {
                this.attachAfter = true, e3 = n2.path;
                var i2 = true, a2 = false, o2 = void 0;
                try {
                  for (var s2, u = n2.constantViolations[Symbol.iterator](); !(i2 = (s2 = u.next()).done); i2 = true) {
                    var l = s2.value;
                    this.getAttachmentParentForPath(l).key > e3.key && (e3 = l);
                  }
                } catch (e4) {
                  a2 = true, o2 = e4;
                } finally {
                  try {
                    i2 || null == u.return || u.return();
                  } finally {
                    if (a2) throw o2;
                  }
                }
              }
            }
          }
        }
        return e3;
      }
    } }, { key: "_getAttachmentPath", value: function() {
      var e3 = this.scopes.pop();
      if (e3) {
        if (e3.path.isFunction()) {
          if (!this.hasOwnParamBindings(e3)) return this.getNextScopeAttachmentParent();
          if (this.scope === e3) return;
          for (var t2 = e3.path.get("body").get("body"), r2 = 0; r2 < t2.length; r2++) if (!t2[r2].node._blockHoist) return t2[r2];
        } else if (e3.path.isProgram()) return this.getNextScopeAttachmentParent();
      }
    } }, { key: "getNextScopeAttachmentParent", value: function() {
      var e3 = this.scopes.pop();
      if (e3) return this.getAttachmentParentForPath(e3.path);
    } }, { key: "getAttachmentParentForPath", value: function(e3) {
      do {
        if (!e3.parentPath || Array.isArray(e3.container) && e3.isStatement()) return e3;
      } while (e3 = e3.parentPath);
    } }, { key: "hasOwnParamBindings", value: function(e3) {
      for (var t2 in this.bindings) if (e3.hasOwnBinding(t2)) {
        var r2 = this.bindings[t2];
        if ("param" === r2.kind && r2.constant) return true;
      }
      return false;
    } }, { key: "run", value: function() {
      this.path.traverse(o, this), this.getCompatibleScopes();
      var e3 = this.getAttachmentPath();
      if (e3 && e3.getFunctionParent() !== this.path.getFunctionParent()) {
        var t2 = e3.scope.generateUidIdentifier("ref"), r2 = a().variableDeclarator(t2, this.path.node), i2 = n(e3[this.attachAfter ? "insertAfter" : "insertBefore"]([e3.isVariableDeclarator() ? r2 : a().variableDeclaration("var", [r2])]), 1)[0], s2 = this.path.parentPath;
        return s2.isJSXElement() && this.path.container === s2.node.children && (t2 = a().JSXExpressionContainer(t2)), this.path.replaceWith(a().cloneNode(t2)), e3.isVariableDeclarator() ? i2.get("init") : i2.get("declarations.0.init");
      }
    } }]), e2;
  })();
  t.default = s;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.insertBefore = function(e2) {
    this._assertUnremoved(), e2 = this._verifyNodeList(e2);
    var t2 = this.parentPath;
    if (t2.isExpressionStatement() || t2.isLabeledStatement() || t2.isExportNamedDeclaration() || t2.isExportDefaultDeclaration() && this.isDeclaration()) return t2.insertBefore(e2);
    if (this.isNodeType("Expression") && "params" !== this.listKey && "arguments" !== this.listKey || t2.isForStatement() && "init" === this.key) return this.node && e2.push(this.node), this.replaceExpressionWithStatements(e2);
    if (Array.isArray(this.container)) return this._containerInsertBefore(e2);
    if (this.isStatementOrBlock()) {
      var r2 = this.node && (!this.isExpressionStatement() || null != this.node.expression);
      return this.replaceWith(u().blockStatement(r2 ? [this.node] : [])), this.unshiftContainer("body", e2);
    }
    throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
  }, t._containerInsert = function(e2, t2) {
    var r2;
    this.updateSiblingKeys(e2, t2.length);
    var n2 = [];
    (r2 = this.container).splice.apply(r2, [e2, 0].concat(i(t2)));
    for (var a2 = 0; a2 < t2.length; a2++) {
      var o2 = e2 + a2, s2 = this.getSibling(o2);
      n2.push(s2), this.context && this.context.queue && s2.pushContext(this.context);
    }
    for (var u2 = this._getQueueContexts(), l2 = 0; l2 < n2.length; l2++) {
      var c = n2[l2];
      c.setScope(), c.debug("Inserted.");
      var f = true, p = false, d = void 0;
      try {
        for (var h, v = u2[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
          var y = h.value;
          y.maybeQueue(c, true);
        }
      } catch (e3) {
        p = true, d = e3;
      } finally {
        try {
          f || null == v.return || v.return();
        } finally {
          if (p) throw d;
        }
      }
    }
    return n2;
  }, t._containerInsertBefore = function(e2) {
    return this._containerInsert(this.key, e2);
  }, t._containerInsertAfter = function(e2) {
    return this._containerInsert(this.key + 1, e2);
  }, t.insertAfter = function(e2) {
    this._assertUnremoved(), e2 = this._verifyNodeList(e2);
    var t2 = this.parentPath;
    if (t2.isExpressionStatement() || t2.isLabeledStatement() || t2.isExportNamedDeclaration() || t2.isExportDefaultDeclaration() && this.isDeclaration()) return t2.insertAfter(e2);
    if (this.isNodeType("Expression") || t2.isForStatement() && "init" === this.key) {
      if (this.node) {
        var r2 = this.scope;
        t2.isMethod({ computed: true, key: this.node }) && (r2 = r2.parent);
        var n2 = r2.generateDeclaredUidIdentifier();
        e2.unshift(u().expressionStatement(u().assignmentExpression("=", u().cloneNode(n2), this.node))), e2.push(u().expressionStatement(u().cloneNode(n2)));
      }
      return this.replaceExpressionWithStatements(e2);
    }
    if (Array.isArray(this.container)) return this._containerInsertAfter(e2);
    if (this.isStatementOrBlock()) {
      var i2 = this.node && (!this.isExpressionStatement() || null != this.node.expression);
      return this.replaceWith(u().blockStatement(i2 ? [this.node] : [])), this.pushContainer("body", e2);
    }
    throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
  }, t.updateSiblingKeys = function(e2, t2) {
    if (!this.parent) return;
    for (var r2 = a.path.get(this.parent), n2 = 0; n2 < r2.length; n2++) {
      var i2 = r2[n2];
      i2.key >= e2 && (i2.key += t2);
    }
  }, t._verifyNodeList = function(e2) {
    if (!e2) return [];
    e2.constructor !== Array && (e2 = [e2]);
    for (var t2 = 0; t2 < e2.length; t2++) {
      var r2 = e2[t2], i2 = void 0;
      if (r2 ? "object" !== n(r2) ? i2 = "contains a non-object node" : r2.type ? r2 instanceof s.default && (i2 = "has a NodePath when it expected a raw object") : i2 = "without a type" : i2 = "has falsy node", i2) {
        var a2 = Array.isArray(r2) ? "array" : n(r2);
        throw new Error("Node list ".concat(i2, " with the index of ").concat(t2, " and type of ").concat(a2));
      }
    }
    return e2;
  }, t.unshiftContainer = function(e2, t2) {
    return this._assertUnremoved(), t2 = this._verifyNodeList(t2), s.default.get({ parentPath: this, parent: this.node, container: this.node[e2], listKey: e2, key: 0 }).insertBefore(t2);
  }, t.pushContainer = function(e2, t2) {
    this._assertUnremoved(), t2 = this._verifyNodeList(t2);
    var r2 = this.node[e2];
    return s.default.get({ parentPath: this, parent: this.node, container: r2, listKey: e2, key: r2.length }).replaceWithMultiple(t2);
  }, t.hoist = function() {
    var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.scope;
    return new o.default(this, e2).run();
  };
  var a = r(78), o = l(r(511)), s = l(r(52));
  function u() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return u = function() {
      return e2;
    }, e2;
  }
  function l(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.hooks = void 0;
  t.hooks = [function(e2, t2) {
    if ("test" === e2.key && (t2.isWhile() || t2.isSwitchCase()) || "declaration" === e2.key && t2.isExportDeclaration() || "body" === e2.key && t2.isLabeledStatement() || "declarations" === e2.listKey && t2.isVariableDeclaration() && 1 === t2.node.declarations.length || "expression" === e2.key && t2.isExpressionStatement()) return t2.remove(), true;
  }, function(e2, t2) {
    if (t2.isSequenceExpression() && 1 === t2.node.expressions.length) return t2.replaceWith(t2.node.expressions[0]), true;
  }, function(e2, t2) {
    if (t2.isBinary()) return "left" === e2.key ? t2.replaceWith(t2.node.right) : t2.replaceWith(t2.node.left), true;
  }, function(e2, t2) {
    if (t2.isIfStatement() && ("consequent" === e2.key || "alternate" === e2.key) || "body" === e2.key && (t2.isLoop() || t2.isArrowFunctionExpression())) return e2.replaceWith({ type: "BlockStatement", body: [] }), true;
  }];
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.remove = function() {
    if (this._assertUnremoved(), this.resync(), this._removeFromScope(), this._callRemovalHooks()) return void this._markRemoved();
    this.shareCommentsWithSiblings(), this._remove(), this._markRemoved();
  }, t._removeFromScope = function() {
    var e2 = this, t2 = this.getBindingIdentifiers();
    Object.keys(t2).forEach(function(t3) {
      return e2.scope.removeBinding(t3);
    });
  }, t._callRemovalHooks = function() {
    var e2 = true, t2 = false, r2 = void 0;
    try {
      for (var i, a = n.hooks[Symbol.iterator](); !(e2 = (i = a.next()).done); e2 = true) {
        var o = i.value;
        if (o(this, this.parentPath)) return true;
      }
    } catch (e3) {
      t2 = true, r2 = e3;
    } finally {
      try {
        e2 || null == a.return || a.return();
      } finally {
        if (t2) throw r2;
      }
    }
  }, t._remove = function() {
    Array.isArray(this.container) ? (this.container.splice(this.key, 1), this.updateSiblingKeys(this.key, -1)) : this._replaceWith(null);
  }, t._markRemoved = function() {
    this.shouldSkip = true, this.removed = true, this.node = null;
  }, t._assertUnremoved = function() {
    if (this.removed) throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
  };
  var n = r(513);
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.call = function(e2) {
    var t2 = this.opts;
    if (this.debug(e2), this.node && this._call(t2[e2])) return true;
    if (this.node) return this._call(t2[this.node.type] && t2[this.node.type][e2]);
    return false;
  }, t._call = function(e2) {
    if (!e2) return false;
    var t2 = true, r2 = false, i2 = void 0;
    try {
      for (var a, o = e2[Symbol.iterator](); !(t2 = (a = o.next()).done); t2 = true) {
        var s = a.value;
        if (s) {
          var u = this.node;
          if (!u) return true;
          var l = s.call(this.state, this, this.state);
          if (l && "object" === n(l) && "function" == typeof l.then) throw new Error("You appear to be using a plugin with an async traversal visitor, which your current version of Babel does not support.If you're using a published plugin, you may need to upgrade your @babel/core version.");
          if (l) throw new Error("Unexpected return value from visitor method ".concat(s));
          if (this.node !== u) return true;
          if (this.shouldStop || this.shouldSkip || this.removed) return true;
        }
      }
    } catch (e3) {
      r2 = true, i2 = e3;
    } finally {
      try {
        t2 || null == o.return || o.return();
      } finally {
        if (r2) throw i2;
      }
    }
    return false;
  }, t.isBlacklisted = function() {
    var e2 = this.opts.blacklist;
    return e2 && e2.indexOf(this.node.type) > -1;
  }, t.visit = function() {
    if (!this.node) return false;
    if (this.isBlacklisted()) return false;
    if (this.opts.shouldSkip && this.opts.shouldSkip(this)) return false;
    if (this.call("enter") || this.shouldSkip) return this.debug("Skip..."), this.shouldStop;
    return this.debug("Recursing into..."), i.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys), this.call("exit"), this.shouldStop;
  }, t.skip = function() {
    this.shouldSkip = true;
  }, t.skipKey = function(e2) {
    this.skipKeys[e2] = true;
  }, t.stop = function() {
    this.shouldStop = true, this.shouldSkip = true;
  }, t.setScope = function() {
    if (this.opts && this.opts.noScope) return;
    var e2, t2 = this.parentPath;
    for (; t2 && !e2; ) {
      if (t2.opts && t2.opts.noScope) return;
      e2 = t2.scope, t2 = t2.parentPath;
    }
    this.scope = this.getScope(e2), this.scope && this.scope.init();
  }, t.setContext = function(e2) {
    this.shouldSkip = false, this.shouldStop = false, this.removed = false, this.skipKeys = {}, e2 && (this.context = e2, this.state = e2.state, this.opts = e2.opts);
    return this.setScope(), this;
  }, t.resync = function() {
    if (this.removed) return;
    this._resyncParent(), this._resyncList(), this._resyncKey();
  }, t._resyncParent = function() {
    this.parentPath && (this.parent = this.parentPath.node);
  }, t._resyncKey = function() {
    if (!this.container) return;
    if (this.node === this.container[this.key]) return;
    if (Array.isArray(this.container)) {
      for (var e2 = 0; e2 < this.container.length; e2++) if (this.container[e2] === this.node) return this.setKey(e2);
    } else for (var t2 in this.container) if (this.container[t2] === this.node) return this.setKey(t2);
    this.key = null;
  }, t._resyncList = function() {
    if (!this.parent || !this.inList) return;
    var e2 = this.parent[this.listKey];
    if (this.container === e2) return;
    this.container = e2 || null;
  }, t._resyncRemoved = function() {
    null != this.key && this.container && this.container[this.key] === this.node || this._markRemoved();
  }, t.popContext = function() {
    this.contexts.pop(), this.contexts.length > 0 ? this.setContext(this.contexts[this.contexts.length - 1]) : this.setContext(void 0);
  }, t.pushContext = function(e2) {
    this.contexts.push(e2), this.setContext(e2);
  }, t.setup = function(e2, t2, r2, n2) {
    this.inList = !!r2, this.listKey = r2, this.parentKey = r2 || n2, this.container = t2, this.parentPath = e2 || this.parentPath, this.setKey(n2);
  }, t.setKey = function(e2) {
    this.key = e2, this.node = this.container[this.key], this.type = this.node && this.node.type;
  }, t.requeue = function() {
    var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this;
    if (e2.removed) return;
    var t2 = this.contexts, r2 = true, n2 = false, i2 = void 0;
    try {
      for (var a, o = t2[Symbol.iterator](); !(r2 = (a = o.next()).done); r2 = true) {
        var s = a.value;
        s.maybeQueue(e2);
      }
    } catch (e3) {
      n2 = true, i2 = e3;
    } finally {
      try {
        r2 || null == o.return || o.return();
      } finally {
        if (n2) throw i2;
      }
    }
  }, t._getQueueContexts = function() {
    var e2 = this, t2 = this.contexts;
    for (; !t2.length && (e2 = e2.parentPath); ) t2 = e2.contexts;
    return t2;
  };
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(28));
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(113));
    return n = function() {
      return e2;
    }, e2;
  }
  function i() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return i = function() {
      return e2;
    }, e2;
  }
  function a(e2) {
    var t2 = this.node && this.node[e2];
    return t2 && Array.isArray(t2) ? !!t2.length : !!t2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.matchesPattern = function(e2, t2) {
    return i().matchesPattern(this.node, e2, t2);
  }, t.has = a, t.isStatic = function() {
    return this.scope.isStatic(this.node);
  }, t.isnt = function(e2) {
    return !this.has(e2);
  }, t.equals = function(e2, t2) {
    return this.node[e2] === t2;
  }, t.isNodeType = function(e2) {
    return i().isType(this.type, e2);
  }, t.canHaveVariableDeclarationOrExpression = function() {
    return ("init" === this.key || "left" === this.key) && this.parentPath.isFor();
  }, t.canSwapBetweenExpressionAndStatement = function(e2) {
    if ("body" !== this.key || !this.parentPath.isArrowFunctionExpression()) return false;
    if (this.isExpression()) return i().isBlockStatement(e2);
    if (this.isBlockStatement()) return i().isExpression(e2);
    return false;
  }, t.isCompletionRecord = function(e2) {
    var t2 = this, r2 = true;
    do {
      var n2 = t2.container;
      if (t2.isFunction() && !r2) return !!e2;
      if (r2 = false, Array.isArray(n2) && t2.key !== n2.length - 1) return false;
    } while ((t2 = t2.parentPath) && !t2.isProgram());
    return true;
  }, t.isStatementOrBlock = function() {
    return !this.parentPath.isLabeledStatement() && !i().isBlockStatement(this.container) && (0, n().default)(i().STATEMENT_OR_BLOCK_KEYS, this.key);
  }, t.referencesImport = function(e2, t2) {
    if (!this.isReferencedIdentifier()) return false;
    var r2 = this.scope.getBinding(this.node.name);
    if (!r2 || "module" !== r2.kind) return false;
    var n2 = r2.path, i2 = n2.parentPath;
    if (!i2.isImportDeclaration()) return false;
    if (i2.node.source.value !== e2) return false;
    if (!t2) return true;
    if (n2.isImportDefaultSpecifier() && "default" === t2) return true;
    if (n2.isImportNamespaceSpecifier() && "*" === t2) return true;
    if (n2.isImportSpecifier() && n2.node.imported.name === t2) return true;
    return false;
  }, t.getSource = function() {
    var e2 = this.node;
    if (e2.end) {
      var t2 = this.hub.getCode();
      if (t2) return t2.slice(e2.start, e2.end);
    }
    return "";
  }, t.willIMaybeExecuteBefore = function(e2) {
    return "after" !== this._guessExecutionStatusRelativeTo(e2);
  }, t._guessExecutionStatusRelativeTo = function(e2) {
    var t2 = e2.scope.getFunctionParent() || e2.scope.getProgramParent(), r2 = this.scope.getFunctionParent() || e2.scope.getProgramParent();
    if (t2.node !== r2.node) {
      var n2 = this._guessExecutionStatusRelativeToDifferentFunctions(t2);
      if (n2) return n2;
      e2 = t2.path;
    }
    var a2 = e2.getAncestry();
    if (a2.indexOf(this) >= 0) return "after";
    var o2, s, u, l = this.getAncestry();
    for (u = 0; u < l.length; u++) {
      var c = l[u];
      if ((s = a2.indexOf(c)) >= 0) {
        o2 = c;
        break;
      }
    }
    if (!o2) return "before";
    var f = a2[s - 1], p = l[u - 1];
    if (!f || !p) return "before";
    if (f.listKey && f.container === p.container) return f.key > p.key ? "before" : "after";
    var d = i().VISITOR_KEYS[o2.type], h = d.indexOf(f.key), v = d.indexOf(p.key);
    return h > v ? "before" : "after";
  }, t._guessExecutionStatusRelativeToDifferentFunctions = function(e2) {
    var t2 = e2.path;
    if (!t2.isFunctionDeclaration()) return;
    var r2 = t2.scope.getBinding(t2.node.id.name);
    if (!r2.references) return "before";
    var n2, i2 = r2.referencePaths, a2 = true, o2 = false, s = void 0;
    try {
      for (var u, l = i2[Symbol.iterator](); !(a2 = (u = l.next()).done); a2 = true) {
        var c = u.value;
        if ("callee" !== c.key || !c.parentPath.isCallExpression()) return;
      }
    } catch (e3) {
      o2 = true, s = e3;
    } finally {
      try {
        a2 || null == l.return || l.return();
      } finally {
        if (o2) throw s;
      }
    }
    var f = true, p = false, d = void 0;
    try {
      for (var h, v = i2[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
        var y = h.value, m = !!y.find(function(e3) {
          return e3.node === t2.node;
        });
        if (!m) {
          var b = this._guessExecutionStatusRelativeTo(y);
          if (n2) {
            if (n2 !== b) return;
          } else n2 = b;
        }
      }
    } catch (e3) {
      p = true, d = e3;
    } finally {
      try {
        f || null == v.return || v.return();
      } finally {
        if (p) throw d;
      }
    }
    return n2;
  }, t.resolve = function(e2, t2) {
    return this._resolve(e2, t2) || this;
  }, t._resolve = function(e2, t2) {
    if (t2 && t2.indexOf(this) >= 0) return;
    if ((t2 = t2 || []).push(this), this.isVariableDeclarator()) {
      if (this.get("id").isIdentifier()) return this.get("init").resolve(e2, t2);
    } else if (this.isReferencedIdentifier()) {
      var r2 = this.scope.getBinding(this.node.name);
      if (!r2) return;
      if (!r2.constant) return;
      if ("module" === r2.kind) return;
      if (r2.path !== this) {
        var n2 = r2.path.resolve(e2, t2);
        if (this.find(function(e3) {
          return e3.node === n2.node;
        })) return;
        return n2;
      }
    } else {
      if (this.isTypeCastExpression()) return this.get("expression").resolve(e2, t2);
      if (e2 && this.isMemberExpression()) {
        var a2 = this.toComputedKey();
        if (!i().isLiteral(a2)) return;
        var o2 = a2.value, s = this.get("object").resolve(e2, t2);
        if (s.isObjectExpression()) {
          var u = s.get("properties"), l = true, c = false, f = void 0;
          try {
            for (var p, d = u[Symbol.iterator](); !(l = (p = d.next()).done); l = true) {
              var h = p.value;
              if (h.isProperty()) {
                var v = h.get("key"), y = h.isnt("computed") && v.isIdentifier({ name: o2 });
                if (y = y || v.isLiteral({ value: o2 })) return h.get("value").resolve(e2, t2);
              }
            }
          } catch (e3) {
            c = true, f = e3;
          } finally {
            try {
              l || null == d.return || d.return();
            } finally {
              if (c) throw f;
            }
          }
        } else if (s.isArrayExpression() && !isNaN(+o2)) {
          var m = s.get("elements"), b = m[o2];
          if (b) return b.resolve(e2, t2);
        }
      }
    }
  }, t.isConstantExpression = function() {
    if (this.isIdentifier()) {
      var e2 = this.scope.getBinding(this.node.name);
      return !!e2 && e2.constant;
    }
    if (this.isLiteral()) return !this.isRegExpLiteral() && (!this.isTemplateLiteral() || this.get("expressions").every(function(e3) {
      return e3.isConstantExpression();
    }));
    if (this.isUnaryExpression()) return "void" === this.get("operator").node && this.get("argument").isConstantExpression();
    if (this.isBinaryExpression()) return this.get("left").isConstantExpression() && this.get("right").isConstantExpression();
    return false;
  }, t.isInStrictMode = function() {
    return !!(this.isProgram() ? this : this.parentPath).find(function(e2) {
      if (e2.isProgram({ sourceType: "module" })) return true;
      if (e2.isClass()) return true;
      if (!e2.isProgram() && !e2.isFunction()) return false;
      if (e2.isArrowFunctionExpression() && !e2.get("body").isBlockStatement()) return false;
      var t2 = e2.node;
      e2.isFunction() && (t2 = t2.body);
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = t2.directives[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var s = a2.value;
          if ("use strict" === s.value.value) return true;
        }
      } catch (e3) {
        n2 = true, i2 = e3;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
    });
  }, t.is = void 0;
  var o = a;
  t.is = o;
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    for (var t2 = e2.params, r2 = 0; r2 < t2.length; r2++) {
      var i = t2[r2];
      if (n().isAssignmentPattern(i) || n().isRestElement(i)) return r2;
    }
    return t2.length;
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = o(r(517));
    return n = function() {
      return e2;
    }, e2;
  }
  function i() {
    var e2 = o(r(190));
    return i = function() {
      return e2;
    }, e2;
  }
  function a() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return a = function() {
      return e2;
    }, e2;
  }
  function o(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2, r2 = e2.node, i2 = e2.parent, o2 = e2.scope, c = e2.id, f = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
    if (r2.id) return;
    if (!a().isObjectProperty(i2) && !a().isObjectMethod(i2, { kind: "method" }) || i2.computed && !a().isLiteral(i2.key)) {
      if (a().isVariableDeclarator(i2)) {
        if (c = i2.id, a().isIdentifier(c) && !f) {
          var p = o2.parent.getBinding(c.name);
          if (p && p.constant && o2.getBinding(c.name) === p) return r2.id = a().cloneNode(c), void (r2.id[a().NOT_LOCAL_BINDING] = true);
        }
      } else if (a().isAssignmentExpression(i2)) c = i2.left;
      else if (!c) return;
    } else c = i2.key;
    c && a().isLiteral(c) ? t2 = (function(e3) {
      if (a().isNullLiteral(e3)) return "null";
      if (a().isRegExpLiteral(e3)) return "_".concat(e3.pattern, "_").concat(e3.flags);
      if (a().isTemplateLiteral(e3)) return e3.quasis.map(function(e4) {
        return e4.value.raw;
      }).join("");
      if (void 0 !== e3.value) return e3.value + "";
      return "";
    })(c) : c && a().isIdentifier(c) && (t2 = c.name);
    if (void 0 === t2) return;
    return t2 = a().toBindingIdentifierName(t2), (c = a().identifier(t2))[a().NOT_LOCAL_BINDING] = true, (function(e3, t3, r3, i3) {
      if (e3.selfReference) {
        if (!i3.hasBinding(r3.name) || i3.hasGlobal(r3.name)) {
          if (!a().isFunction(t3)) return;
          var o3 = s;
          t3.generator && (o3 = u);
          for (var l2 = o3({ FUNCTION: t3, FUNCTION_ID: r3, FUNCTION_KEY: i3.generateUidIdentifier(r3.name) }).expression, c2 = l2.callee.body.body[0].params, f2 = 0, p2 = (0, n().default)(t3); f2 < p2; f2++) c2.push(i3.generateUidIdentifier("x"));
          return l2;
        }
        i3.rename(r3.name);
      }
      t3.id = r3, i3.getProgramParent().references[r3.name] = true;
    })((function(e3, t3, r3) {
      var n2 = { selfAssignment: false, selfReference: false, outerDeclar: r3.getBindingIdentifier(t3), references: [], name: t3 }, i3 = r3.getOwnBinding(t3);
      return i3 ? "param" === i3.kind && (n2.selfReference = true) : (n2.outerDeclar || r3.hasGlobal(t3)) && r3.traverse(e3, l, n2), n2;
    })(r2, t2, o2), r2, c, o2) || r2;
  };
  var s = (0, i().default)("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"), u = (0, i().default)("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"), l = { "ReferencedIdentifier|BindingIdentifier": function(e2, t2) {
    e2.node.name === t2.name && (e2.scope.getBindingIdentifier(t2.name) === t2.outerDeclar && (t2.selfReference = true, e2.stop()));
  } };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  function i() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(518));
    return i = function() {
      return e2;
    }, e2;
  }
  function a(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], i2 = e2.findParent(function(e3) {
      return e3.isFunction() && !e3.isArrowFunctionExpression() || e3.isProgram() || e3.isClassProperty({ static: false });
    }), a2 = i2 && "constructor" === i2.node.kind;
    if (i2.isClassProperty()) throw e2.buildCodeFrameError("Unable to transform arrow inside class property");
    var u, l = (function(e3) {
      var t3 = [], r3 = [], n2 = [], i3 = [], a3 = [];
      return e3.traverse({ ClassProperty: function(e4) {
        e4.node.static || e4.skip();
      }, Function: function(e4) {
        e4.isArrowFunctionExpression() || e4.skip();
      }, ThisExpression: function(e4) {
        t3.push(e4);
      }, JSXIdentifier: function(e4) {
        "this" === e4.node.name && (e4.parentPath.isJSXMemberExpression({ object: e4.node }) || e4.parentPath.isJSXOpeningElement({ name: e4.node })) && t3.push(e4);
      }, CallExpression: function(e4) {
        e4.get("callee").isSuper() && a3.push(e4);
      }, MemberExpression: function(e4) {
        e4.get("object").isSuper() && i3.push(e4);
      }, ReferencedIdentifier: function(e4) {
        "arguments" === e4.node.name && r3.push(e4);
      }, MetaProperty: function(e4) {
        e4.get("meta").isIdentifier({ name: "new" }) && e4.get("property").isIdentifier({ name: "target" }) && n2.push(e4);
      } }), { thisPaths: t3, argumentsPaths: r3, newTargetPaths: n2, superProps: i3, superCalls: a3 };
    })(e2), c = l.thisPaths, f = l.argumentsPaths, p = l.newTargetPaths, d = l.superProps, h = l.superCalls;
    if (a2 && h.length > 0) {
      if (!r2) throw h[0].buildCodeFrameError("Unable to handle nested super() usage in arrow");
      var v = [];
      i2.traverse({ Function: function(e3) {
        e3.isArrowFunctionExpression() || e3.skip();
      }, ClassProperty: function(e3) {
        e3.node.static || e3.skip();
      }, CallExpression: function(e3) {
        e3.get("callee").isSuper() && v.push(e3);
      } });
      var y = (function(e3) {
        return s(e3, "supercall", function() {
          var t3 = e3.scope.generateUidIdentifier("args");
          return n().arrowFunctionExpression([n().restElement(t3)], n().callExpression(n().super(), [n().spreadElement(n().identifier(t3.name))]));
        });
      })(i2);
      v.forEach(function(e3) {
        var t3 = n().identifier(y);
        t3.loc = e3.node.callee.loc, e3.get("callee").replaceWith(t3);
      });
    }
    if ((c.length > 0 || t2) && (u = (function(e3, t3) {
      return s(e3, "this", function(r3) {
        if (!t3 || !o(e3)) return n().thisExpression();
        var i3 = /* @__PURE__ */ new WeakSet();
        e3.traverse({ Function: function(e4) {
          e4.isArrowFunctionExpression() || e4.skip();
        }, ClassProperty: function(e4) {
          e4.node.static || e4.skip();
        }, CallExpression: function(e4) {
          e4.get("callee").isSuper() && (i3.has(e4.node) || (i3.add(e4.node), e4.replaceWith(n().assignmentExpression("=", n().identifier(r3), e4.node))));
        } });
      });
    })(i2, a2), (!t2 || a2 && o(i2)) && (c.forEach(function(e3) {
      var t3 = e3.isJSX() ? n().jsxIdentifier(u) : n().identifier(u);
      t3.loc = e3.node.loc, e3.replaceWith(t3);
    }), t2 && (u = null))), f.length > 0) {
      var m = s(i2, "arguments", function() {
        return n().identifier("arguments");
      });
      f.forEach(function(e3) {
        var t3 = n().identifier(m);
        t3.loc = e3.node.loc, e3.replaceWith(t3);
      });
    }
    if (p.length > 0) {
      var b = s(i2, "newtarget", function() {
        return n().metaProperty(n().identifier("new"), n().identifier("target"));
      });
      p.forEach(function(e3) {
        var t3 = n().identifier(b);
        t3.loc = e3.node.loc, e3.replaceWith(t3);
      });
    }
    if (d.length > 0) {
      if (!r2) throw d[0].buildCodeFrameError("Unable to handle nested super.prop usage");
      d.reduce(function(e3, t3) {
        return e3.concat((function(e4) {
          if (e4.parentPath.isAssignmentExpression() && "=" !== e4.parentPath.node.operator) {
            var t4 = e4.parentPath, r3 = t4.node.operator.slice(0, -1), i3 = t4.node.right;
            if (t4.node.operator = "=", e4.node.computed) {
              var a3 = e4.scope.generateDeclaredUidIdentifier("tmp");
              t4.get("left").replaceWith(n().memberExpression(e4.node.object, n().assignmentExpression("=", a3, e4.node.property), true)), t4.get("right").replaceWith(n().binaryExpression(r3, n().memberExpression(e4.node.object, n().identifier(a3.name), true), i3));
            } else t4.get("left").replaceWith(n().memberExpression(e4.node.object, e4.node.property)), t4.get("right").replaceWith(n().binaryExpression(r3, n().memberExpression(e4.node.object, n().identifier(e4.node.property.name)), i3));
            return [t4.get("left"), t4.get("right").get("left")];
          }
          if (e4.parentPath.isUpdateExpression()) {
            var o2 = e4.parentPath, s2 = e4.scope.generateDeclaredUidIdentifier("tmp"), u2 = e4.node.computed ? e4.scope.generateDeclaredUidIdentifier("prop") : null, l2 = [n().assignmentExpression("=", s2, n().memberExpression(e4.node.object, u2 ? n().assignmentExpression("=", u2, e4.node.property) : e4.node.property, e4.node.computed)), n().assignmentExpression("=", n().memberExpression(e4.node.object, u2 ? n().identifier(u2.name) : e4.node.property, e4.node.computed), n().binaryExpression("+", n().identifier(s2.name), n().numericLiteral(1)))];
            e4.parentPath.node.prefix || l2.push(n().identifier(s2.name)), o2.replaceWith(n().sequenceExpression(l2));
            var c2 = o2.get("expressions.0.right"), f2 = o2.get("expressions.1.left");
            return [c2, f2];
          }
          return [e4];
        })(t3));
      }, []).forEach(function(e3) {
        var t3 = e3.node.computed ? "" : e3.get("property").node.name;
        if (e3.parentPath.isCallExpression({ callee: e3.node })) {
          var r3 = (function(e4, t4) {
            return s(e4, "superprop_call:".concat(t4 || ""), function() {
              var r4, i3 = e4.scope.generateUidIdentifier("args"), a4 = [n().restElement(i3)];
              if (t4) r4 = n().callExpression(n().memberExpression(n().super(), n().identifier(t4)), [n().spreadElement(n().identifier(i3.name))]);
              else {
                var o3 = e4.scope.generateUidIdentifier("prop");
                a4.unshift(o3), r4 = n().callExpression(n().memberExpression(n().super(), n().identifier(o3.name), true), [n().spreadElement(n().identifier(i3.name))]);
              }
              return n().arrowFunctionExpression(a4, r4);
            });
          })(i2, t3);
          if (e3.node.computed) {
            var a3 = e3.get("property").node;
            e3.replaceWith(n().identifier(r3)), e3.parentPath.node.arguments.unshift(a3);
          } else e3.replaceWith(n().identifier(r3));
        } else {
          var o2 = e3.parentPath.isAssignmentExpression({ left: e3.node }), u2 = (function(e4, t4, r4) {
            return s(e4, "superprop_".concat(t4 ? "set" : "get", ":").concat(r4 || ""), function() {
              var i3, a4 = [];
              if (r4) i3 = n().memberExpression(n().super(), n().identifier(r4));
              else {
                var o3 = e4.scope.generateUidIdentifier("prop");
                a4.unshift(o3), i3 = n().memberExpression(n().super(), n().identifier(o3.name), true);
              }
              if (t4) {
                var s2 = e4.scope.generateUidIdentifier("value");
                a4.push(s2), i3 = n().assignmentExpression("=", i3, n().identifier(s2.name));
              }
              return n().arrowFunctionExpression(a4, i3);
            });
          })(i2, o2, t3), l2 = [];
          if (e3.node.computed && l2.push(e3.get("property").node), o2) {
            var c2 = e3.parentPath.node.right;
            l2.push(c2), e3.parentPath.replaceWith(n().callExpression(n().identifier(u2), l2));
          } else e3.replaceWith(n().callExpression(n().identifier(u2), l2));
        }
      });
    }
    return u;
  }
  function o(e2) {
    return e2.isClassMethod() && !!e2.parentPath.parentPath.node.superClass;
  }
  function s(e2, t2, r2) {
    var n2 = "binding:" + t2, i2 = e2.getData(n2);
    if (!i2) {
      var a2 = e2.scope.generateUidIdentifier(t2);
      i2 = a2.name, e2.setData(n2, i2), e2.scope.push({ id: a2, init: r2(i2) });
    }
    return i2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.toComputedKey = function() {
    var e2, t2 = this.node;
    if (this.isMemberExpression()) e2 = t2.property;
    else {
      if (!this.isProperty() && !this.isMethod()) throw new ReferenceError("todo");
      e2 = t2.key;
    }
    t2.computed || n().isIdentifier(e2) && (e2 = n().stringLiteral(e2.name));
    return e2;
  }, t.ensureBlock = function() {
    var e2 = this.get("body"), t2 = e2.node;
    if (Array.isArray(e2)) throw new Error("Can't convert array path to a block statement");
    if (!t2) throw new Error("Can't convert node without a body");
    if (e2.isBlockStatement()) return t2;
    var r2, i2, a2 = [], o2 = "body";
    e2.isStatement() ? (i2 = "body", r2 = 0, a2.push(e2.node)) : (o2 += ".body.0", this.isFunction() ? (r2 = "argument", a2.push(n().returnStatement(e2.node))) : (r2 = "expression", a2.push(n().expressionStatement(e2.node))));
    this.node.body = n().blockStatement(a2);
    var s2 = this.get(o2);
    return e2.setup(s2, i2 ? s2.node[i2] : s2.node, i2, r2), this.node;
  }, t.arrowFunctionToShadowed = function() {
    if (!this.isArrowFunctionExpression()) return;
    this.arrowFunctionToExpression();
  }, t.unwrapFunctionEnvironment = function() {
    if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) throw this.buildCodeFrameError("Can only unwrap the environment of a function.");
    a(this);
  }, t.arrowFunctionToExpression = function() {
    var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t2 = e2.allowInsertArrow, r2 = void 0 === t2 || t2, o2 = e2.specCompliant, s2 = void 0 !== o2 && o2;
    if (!this.isArrowFunctionExpression()) throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");
    var u = a(this, s2, r2);
    if (this.ensureBlock(), this.node.type = "FunctionExpression", s2) {
      var l = u ? null : this.parentPath.scope.generateUidIdentifier("arrowCheckId");
      l && this.parentPath.scope.push({ id: l, init: n().objectExpression([]) }), this.get("body").unshiftContainer("body", n().expressionStatement(n().callExpression(this.hub.addHelper("newArrowCheck"), [n().thisExpression(), l ? n().identifier(l.name) : n().identifier(u)]))), this.replaceWith(n().callExpression(n().memberExpression((0, i().default)(this, true) || this.node, n().identifier("bind")), [l ? n().identifier(l.name) : n().thisExpression()]));
    }
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function r2(e3) {
      return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    Object.defineProperty(t, "__esModule", { value: true }), t.evaluateTruthy = function() {
      var e3 = this.evaluate();
      if (e3.confident) return !!e3.value;
    }, t.evaluate = function() {
      var e3 = { confident: true, deoptPath: null, seen: /* @__PURE__ */ new Map() }, t2 = o(this, e3);
      e3.confident || (t2 = void 0);
      return { confident: e3.confident, deopt: e3.deoptPath, value: t2 };
    };
    var n = ["String", "Number", "Math"], i = ["random"];
    function a(e3, t2) {
      t2.confident && (t2.deoptPath = e3, t2.confident = false);
    }
    function o(t2, u) {
      var l = t2.node, c = u.seen;
      if (c.has(l)) {
        var f = c.get(l);
        return f.resolved ? f.value : void a(t2, u);
      }
      var p = { resolved: false };
      c.set(l, p);
      var d = (function(t3, u2) {
        if (!u2.confident) return;
        var l2 = t3.node;
        if (t3.isSequenceExpression()) {
          var c2 = t3.get("expressions");
          return o(c2[c2.length - 1], u2);
        }
        if (t3.isStringLiteral() || t3.isNumericLiteral() || t3.isBooleanLiteral()) return l2.value;
        if (t3.isNullLiteral()) return null;
        if (t3.isTemplateLiteral()) return s(t3, l2.quasis, u2);
        if (t3.isTaggedTemplateExpression() && t3.get("tag").isMemberExpression()) {
          var f2 = t3.get("tag.object"), p2 = f2.node.name, d2 = t3.get("tag.property");
          if (f2.isIdentifier() && "String" === p2 && !t3.scope.getBinding(p2, true) && d2.isIdentifier && "raw" === d2.node.name) return s(t3, l2.quasi.quasis, u2, true);
        }
        if (t3.isConditionalExpression()) {
          var h = o(t3.get("test"), u2);
          if (!u2.confident) return;
          return o(h ? t3.get("consequent") : t3.get("alternate"), u2);
        }
        if (t3.isExpressionWrapper()) return o(t3.get("expression"), u2);
        if (t3.isMemberExpression() && !t3.parentPath.isCallExpression({ callee: l2 })) {
          var v = t3.get("property"), y = t3.get("object");
          if (y.isLiteral() && v.isIdentifier()) {
            var m = y.node.value, b = r2(m);
            if ("number" === b || "string" === b) return m[v.node.name];
          }
        }
        if (t3.isReferencedIdentifier()) {
          var g = t3.scope.getBinding(l2.name);
          if (g && g.constantViolations.length > 0) return a(g.path, u2);
          if (g && t3.node.start < g.path.node.end) return a(g.path, u2);
          if (g && g.hasValue) return g.value;
          if ("undefined" === l2.name) return g ? a(g.path, u2) : void 0;
          if ("Infinity" === l2.name) return g ? a(g.path, u2) : 1 / 0;
          if ("NaN" === l2.name) return g ? a(g.path, u2) : NaN;
          var w = t3.resolve();
          return w === t3 ? a(t3, u2) : o(w, u2);
        }
        if (t3.isUnaryExpression({ prefix: true })) {
          if ("void" === l2.operator) return;
          var E = t3.get("argument");
          if ("typeof" === l2.operator && (E.isFunction() || E.isClass())) return "function";
          var S = o(E, u2);
          if (!u2.confident) return;
          switch (l2.operator) {
            case "!":
              return !S;
            case "+":
              return +S;
            case "-":
              return -S;
            case "~":
              return ~S;
            case "typeof":
              return r2(S);
          }
        }
        if (t3.isArrayExpression()) {
          var T = [], A = t3.get("elements"), C = true, P = false, O = void 0;
          try {
            for (var x, _ = A[Symbol.iterator](); !(C = (x = _.next()).done); C = true) {
              var V = x.value, D = V.evaluate();
              if (!D.confident) return a(V, u2);
              T.push(D.value);
            }
          } catch (e3) {
            P = true, O = e3;
          } finally {
            try {
              C || null == _.return || _.return();
            } finally {
              if (P) throw O;
            }
          }
          return T;
        }
        if (t3.isObjectExpression()) {
          var N = {}, I = t3.get("properties"), k = true, j = false, F = void 0;
          try {
            for (var R, M = I[Symbol.iterator](); !(k = (R = M.next()).done); k = true) {
              var B = R.value;
              if (B.isObjectMethod() || B.isSpreadElement()) return a(B, u2);
              var L = B.get("key"), $ = L;
              if (B.node.computed) {
                if (!($ = $.evaluate()).confident) return a(L, u2);
                $ = $.value;
              } else $ = $.isIdentifier() ? $.node.name : $.node.value;
              var G = B.get("value"), z = G.evaluate();
              if (!z.confident) return a(G, u2);
              z = z.value, N[$] = z;
            }
          } catch (e3) {
            j = true, F = e3;
          } finally {
            try {
              k || null == M.return || M.return();
            } finally {
              if (j) throw F;
            }
          }
          return N;
        }
        if (t3.isLogicalExpression()) {
          var U = u2.confident, W = o(t3.get("left"), u2), q = u2.confident;
          u2.confident = U;
          var H = o(t3.get("right"), u2), K = u2.confident;
          switch (u2.confident = q && K, l2.operator) {
            case "||":
              if (W && q) return u2.confident = true, W;
              if (!u2.confident) return;
              return W || H;
            case "&&":
              if ((!W && q || !H && K) && (u2.confident = true), !u2.confident) return;
              return W && H;
          }
        }
        if (t3.isBinaryExpression()) {
          var J = o(t3.get("left"), u2);
          if (!u2.confident) return;
          var Y = o(t3.get("right"), u2);
          if (!u2.confident) return;
          switch (l2.operator) {
            case "-":
              return J - Y;
            case "+":
              return J + Y;
            case "/":
              return J / Y;
            case "*":
              return J * Y;
            case "%":
              return J % Y;
            case "**":
              return Math.pow(J, Y);
            case "<":
              return J < Y;
            case ">":
              return J > Y;
            case "<=":
              return J <= Y;
            case ">=":
              return J >= Y;
            case "==":
              return J == Y;
            case "!=":
              return J != Y;
            case "===":
              return J === Y;
            case "!==":
              return J !== Y;
            case "|":
              return J | Y;
            case "&":
              return J & Y;
            case "^":
              return J ^ Y;
            case "<<":
              return J << Y;
            case ">>":
              return J >> Y;
            case ">>>":
              return J >>> Y;
          }
        }
        if (t3.isCallExpression()) {
          var X, Q, Z = t3.get("callee");
          if (Z.isIdentifier() && !t3.scope.getBinding(Z.node.name, true) && n.indexOf(Z.node.name) >= 0 && (Q = e2[l2.callee.name]), Z.isMemberExpression()) {
            var ee = Z.get("object"), te = Z.get("property");
            if (ee.isIdentifier() && te.isIdentifier() && n.indexOf(ee.node.name) >= 0 && i.indexOf(te.node.name) < 0 && (X = e2[ee.node.name], Q = X[te.node.name]), ee.isLiteral() && te.isIdentifier()) {
              var re = r2(ee.node.value);
              "string" !== re && "number" !== re || (X = ee.node.value, Q = X[te.node.name]);
            }
          }
          if (Q) {
            var ne = t3.get("arguments").map(function(e3) {
              return o(e3, u2);
            });
            if (!u2.confident) return;
            return Q.apply(X, ne);
          }
        }
        a(t3, u2);
      })(t2, u);
      return u.confident && (p.resolved = true, p.value = d), d;
    }
    function s(e3, t2, r3) {
      var n2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], i2 = "", a2 = 0, s2 = e3.get("expressions"), u = true, l = false, c = void 0;
      try {
        for (var f, p = t2[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
          var d = f.value;
          if (!r3.confident) break;
          i2 += n2 ? d.value.raw : d.value.cooked;
          var h = s2[a2++];
          h && (i2 += String(o(h, r3)));
        }
      } catch (e4) {
        l = true, c = e4;
      } finally {
        try {
          u || null == p.return || p.return();
        } finally {
          if (l) throw c;
        }
      }
      if (r3.confident) return i2;
    }
  }).call(this, r(55));
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = r(188);
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.replaceWithMultiple = function(e2) {
    this.resync(), e2 = this._verifyNodeList(e2), s().inheritLeadingComments(e2[0], this.node), s().inheritTrailingComments(e2[e2.length - 1], this.node), this.node = this.container[this.key] = null;
    var t2 = this.insertAfter(e2);
    this.node ? this.requeue() : this.remove();
    return t2;
  }, t.replaceWithSourceString = function(e2) {
    this.resync();
    try {
      e2 = "(".concat(e2, ")"), e2 = (0, o().parse)(e2);
    } catch (r2) {
      var t2 = r2.loc;
      throw t2 && (r2.message += " - make sure this is an expression.\n" + (0, n().codeFrameColumns)(e2, { start: { line: t2.line, column: t2.column + 1 } }), r2.code = "BABEL_REPLACE_SOURCE_ERROR"), r2;
    }
    return e2 = e2.program.body[0].expression, i.default.removeProperties(e2), this.replaceWith(e2);
  }, t.replaceWith = function(e2) {
    if (this.resync(), this.removed) throw new Error("You can't replace this node, we've already removed it");
    e2 instanceof a.default && (e2 = e2.node);
    if (!e2) throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
    if (this.node === e2) return [this];
    if (this.isProgram() && !s().isProgram(e2)) throw new Error("You can only replace a Program root node with another Program node");
    if (Array.isArray(e2)) throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
    if ("string" == typeof e2) throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
    var t2 = "";
    this.isNodeType("Statement") && s().isExpression(e2) && (this.canHaveVariableDeclarationOrExpression() || this.canSwapBetweenExpressionAndStatement(e2) || this.parentPath.isExportDefaultDeclaration() || (e2 = s().expressionStatement(e2), t2 = "expression"));
    if (this.isNodeType("Expression") && s().isStatement(e2) && !this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(e2)) return this.replaceExpressionWithStatements([e2]);
    var r2 = this.node;
    r2 && (s().inheritsComments(e2, r2), s().removeComments(r2));
    return this._replaceWith(e2), this.type = e2.type, this.setScope(), this.requeue(), [t2 ? this.get(t2) : this];
  }, t._replaceWith = function(e2) {
    if (!this.container) throw new ReferenceError("Container is falsy");
    this.inList ? s().validate(this.parent, this.key, [e2]) : s().validate(this.parent, this.key, e2);
    this.debug("Replace with ".concat(e2 && e2.type)), this.node = this.container[this.key] = e2;
  }, t.replaceExpressionWithStatements = function(e2) {
    this.resync();
    var t2 = s().toSequenceExpression(e2, this.scope);
    if (t2) return this.replaceWith(t2)[0].get("expressions");
    var r2 = s().arrowFunctionExpression([], s().blockStatement(e2));
    this.replaceWith(s().callExpression(r2, [])), this.traverse(l);
    var n2 = this.get("callee").getCompletionRecords(), i2 = true, a2 = false, o2 = void 0;
    try {
      for (var u2, c = n2[Symbol.iterator](); !(i2 = (u2 = c.next()).done); i2 = true) {
        var f = u2.value;
        if (f.isExpressionStatement()) {
          var p = f.findParent(function(e3) {
            return e3.isLoop();
          });
          if (p) {
            var d = p.getData("expressionReplacementReturnUid");
            if (d) d = s().identifier(d.name);
            else {
              var h = this.get("callee");
              d = h.scope.generateDeclaredUidIdentifier("ret"), h.get("body").pushContainer("body", s().returnStatement(s().cloneNode(d))), p.setData("expressionReplacementReturnUid", d);
            }
            f.get("expression").replaceWith(s().assignmentExpression("=", s().cloneNode(d), f.node.expression));
          } else f.replaceWith(s().returnStatement(f.node.expression));
        }
      }
    } catch (e3) {
      a2 = true, o2 = e3;
    } finally {
      try {
        i2 || null == c.return || c.return();
      } finally {
        if (a2) throw o2;
      }
    }
    var v = this.get("callee");
    return v.arrowFunctionToExpression(), v.get("body.body");
  }, t.replaceInline = function(e2) {
    if (this.resync(), Array.isArray(e2)) {
      if (Array.isArray(this.container)) {
        e2 = this._verifyNodeList(e2);
        var t2 = this._containerInsertAfter(e2);
        return this.remove(), t2;
      }
      return this.replaceWithMultiple(e2);
    }
    return this.replaceWith(e2);
  };
  var i = u(r(28)), a = u(r(52));
  function o() {
    var e2 = r(34);
    return o = function() {
      return e2;
    }, e2;
  }
  function s() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return s = function() {
      return e2;
    }, e2;
  }
  function u(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var l = { Function: function(e2) {
    e2.skip();
  }, VariableDeclaration: function(e2) {
    if ("var" === e2.node.kind) {
      var t2 = e2.getBindingIdentifiers();
      for (var r2 in t2) e2.scope.push({ id: t2[r2] });
      var n2 = [], i2 = true, a2 = false, o2 = void 0;
      try {
        for (var u2, l2 = e2.node.declarations[Symbol.iterator](); !(i2 = (u2 = l2.next()).done); i2 = true) {
          var c = u2.value;
          c.init && n2.push(s().expressionStatement(s().assignmentExpression("=", c.id, c.init)));
        }
      } catch (e3) {
        a2 = true, o2 = e3;
      } finally {
        try {
          i2 || null == l2.return || l2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      e2.replaceWithMultiple(n2);
    }
  } };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  function i(e2, t2, r2) {
    var n2 = e2.constantViolations.slice();
    return n2.unshift(e2.path), n2.filter(function(e3) {
      var n3 = (e3 = e3.resolve())._guessExecutionStatusRelativeTo(t2);
      return r2 && "function" === n3 && r2.push(e3), "before" === n3;
    });
  }
  function a(e2, t2) {
    var r2, i2, a2, o = t2.node.operator, s = t2.get("right").resolve(), u = t2.get("left").resolve();
    if (u.isIdentifier({ name: e2 }) ? r2 = s : s.isIdentifier({ name: e2 }) && (r2 = u), r2) return "===" === o ? r2.getTypeAnnotation() : n().BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(o) >= 0 ? n().numberTypeAnnotation() : void 0;
    if (("===" === o || "==" === o) && (u.isUnaryExpression({ operator: "typeof" }) ? (i2 = u, a2 = s) : s.isUnaryExpression({ operator: "typeof" }) && (i2 = s, a2 = u), i2 && i2.get("argument").isIdentifier({ name: e2 }) && (a2 = a2.resolve()).isLiteral())) {
      var l = a2.node.value;
      if ("string" == typeof l) return n().createTypeAnnotationBasedOnTypeof(l);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    if (!this.isReferenced()) return;
    var t2 = this.scope.getBinding(e2.name);
    if (t2) return t2.identifier.typeAnnotation ? t2.identifier.typeAnnotation : (function(e3, t3, r2) {
      var o = [], s = [], u = i(e3, t3, s), l = (function e4(t4, r3, i2) {
        var o2 = (function(e5, t5, r4) {
          var n2;
          for (; n2 = t5.parentPath; ) {
            if (n2.isIfStatement() || n2.isConditionalExpression()) {
              if ("test" === t5.key) return;
              return n2;
            }
            if (n2.isFunction() && n2.parentPath.scope.getBinding(r4) !== e5) return;
            t5 = n2;
          }
        })(t4, r3, i2);
        if (!o2) return;
        var s2 = o2.get("test");
        var u2 = [s2];
        var l2 = [];
        for (var c2 = 0; c2 < u2.length; c2++) {
          var f2 = u2[c2];
          if (f2.isLogicalExpression()) "&&" === f2.node.operator && (u2.push(f2.get("left")), u2.push(f2.get("right")));
          else if (f2.isBinaryExpression()) {
            var p2 = a(i2, f2);
            p2 && l2.push(p2);
          }
        }
        if (l2.length) return { typeAnnotation: n().createUnionTypeAnnotation(l2), ifStatement: o2 };
        return e4(o2, i2);
      })(e3, t3, r2);
      if (l) {
        var c = i(e3, l.ifStatement);
        u = u.filter(function(e4) {
          return c.indexOf(e4) < 0;
        }), o.push(l.typeAnnotation);
      }
      if (u.length) {
        u = u.concat(s);
        var f = true, p = false, d = void 0;
        try {
          for (var h, v = u[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
            var y = h.value;
            o.push(y.getTypeAnnotation());
          }
        } catch (e4) {
          p = true, d = e4;
        } finally {
          try {
            f || null == v.return || v.return();
          } finally {
            if (p) throw d;
          }
        }
      }
      if (o.length) return n().createUnionTypeAnnotation(o);
    })(t2, this, e2.name);
    if ("undefined" === e2.name) return n().voidTypeAnnotation();
    if ("NaN" === e2.name || "Infinity" === e2.name) return n().numberTypeAnnotation();
    e2.name;
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.VariableDeclarator = function() {
    if (!this.get("id").isIdentifier()) return;
    var e2 = this.get("init"), t2 = e2.getTypeAnnotation();
    t2 && "AnyTypeAnnotation" === t2.type && e2.isCallExpression() && e2.get("callee").isIdentifier({ name: "Array" }) && !e2.scope.hasBinding("Array", true) && (t2 = o());
    return t2;
  }, t.TypeCastExpression = a, t.NewExpression = function(e2) {
    if (this.get("callee").isIdentifier()) return n().genericTypeAnnotation(e2.callee);
  }, t.TemplateLiteral = function() {
    return n().stringTypeAnnotation();
  }, t.UnaryExpression = function(e2) {
    var t2 = e2.operator;
    if ("void" === t2) return n().voidTypeAnnotation();
    if (n().NUMBER_UNARY_OPERATORS.indexOf(t2) >= 0) return n().numberTypeAnnotation();
    if (n().STRING_UNARY_OPERATORS.indexOf(t2) >= 0) return n().stringTypeAnnotation();
    if (n().BOOLEAN_UNARY_OPERATORS.indexOf(t2) >= 0) return n().booleanTypeAnnotation();
  }, t.BinaryExpression = function(e2) {
    var t2 = e2.operator;
    if (n().NUMBER_BINARY_OPERATORS.indexOf(t2) >= 0) return n().numberTypeAnnotation();
    if (n().BOOLEAN_BINARY_OPERATORS.indexOf(t2) >= 0) return n().booleanTypeAnnotation();
    if ("+" === t2) {
      var r2 = this.get("right"), i2 = this.get("left");
      return i2.isBaseType("number") && r2.isBaseType("number") ? n().numberTypeAnnotation() : i2.isBaseType("string") || r2.isBaseType("string") ? n().stringTypeAnnotation() : n().unionTypeAnnotation([n().stringTypeAnnotation(), n().numberTypeAnnotation()]);
    }
  }, t.LogicalExpression = function() {
    return n().createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);
  }, t.ConditionalExpression = function() {
    return n().createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);
  }, t.SequenceExpression = function() {
    return this.get("expressions").pop().getTypeAnnotation();
  }, t.AssignmentExpression = function() {
    return this.get("right").getTypeAnnotation();
  }, t.UpdateExpression = function(e2) {
    var t2 = e2.operator;
    if ("++" === t2 || "--" === t2) return n().numberTypeAnnotation();
  }, t.StringLiteral = function() {
    return n().stringTypeAnnotation();
  }, t.NumericLiteral = function() {
    return n().numberTypeAnnotation();
  }, t.BooleanLiteral = function() {
    return n().booleanTypeAnnotation();
  }, t.NullLiteral = function() {
    return n().nullLiteralTypeAnnotation();
  }, t.RegExpLiteral = function() {
    return n().genericTypeAnnotation(n().identifier("RegExp"));
  }, t.ObjectExpression = function() {
    return n().genericTypeAnnotation(n().identifier("Object"));
  }, t.ArrayExpression = o, t.RestElement = s, t.ClassDeclaration = t.ClassExpression = t.FunctionDeclaration = t.ArrowFunctionExpression = t.FunctionExpression = function() {
    return n().genericTypeAnnotation(n().identifier("Function"));
  }, t.CallExpression = function() {
    var e2 = this.node.callee;
    if (l(e2)) return n().arrayTypeAnnotation(n().stringTypeAnnotation());
    if (u(e2) || c(e2)) return n().arrayTypeAnnotation(n().anyTypeAnnotation());
    if (f(e2)) return n().arrayTypeAnnotation(n().tupleTypeAnnotation([n().stringTypeAnnotation(), n().anyTypeAnnotation()]));
    return p(this.get("callee"));
  }, t.TaggedTemplateExpression = function() {
    return p(this.get("tag"));
  }, Object.defineProperty(t, "Identifier", { enumerable: true, get: function() {
    return i.default;
  } });
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(522));
  function a(e2) {
    return e2.typeAnnotation;
  }
  function o() {
    return n().genericTypeAnnotation(n().identifier("Array"));
  }
  function s() {
    return o();
  }
  a.validParent = true, s.validParent = true;
  var u = n().buildMatchMemberExpression("Array.from"), l = n().buildMatchMemberExpression("Object.keys"), c = n().buildMatchMemberExpression("Object.values"), f = n().buildMatchMemberExpression("Object.entries");
  function p(e2) {
    if ((e2 = e2.resolve()).isFunction()) {
      if (e2.is("async")) return e2.is("generator") ? n().genericTypeAnnotation(n().identifier("AsyncIterator")) : n().genericTypeAnnotation(n().identifier("Promise"));
      if (e2.node.returnType) return e2.node.returnType;
    }
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.getTypeAnnotation = function() {
    if (this.typeAnnotation) return this.typeAnnotation;
    var e2 = this._getTypeAnnotation() || i().anyTypeAnnotation();
    i().isTypeAnnotation(e2) && (e2 = e2.typeAnnotation);
    return this.typeAnnotation = e2;
  }, t._getTypeAnnotation = function() {
    var e2 = this.node;
    if (!e2) {
      if ("init" === this.key && this.parentPath.isVariableDeclarator()) {
        var t2 = this.parentPath.parentPath, r2 = t2.parentPath;
        return "left" === t2.key && r2.isForInStatement() ? i().stringTypeAnnotation() : "left" === t2.key && r2.isForOfStatement() ? i().anyTypeAnnotation() : i().voidTypeAnnotation();
      }
      return;
    }
    if (e2.typeAnnotation) return e2.typeAnnotation;
    var a2 = n[e2.type];
    if (a2) return a2.call(this, e2);
    if ((a2 = n[this.parentPath.type]) && a2.validParent) return this.parentPath.getTypeAnnotation();
  }, t.isBaseType = function(e2, t2) {
    return o(e2, this.getTypeAnnotation(), t2);
  }, t.couldBeBaseType = function(e2) {
    var t2 = this.getTypeAnnotation();
    if (i().isAnyTypeAnnotation(t2)) return true;
    if (i().isUnionTypeAnnotation(t2)) {
      var r2 = true, n2 = false, a2 = void 0;
      try {
        for (var s, u = t2.types[Symbol.iterator](); !(r2 = (s = u.next()).done); r2 = true) {
          var l = s.value;
          if (i().isAnyTypeAnnotation(l) || o(e2, l, true)) return true;
        }
      } catch (e3) {
        n2 = true, a2 = e3;
      } finally {
        try {
          r2 || null == u.return || u.return();
        } finally {
          if (n2) throw a2;
        }
      }
      return false;
    }
    return o(e2, t2, true);
  }, t.baseTypeStrictlyMatches = function(e2) {
    var t2 = this.getTypeAnnotation();
    if (e2 = e2.getTypeAnnotation(), !i().isAnyTypeAnnotation(t2) && i().isFlowBaseAnnotation(t2)) return e2.type === t2.type;
  }, t.isGenericType = function(e2) {
    var t2 = this.getTypeAnnotation();
    return i().isGenericTypeAnnotation(t2) && i().isIdentifier(t2.id, { name: e2 });
  };
  var n = a(r(523));
  function i() {
    var e2 = a(r(5));
    return i = function() {
      return e2;
    }, e2;
  }
  function a(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  function o(e2, t2, r2) {
    if ("string" === e2) return i().isStringTypeAnnotation(t2);
    if ("number" === e2) return i().isNumberTypeAnnotation(t2);
    if ("boolean" === e2) return i().isBooleanTypeAnnotation(t2);
    if ("any" === e2) return i().isAnyTypeAnnotation(t2);
    if ("mixed" === e2) return i().isMixedTypeAnnotation(t2);
    if ("empty" === e2) return i().isEmptyTypeAnnotation(t2);
    if ("void" === e2) return i().isVoidTypeAnnotation(t2);
    if (r2) return false;
    throw new Error("Unknown base type ".concat(e2));
  }
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.findParent = function(e2) {
    var t2 = this;
    for (; t2 = t2.parentPath; ) if (e2(t2)) return t2;
    return null;
  }, t.find = function(e2) {
    var t2 = this;
    do {
      if (e2(t2)) return t2;
    } while (t2 = t2.parentPath);
    return null;
  }, t.getFunctionParent = function() {
    return this.findParent(function(e2) {
      return e2.isFunction();
    });
  }, t.getStatementParent = function() {
    var e2 = this;
    do {
      if (!e2.parentPath || Array.isArray(e2.container) && e2.isStatement()) break;
      e2 = e2.parentPath;
    } while (e2);
    if (e2 && (e2.isProgram() || e2.isFile())) throw new Error("File/Program node, we can't possibly find a statement parent to this");
    return e2;
  }, t.getEarliestCommonAncestorFrom = function(e2) {
    return this.getDeepestCommonAncestorFrom(e2, function(e3, t2, r2) {
      var i, a = n().VISITOR_KEYS[e3.type], o = true, s = false, u = void 0;
      try {
        for (var l, c = r2[Symbol.iterator](); !(o = (l = c.next()).done); o = true) {
          var f = l.value, p = f[t2 + 1];
          if (i) if (p.listKey && i.listKey === p.listKey && p.key < i.key) i = p;
          else {
            var d = a.indexOf(i.parentKey), h = a.indexOf(p.parentKey);
            d > h && (i = p);
          }
          else i = p;
        }
      } catch (e4) {
        s = true, u = e4;
      } finally {
        try {
          o || null == c.return || c.return();
        } finally {
          if (s) throw u;
        }
      }
      return i;
    });
  }, t.getDeepestCommonAncestorFrom = function(e2, t2) {
    var r2 = this;
    if (!e2.length) return this;
    if (1 === e2.length) return e2[0];
    var n2, i, a = 1 / 0, o = e2.map(function(e3) {
      var t3 = [];
      do {
        t3.unshift(e3);
      } while ((e3 = e3.parentPath) && e3 !== r2);
      return t3.length < a && (a = t3.length), t3;
    }), s = o[0];
    e: for (var u = 0; u < a; u++) {
      var l = s[u], c = true, f = false, p = void 0;
      try {
        for (var d, h = o[Symbol.iterator](); !(c = (d = h.next()).done); c = true) {
          var v = d.value;
          if (v[u] !== l) break e;
        }
      } catch (e3) {
        f = true, p = e3;
      } finally {
        try {
          c || null == h.return || h.return();
        } finally {
          if (f) throw p;
        }
      }
      n2 = u, i = l;
    }
    if (i) return t2 ? t2(i, n2, o) : i;
    throw new Error("Couldn't find intersection");
  }, t.getAncestry = function() {
    var e2 = this, t2 = [];
    do {
      t2.push(e2);
    } while (e2 = e2.parentPath);
    return t2;
  }, t.isAncestor = function(e2) {
    return e2.isDescendant(this);
  }, t.isDescendant = function(e2) {
    return !!this.findParent(function(t2) {
      return t2 === e2;
    });
  }, t.inType = function() {
    var e2 = this;
    for (; e2; ) {
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i, a = arguments[Symbol.iterator](); !(t2 = (i = a.next()).done); t2 = true) {
          var o = i.value;
          if (e2.node.type === o) return true;
        }
      } catch (e3) {
        r2 = true, n2 = e3;
      } finally {
        try {
          t2 || null == a.return || a.return();
        } finally {
          if (r2) throw n2;
        }
      }
      e2 = e2.parentPath;
    }
    return false;
  };
  !(function(e2) {
    e2 && e2.__esModule;
  })(r(52));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    true !== t2 && e2.token(t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.TSTypeAnnotation = function(e2) {
    this.token(":"), this.space(), e2.optional && this.token("?");
    this.print(e2.typeAnnotation, e2);
  }, t.TSTypeParameterDeclaration = t.TSTypeParameterInstantiation = function(e2) {
    this.token("<"), this.printList(e2.params, e2, {}), this.token(">");
  }, t.TSTypeParameter = function(e2) {
    this.word(e2.name), e2.constraint && (this.space(), this.word("extends"), this.space(), this.print(e2.constraint, e2));
    e2.default && (this.space(), this.token("="), this.space(), this.print(e2.default, e2));
  }, t.TSParameterProperty = function(e2) {
    e2.accessibility && (this.word(e2.accessibility), this.space());
    e2.readonly && (this.word("readonly"), this.space());
    this._param(e2.parameter);
  }, t.TSDeclareFunction = function(e2) {
    e2.declare && (this.word("declare"), this.space());
    this._functionHead(e2), this.token(";");
  }, t.TSDeclareMethod = function(e2) {
    this._classMethodHead(e2), this.token(";");
  }, t.TSQualifiedName = function(e2) {
    this.print(e2.left, e2), this.token("."), this.print(e2.right, e2);
  }, t.TSCallSignatureDeclaration = function(e2) {
    this.tsPrintSignatureDeclarationBase(e2);
  }, t.TSConstructSignatureDeclaration = function(e2) {
    this.word("new"), this.space(), this.tsPrintSignatureDeclarationBase(e2);
  }, t.TSPropertySignature = function(e2) {
    var t2 = e2.readonly, r2 = e2.initializer;
    t2 && (this.word("readonly"), this.space());
    this.tsPrintPropertyOrMethodName(e2), this.print(e2.typeAnnotation, e2), r2 && (this.space(), this.token("="), this.space(), this.print(r2, e2));
    this.token(";");
  }, t.tsPrintPropertyOrMethodName = function(e2) {
    e2.computed && this.token("[");
    this.print(e2.key, e2), e2.computed && this.token("]");
    e2.optional && this.token("?");
  }, t.TSMethodSignature = function(e2) {
    this.tsPrintPropertyOrMethodName(e2), this.tsPrintSignatureDeclarationBase(e2), this.token(";");
  }, t.TSIndexSignature = function(e2) {
    e2.readonly && (this.word("readonly"), this.space());
    this.token("["), this._parameters(e2.parameters, e2), this.token("]"), this.print(e2.typeAnnotation, e2), this.token(";");
  }, t.TSAnyKeyword = function() {
    this.word("any");
  }, t.TSNumberKeyword = function() {
    this.word("number");
  }, t.TSObjectKeyword = function() {
    this.word("object");
  }, t.TSBooleanKeyword = function() {
    this.word("boolean");
  }, t.TSStringKeyword = function() {
    this.word("string");
  }, t.TSSymbolKeyword = function() {
    this.word("symbol");
  }, t.TSVoidKeyword = function() {
    this.word("void");
  }, t.TSUndefinedKeyword = function() {
    this.word("undefined");
  }, t.TSNullKeyword = function() {
    this.word("null");
  }, t.TSNeverKeyword = function() {
    this.word("never");
  }, t.TSThisType = function() {
    this.word("this");
  }, t.TSFunctionType = function(e2) {
    this.tsPrintFunctionOrConstructorType(e2);
  }, t.TSConstructorType = function(e2) {
    this.word("new"), this.space(), this.tsPrintFunctionOrConstructorType(e2);
  }, t.tsPrintFunctionOrConstructorType = function(e2) {
    var t2 = e2.typeParameters, r2 = e2.parameters;
    this.print(t2, e2), this.token("("), this._parameters(r2, e2), this.token(")"), this.space(), this.token("=>"), this.space(), this.print(e2.typeAnnotation.typeAnnotation, e2);
  }, t.TSTypeReference = function(e2) {
    this.print(e2.typeName, e2), this.print(e2.typeParameters, e2);
  }, t.TSTypePredicate = function(e2) {
    this.print(e2.parameterName), this.space(), this.word("is"), this.space(), this.print(e2.typeAnnotation.typeAnnotation);
  }, t.TSTypeQuery = function(e2) {
    this.word("typeof"), this.space(), this.print(e2.exprName);
  }, t.TSTypeLiteral = function(e2) {
    this.tsPrintTypeLiteralOrInterfaceBody(e2.members, e2);
  }, t.tsPrintTypeLiteralOrInterfaceBody = function(e2, t2) {
    this.tsPrintBraced(e2, t2);
  }, t.tsPrintBraced = function(e2, t2) {
    if (this.token("{"), e2.length) {
      this.indent(), this.newline();
      var r2 = true, n2 = false, i = void 0;
      try {
        for (var a, o = e2[Symbol.iterator](); !(r2 = (a = o.next()).done); r2 = true) {
          var s = a.value;
          this.print(s, t2), this.newline();
        }
      } catch (e3) {
        n2 = true, i = e3;
      } finally {
        try {
          r2 || null == o.return || o.return();
        } finally {
          if (n2) throw i;
        }
      }
      this.dedent(), this.rightBrace();
    } else this.token("}");
  }, t.TSArrayType = function(e2) {
    this.print(e2.elementType), this.token("[]");
  }, t.TSTupleType = function(e2) {
    this.token("["), this.printList(e2.elementTypes, e2), this.token("]");
  }, t.TSUnionType = function(e2) {
    this.tsPrintUnionOrIntersectionType(e2, "|");
  }, t.TSIntersectionType = function(e2) {
    this.tsPrintUnionOrIntersectionType(e2, "&");
  }, t.tsPrintUnionOrIntersectionType = function(e2, t2) {
    this.printJoin(e2.types, e2, { separator: function() {
      this.space(), this.token(t2), this.space();
    } });
  }, t.TSConditionalType = function(e2) {
    this.print(e2.checkType), this.space(), this.word("extends"), this.space(), this.print(e2.extendsType), this.space(), this.token("?"), this.space(), this.print(e2.trueType), this.space(), this.token(":"), this.space(), this.print(e2.falseType);
  }, t.TSInferType = function(e2) {
    this.token("infer"), this.space(), this.print(e2.typeParameter);
  }, t.TSParenthesizedType = function(e2) {
    this.token("("), this.print(e2.typeAnnotation, e2), this.token(")");
  }, t.TSTypeOperator = function(e2) {
    this.token(e2.operator), this.space(), this.print(e2.typeAnnotation, e2);
  }, t.TSIndexedAccessType = function(e2) {
    this.print(e2.objectType, e2), this.token("["), this.print(e2.indexType, e2), this.token("]");
  }, t.TSMappedType = function(e2) {
    var t2 = e2.readonly, r2 = e2.typeParameter, i = e2.optional;
    this.token("{"), this.space(), t2 && (n(this, t2), this.word("readonly"), this.space());
    this.token("["), this.word(r2.name), this.space(), this.word("in"), this.space(), this.print(r2.constraint, r2), this.token("]"), i && (n(this, i), this.token("?"));
    this.token(":"), this.space(), this.print(e2.typeAnnotation, e2), this.space(), this.token("}");
  }, t.TSLiteralType = function(e2) {
    this.print(e2.literal, e2);
  }, t.TSExpressionWithTypeArguments = function(e2) {
    this.print(e2.expression, e2), this.print(e2.typeParameters, e2);
  }, t.TSInterfaceDeclaration = function(e2) {
    var t2 = e2.declare, r2 = e2.id, n2 = e2.typeParameters, i = e2.extends, a = e2.body;
    t2 && (this.word("declare"), this.space());
    this.word("interface"), this.space(), this.print(r2, e2), this.print(n2, e2), i && (this.space(), this.word("extends"), this.space(), this.printList(i, e2));
    this.space(), this.print(a, e2);
  }, t.TSInterfaceBody = function(e2) {
    this.tsPrintTypeLiteralOrInterfaceBody(e2.body, e2);
  }, t.TSTypeAliasDeclaration = function(e2) {
    var t2 = e2.declare, r2 = e2.id, n2 = e2.typeParameters, i = e2.typeAnnotation;
    t2 && (this.word("declare"), this.space());
    this.word("type"), this.space(), this.print(r2, e2), this.print(n2, e2), this.space(), this.token("="), this.space(), this.print(i, e2), this.token(";");
  }, t.TSAsExpression = function(e2) {
    var t2 = e2.expression, r2 = e2.typeAnnotation;
    this.print(t2, e2), this.space(), this.word("as"), this.space(), this.print(r2, e2);
  }, t.TSTypeAssertion = function(e2) {
    var t2 = e2.typeAnnotation, r2 = e2.expression;
    this.token("<"), this.print(t2, e2), this.token(">"), this.space(), this.print(r2, e2);
  }, t.TSEnumDeclaration = function(e2) {
    var t2 = e2.declare, r2 = e2.const, n2 = e2.id, i = e2.members;
    t2 && (this.word("declare"), this.space());
    r2 && (this.word("const"), this.space());
    this.word("enum"), this.space(), this.print(n2, e2), this.space(), this.tsPrintBraced(i, e2);
  }, t.TSEnumMember = function(e2) {
    var t2 = e2.id, r2 = e2.initializer;
    this.print(t2, e2), r2 && (this.space(), this.token("="), this.space(), this.print(r2, e2));
    this.token(",");
  }, t.TSModuleDeclaration = function(e2) {
    var t2 = e2.declare, r2 = e2.id;
    t2 && (this.word("declare"), this.space());
    e2.global || (this.word("Identifier" === r2.type ? "namespace" : "module"), this.space());
    if (this.print(r2, e2), !e2.body) return void this.token(";");
    var n2 = e2.body;
    for (; "TSModuleDeclaration" === n2.type; ) this.token("."), this.print(n2.id, n2), n2 = n2.body;
    this.space(), this.print(n2, e2);
  }, t.TSModuleBlock = function(e2) {
    this.tsPrintBraced(e2.body, e2);
  }, t.TSImportEqualsDeclaration = function(e2) {
    var t2 = e2.isExport, r2 = e2.id, n2 = e2.moduleReference;
    t2 && (this.word("export"), this.space());
    this.word("import"), this.space(), this.print(r2, e2), this.space(), this.token("="), this.space(), this.print(n2, e2), this.token(";");
  }, t.TSExternalModuleReference = function(e2) {
    this.token("require("), this.print(e2.expression, e2), this.token(")");
  }, t.TSNonNullExpression = function(e2) {
    this.print(e2.expression, e2), this.token("!");
  }, t.TSExportAssignment = function(e2) {
    this.word("export"), this.space(), this.token("="), this.space(), this.print(e2.expression, e2), this.token(";");
  }, t.TSNamespaceExportDeclaration = function(e2) {
    this.word("export"), this.space(), this.word("as"), this.space(), this.word("namespace"), this.space(), this.print(e2.id, e2);
  }, t.tsPrintSignatureDeclarationBase = function(e2) {
    var t2 = e2.typeParameters, r2 = e2.parameters;
    this.print(t2, e2), this.token("("), this._parameters(r2, e2), this.token(")"), this.print(e2.typeAnnotation, e2);
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    this.space();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.JSXAttribute = function(e2) {
    this.print(e2.name, e2), e2.value && (this.token("="), this.print(e2.value, e2));
  }, t.JSXIdentifier = function(e2) {
    this.word(e2.name);
  }, t.JSXNamespacedName = function(e2) {
    this.print(e2.namespace, e2), this.token(":"), this.print(e2.name, e2);
  }, t.JSXMemberExpression = function(e2) {
    this.print(e2.object, e2), this.token("."), this.print(e2.property, e2);
  }, t.JSXSpreadAttribute = function(e2) {
    this.token("{"), this.token("..."), this.print(e2.argument, e2), this.token("}");
  }, t.JSXExpressionContainer = function(e2) {
    this.token("{"), this.print(e2.expression, e2), this.token("}");
  }, t.JSXSpreadChild = function(e2) {
    this.token("{"), this.token("..."), this.print(e2.expression, e2), this.token("}");
  }, t.JSXText = function(e2) {
    var t2 = this.getPossibleRaw(e2);
    null != t2 ? this.token(t2) : this.token(e2.value);
  }, t.JSXElement = function(e2) {
    var t2 = e2.openingElement;
    if (this.print(t2, e2), t2.selfClosing) return;
    this.indent();
    var r2 = true, n2 = false, i = void 0;
    try {
      for (var a, o = e2.children[Symbol.iterator](); !(r2 = (a = o.next()).done); r2 = true) {
        var s = a.value;
        this.print(s, e2);
      }
    } catch (e3) {
      n2 = true, i = e3;
    } finally {
      try {
        r2 || null == o.return || o.return();
      } finally {
        if (n2) throw i;
      }
    }
    this.dedent(), this.print(e2.closingElement, e2);
  }, t.JSXOpeningElement = function(e2) {
    this.token("<"), this.print(e2.name, e2), this.print(e2.typeParameters, e2), e2.attributes.length > 0 && (this.space(), this.printJoin(e2.attributes, e2, { separator: n }));
    e2.selfClosing ? (this.space(), this.token("/>")) : this.token(">");
  }, t.JSXClosingElement = function(e2) {
    this.token("</"), this.print(e2.name, e2), this.token(">");
  }, t.JSXEmptyExpression = function(e2) {
    this.printInnerComments(e2);
  }, t.JSXFragment = function(e2) {
    this.print(e2.openingFragment, e2), this.indent();
    var t2 = true, r2 = false, n2 = void 0;
    try {
      for (var i, a = e2.children[Symbol.iterator](); !(t2 = (i = a.next()).done); t2 = true) {
        var o = i.value;
        this.print(o, e2);
      }
    } catch (e3) {
      r2 = true, n2 = e3;
    } finally {
      try {
        t2 || null == a.return || a.return();
      } finally {
        if (r2) throw n2;
      }
    }
    this.dedent(), this.print(e2.closingFragment, e2);
  }, t.JSXOpeningFragment = function() {
    this.token("<"), this.token(">");
  }, t.JSXClosingFragment = function() {
    this.token("</"), this.token(">");
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.File = function(e2) {
    e2.program && this.print(e2.program.interpreter, e2);
    this.print(e2.program, e2);
  }, t.Program = function(e2) {
    this.printInnerComments(e2, false), this.printSequence(e2.directives, e2), e2.directives && e2.directives.length && this.newline();
    this.printSequence(e2.body, e2);
  }, t.BlockStatement = function(e2) {
    this.token("{"), this.printInnerComments(e2);
    var t2 = e2.directives && e2.directives.length;
    e2.body.length || t2 ? (this.newline(), this.printSequence(e2.directives, e2, { indent: true }), t2 && this.newline(), this.printSequence(e2.body, e2, { indent: true }), this.removeTrailingNewline(), this.source("end", e2.loc), this.endsWith("\n") || this.newline(), this.rightBrace()) : (this.source("end", e2.loc), this.token("}"));
  }, t.Noop = function() {
  }, t.Directive = function(e2) {
    this.print(e2.value, e2), this.semicolon();
  }, t.InterpreterDirective = function(e2) {
    this.token("#!".concat(e2.value, "\n"));
  }, Object.defineProperty(t, "DirectiveLiteral", { enumerable: true, get: function() {
    return n.StringLiteral;
  } });
  var n = r(105);
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.AnyTypeAnnotation = function() {
    this.word("any");
  }, t.ArrayTypeAnnotation = function(e2) {
    this.print(e2.elementType, e2), this.token("["), this.token("]");
  }, t.BooleanTypeAnnotation = function() {
    this.word("boolean");
  }, t.BooleanLiteralTypeAnnotation = function(e2) {
    this.word(e2.value ? "true" : "false");
  }, t.NullLiteralTypeAnnotation = function() {
    this.word("null");
  }, t.DeclareClass = function(e2, t2) {
    n().isDeclareExportDeclaration(t2) || (this.word("declare"), this.space());
    this.word("class"), this.space(), this._interfaceish(e2);
  }, t.DeclareFunction = function(e2, t2) {
    n().isDeclareExportDeclaration(t2) || (this.word("declare"), this.space());
    this.word("function"), this.space(), this.print(e2.id, e2), this.print(e2.id.typeAnnotation.typeAnnotation, e2), e2.predicate && (this.space(), this.print(e2.predicate, e2));
    this.semicolon();
  }, t.InferredPredicate = function() {
    this.token("%"), this.word("checks");
  }, t.DeclaredPredicate = function(e2) {
    this.token("%"), this.word("checks"), this.token("("), this.print(e2.value, e2), this.token(")");
  }, t.DeclareInterface = function(e2) {
    this.word("declare"), this.space(), this.InterfaceDeclaration(e2);
  }, t.DeclareModule = function(e2) {
    this.word("declare"), this.space(), this.word("module"), this.space(), this.print(e2.id, e2), this.space(), this.print(e2.body, e2);
  }, t.DeclareModuleExports = function(e2) {
    this.word("declare"), this.space(), this.word("module"), this.token("."), this.word("exports"), this.print(e2.typeAnnotation, e2);
  }, t.DeclareTypeAlias = function(e2) {
    this.word("declare"), this.space(), this.TypeAlias(e2);
  }, t.DeclareOpaqueType = function(e2, t2) {
    n().isDeclareExportDeclaration(t2) || (this.word("declare"), this.space());
    this.OpaqueType(e2);
  }, t.DeclareVariable = function(e2, t2) {
    n().isDeclareExportDeclaration(t2) || (this.word("declare"), this.space());
    this.word("var"), this.space(), this.print(e2.id, e2), this.print(e2.id.typeAnnotation, e2), this.semicolon();
  }, t.DeclareExportDeclaration = function(e2) {
    this.word("declare"), this.space(), this.word("export"), this.space(), e2.default && (this.word("default"), this.space());
    (function(e3) {
      if (e3.declaration) {
        var t2 = e3.declaration;
        this.print(t2, e3), n().isStatement(t2) || this.semicolon();
      } else this.token("{"), e3.specifiers.length && (this.space(), this.printList(e3.specifiers, e3), this.space()), this.token("}"), e3.source && (this.space(), this.word("from"), this.space(), this.print(e3.source, e3)), this.semicolon();
    }).apply(this, arguments);
  }, t.DeclareExportAllDeclaration = function() {
    this.word("declare"), this.space(), i.ExportAllDeclaration.apply(this, arguments);
  }, t.ExistsTypeAnnotation = function() {
    this.token("*");
  }, t.FunctionTypeAnnotation = function(e2, t2) {
    this.print(e2.typeParameters, e2), this.token("("), this.printList(e2.params, e2), e2.rest && (e2.params.length && (this.token(","), this.space()), this.token("..."), this.print(e2.rest, e2));
    this.token(")"), "ObjectTypeCallProperty" === t2.type || "DeclareFunction" === t2.type || "ObjectTypeProperty" === t2.type && t2.method ? this.token(":") : (this.space(), this.token("=>"));
    this.space(), this.print(e2.returnType, e2);
  }, t.FunctionTypeParam = function(e2) {
    this.print(e2.name, e2), e2.optional && this.token("?");
    e2.name && (this.token(":"), this.space());
    this.print(e2.typeAnnotation, e2);
  }, t.GenericTypeAnnotation = t.ClassImplements = t.InterfaceExtends = function(e2) {
    this.print(e2.id, e2), this.print(e2.typeParameters, e2);
  }, t._interfaceish = function(e2) {
    this.print(e2.id, e2), this.print(e2.typeParameters, e2), e2.extends.length && (this.space(), this.word("extends"), this.space(), this.printList(e2.extends, e2));
    e2.mixins && e2.mixins.length && (this.space(), this.word("mixins"), this.space(), this.printList(e2.mixins, e2));
    e2.implements && e2.implements.length && (this.space(), this.word("implements"), this.space(), this.printList(e2.implements, e2));
    this.space(), this.print(e2.body, e2);
  }, t._variance = function(e2) {
    e2.variance && ("plus" === e2.variance.kind ? this.token("+") : "minus" === e2.variance.kind && this.token("-"));
  }, t.InterfaceDeclaration = function(e2) {
    this.word("interface"), this.space(), this._interfaceish(e2);
  }, t.InterfaceTypeAnnotation = function(e2) {
    this.word("interface"), e2.extends && e2.extends.length && (this.space(), this.word("extends"), this.space(), this.printList(e2.extends, e2));
    this.space(), this.print(e2.body, e2);
  }, t.IntersectionTypeAnnotation = function(e2) {
    this.printJoin(e2.types, e2, { separator: o });
  }, t.MixedTypeAnnotation = function() {
    this.word("mixed");
  }, t.EmptyTypeAnnotation = function() {
    this.word("empty");
  }, t.NullableTypeAnnotation = function(e2) {
    this.token("?"), this.print(e2.typeAnnotation, e2);
  }, t.NumberTypeAnnotation = function() {
    this.word("number");
  }, t.StringTypeAnnotation = function() {
    this.word("string");
  }, t.ThisTypeAnnotation = function() {
    this.word("this");
  }, t.TupleTypeAnnotation = function(e2) {
    this.token("["), this.printList(e2.types, e2), this.token("]");
  }, t.TypeofTypeAnnotation = function(e2) {
    this.word("typeof"), this.space(), this.print(e2.argument, e2);
  }, t.TypeAlias = function(e2) {
    this.word("type"), this.space(), this.print(e2.id, e2), this.print(e2.typeParameters, e2), this.space(), this.token("="), this.space(), this.print(e2.right, e2), this.semicolon();
  }, t.TypeAnnotation = function(e2) {
    this.token(":"), this.space(), e2.optional && this.token("?");
    this.print(e2.typeAnnotation, e2);
  }, t.TypeParameterDeclaration = t.TypeParameterInstantiation = function(e2) {
    this.token("<"), this.printList(e2.params, e2, {}), this.token(">");
  }, t.TypeParameter = function(e2) {
    this._variance(e2), this.word(e2.name), e2.bound && this.print(e2.bound, e2);
    e2.default && (this.space(), this.token("="), this.space(), this.print(e2.default, e2));
  }, t.OpaqueType = function(e2) {
    this.word("opaque"), this.space(), this.word("type"), this.space(), this.print(e2.id, e2), this.print(e2.typeParameters, e2), e2.supertype && (this.token(":"), this.space(), this.print(e2.supertype, e2));
    e2.impltype && (this.space(), this.token("="), this.space(), this.print(e2.impltype, e2));
    this.semicolon();
  }, t.ObjectTypeAnnotation = function(e2) {
    var t2 = this;
    e2.exact ? this.token("{|") : this.token("{");
    var r2 = e2.properties.concat(e2.callProperties || [], e2.indexers || [], e2.internalSlots || []);
    r2.length && (this.space(), this.printJoin(r2, e2, { addNewlines: function(e3) {
      if (e3 && !r2[0]) return 1;
    }, indent: true, statement: true, iterator: function() {
      1 !== r2.length && (t2.token(","), t2.space());
    } }), this.space());
    e2.exact ? this.token("|}") : this.token("}");
  }, t.ObjectTypeInternalSlot = function(e2) {
    e2.static && (this.word("static"), this.space());
    this.token("["), this.token("["), this.print(e2.id, e2), this.token("]"), this.token("]"), e2.optional && this.token("?");
    e2.method || (this.token(":"), this.space());
    this.print(e2.value, e2);
  }, t.ObjectTypeCallProperty = function(e2) {
    e2.static && (this.word("static"), this.space());
    this.print(e2.value, e2);
  }, t.ObjectTypeIndexer = function(e2) {
    e2.static && (this.word("static"), this.space());
    this._variance(e2), this.token("["), e2.id && (this.print(e2.id, e2), this.token(":"), this.space());
    this.print(e2.key, e2), this.token("]"), this.token(":"), this.space(), this.print(e2.value, e2);
  }, t.ObjectTypeProperty = function(e2) {
    e2.proto && (this.word("proto"), this.space());
    e2.static && (this.word("static"), this.space());
    this._variance(e2), this.print(e2.key, e2), e2.optional && this.token("?");
    e2.method || (this.token(":"), this.space());
    this.print(e2.value, e2);
  }, t.ObjectTypeSpreadProperty = function(e2) {
    this.token("..."), this.print(e2.argument, e2);
  }, t.QualifiedTypeIdentifier = function(e2) {
    this.print(e2.qualification, e2), this.token("."), this.print(e2.id, e2);
  }, t.UnionTypeAnnotation = function(e2) {
    this.printJoin(e2.types, e2, { separator: s });
  }, t.TypeCastExpression = function(e2) {
    this.token("("), this.print(e2.expression, e2), this.print(e2.typeAnnotation, e2), this.token(")");
  }, t.Variance = function(e2) {
    "plus" === e2.kind ? this.token("+") : this.token("-");
  }, t.VoidTypeAnnotation = function() {
    this.word("void");
  }, Object.defineProperty(t, "NumberLiteralTypeAnnotation", { enumerable: true, get: function() {
    return a.NumericLiteral;
  } }), Object.defineProperty(t, "StringLiteralTypeAnnotation", { enumerable: true, get: function() {
    return a.StringLiteral;
  } });
  var i = r(156), a = r(105);
  function o() {
    this.space(), this.token("&"), this.space();
  }
  function s() {
    this.space(), this.token("|"), this.space();
  }
}, function(e, t, r) {
  "use strict";
  var n = {}.toString;
  e.exports = Array.isArray || function(e2) {
    return "[object Array]" == n.call(e2);
  };
}, function(e, t, r) {
  "use strict";
  t.read = function(e2, t2, r2, n, i) {
    var a, o, s = 8 * i - n - 1, u = (1 << s) - 1, l = u >> 1, c = -7, f = r2 ? i - 1 : 0, p = r2 ? -1 : 1, d = e2[t2 + f];
    for (f += p, a = d & (1 << -c) - 1, d >>= -c, c += s; c > 0; a = 256 * a + e2[t2 + f], f += p, c -= 8) ;
    for (o = a & (1 << -c) - 1, a >>= -c, c += n; c > 0; o = 256 * o + e2[t2 + f], f += p, c -= 8) ;
    if (0 === a) a = 1 - l;
    else {
      if (a === u) return o ? NaN : 1 / 0 * (d ? -1 : 1);
      o += Math.pow(2, n), a -= l;
    }
    return (d ? -1 : 1) * o * Math.pow(2, a - n);
  }, t.write = function(e2, t2, r2, n, i, a) {
    var o, s, u, l = 8 * a - i - 1, c = (1 << l) - 1, f = c >> 1, p = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : a - 1, h = n ? 1 : -1, v = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
    for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (s = isNaN(t2) ? 1 : 0, o = c) : (o = Math.floor(Math.log(t2) / Math.LN2), t2 * (u = Math.pow(2, -o)) < 1 && (o--, u *= 2), (t2 += o + f >= 1 ? p / u : p * Math.pow(2, 1 - f)) * u >= 2 && (o++, u /= 2), o + f >= c ? (s = 0, o = c) : o + f >= 1 ? (s = (t2 * u - 1) * Math.pow(2, i), o += f) : (s = t2 * Math.pow(2, f - 1) * Math.pow(2, i), o = 0)); i >= 8; e2[r2 + d] = 255 & s, d += h, s /= 256, i -= 8) ;
    for (o = o << i | s, l += i; l > 0; e2[r2 + d] = 255 & o, d += h, o /= 256, l -= 8) ;
    e2[r2 + d - h] |= 128 * v;
  };
}, function(e, t, r) {
  "use strict";
  t.byteLength = function(e2) {
    return 3 * e2.length / 4 - l(e2);
  }, t.toByteArray = function(e2) {
    var t2, r2, n2, o2, s2, u2 = e2.length;
    o2 = l(e2), s2 = new a(3 * u2 / 4 - o2), r2 = o2 > 0 ? u2 - 4 : u2;
    var c2 = 0;
    for (t2 = 0; t2 < r2; t2 += 4) n2 = i[e2.charCodeAt(t2)] << 18 | i[e2.charCodeAt(t2 + 1)] << 12 | i[e2.charCodeAt(t2 + 2)] << 6 | i[e2.charCodeAt(t2 + 3)], s2[c2++] = n2 >> 16 & 255, s2[c2++] = n2 >> 8 & 255, s2[c2++] = 255 & n2;
    2 === o2 ? (n2 = i[e2.charCodeAt(t2)] << 2 | i[e2.charCodeAt(t2 + 1)] >> 4, s2[c2++] = 255 & n2) : 1 === o2 && (n2 = i[e2.charCodeAt(t2)] << 10 | i[e2.charCodeAt(t2 + 1)] << 4 | i[e2.charCodeAt(t2 + 2)] >> 2, s2[c2++] = n2 >> 8 & 255, s2[c2++] = 255 & n2);
    return s2;
  }, t.fromByteArray = function(e2) {
    for (var t2, r2 = e2.length, i2 = r2 % 3, a2 = "", o2 = [], s2 = 0, u2 = r2 - i2; s2 < u2; s2 += 16383) o2.push(f(e2, s2, s2 + 16383 > u2 ? u2 : s2 + 16383));
    1 === i2 ? (t2 = e2[r2 - 1], a2 += n[t2 >> 2], a2 += n[t2 << 4 & 63], a2 += "==") : 2 === i2 && (t2 = (e2[r2 - 2] << 8) + e2[r2 - 1], a2 += n[t2 >> 10], a2 += n[t2 >> 4 & 63], a2 += n[t2 << 2 & 63], a2 += "=");
    return o2.push(a2), o2.join("");
  };
  for (var n = [], i = [], a = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, u = o.length; s < u; ++s) n[s] = o[s], i[o.charCodeAt(s)] = s;
  function l(e2) {
    var t2 = e2.length;
    if (t2 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
    return "=" === e2[t2 - 2] ? 2 : "=" === e2[t2 - 1] ? 1 : 0;
  }
  function c(e2) {
    return n[e2 >> 18 & 63] + n[e2 >> 12 & 63] + n[e2 >> 6 & 63] + n[63 & e2];
  }
  function f(e2, t2, r2) {
    for (var n2, i2 = [], a2 = t2; a2 < r2; a2 += 3) n2 = (e2[a2] << 16) + (e2[a2 + 1] << 8) + e2[a2 + 2], i2.push(c(n2));
    return i2.join("");
  }
  i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
     * @license  MIT
     */
    var n = r(532), i = r(531), a = r(530);
    function o() {
      return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    }
    function s(e3, t2) {
      if (o() < t2) throw new RangeError("Invalid typed array length");
      return u.TYPED_ARRAY_SUPPORT ? (e3 = new Uint8Array(t2)).__proto__ = u.prototype : (null === e3 && (e3 = new u(t2)), e3.length = t2), e3;
    }
    function u(e3, t2, r2) {
      if (!(u.TYPED_ARRAY_SUPPORT || this instanceof u)) return new u(e3, t2, r2);
      if ("number" == typeof e3) {
        if ("string" == typeof t2) throw new Error("If encoding is specified then the first argument must be a string");
        return f(this, e3);
      }
      return l(this, e3, t2, r2);
    }
    function l(e3, t2, r2, n2) {
      if ("number" == typeof t2) throw new TypeError('"value" argument must not be a number');
      return "undefined" != typeof ArrayBuffer && t2 instanceof ArrayBuffer ? (function(e4, t3, r3, n3) {
        if (t3.byteLength, r3 < 0 || t3.byteLength < r3) throw new RangeError("'offset' is out of bounds");
        if (t3.byteLength < r3 + (n3 || 0)) throw new RangeError("'length' is out of bounds");
        t3 = void 0 === r3 && void 0 === n3 ? new Uint8Array(t3) : void 0 === n3 ? new Uint8Array(t3, r3) : new Uint8Array(t3, r3, n3);
        u.TYPED_ARRAY_SUPPORT ? (e4 = t3).__proto__ = u.prototype : e4 = p(e4, t3);
        return e4;
      })(e3, t2, r2, n2) : "string" == typeof t2 ? (function(e4, t3, r3) {
        "string" == typeof r3 && "" !== r3 || (r3 = "utf8");
        if (!u.isEncoding(r3)) throw new TypeError('"encoding" must be a valid string encoding');
        var n3 = 0 | h(t3, r3), i2 = (e4 = s(e4, n3)).write(t3, r3);
        i2 !== n3 && (e4 = e4.slice(0, i2));
        return e4;
      })(e3, t2, r2) : (function(e4, t3) {
        if (u.isBuffer(t3)) {
          var r3 = 0 | d(t3.length);
          return 0 === (e4 = s(e4, r3)).length ? e4 : (t3.copy(e4, 0, 0, r3), e4);
        }
        if (t3) {
          if ("undefined" != typeof ArrayBuffer && t3.buffer instanceof ArrayBuffer || "length" in t3) return "number" != typeof t3.length || (function(e5) {
            return e5 != e5;
          })(t3.length) ? s(e4, 0) : p(e4, t3);
          if ("Buffer" === t3.type && a(t3.data)) return p(e4, t3.data);
        }
        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
      })(e3, t2);
    }
    function c(e3) {
      if ("number" != typeof e3) throw new TypeError('"size" argument must be a number');
      if (e3 < 0) throw new RangeError('"size" argument must not be negative');
    }
    function f(e3, t2) {
      if (c(t2), e3 = s(e3, t2 < 0 ? 0 : 0 | d(t2)), !u.TYPED_ARRAY_SUPPORT) for (var r2 = 0; r2 < t2; ++r2) e3[r2] = 0;
      return e3;
    }
    function p(e3, t2) {
      var r2 = t2.length < 0 ? 0 : 0 | d(t2.length);
      e3 = s(e3, r2);
      for (var n2 = 0; n2 < r2; n2 += 1) e3[n2] = 255 & t2[n2];
      return e3;
    }
    function d(e3) {
      if (e3 >= o()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o().toString(16) + " bytes");
      return 0 | e3;
    }
    function h(e3, t2) {
      if (u.isBuffer(e3)) return e3.length;
      if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer)) return e3.byteLength;
      "string" != typeof e3 && (e3 = "" + e3);
      var r2 = e3.length;
      if (0 === r2) return 0;
      for (var n2 = false; ; ) switch (t2) {
        case "ascii":
        case "latin1":
        case "binary":
          return r2;
        case "utf8":
        case "utf-8":
        case void 0:
          return L(e3).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return 2 * r2;
        case "hex":
          return r2 >>> 1;
        case "base64":
          return $(e3).length;
        default:
          if (n2) return L(e3).length;
          t2 = ("" + t2).toLowerCase(), n2 = true;
      }
    }
    function v(e3, t2, r2) {
      var n2 = e3[t2];
      e3[t2] = e3[r2], e3[r2] = n2;
    }
    function y(e3, t2, r2, n2, i2) {
      if (0 === e3.length) return -1;
      if ("string" == typeof r2 ? (n2 = r2, r2 = 0) : r2 > 2147483647 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), r2 = +r2, isNaN(r2) && (r2 = i2 ? 0 : e3.length - 1), r2 < 0 && (r2 = e3.length + r2), r2 >= e3.length) {
        if (i2) return -1;
        r2 = e3.length - 1;
      } else if (r2 < 0) {
        if (!i2) return -1;
        r2 = 0;
      }
      if ("string" == typeof t2 && (t2 = u.from(t2, n2)), u.isBuffer(t2)) return 0 === t2.length ? -1 : m(e3, t2, r2, n2, i2);
      if ("number" == typeof t2) return t2 &= 255, u.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e3, t2, r2) : Uint8Array.prototype.lastIndexOf.call(e3, t2, r2) : m(e3, [t2], r2, n2, i2);
      throw new TypeError("val must be string, number or Buffer");
    }
    function m(e3, t2, r2, n2, i2) {
      var a2, o2 = 1, s2 = e3.length, u2 = t2.length;
      if (void 0 !== n2 && ("ucs2" === (n2 = String(n2).toLowerCase()) || "ucs-2" === n2 || "utf16le" === n2 || "utf-16le" === n2)) {
        if (e3.length < 2 || t2.length < 2) return -1;
        o2 = 2, s2 /= 2, u2 /= 2, r2 /= 2;
      }
      function l2(e4, t3) {
        return 1 === o2 ? e4[t3] : e4.readUInt16BE(t3 * o2);
      }
      if (i2) {
        var c2 = -1;
        for (a2 = r2; a2 < s2; a2++) if (l2(e3, a2) === l2(t2, -1 === c2 ? 0 : a2 - c2)) {
          if (-1 === c2 && (c2 = a2), a2 - c2 + 1 === u2) return c2 * o2;
        } else -1 !== c2 && (a2 -= a2 - c2), c2 = -1;
      } else for (r2 + u2 > s2 && (r2 = s2 - u2), a2 = r2; a2 >= 0; a2--) {
        for (var f2 = true, p2 = 0; p2 < u2; p2++) if (l2(e3, a2 + p2) !== l2(t2, p2)) {
          f2 = false;
          break;
        }
        if (f2) return a2;
      }
      return -1;
    }
    function b(e3, t2, r2, n2) {
      r2 = Number(r2) || 0;
      var i2 = e3.length - r2;
      n2 ? (n2 = Number(n2)) > i2 && (n2 = i2) : n2 = i2;
      var a2 = t2.length;
      if (a2 % 2 != 0) throw new TypeError("Invalid hex string");
      n2 > a2 / 2 && (n2 = a2 / 2);
      for (var o2 = 0; o2 < n2; ++o2) {
        var s2 = parseInt(t2.substr(2 * o2, 2), 16);
        if (isNaN(s2)) return o2;
        e3[r2 + o2] = s2;
      }
      return o2;
    }
    function g(e3, t2, r2, n2) {
      return G(L(t2, e3.length - r2), e3, r2, n2);
    }
    function w(e3, t2, r2, n2) {
      return G((function(e4) {
        for (var t3 = [], r3 = 0; r3 < e4.length; ++r3) t3.push(255 & e4.charCodeAt(r3));
        return t3;
      })(t2), e3, r2, n2);
    }
    function E(e3, t2, r2, n2) {
      return w(e3, t2, r2, n2);
    }
    function S(e3, t2, r2, n2) {
      return G($(t2), e3, r2, n2);
    }
    function T(e3, t2, r2, n2) {
      return G((function(e4, t3) {
        for (var r3, n3, i2, a2 = [], o2 = 0; o2 < e4.length && !((t3 -= 2) < 0); ++o2) r3 = e4.charCodeAt(o2), n3 = r3 >> 8, i2 = r3 % 256, a2.push(i2), a2.push(n3);
        return a2;
      })(t2, e3.length - r2), e3, r2, n2);
    }
    function A(e3, t2, r2) {
      return 0 === t2 && r2 === e3.length ? n.fromByteArray(e3) : n.fromByteArray(e3.slice(t2, r2));
    }
    function C(e3, t2, r2) {
      r2 = Math.min(e3.length, r2);
      for (var n2 = [], i2 = t2; i2 < r2; ) {
        var a2, o2, s2, u2, l2 = e3[i2], c2 = null, f2 = l2 > 239 ? 4 : l2 > 223 ? 3 : l2 > 191 ? 2 : 1;
        if (i2 + f2 <= r2) switch (f2) {
          case 1:
            l2 < 128 && (c2 = l2);
            break;
          case 2:
            128 == (192 & (a2 = e3[i2 + 1])) && (u2 = (31 & l2) << 6 | 63 & a2) > 127 && (c2 = u2);
            break;
          case 3:
            a2 = e3[i2 + 1], o2 = e3[i2 + 2], 128 == (192 & a2) && 128 == (192 & o2) && (u2 = (15 & l2) << 12 | (63 & a2) << 6 | 63 & o2) > 2047 && (u2 < 55296 || u2 > 57343) && (c2 = u2);
            break;
          case 4:
            a2 = e3[i2 + 1], o2 = e3[i2 + 2], s2 = e3[i2 + 3], 128 == (192 & a2) && 128 == (192 & o2) && 128 == (192 & s2) && (u2 = (15 & l2) << 18 | (63 & a2) << 12 | (63 & o2) << 6 | 63 & s2) > 65535 && u2 < 1114112 && (c2 = u2);
        }
        null === c2 ? (c2 = 65533, f2 = 1) : c2 > 65535 && (c2 -= 65536, n2.push(c2 >>> 10 & 1023 | 55296), c2 = 56320 | 1023 & c2), n2.push(c2), i2 += f2;
      }
      return (function(e4) {
        var t3 = e4.length;
        if (t3 <= P) return String.fromCharCode.apply(String, e4);
        var r3 = "", n3 = 0;
        for (; n3 < t3; ) r3 += String.fromCharCode.apply(String, e4.slice(n3, n3 += P));
        return r3;
      })(n2);
    }
    t.Buffer = u, t.SlowBuffer = function(e3) {
      +e3 != e3 && (e3 = 0);
      return u.alloc(+e3);
    }, t.INSPECT_MAX_BYTES = 50, u.TYPED_ARRAY_SUPPORT = void 0 !== e2.TYPED_ARRAY_SUPPORT ? e2.TYPED_ARRAY_SUPPORT : (function() {
      try {
        var e3 = new Uint8Array(1);
        return e3.__proto__ = { __proto__: Uint8Array.prototype, foo: function() {
          return 42;
        } }, 42 === e3.foo() && "function" == typeof e3.subarray && 0 === e3.subarray(1, 1).byteLength;
      } catch (e4) {
        return false;
      }
    })(), t.kMaxLength = o(), u.poolSize = 8192, u._augment = function(e3) {
      return e3.__proto__ = u.prototype, e3;
    }, u.from = function(e3, t2, r2) {
      return l(null, e3, t2, r2);
    }, u.TYPED_ARRAY_SUPPORT && (u.prototype.__proto__ = Uint8Array.prototype, u.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && u[Symbol.species] === u && Object.defineProperty(u, Symbol.species, { value: null, configurable: true })), u.alloc = function(e3, t2, r2) {
      return (function(e4, t3, r3, n2) {
        return c(t3), t3 <= 0 ? s(e4, t3) : void 0 !== r3 ? "string" == typeof n2 ? s(e4, t3).fill(r3, n2) : s(e4, t3).fill(r3) : s(e4, t3);
      })(null, e3, t2, r2);
    }, u.allocUnsafe = function(e3) {
      return f(null, e3);
    }, u.allocUnsafeSlow = function(e3) {
      return f(null, e3);
    }, u.isBuffer = function(e3) {
      return !(null == e3 || !e3._isBuffer);
    }, u.compare = function(e3, t2) {
      if (!u.isBuffer(e3) || !u.isBuffer(t2)) throw new TypeError("Arguments must be Buffers");
      if (e3 === t2) return 0;
      for (var r2 = e3.length, n2 = t2.length, i2 = 0, a2 = Math.min(r2, n2); i2 < a2; ++i2) if (e3[i2] !== t2[i2]) {
        r2 = e3[i2], n2 = t2[i2];
        break;
      }
      return r2 < n2 ? -1 : n2 < r2 ? 1 : 0;
    }, u.isEncoding = function(e3) {
      switch (String(e3).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    }, u.concat = function(e3, t2) {
      if (!a(e3)) throw new TypeError('"list" argument must be an Array of Buffers');
      if (0 === e3.length) return u.alloc(0);
      var r2;
      if (void 0 === t2) for (t2 = 0, r2 = 0; r2 < e3.length; ++r2) t2 += e3[r2].length;
      var n2 = u.allocUnsafe(t2), i2 = 0;
      for (r2 = 0; r2 < e3.length; ++r2) {
        var o2 = e3[r2];
        if (!u.isBuffer(o2)) throw new TypeError('"list" argument must be an Array of Buffers');
        o2.copy(n2, i2), i2 += o2.length;
      }
      return n2;
    }, u.byteLength = h, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
      var e3 = this.length;
      if (e3 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (var t2 = 0; t2 < e3; t2 += 2) v(this, t2, t2 + 1);
      return this;
    }, u.prototype.swap32 = function() {
      var e3 = this.length;
      if (e3 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (var t2 = 0; t2 < e3; t2 += 4) v(this, t2, t2 + 3), v(this, t2 + 1, t2 + 2);
      return this;
    }, u.prototype.swap64 = function() {
      var e3 = this.length;
      if (e3 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (var t2 = 0; t2 < e3; t2 += 8) v(this, t2, t2 + 7), v(this, t2 + 1, t2 + 6), v(this, t2 + 2, t2 + 5), v(this, t2 + 3, t2 + 4);
      return this;
    }, u.prototype.toString = function() {
      var e3 = 0 | this.length;
      return 0 === e3 ? "" : 0 === arguments.length ? C(this, 0, e3) : function(e4, t2, r2) {
        var n2 = false;
        if ((void 0 === t2 || t2 < 0) && (t2 = 0), t2 > this.length) return "";
        if ((void 0 === r2 || r2 > this.length) && (r2 = this.length), r2 <= 0) return "";
        if ((r2 >>>= 0) <= (t2 >>>= 0)) return "";
        for (e4 || (e4 = "utf8"); ; ) switch (e4) {
          case "hex":
            return _(this, t2, r2);
          case "utf8":
          case "utf-8":
            return C(this, t2, r2);
          case "ascii":
            return O(this, t2, r2);
          case "latin1":
          case "binary":
            return x(this, t2, r2);
          case "base64":
            return A(this, t2, r2);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return V(this, t2, r2);
          default:
            if (n2) throw new TypeError("Unknown encoding: " + e4);
            e4 = (e4 + "").toLowerCase(), n2 = true;
        }
      }.apply(this, arguments);
    }, u.prototype.equals = function(e3) {
      if (!u.isBuffer(e3)) throw new TypeError("Argument must be a Buffer");
      return this === e3 || 0 === u.compare(this, e3);
    }, u.prototype.inspect = function() {
      var e3 = "", r2 = t.INSPECT_MAX_BYTES;
      return this.length > 0 && (e3 = this.toString("hex", 0, r2).match(/.{2}/g).join(" "), this.length > r2 && (e3 += " ... ")), "<Buffer " + e3 + ">";
    }, u.prototype.compare = function(e3, t2, r2, n2, i2) {
      if (!u.isBuffer(e3)) throw new TypeError("Argument must be a Buffer");
      if (void 0 === t2 && (t2 = 0), void 0 === r2 && (r2 = e3 ? e3.length : 0), void 0 === n2 && (n2 = 0), void 0 === i2 && (i2 = this.length), t2 < 0 || r2 > e3.length || n2 < 0 || i2 > this.length) throw new RangeError("out of range index");
      if (n2 >= i2 && t2 >= r2) return 0;
      if (n2 >= i2) return -1;
      if (t2 >= r2) return 1;
      if (this === e3) return 0;
      for (var a2 = (i2 >>>= 0) - (n2 >>>= 0), o2 = (r2 >>>= 0) - (t2 >>>= 0), s2 = Math.min(a2, o2), l2 = this.slice(n2, i2), c2 = e3.slice(t2, r2), f2 = 0; f2 < s2; ++f2) if (l2[f2] !== c2[f2]) {
        a2 = l2[f2], o2 = c2[f2];
        break;
      }
      return a2 < o2 ? -1 : o2 < a2 ? 1 : 0;
    }, u.prototype.includes = function(e3, t2, r2) {
      return -1 !== this.indexOf(e3, t2, r2);
    }, u.prototype.indexOf = function(e3, t2, r2) {
      return y(this, e3, t2, r2, true);
    }, u.prototype.lastIndexOf = function(e3, t2, r2) {
      return y(this, e3, t2, r2, false);
    }, u.prototype.write = function(e3, t2, r2, n2) {
      if (void 0 === t2) n2 = "utf8", r2 = this.length, t2 = 0;
      else if (void 0 === r2 && "string" == typeof t2) n2 = t2, r2 = this.length, t2 = 0;
      else {
        if (!isFinite(t2)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        t2 |= 0, isFinite(r2) ? (r2 |= 0, void 0 === n2 && (n2 = "utf8")) : (n2 = r2, r2 = void 0);
      }
      var i2 = this.length - t2;
      if ((void 0 === r2 || r2 > i2) && (r2 = i2), e3.length > 0 && (r2 < 0 || t2 < 0) || t2 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
      n2 || (n2 = "utf8");
      for (var a2 = false; ; ) switch (n2) {
        case "hex":
          return b(this, e3, t2, r2);
        case "utf8":
        case "utf-8":
          return g(this, e3, t2, r2);
        case "ascii":
          return w(this, e3, t2, r2);
        case "latin1":
        case "binary":
          return E(this, e3, t2, r2);
        case "base64":
          return S(this, e3, t2, r2);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return T(this, e3, t2, r2);
        default:
          if (a2) throw new TypeError("Unknown encoding: " + n2);
          n2 = ("" + n2).toLowerCase(), a2 = true;
      }
    }, u.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    var P = 4096;
    function O(e3, t2, r2) {
      var n2 = "";
      r2 = Math.min(e3.length, r2);
      for (var i2 = t2; i2 < r2; ++i2) n2 += String.fromCharCode(127 & e3[i2]);
      return n2;
    }
    function x(e3, t2, r2) {
      var n2 = "";
      r2 = Math.min(e3.length, r2);
      for (var i2 = t2; i2 < r2; ++i2) n2 += String.fromCharCode(e3[i2]);
      return n2;
    }
    function _(e3, t2, r2) {
      var n2 = e3.length;
      (!t2 || t2 < 0) && (t2 = 0), (!r2 || r2 < 0 || r2 > n2) && (r2 = n2);
      for (var i2 = "", a2 = t2; a2 < r2; ++a2) i2 += B(e3[a2]);
      return i2;
    }
    function V(e3, t2, r2) {
      for (var n2 = e3.slice(t2, r2), i2 = "", a2 = 0; a2 < n2.length; a2 += 2) i2 += String.fromCharCode(n2[a2] + 256 * n2[a2 + 1]);
      return i2;
    }
    function D(e3, t2, r2) {
      if (e3 % 1 != 0 || e3 < 0) throw new RangeError("offset is not uint");
      if (e3 + t2 > r2) throw new RangeError("Trying to access beyond buffer length");
    }
    function N(e3, t2, r2, n2, i2, a2) {
      if (!u.isBuffer(e3)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (t2 > i2 || t2 < a2) throw new RangeError('"value" argument is out of bounds');
      if (r2 + n2 > e3.length) throw new RangeError("Index out of range");
    }
    function I(e3, t2, r2, n2) {
      t2 < 0 && (t2 = 65535 + t2 + 1);
      for (var i2 = 0, a2 = Math.min(e3.length - r2, 2); i2 < a2; ++i2) e3[r2 + i2] = (t2 & 255 << 8 * (n2 ? i2 : 1 - i2)) >>> 8 * (n2 ? i2 : 1 - i2);
    }
    function k(e3, t2, r2, n2) {
      t2 < 0 && (t2 = 4294967295 + t2 + 1);
      for (var i2 = 0, a2 = Math.min(e3.length - r2, 4); i2 < a2; ++i2) e3[r2 + i2] = t2 >>> 8 * (n2 ? i2 : 3 - i2) & 255;
    }
    function j(e3, t2, r2, n2, i2, a2) {
      if (r2 + n2 > e3.length) throw new RangeError("Index out of range");
      if (r2 < 0) throw new RangeError("Index out of range");
    }
    function F(e3, t2, r2, n2, a2) {
      return a2 || j(e3, 0, r2, 4), i.write(e3, t2, r2, n2, 23, 4), r2 + 4;
    }
    function R(e3, t2, r2, n2, a2) {
      return a2 || j(e3, 0, r2, 8), i.write(e3, t2, r2, n2, 52, 8), r2 + 8;
    }
    u.prototype.slice = function(e3, t2) {
      var r2, n2 = this.length;
      if ((e3 = ~~e3) < 0 ? (e3 += n2) < 0 && (e3 = 0) : e3 > n2 && (e3 = n2), (t2 = void 0 === t2 ? n2 : ~~t2) < 0 ? (t2 += n2) < 0 && (t2 = 0) : t2 > n2 && (t2 = n2), t2 < e3 && (t2 = e3), u.TYPED_ARRAY_SUPPORT) (r2 = this.subarray(e3, t2)).__proto__ = u.prototype;
      else {
        var i2 = t2 - e3;
        r2 = new u(i2, void 0);
        for (var a2 = 0; a2 < i2; ++a2) r2[a2] = this[a2 + e3];
      }
      return r2;
    }, u.prototype.readUIntLE = function(e3, t2, r2) {
      e3 |= 0, t2 |= 0, r2 || D(e3, t2, this.length);
      for (var n2 = this[e3], i2 = 1, a2 = 0; ++a2 < t2 && (i2 *= 256); ) n2 += this[e3 + a2] * i2;
      return n2;
    }, u.prototype.readUIntBE = function(e3, t2, r2) {
      e3 |= 0, t2 |= 0, r2 || D(e3, t2, this.length);
      for (var n2 = this[e3 + --t2], i2 = 1; t2 > 0 && (i2 *= 256); ) n2 += this[e3 + --t2] * i2;
      return n2;
    }, u.prototype.readUInt8 = function(e3, t2) {
      return t2 || D(e3, 1, this.length), this[e3];
    }, u.prototype.readUInt16LE = function(e3, t2) {
      return t2 || D(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
    }, u.prototype.readUInt16BE = function(e3, t2) {
      return t2 || D(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
    }, u.prototype.readUInt32LE = function(e3, t2) {
      return t2 || D(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
    }, u.prototype.readUInt32BE = function(e3, t2) {
      return t2 || D(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
    }, u.prototype.readIntLE = function(e3, t2, r2) {
      e3 |= 0, t2 |= 0, r2 || D(e3, t2, this.length);
      for (var n2 = this[e3], i2 = 1, a2 = 0; ++a2 < t2 && (i2 *= 256); ) n2 += this[e3 + a2] * i2;
      return n2 >= (i2 *= 128) && (n2 -= Math.pow(2, 8 * t2)), n2;
    }, u.prototype.readIntBE = function(e3, t2, r2) {
      e3 |= 0, t2 |= 0, r2 || D(e3, t2, this.length);
      for (var n2 = t2, i2 = 1, a2 = this[e3 + --n2]; n2 > 0 && (i2 *= 256); ) a2 += this[e3 + --n2] * i2;
      return a2 >= (i2 *= 128) && (a2 -= Math.pow(2, 8 * t2)), a2;
    }, u.prototype.readInt8 = function(e3, t2) {
      return t2 || D(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
    }, u.prototype.readInt16LE = function(e3, t2) {
      t2 || D(e3, 2, this.length);
      var r2 = this[e3] | this[e3 + 1] << 8;
      return 32768 & r2 ? 4294901760 | r2 : r2;
    }, u.prototype.readInt16BE = function(e3, t2) {
      t2 || D(e3, 2, this.length);
      var r2 = this[e3 + 1] | this[e3] << 8;
      return 32768 & r2 ? 4294901760 | r2 : r2;
    }, u.prototype.readInt32LE = function(e3, t2) {
      return t2 || D(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
    }, u.prototype.readInt32BE = function(e3, t2) {
      return t2 || D(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
    }, u.prototype.readFloatLE = function(e3, t2) {
      return t2 || D(e3, 4, this.length), i.read(this, e3, true, 23, 4);
    }, u.prototype.readFloatBE = function(e3, t2) {
      return t2 || D(e3, 4, this.length), i.read(this, e3, false, 23, 4);
    }, u.prototype.readDoubleLE = function(e3, t2) {
      return t2 || D(e3, 8, this.length), i.read(this, e3, true, 52, 8);
    }, u.prototype.readDoubleBE = function(e3, t2) {
      return t2 || D(e3, 8, this.length), i.read(this, e3, false, 52, 8);
    }, u.prototype.writeUIntLE = function(e3, t2, r2, n2) {
      (e3 = +e3, t2 |= 0, r2 |= 0, n2) || N(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
      var i2 = 1, a2 = 0;
      for (this[t2] = 255 & e3; ++a2 < r2 && (i2 *= 256); ) this[t2 + a2] = e3 / i2 & 255;
      return t2 + r2;
    }, u.prototype.writeUIntBE = function(e3, t2, r2, n2) {
      (e3 = +e3, t2 |= 0, r2 |= 0, n2) || N(this, e3, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
      var i2 = r2 - 1, a2 = 1;
      for (this[t2 + i2] = 255 & e3; --i2 >= 0 && (a2 *= 256); ) this[t2 + i2] = e3 / a2 & 255;
      return t2 + r2;
    }, u.prototype.writeUInt8 = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 1, 255, 0), u.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), this[t2] = 255 & e3, t2 + 1;
    }, u.prototype.writeUInt16LE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : I(this, e3, t2, true), t2 + 2;
    }, u.prototype.writeUInt16BE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 65535, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : I(this, e3, t2, false), t2 + 2;
    }, u.prototype.writeUInt32LE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2 + 3] = e3 >>> 24, this[t2 + 2] = e3 >>> 16, this[t2 + 1] = e3 >>> 8, this[t2] = 255 & e3) : k(this, e3, t2, true), t2 + 4;
    }, u.prototype.writeUInt32BE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 4294967295, 0), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : k(this, e3, t2, false), t2 + 4;
    }, u.prototype.writeIntLE = function(e3, t2, r2, n2) {
      if (e3 = +e3, t2 |= 0, !n2) {
        var i2 = Math.pow(2, 8 * r2 - 1);
        N(this, e3, t2, r2, i2 - 1, -i2);
      }
      var a2 = 0, o2 = 1, s2 = 0;
      for (this[t2] = 255 & e3; ++a2 < r2 && (o2 *= 256); ) e3 < 0 && 0 === s2 && 0 !== this[t2 + a2 - 1] && (s2 = 1), this[t2 + a2] = (e3 / o2 >> 0) - s2 & 255;
      return t2 + r2;
    }, u.prototype.writeIntBE = function(e3, t2, r2, n2) {
      if (e3 = +e3, t2 |= 0, !n2) {
        var i2 = Math.pow(2, 8 * r2 - 1);
        N(this, e3, t2, r2, i2 - 1, -i2);
      }
      var a2 = r2 - 1, o2 = 1, s2 = 0;
      for (this[t2 + a2] = 255 & e3; --a2 >= 0 && (o2 *= 256); ) e3 < 0 && 0 === s2 && 0 !== this[t2 + a2 + 1] && (s2 = 1), this[t2 + a2] = (e3 / o2 >> 0) - s2 & 255;
      return t2 + r2;
    }, u.prototype.writeInt8 = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 1, 127, -128), u.TYPED_ARRAY_SUPPORT || (e3 = Math.floor(e3)), e3 < 0 && (e3 = 255 + e3 + 1), this[t2] = 255 & e3, t2 + 1;
    }, u.prototype.writeInt16LE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8) : I(this, e3, t2, true), t2 + 2;
    }, u.prototype.writeInt16BE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 2, 32767, -32768), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 8, this[t2 + 1] = 255 & e3) : I(this, e3, t2, false), t2 + 2;
    }, u.prototype.writeInt32LE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 2147483647, -2147483648), u.TYPED_ARRAY_SUPPORT ? (this[t2] = 255 & e3, this[t2 + 1] = e3 >>> 8, this[t2 + 2] = e3 >>> 16, this[t2 + 3] = e3 >>> 24) : k(this, e3, t2, true), t2 + 4;
    }, u.prototype.writeInt32BE = function(e3, t2, r2) {
      return e3 = +e3, t2 |= 0, r2 || N(this, e3, t2, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), u.TYPED_ARRAY_SUPPORT ? (this[t2] = e3 >>> 24, this[t2 + 1] = e3 >>> 16, this[t2 + 2] = e3 >>> 8, this[t2 + 3] = 255 & e3) : k(this, e3, t2, false), t2 + 4;
    }, u.prototype.writeFloatLE = function(e3, t2, r2) {
      return F(this, e3, t2, true, r2);
    }, u.prototype.writeFloatBE = function(e3, t2, r2) {
      return F(this, e3, t2, false, r2);
    }, u.prototype.writeDoubleLE = function(e3, t2, r2) {
      return R(this, e3, t2, true, r2);
    }, u.prototype.writeDoubleBE = function(e3, t2, r2) {
      return R(this, e3, t2, false, r2);
    }, u.prototype.copy = function(e3, t2, r2, n2) {
      if (r2 || (r2 = 0), n2 || 0 === n2 || (n2 = this.length), t2 >= e3.length && (t2 = e3.length), t2 || (t2 = 0), n2 > 0 && n2 < r2 && (n2 = r2), n2 === r2) return 0;
      if (0 === e3.length || 0 === this.length) return 0;
      if (t2 < 0) throw new RangeError("targetStart out of bounds");
      if (r2 < 0 || r2 >= this.length) throw new RangeError("sourceStart out of bounds");
      if (n2 < 0) throw new RangeError("sourceEnd out of bounds");
      n2 > this.length && (n2 = this.length), e3.length - t2 < n2 - r2 && (n2 = e3.length - t2 + r2);
      var i2, a2 = n2 - r2;
      if (this === e3 && r2 < t2 && t2 < n2) for (i2 = a2 - 1; i2 >= 0; --i2) e3[i2 + t2] = this[i2 + r2];
      else if (a2 < 1e3 || !u.TYPED_ARRAY_SUPPORT) for (i2 = 0; i2 < a2; ++i2) e3[i2 + t2] = this[i2 + r2];
      else Uint8Array.prototype.set.call(e3, this.subarray(r2, r2 + a2), t2);
      return a2;
    }, u.prototype.fill = function(e3, t2, r2, n2) {
      if ("string" == typeof e3) {
        if ("string" == typeof t2 ? (n2 = t2, t2 = 0, r2 = this.length) : "string" == typeof r2 && (n2 = r2, r2 = this.length), 1 === e3.length) {
          var i2 = e3.charCodeAt(0);
          i2 < 256 && (e3 = i2);
        }
        if (void 0 !== n2 && "string" != typeof n2) throw new TypeError("encoding must be a string");
        if ("string" == typeof n2 && !u.isEncoding(n2)) throw new TypeError("Unknown encoding: " + n2);
      } else "number" == typeof e3 && (e3 &= 255);
      if (t2 < 0 || this.length < t2 || this.length < r2) throw new RangeError("Out of range index");
      if (r2 <= t2) return this;
      var a2;
      if (t2 >>>= 0, r2 = void 0 === r2 ? this.length : r2 >>> 0, e3 || (e3 = 0), "number" == typeof e3) for (a2 = t2; a2 < r2; ++a2) this[a2] = e3;
      else {
        var o2 = u.isBuffer(e3) ? e3 : L(new u(e3, n2).toString()), s2 = o2.length;
        for (a2 = 0; a2 < r2 - t2; ++a2) this[a2 + t2] = o2[a2 % s2];
      }
      return this;
    };
    var M = /[^+\/0-9A-Za-z-_]/g;
    function B(e3) {
      return e3 < 16 ? "0" + e3.toString(16) : e3.toString(16);
    }
    function L(e3, t2) {
      var r2;
      t2 = t2 || 1 / 0;
      for (var n2 = e3.length, i2 = null, a2 = [], o2 = 0; o2 < n2; ++o2) {
        if ((r2 = e3.charCodeAt(o2)) > 55295 && r2 < 57344) {
          if (!i2) {
            if (r2 > 56319) {
              (t2 -= 3) > -1 && a2.push(239, 191, 189);
              continue;
            }
            if (o2 + 1 === n2) {
              (t2 -= 3) > -1 && a2.push(239, 191, 189);
              continue;
            }
            i2 = r2;
            continue;
          }
          if (r2 < 56320) {
            (t2 -= 3) > -1 && a2.push(239, 191, 189), i2 = r2;
            continue;
          }
          r2 = 65536 + (i2 - 55296 << 10 | r2 - 56320);
        } else i2 && (t2 -= 3) > -1 && a2.push(239, 191, 189);
        if (i2 = null, r2 < 128) {
          if ((t2 -= 1) < 0) break;
          a2.push(r2);
        } else if (r2 < 2048) {
          if ((t2 -= 2) < 0) break;
          a2.push(r2 >> 6 | 192, 63 & r2 | 128);
        } else if (r2 < 65536) {
          if ((t2 -= 3) < 0) break;
          a2.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
        } else {
          if (!(r2 < 1114112)) throw new Error("Invalid code point");
          if ((t2 -= 4) < 0) break;
          a2.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
        }
      }
      return a2;
    }
    function $(e3) {
      return n.toByteArray((function(e4) {
        if ((e4 = (function(e5) {
          return e5.trim ? e5.trim() : e5.replace(/^\s+|\s+$/g, "");
        })(e4).replace(M, "")).length < 2) return "";
        for (; e4.length % 4 != 0; ) e4 += "=";
        return e4;
      })(e3));
    }
    function G(e3, t2, r2, n2) {
      for (var i2 = 0; i2 < n2 && !(i2 + r2 >= t2.length || i2 >= e3.length); ++i2) t2[i2 + r2] = e3[i2];
      return i2;
    }
  }).call(this, r(55));
}, function(e, t, r) {
  "use strict";
  (function(t2) {
    var r2 = {}, n = r2.hasOwnProperty, i = function(e2, t3) {
      for (var r3 in e2) n.call(e2, r3) && t3(r3, e2[r3]);
    }, a = r2.toString, o = Array.isArray, s = t2.isBuffer, u = { '"': '\\"', "'": "\\'", "\\": "\\\\", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t" }, l = /["'\\\b\f\n\r\t]/, c = /[0-9]/, f = /[ !#-&\(-\[\]-~]/, p = function e2(t3, r3) {
      var n2 = function() {
        g = b, ++r3.indentLevel, b = r3.indent.repeat(r3.indentLevel);
      }, p2 = { escapeEverything: false, minimal: false, isScriptContext: false, quotes: "single", wrap: false, es6: false, json: false, compact: true, lowercaseHex: false, numbers: "decimal", indent: "	", indentLevel: 0, __inline1__: false, __inline2__: false }, d = r3 && r3.json;
      d && (p2.quotes = "double", p2.wrap = true), "single" != (r3 = (function(e3, t4) {
        return t4 ? (i(t4, function(t5, r4) {
          e3[t5] = r4;
        }), e3) : e3;
      })(p2, r3)).quotes && "double" != r3.quotes && "backtick" != r3.quotes && (r3.quotes = "single");
      var h, v = "double" == r3.quotes ? '"' : "backtick" == r3.quotes ? "`" : "'", y = r3.compact, m = r3.lowercaseHex, b = r3.indent.repeat(r3.indentLevel), g = "", w = r3.__inline1__, E = r3.__inline2__, S = y ? "" : "\n", T = true, A = "binary" == r3.numbers, C = "octal" == r3.numbers, P = "decimal" == r3.numbers, O = "hexadecimal" == r3.numbers;
      if (d && t3 && /* @__PURE__ */ (function(e3) {
        return "function" == typeof e3;
      })(t3.toJSON) && (t3 = t3.toJSON()), !(function(e3) {
        return "string" == typeof e3 || "[object String]" == a.call(e3);
      })(t3)) {
        if ((function(e3) {
          return "[object Map]" == a.call(e3);
        })(t3)) return 0 == t3.size ? "new Map()" : (y || (r3.__inline1__ = true, r3.__inline2__ = false), "new Map(" + e2(Array.from(t3), r3) + ")");
        if ((function(e3) {
          return "[object Set]" == a.call(e3);
        })(t3)) return 0 == t3.size ? "new Set()" : "new Set(" + e2(Array.from(t3), r3) + ")";
        if (s(t3)) return 0 == t3.length ? "Buffer.from([])" : "Buffer.from(" + e2(Array.from(t3), r3) + ")";
        if (o(t3)) return h = [], r3.wrap = true, w && (r3.__inline1__ = false, r3.__inline2__ = true), E || n2(), (function(e3, t4) {
          for (var r4 = e3.length, n3 = -1; ++n3 < r4; ) t4(e3[n3]);
        })(t3, function(t4) {
          T = false, E && (r3.__inline2__ = false), h.push((y || E ? "" : b) + e2(t4, r3));
        }), T ? "[]" : E ? "[" + h.join(", ") + "]" : "[" + S + h.join("," + S) + S + (y ? "" : g) + "]";
        if (!(function(e3) {
          return "number" == typeof e3 || "[object Number]" == a.call(e3);
        })(t3)) return (function(e3) {
          return "[object Object]" == a.call(e3);
        })(t3) ? (h = [], r3.wrap = true, n2(), i(t3, function(t4, n3) {
          T = false, h.push((y ? "" : b) + e2(t4, r3) + ":" + (y ? "" : " ") + e2(n3, r3));
        }), T ? "{}" : "{" + S + h.join("," + S) + S + (y ? "" : g) + "}") : d ? JSON.stringify(t3) || "null" : String(t3);
        if (d) return JSON.stringify(t3);
        if (P) return String(t3);
        if (O) {
          var x = t3.toString(16);
          return m || (x = x.toUpperCase()), "0x" + x;
        }
        if (A) return "0b" + t3.toString(2);
        if (C) return "0o" + t3.toString(8);
      }
      var _ = t3, V = -1, D = _.length;
      for (h = ""; ++V < D; ) {
        var N = _.charAt(V);
        if (r3.es6) {
          var I = _.charCodeAt(V);
          if (I >= 55296 && I <= 56319 && D > V + 1) {
            var k = _.charCodeAt(V + 1);
            if (k >= 56320 && k <= 57343) {
              var j = (1024 * (I - 55296) + k - 56320 + 65536).toString(16);
              m || (j = j.toUpperCase()), h += "\\u{" + j + "}", ++V;
              continue;
            }
          }
        }
        if (!r3.escapeEverything) {
          if (f.test(N)) {
            h += N;
            continue;
          }
          if ('"' == N) {
            h += v == N ? '\\"' : N;
            continue;
          }
          if ("`" == N) {
            h += v == N ? "\\`" : N;
            continue;
          }
          if ("'" == N) {
            h += v == N ? "\\'" : N;
            continue;
          }
        }
        if ("\0" != N || d || c.test(_.charAt(V + 1))) if (l.test(N)) h += u[N];
        else {
          var F = N.charCodeAt(0);
          if (r3.minimal && 8232 != F && 8233 != F) h += N;
          else {
            var R = F.toString(16);
            m || (R = R.toUpperCase());
            var M = R.length > 2 || d, B = "\\" + (M ? "u" : "x") + ("0000" + R).slice(M ? -4 : -2);
            h += B;
          }
        }
        else h += "\\0";
      }
      return r3.wrap && (h = v + h + v), "`" == v && (h = h.replace(/\$\{/g, "\\${")), r3.isScriptContext ? h.replace(/<\/(script|style)/gi, "<\\/$1").replace(/<!--/g, d ? "\\u003C!--" : "\\x3C!--") : h;
    };
    p.version = "2.5.1", e.exports = p;
  }).call(this, r(533).Buffer);
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t._params = function(e2) {
    this.print(e2.typeParameters, e2), this.token("("), this._parameters(e2.params, e2), this.token(")"), this.print(e2.returnType, e2);
  }, t._parameters = function(e2, t2) {
    for (var r2 = 0; r2 < e2.length; r2++) this._param(e2[r2], t2), r2 < e2.length - 1 && (this.token(","), this.space());
  }, t._param = function(e2, t2) {
    this.printJoin(e2.decorators, e2), this.print(e2, t2), e2.optional && this.token("?");
    this.print(e2.typeAnnotation, e2);
  }, t._methodHead = function(e2) {
    var t2 = e2.kind, r2 = e2.key;
    "get" !== t2 && "set" !== t2 || (this.word(t2), this.space());
    e2.async && (this.word("async"), this.space());
    "method" !== t2 && "init" !== t2 || e2.generator && this.token("*");
    e2.computed ? (this.token("["), this.print(r2, e2), this.token("]")) : this.print(r2, e2);
    e2.optional && this.token("?");
    this._params(e2);
  }, t._predicate = function(e2) {
    e2.predicate && (e2.returnType || this.token(":"), this.space(), this.print(e2.predicate, e2));
  }, t._functionHead = function(e2) {
    e2.async && (this.word("async"), this.space());
    this.word("function"), e2.generator && this.token("*");
    this.space(), e2.id && this.print(e2.id, e2);
    this._params(e2), this._predicate(e2);
  }, t.FunctionDeclaration = t.FunctionExpression = function(e2) {
    this._functionHead(e2), this.space(), this.print(e2.body, e2);
  }, t.ArrowFunctionExpression = function(e2) {
    e2.async && (this.word("async"), this.space());
    var t2 = e2.params[0];
    1 === e2.params.length && n().isIdentifier(t2) && !(function(e3, t3) {
      return e3.typeParameters || e3.returnType || t3.typeAnnotation || t3.optional || t3.trailingComments;
    })(e2, t2) ? this.print(t2, e2) : this._params(e2);
    this._predicate(e2), this.space(), this.token("=>"), this.space(), this.print(e2.body, e2);
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.ClassExpression = t.ClassDeclaration = function(e2, t2) {
    this.format.decoratorsBeforeExport && (n().isExportDefaultDeclaration(t2) || n().isExportNamedDeclaration(t2)) || this.printJoin(e2.decorators, e2);
    e2.declare && (this.word("declare"), this.space());
    e2.abstract && (this.word("abstract"), this.space());
    this.word("class"), e2.id && (this.space(), this.print(e2.id, e2));
    this.print(e2.typeParameters, e2), e2.superClass && (this.space(), this.word("extends"), this.space(), this.print(e2.superClass, e2), this.print(e2.superTypeParameters, e2));
    e2.implements && (this.space(), this.word("implements"), this.space(), this.printList(e2.implements, e2));
    this.space(), this.print(e2.body, e2);
  }, t.ClassBody = function(e2) {
    this.token("{"), this.printInnerComments(e2), 0 === e2.body.length ? this.token("}") : (this.newline(), this.indent(), this.printSequence(e2.body, e2), this.dedent(), this.endsWith("\n") || this.newline(), this.rightBrace());
  }, t.ClassProperty = function(e2) {
    this.printJoin(e2.decorators, e2), e2.accessibility && (this.word(e2.accessibility), this.space());
    e2.static && (this.word("static"), this.space());
    e2.abstract && (this.word("abstract"), this.space());
    e2.readonly && (this.word("readonly"), this.space());
    e2.computed ? (this.token("["), this.print(e2.key, e2), this.token("]")) : (this._variance(e2), this.print(e2.key, e2));
    e2.optional && this.token("?");
    e2.definite && this.token("!");
    this.print(e2.typeAnnotation, e2), e2.value && (this.space(), this.token("="), this.space(), this.print(e2.value, e2));
    this.semicolon();
  }, t.ClassPrivateProperty = function(e2) {
    e2.static && (this.word("static"), this.space());
    this.print(e2.key, e2), this.print(e2.typeAnnotation, e2), e2.value && (this.space(), this.token("="), this.space(), this.print(e2.value, e2));
    this.semicolon();
  }, t.ClassMethod = function(e2) {
    this._classMethodHead(e2), this.space(), this.print(e2.body, e2);
  }, t._classMethodHead = function(e2) {
    this.printJoin(e2.decorators, e2), e2.accessibility && (this.word(e2.accessibility), this.space());
    e2.abstract && (this.word("abstract"), this.space());
    e2.static && (this.word("static"), this.space());
    this._methodHead(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.WithStatement = function(e2) {
    this.word("with"), this.space(), this.token("("), this.print(e2.object, e2), this.token(")"), this.printBlock(e2);
  }, t.IfStatement = function(e2) {
    this.word("if"), this.space(), this.token("("), this.print(e2.test, e2), this.token(")"), this.space();
    var t2 = e2.alternate && n().isIfStatement((function e3(t3) {
      if (!n().isStatement(t3.body)) return t3;
      return e3(t3.body);
    })(e2.consequent));
    t2 && (this.token("{"), this.newline(), this.indent());
    this.printAndIndentOnComments(e2.consequent, e2), t2 && (this.dedent(), this.newline(), this.token("}"));
    e2.alternate && (this.endsWith("}") && this.space(), this.word("else"), this.space(), this.printAndIndentOnComments(e2.alternate, e2));
  }, t.ForStatement = function(e2) {
    this.word("for"), this.space(), this.token("("), this.inForStatementInitCounter++, this.print(e2.init, e2), this.inForStatementInitCounter--, this.token(";"), e2.test && (this.space(), this.print(e2.test, e2));
    this.token(";"), e2.update && (this.space(), this.print(e2.update, e2));
    this.token(")"), this.printBlock(e2);
  }, t.WhileStatement = function(e2) {
    this.word("while"), this.space(), this.token("("), this.print(e2.test, e2), this.token(")"), this.printBlock(e2);
  }, t.DoWhileStatement = function(e2) {
    this.word("do"), this.space(), this.print(e2.body, e2), this.space(), this.word("while"), this.space(), this.token("("), this.print(e2.test, e2), this.token(")"), this.semicolon();
  }, t.LabeledStatement = function(e2) {
    this.print(e2.label, e2), this.token(":"), this.space(), this.print(e2.body, e2);
  }, t.TryStatement = function(e2) {
    this.word("try"), this.space(), this.print(e2.block, e2), this.space(), e2.handlers ? this.print(e2.handlers[0], e2) : this.print(e2.handler, e2);
    e2.finalizer && (this.space(), this.word("finally"), this.space(), this.print(e2.finalizer, e2));
  }, t.CatchClause = function(e2) {
    this.word("catch"), this.space(), e2.param && (this.token("("), this.print(e2.param, e2), this.token(")"), this.space());
    this.print(e2.body, e2);
  }, t.SwitchStatement = function(e2) {
    this.word("switch"), this.space(), this.token("("), this.print(e2.discriminant, e2), this.token(")"), this.space(), this.token("{"), this.printSequence(e2.cases, e2, { indent: true, addNewlines: function(t2, r2) {
      if (!t2 && e2.cases[e2.cases.length - 1] === r2) return -1;
    } }), this.token("}");
  }, t.SwitchCase = function(e2) {
    e2.test ? (this.word("case"), this.space(), this.print(e2.test, e2), this.token(":")) : (this.word("default"), this.token(":"));
    e2.consequent.length && (this.newline(), this.printSequence(e2.consequent, e2, { indent: true }));
  }, t.DebuggerStatement = function() {
    this.word("debugger"), this.semicolon();
  }, t.VariableDeclaration = function(e2, t2) {
    e2.declare && (this.word("declare"), this.space());
    this.word(e2.kind), this.space();
    var r2, i2 = false;
    if (!n().isFor(t2)) {
      var a2 = true, o2 = false, s2 = void 0;
      try {
        for (var u2, l2 = e2.declarations[Symbol.iterator](); !(a2 = (u2 = l2.next()).done); a2 = true) {
          var c2 = u2.value;
          c2.init && (i2 = true);
        }
      } catch (e3) {
        o2 = true, s2 = e3;
      } finally {
        try {
          a2 || null == l2.return || l2.return();
        } finally {
          if (o2) throw s2;
        }
      }
    }
    i2 && (r2 = "const" === e2.kind ? d : p);
    if (this.printList(e2.declarations, e2, { separator: r2 }), n().isFor(t2) && (t2.left === e2 || t2.init === e2)) return;
    this.semicolon();
  }, t.VariableDeclarator = function(e2) {
    this.print(e2.id, e2), e2.definite && this.token("!");
    this.print(e2.id.typeAnnotation, e2), e2.init && (this.space(), this.token("="), this.space(), this.print(e2.init, e2));
  }, t.ThrowStatement = t.BreakStatement = t.ReturnStatement = t.ContinueStatement = t.ForOfStatement = t.ForInStatement = void 0;
  var i = function(e2) {
    return function(t2) {
      this.word("for"), this.space(), "of" === e2 && t2.await && (this.word("await"), this.space()), this.token("("), this.print(t2.left, t2), this.space(), this.word(e2), this.space(), this.print(t2.right, t2), this.token(")"), this.printBlock(t2);
    };
  }, a = i("in");
  t.ForInStatement = a;
  var o = i("of");
  function s(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "label";
    return function(r2) {
      this.word(e2);
      var n2 = r2[t2];
      if (n2) {
        this.space();
        var i2 = "label" == t2, a2 = this.startTerminatorless(i2);
        this.print(n2, r2), this.endTerminatorless(a2);
      }
      this.semicolon();
    };
  }
  t.ForOfStatement = o;
  var u = s("continue");
  t.ContinueStatement = u;
  var l = s("return", "argument");
  t.ReturnStatement = l;
  var c = s("break");
  t.BreakStatement = c;
  var f = s("throw", "argument");
  function p() {
    if (this.token(","), this.newline(), this.endsWith("\n")) for (var e2 = 0; e2 < 4; e2++) this.space(true);
  }
  function d() {
    if (this.token(","), this.newline(), this.endsWith("\n")) for (var e2 = 0; e2 < 6; e2++) this.space(true);
  }
  t.ThrowStatement = f;
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = a(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.UnaryExpression = function(e2) {
    "void" === e2.operator || "delete" === e2.operator || "typeof" === e2.operator ? (this.word(e2.operator), this.space()) : this.token(e2.operator);
    this.print(e2.argument, e2);
  }, t.DoExpression = function(e2) {
    this.word("do"), this.space(), this.print(e2.body, e2);
  }, t.ParenthesizedExpression = function(e2) {
    this.token("("), this.print(e2.expression, e2), this.token(")");
  }, t.UpdateExpression = function(e2) {
    e2.prefix ? (this.token(e2.operator), this.print(e2.argument, e2)) : (this.startTerminatorless(true), this.print(e2.argument, e2), this.endTerminatorless(), this.token(e2.operator));
  }, t.ConditionalExpression = function(e2) {
    this.print(e2.test, e2), this.space(), this.token("?"), this.space(), this.print(e2.consequent, e2), this.space(), this.token(":"), this.space(), this.print(e2.alternate, e2);
  }, t.NewExpression = function(e2, t2) {
    if (this.word("new"), this.space(), this.print(e2.callee, e2), this.format.minified && 0 === e2.arguments.length && !e2.optional && !n().isCallExpression(t2, { callee: e2 }) && !n().isMemberExpression(t2) && !n().isNewExpression(t2)) return;
    this.print(e2.typeArguments, e2), this.print(e2.typeParameters, e2), e2.optional && this.token("?.");
    this.token("("), this.printList(e2.arguments, e2), this.token(")");
  }, t.SequenceExpression = function(e2) {
    this.printList(e2.expressions, e2);
  }, t.ThisExpression = function() {
    this.word("this");
  }, t.Super = function() {
    this.word("super");
  }, t.Decorator = function(e2) {
    this.token("@"), this.print(e2.expression, e2), this.newline();
  }, t.OptionalMemberExpression = function(e2) {
    if (this.print(e2.object, e2), !e2.computed && n().isMemberExpression(e2.property)) throw new TypeError("Got a MemberExpression for MemberExpression property");
    var t2 = e2.computed;
    n().isLiteral(e2.property) && "number" == typeof e2.property.value && (t2 = true);
    e2.optional && this.token("?.");
    t2 ? (this.token("["), this.print(e2.property, e2), this.token("]")) : (e2.optional || this.token("."), this.print(e2.property, e2));
  }, t.OptionalCallExpression = function(e2) {
    this.print(e2.callee, e2), this.print(e2.typeArguments, e2), this.print(e2.typeParameters, e2), e2.optional && this.token("?.");
    this.token("("), this.printList(e2.arguments, e2), this.token(")");
  }, t.CallExpression = function(e2) {
    this.print(e2.callee, e2), this.print(e2.typeArguments, e2), this.print(e2.typeParameters, e2), this.token("("), this.printList(e2.arguments, e2), this.token(")");
  }, t.Import = function() {
    this.word("import");
  }, t.EmptyStatement = function() {
    this.semicolon(true);
  }, t.ExpressionStatement = function(e2) {
    this.print(e2.expression, e2), this.semicolon();
  }, t.AssignmentPattern = function(e2) {
    this.print(e2.left, e2), e2.left.optional && this.token("?");
    this.print(e2.left.typeAnnotation, e2), this.space(), this.token("="), this.space(), this.print(e2.right, e2);
  }, t.LogicalExpression = t.BinaryExpression = t.AssignmentExpression = function(e2, t2) {
    var r2 = this.inForStatementInitCounter && "in" === e2.operator && !i.needsParens(e2, t2);
    r2 && this.token("(");
    this.print(e2.left, e2), this.space(), "in" === e2.operator || "instanceof" === e2.operator ? this.word(e2.operator) : this.token(e2.operator);
    this.space(), this.print(e2.right, e2), r2 && this.token(")");
  }, t.BindExpression = function(e2) {
    this.print(e2.object, e2), this.token("::"), this.print(e2.callee, e2);
  }, t.MemberExpression = function(e2) {
    if (this.print(e2.object, e2), !e2.computed && n().isMemberExpression(e2.property)) throw new TypeError("Got a MemberExpression for MemberExpression property");
    var t2 = e2.computed;
    n().isLiteral(e2.property) && "number" == typeof e2.property.value && (t2 = true);
    t2 ? (this.token("["), this.print(e2.property, e2), this.token("]")) : (this.token("."), this.print(e2.property, e2));
  }, t.MetaProperty = function(e2) {
    this.print(e2.meta, e2), this.token("."), this.print(e2.property, e2);
  }, t.PrivateName = function(e2) {
    this.token("#"), this.print(e2.id, e2);
  }, t.AwaitExpression = t.YieldExpression = void 0;
  var i = a(r(157));
  function a(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  function o(e2) {
    return function(t2) {
      if (this.word(e2), t2.delegate && this.token("*"), t2.argument) {
        this.space();
        var r2 = this.startTerminatorless();
        this.print(t2.argument, t2), this.endTerminatorless(r2);
      }
    };
  }
  var s = o("yield");
  t.YieldExpression = s;
  var u = o("await");
  t.AwaitExpression = u;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.TaggedTemplateExpression = function(e2) {
    this.print(e2.tag, e2), this.print(e2.typeParameters, e2), this.print(e2.quasi, e2);
  }, t.TemplateElement = function(e2, t2) {
    var r2 = t2.quasis[0] === e2, n = t2.quasis[t2.quasis.length - 1] === e2, i = (r2 ? "`" : "}") + e2.value.raw + (n ? "`" : "${");
    this.token(i);
  }, t.TemplateLiteral = function(e2) {
    for (var t2 = e2.quasis, r2 = 0; r2 < t2.length; r2++) this.print(t2[r2], e2), r2 + 1 < t2.length && this.print(e2.expressions[r2], e2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true });
  var n = r(539);
  Object.keys(n).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return n[e2];
    } });
  });
  var i = r(538);
  Object.keys(i).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return i[e2];
    } });
  });
  var a = r(537);
  Object.keys(a).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return a[e2];
    } });
  });
  var o = r(536);
  Object.keys(o).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return o[e2];
    } });
  });
  var s = r(535);
  Object.keys(s).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return s[e2];
    } });
  });
  var u = r(156);
  Object.keys(u).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return u[e2];
    } });
  });
  var l = r(105);
  Object.keys(l).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return l[e2];
    } });
  });
  var c = r(529);
  Object.keys(c).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return c[e2];
    } });
  });
  var f = r(528);
  Object.keys(f).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return f[e2];
    } });
  });
  var p = r(527);
  Object.keys(p).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return p[e2];
    } });
  });
  var d = r(526);
  Object.keys(d).forEach(function(e2) {
    "default" !== e2 && "__esModule" !== e2 && Object.defineProperty(t, e2, { enumerable: true, get: function() {
      return d[e2];
    } });
  });
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.FunctionTypeAnnotation = t.NullableTypeAnnotation = function(e2, t2) {
    return n().isArrayTypeAnnotation(t2);
  }, t.UpdateExpression = function(e2, t2) {
    return n().isMemberExpression(t2, { object: e2 }) || n().isCallExpression(t2, { callee: e2 }) || n().isNewExpression(t2, { callee: e2 }) || a(e2, t2);
  }, t.ObjectExpression = function(e2, t2, r2) {
    return u(r2, { considerArrow: true });
  }, t.DoExpression = function(e2, t2, r2) {
    return u(r2);
  }, t.Binary = function(e2, t2) {
    if ("**" === e2.operator && n().isBinaryExpression(t2, { operator: "**" })) return t2.left === e2;
    if (a(e2, t2)) return true;
    if ((n().isCallExpression(t2) || n().isNewExpression(t2)) && t2.callee === e2 || n().isUnaryLike(t2) || n().isMemberExpression(t2) && t2.object === e2 || n().isAwaitExpression(t2)) return true;
    if (n().isBinary(t2)) {
      var r2 = t2.operator, o2 = i[r2], s2 = e2.operator, u2 = i[s2];
      if (o2 === u2 && t2.right === e2 && !n().isLogicalExpression(t2) || o2 > u2) return true;
    }
    return false;
  }, t.IntersectionTypeAnnotation = t.UnionTypeAnnotation = function(e2, t2) {
    return n().isArrayTypeAnnotation(t2) || n().isNullableTypeAnnotation(t2) || n().isIntersectionTypeAnnotation(t2) || n().isUnionTypeAnnotation(t2);
  }, t.TSAsExpression = function() {
    return true;
  }, t.TSTypeAssertion = function() {
    return true;
  }, t.BinaryExpression = function(e2, t2) {
    return "in" === e2.operator && (n().isVariableDeclarator(t2) || n().isFor(t2));
  }, t.SequenceExpression = function(e2, t2) {
    if (n().isForStatement(t2) || n().isThrowStatement(t2) || n().isReturnStatement(t2) || n().isIfStatement(t2) && t2.test === e2 || n().isWhileStatement(t2) && t2.test === e2 || n().isForInStatement(t2) && t2.right === e2 || n().isSwitchStatement(t2) && t2.discriminant === e2 || n().isExpressionStatement(t2) && t2.expression === e2) return false;
    return true;
  }, t.AwaitExpression = t.YieldExpression = function(e2, t2) {
    return n().isBinary(t2) || n().isUnaryLike(t2) || n().isCallExpression(t2) || n().isMemberExpression(t2) || n().isNewExpression(t2) || n().isConditionalExpression(t2) && e2 === t2.test || a(e2, t2);
  }, t.ClassExpression = function(e2, t2, r2) {
    return u(r2, { considerDefaultExports: true });
  }, t.UnaryLike = o, t.FunctionExpression = function(e2, t2, r2) {
    return u(r2, { considerDefaultExports: true });
  }, t.ArrowFunctionExpression = function(e2, t2) {
    return n().isExportDeclaration(t2) || s(e2, t2);
  }, t.ConditionalExpression = s, t.AssignmentExpression = function(e2) {
    return !!n().isObjectPattern(e2.left) || s.apply(void 0, arguments);
  }, t.NewExpression = function(e2, t2) {
    return a(e2, t2);
  };
  var i = { "||": 0, "&&": 1, "|": 2, "^": 3, "&": 4, "==": 5, "===": 5, "!=": 5, "!==": 5, "<": 6, ">": 6, "<=": 6, ">=": 6, in: 6, instanceof: 6, ">>": 7, "<<": 7, ">>>": 7, "+": 8, "-": 8, "*": 9, "/": 9, "%": 9, "**": 10 }, a = function(e2, t2) {
    return (n().isClassDeclaration(t2) || n().isClassExpression(t2)) && t2.superClass === e2;
  };
  function o(e2, t2) {
    return n().isMemberExpression(t2, { object: e2 }) || n().isCallExpression(t2, { callee: e2 }) || n().isNewExpression(t2, { callee: e2 }) || n().isBinaryExpression(t2, { operator: "**", left: e2 }) || a(e2, t2);
  }
  function s(e2, t2) {
    return !!(n().isUnaryLike(t2) || n().isBinary(t2) || n().isConditionalExpression(t2, { test: e2 }) || n().isAwaitExpression(t2) || n().isTaggedTemplateExpression(t2) || n().isTSTypeAssertion(t2) || n().isTSAsExpression(t2)) || o(e2, t2);
  }
  function u(e2) {
    for (var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r2 = t2.considerArrow, i2 = void 0 !== r2 && r2, a2 = t2.considerDefaultExports, o2 = void 0 !== a2 && a2, s2 = e2.length - 1, u2 = e2[s2], l = e2[--s2]; s2 > 0; ) {
      if (n().isExpressionStatement(l, { expression: u2 }) || n().isTaggedTemplateExpression(l) || o2 && n().isExportDefaultDeclaration(l, { declaration: u2 }) || i2 && n().isArrowFunctionExpression(l, { body: u2 })) return true;
      if (!(n().isCallExpression(l, { callee: u2 }) || n().isSequenceExpression(l) && l.expressions[0] === u2 || n().isMemberExpression(l, { object: u2 }) || n().isConditional(l, { test: u2 }) || n().isBinary(l, { left: u2 }) || n().isAssignmentExpression(l, { left: u2 }))) return false;
      u2 = l, l = e2[--s2];
    }
    return false;
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return i = function() {
      return e2;
    }, e2;
  }
  function a(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    return i().isMemberExpression(e2) ? (a(e2.object, t2), e2.computed && a(e2.property, t2)) : i().isBinary(e2) || i().isAssignmentExpression(e2) ? (a(e2.left, t2), a(e2.right, t2)) : i().isCallExpression(e2) ? (t2.hasCall = true, a(e2.callee, t2)) : i().isFunction(e2) ? t2.hasFunction = true : i().isIdentifier(e2) && (t2.hasHelper = t2.hasHelper || o(e2.callee)), t2;
  }
  function o(e2) {
    return i().isMemberExpression(e2) ? o(e2.object) || o(e2.property) : i().isIdentifier(e2) ? "require" === e2.name || "_" === e2.name[0] : i().isCallExpression(e2) ? o(e2.callee) : !(!i().isBinary(e2) && !i().isAssignmentExpression(e2)) && (i().isIdentifier(e2.left) && o(e2.left) || o(e2.right));
  }
  function s(e2) {
    return i().isLiteral(e2) || i().isObjectExpression(e2) || i().isArrayExpression(e2) || i().isIdentifier(e2) || i().isMemberExpression(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.list = t.nodes = void 0;
  var u = { AssignmentExpression: function(e2) {
    var t2 = a(e2.right);
    if (t2.hasCall && t2.hasHelper || t2.hasFunction) return { before: t2.hasFunction, after: true };
  }, SwitchCase: function(e2, t2) {
    return { before: e2.consequent.length || t2.cases[0] === e2, after: !e2.consequent.length && t2.cases[t2.cases.length - 1] === e2 };
  }, LogicalExpression: function(e2) {
    if (i().isFunction(e2.left) || i().isFunction(e2.right)) return { after: true };
  }, Literal: function(e2) {
    if ("use strict" === e2.value) return { after: true };
  }, CallExpression: function(e2) {
    if (i().isFunction(e2.callee) || o(e2)) return { before: true, after: true };
  }, VariableDeclaration: function(e2) {
    for (var t2 = 0; t2 < e2.declarations.length; t2++) {
      var r2 = e2.declarations[t2], n2 = o(r2.id) && !s(r2.init);
      if (!n2) {
        var i2 = a(r2.init);
        n2 = o(r2.init) && i2.hasCall || i2.hasFunction;
      }
      if (n2) return { before: true, after: true };
    }
  }, IfStatement: function(e2) {
    if (i().isBlockStatement(e2.consequent)) return { before: true, after: true };
  } };
  t.nodes = u, u.ObjectProperty = u.ObjectTypeProperty = u.ObjectMethod = function(e2, t2) {
    if (t2.properties[0] === e2) return { before: true };
  }, u.ObjectTypeCallProperty = function(e2, t2) {
    if (!(t2.callProperties[0] !== e2 || t2.properties && t2.properties.length)) return { before: true };
  }, u.ObjectTypeIndexer = function(e2, t2) {
    if (!(t2.indexers[0] !== e2 || t2.properties && t2.properties.length || t2.callProperties && t2.callProperties.length)) return { before: true };
  }, u.ObjectTypeInternalSlot = function(e2, t2) {
    if (!(t2.internalSlots[0] !== e2 || t2.properties && t2.properties.length || t2.callProperties && t2.callProperties.length || t2.indexers && t2.indexers.length)) return { before: true };
  };
  t.list = { VariableDeclaration: function(e2) {
    return e2.declarations.map(function(e3) {
      return e3.init;
    });
  }, ArrayExpression: function(e2) {
    return e2.elements;
  }, ObjectExpression: function(e2) {
    return e2.properties;
  } }, [["Function", true], ["Class", true], ["Loop", true], ["LabeledStatement", true], ["SwitchStatement", true], ["TryStatement", true]].forEach(function(e2) {
    var t2 = n(e2, 2), r2 = t2[0], a2 = t2[1];
    "boolean" == typeof a2 && (a2 = { after: a2, before: a2 }), [r2].concat(i().FLIPPED_ALIAS_KEYS[r2] || []).forEach(function(e3) {
      u[e3] = function() {
        return a2;
      };
    });
  });
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    for (var t2 = e2.length; /[\s\uFEFF\u00A0]/.test(e2[t2 - 1]); ) t2--;
    return e2.slice(0, t2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (function(e3) {
      if (Array.isArray(e3)) {
        for (var t2 = 0, r2 = new Array(e3.length); t2 < e3.length; t2++) r2[t2] = e3[t2];
        return r2;
      }
    })(e2) || (function(e3) {
      if (Symbol.iterator in Object(e3) || "[object Arguments]" === Object.prototype.toString.call(e3)) return Array.from(e3);
    })(e2) || (function() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(543));
    return a = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var o = /^[ \t]+$/, s = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._map = null, this._buf = [], this._last = "", this._queue = [], this._position = { line: 1, column: 0 }, this._sourcePosition = { identifierName: null, line: null, column: null, filename: null }, this._disallowedPop = null, this._map = t2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "get", value: function() {
      this._flush();
      var e3 = this._map, t2 = { code: (0, a().default)(this._buf.join("")), map: null, rawMappings: e3 && e3.getRawMappings() };
      return e3 && Object.defineProperty(t2, "map", { configurable: true, enumerable: true, get: function() {
        return this.map = e3.get();
      }, set: function(e4) {
        Object.defineProperty(this, "map", { value: e4, writable: true });
      } }), t2;
    } }, { key: "append", value: function(e3) {
      this._flush();
      var t2 = this._sourcePosition, r2 = t2.line, n2 = t2.column, i2 = t2.filename, a2 = t2.identifierName, o2 = t2.force;
      this._append(e3, r2, n2, a2, i2, o2);
    } }, { key: "queue", value: function(e3) {
      if ("\n" === e3) for (; this._queue.length > 0 && o.test(this._queue[0][0]); ) this._queue.shift();
      var t2 = this._sourcePosition, r2 = t2.line, n2 = t2.column, i2 = t2.filename, a2 = t2.identifierName, s2 = t2.force;
      this._queue.unshift([e3, r2, n2, a2, i2, s2]);
    } }, { key: "_flush", value: function() {
      for (var e3; e3 = this._queue.pop(); ) this._append.apply(this, n(e3));
    } }, { key: "_append", value: function(e3, t2, r2, n2, i2, a2) {
      this._map && "\n" !== e3[0] && this._map.mark(this._position.line, this._position.column, t2, r2, n2, i2, a2), this._buf.push(e3), this._last = e3[e3.length - 1];
      for (var o2 = 0; o2 < e3.length; o2++) "\n" === e3[o2] ? (this._position.line++, this._position.column = 0) : this._position.column++;
    } }, { key: "removeTrailingNewline", value: function() {
      this._queue.length > 0 && "\n" === this._queue[0][0] && this._queue.shift();
    } }, { key: "removeLastSemicolon", value: function() {
      this._queue.length > 0 && ";" === this._queue[0][0] && this._queue.shift();
    } }, { key: "endsWith", value: function(e3) {
      if (1 === e3.length) {
        var t2;
        if (this._queue.length > 0) {
          var r2 = this._queue[0][0];
          t2 = r2[r2.length - 1];
        } else t2 = this._last;
        return t2 === e3;
      }
      var n2 = this._last + this._queue.reduce(function(e4, t3) {
        return t3[0] + e4;
      }, "");
      return e3.length <= n2.length && n2.slice(-e3.length) === e3;
    } }, { key: "hasContent", value: function() {
      return this._queue.length > 0 || !!this._last;
    } }, { key: "exactSource", value: function(e3, t2) {
      this.source("start", e3, true), t2(), this.source("end", e3), this._disallowPop("start", e3);
    } }, { key: "source", value: function(e3, t2, r2) {
      e3 && !t2 || this._normalizePosition(e3, t2, this._sourcePosition, r2);
    } }, { key: "withSource", value: function(e3, t2, r2) {
      if (!this._map) return r2();
      var n2 = this._sourcePosition.line, i2 = this._sourcePosition.column, a2 = this._sourcePosition.filename, o2 = this._sourcePosition.identifierName;
      this.source(e3, t2), r2(), this._sourcePosition.force && this._sourcePosition.line === n2 && this._sourcePosition.column === i2 && this._sourcePosition.filename === a2 || this._disallowedPop && this._disallowedPop.line === n2 && this._disallowedPop.column === i2 && this._disallowedPop.filename === a2 || (this._sourcePosition.line = n2, this._sourcePosition.column = i2, this._sourcePosition.filename = a2, this._sourcePosition.identifierName = o2, this._sourcePosition.force = false, this._disallowedPop = null);
    } }, { key: "_disallowPop", value: function(e3, t2) {
      e3 && !t2 || (this._disallowedPop = this._normalizePosition(e3, t2));
    } }, { key: "_normalizePosition", value: function(e3, t2, r2, n2) {
      var i2 = t2 ? t2[e3] : null;
      void 0 === r2 && (r2 = { identifierName: null, line: null, column: null, filename: null, force: false });
      var a2 = r2.line, o2 = r2.column, s2 = r2.filename;
      return r2.identifierName = "start" === e3 && t2 && t2.identifierName || null, r2.line = i2 ? i2.line : null, r2.column = i2 ? i2.column : null, r2.filename = t2 && t2.filename || null, (n2 || r2.line !== a2 || r2.column !== o2 || r2.filename !== s2) && (r2.force = n2), r2;
    } }, { key: "getCurrentColumn", value: function() {
      var e3 = this._queue.reduce(function(e4, t3) {
        return t3[0] + e4;
      }, ""), t2 = e3.lastIndexOf("\n");
      return -1 === t2 ? this._position.column + e3.length : e3.length - 1 - t2;
    } }, { key: "getCurrentLine", value: function() {
      for (var e3 = this._queue.reduce(function(e4, t3) {
        return t3[0] + e4;
      }, ""), t2 = 0, r2 = 0; r2 < e3.length; r2++) "\n" === e3[r2] && t2++;
      return this._position.line + t2;
    } }]), e2;
  })();
  t.default = s;
}, function(e, t, r) {
  "use strict";
  var n = Array.isArray;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = null == e2 ? 0 : e2.length, i = Array(n); ++r2 < n; ) i[r2] = t2(e2[r2], r2, e2);
    return i;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(106), i = r(546), a = r(545), o = r(159), s = 1 / 0, u = n ? n.prototype : void 0, l = u ? u.toString : void 0;
  e.exports = function e2(t2) {
    if ("string" == typeof t2) return t2;
    if (a(t2)) return i(t2, e2) + "";
    if (o(t2)) return l ? l.call(t2) : "";
    var r2 = t2 + "";
    return "0" == r2 && 1 / t2 == -s ? "-0" : r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(547);
  e.exports = function(e2) {
    return null == e2 ? "" : n(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = 9007199254740991, a = /^(?:0|[1-9]\d*)$/;
  e.exports = function(e2, t2) {
    var r2 = n(e2);
    return !!(t2 = null == t2 ? i : t2) && ("number" == r2 || "symbol" != r2 && a.test(e2)) && e2 > -1 && e2 % 1 == 0 && e2 < t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = 9007199254740991;
  e.exports = function(e2) {
    return "number" == typeof e2 && e2 > -1 && e2 % 1 == 0 && e2 <= n;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(158), i = r(107), a = "[object AsyncFunction]", o = "[object Function]", s = "[object GeneratorFunction]", u = "[object Proxy]";
  e.exports = function(e2) {
    if (!i(e2)) return false;
    var t2 = n(e2);
    return t2 == o || t2 == s || t2 == a || t2 == u;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(551), i = r(550);
  e.exports = function(e2) {
    return null != e2 && i(e2.length) && !n(e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return e2 === t2 || e2 != e2 && t2 != t2;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(553), a = r(552), o = r(549), s = r(107);
  e.exports = function(e2, t2, r2) {
    if (!s(r2)) return false;
    var u = n(t2);
    return !!("number" == u ? a(r2) && o(t2, r2.length) : "string" == u && t2 in r2) && i(r2[t2], e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = 9007199254740991, i = Math.floor;
  e.exports = function(e2, t2) {
    var r2 = "";
    if (!e2 || t2 < 1 || t2 > n) return r2;
    do {
      t2 % 2 && (r2 += e2), (t2 = i(t2 / 2)) && (e2 += e2);
    } while (t2);
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(555), i = r(554), a = r(160), o = r(548);
  e.exports = function(e2, t2, r2) {
    return t2 = (r2 ? i(e2, t2, r2) : void 0 === t2) ? 1 : a(t2), n(o(e2), t2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    return null != e2 && "object" == n(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype.toString;
  e.exports = function(e2) {
    return n.call(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(106), i = Object.prototype, a = i.hasOwnProperty, o = i.toString, s = n ? n.toStringTag : void 0;
  e.exports = function(e2) {
    var t2 = a.call(e2, s), r2 = e2[s];
    try {
      e2[s] = void 0;
      var n2 = true;
    } catch (e3) {
    }
    var i2 = o.call(e2);
    return n2 && (t2 ? e2[s] = r2 : delete e2[s]), i2;
  };
}, function(e, t, r) {
  "use strict";
  (function(t2) {
    function r2(e2) {
      return (r2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
        return typeof e3;
      } : function(e3) {
        return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
      })(e2);
    }
    var n = "object" == (void 0 === t2 ? "undefined" : r2(t2)) && t2 && t2.Object === Object && t2;
    e.exports = n;
  }).call(this, r(55));
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(560), a = "object" == ("undefined" == typeof self ? "undefined" : n(self)) && self && self.Object === Object && self, o = i || a || Function("return this")();
  e.exports = o;
}, function(e, t, r) {
  "use strict";
  var n = r(107), i = r(159), a = NaN, o = /^\s+|\s+$/g, s = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, l = /^0o[0-7]+$/i, c = parseInt;
  e.exports = function(e2) {
    if ("number" == typeof e2) return e2;
    if (i(e2)) return a;
    if (n(e2)) {
      var t2 = "function" == typeof e2.valueOf ? e2.valueOf() : e2;
      e2 = n(t2) ? t2 + "" : t2;
    }
    if ("string" != typeof e2) return 0 === e2 ? e2 : +e2;
    e2 = e2.replace(o, "");
    var r2 = u.test(e2);
    return r2 || l.test(e2) ? c(e2.slice(2), r2 ? 2 : 8) : s.test(e2) ? a : +e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(562), i = 1 / 0, a = 17976931348623157e292;
  e.exports = function(e2) {
    return e2 ? (e2 = n(e2)) === i || e2 === -i ? (e2 < 0 ? -1 : 1) * a : e2 == e2 ? e2 : 0 : 0 === e2 ? e2 : 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(160);
  e.exports = function(e2) {
    return "number" == typeof e2 && e2 == n(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function i() {
    var e2 = f(r(564));
    return i = function() {
      return e2;
    }, e2;
  }
  function a() {
    var e2 = f(r(556));
    return a = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var o = f(r(544)), s = c(r(157));
  function u() {
    var e2 = c(r(5));
    return u = function() {
      return e2;
    }, e2;
  }
  var l = c(r(540));
  function c(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  }
  function f(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var p = /e/i, d = /\.0+$/, h = /^0[box]/, v = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.inForStatementInitCounter = 0, this._printStack = [], this._indent = 0, this._insideAux = false, this._printedCommentStarts = {}, this._parenPushNewlineState = null, this._noLineTerminator = false, this._printAuxAfterOnNextUserNode = false, this._printedComments = /* @__PURE__ */ new WeakSet(), this._endsWithInteger = false, this._endsWithWord = false, this.format = t2 || {}, this._buf = new o.default(r2);
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "generate", value: function(e3) {
      return this.print(e3), this._maybeAddAuxComment(), this._buf.get();
    } }, { key: "indent", value: function() {
      this.format.compact || this.format.concise || this._indent++;
    } }, { key: "dedent", value: function() {
      this.format.compact || this.format.concise || this._indent--;
    } }, { key: "semicolon", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      this._maybeAddAuxComment(), this._append(";", !e3);
    } }, { key: "rightBrace", value: function() {
      this.format.minified && this._buf.removeLastSemicolon(), this.token("}");
    } }, { key: "space", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      this.format.compact || (this._buf.hasContent() && !this.endsWith(" ") && !this.endsWith("\n") || e3) && this._space();
    } }, { key: "word", value: function(e3) {
      (this._endsWithWord || this.endsWith("/") && 0 === e3.indexOf("/")) && this._space(), this._maybeAddAuxComment(), this._append(e3), this._endsWithWord = true;
    } }, { key: "number", value: function(e3) {
      this.word(e3), this._endsWithInteger = (0, i().default)(+e3) && !h.test(e3) && !p.test(e3) && !d.test(e3) && "." !== e3[e3.length - 1];
    } }, { key: "token", value: function(e3) {
      ("--" === e3 && this.endsWith("!") || "+" === e3[0] && this.endsWith("+") || "-" === e3[0] && this.endsWith("-") || "." === e3[0] && this._endsWithInteger) && this._space(), this._maybeAddAuxComment(), this._append(e3);
    } }, { key: "newline", value: function(e3) {
      if (!this.format.retainLines && !this.format.compact) {
        if (this.format.concise) this.space();
        else if (!(this.endsWith("\n\n") || ("number" != typeof e3 && (e3 = 1), e3 = Math.min(2, e3), (this.endsWith("{\n") || this.endsWith(":\n")) && e3--, e3 <= 0))) for (var t2 = 0; t2 < e3; t2++) this._newline();
      }
    } }, { key: "endsWith", value: function(e3) {
      return this._buf.endsWith(e3);
    } }, { key: "removeTrailingNewline", value: function() {
      this._buf.removeTrailingNewline();
    } }, { key: "exactSource", value: function(e3, t2) {
      this._catchUp("start", e3), this._buf.exactSource(e3, t2);
    } }, { key: "source", value: function(e3, t2) {
      this._catchUp(e3, t2), this._buf.source(e3, t2);
    } }, { key: "withSource", value: function(e3, t2, r2) {
      this._catchUp(e3, t2), this._buf.withSource(e3, t2, r2);
    } }, { key: "_space", value: function() {
      this._append(" ", true);
    } }, { key: "_newline", value: function() {
      this._append("\n", true);
    } }, { key: "_append", value: function(e3) {
      var t2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      this._maybeAddParen(e3), this._maybeIndent(e3), t2 ? this._buf.queue(e3) : this._buf.append(e3), this._endsWithWord = false, this._endsWithInteger = false;
    } }, { key: "_maybeIndent", value: function(e3) {
      this._indent && this.endsWith("\n") && "\n" !== e3[0] && this._buf.queue(this._getIndent());
    } }, { key: "_maybeAddParen", value: function(e3) {
      var t2 = this._parenPushNewlineState;
      if (t2) {
        var r2;
        for (this._parenPushNewlineState = null, r2 = 0; r2 < e3.length && " " === e3[r2]; r2++) ;
        if (r2 !== e3.length) {
          var n2 = e3[r2];
          if ("\n" !== n2) {
            if ("/" !== n2) return;
            if (r2 + 1 === e3.length) return;
            var i2 = e3[r2 + 1];
            if ("/" !== i2 && "*" !== i2) return;
          }
          this.token("("), this.indent(), t2.printed = true;
        }
      }
    } }, { key: "_catchUp", value: function(e3, t2) {
      if (this.format.retainLines) {
        var r2 = t2 ? t2[e3] : null;
        if (r2 && null !== r2.line) for (var n2 = r2.line - this._buf.getCurrentLine(), i2 = 0; i2 < n2; i2++) this._newline();
      }
    } }, { key: "_getIndent", value: function() {
      return (0, a().default)(this.format.indent.style, this._indent);
    } }, { key: "startTerminatorless", value: function() {
      return arguments.length > 0 && void 0 !== arguments[0] && arguments[0] ? (this._noLineTerminator = true, null) : this._parenPushNewlineState = { printed: false };
    } }, { key: "endTerminatorless", value: function(e3) {
      this._noLineTerminator = false, e3 && e3.printed && (this.dedent(), this.newline(), this.token(")"));
    } }, { key: "print", value: function(e3, t2) {
      var r2 = this;
      if (e3) {
        var n2 = this.format.concise;
        if (e3._compact && (this.format.concise = true), !this[e3.type]) throw new ReferenceError("unknown node of type ".concat(JSON.stringify(e3.type), " with constructor ").concat(JSON.stringify(e3 && e3.constructor.name)));
        this._printStack.push(e3);
        var i2 = this._insideAux;
        this._insideAux = !e3.loc, this._maybeAddAuxComment(this._insideAux && !i2);
        var a2 = s.needsParens(e3, t2, this._printStack);
        this.format.retainFunctionParens && "FunctionExpression" === e3.type && e3.extra && e3.extra.parenthesized && (a2 = true), a2 && this.token("("), this._printLeadingComments(e3, t2);
        var o2 = u().isProgram(e3) || u().isFile(e3) ? null : e3.loc;
        this.withSource("start", o2, function() {
          r2[e3.type](e3, t2);
        }), this._printTrailingComments(e3, t2), a2 && this.token(")"), this._printStack.pop(), this.format.concise = n2, this._insideAux = i2;
      }
    } }, { key: "_maybeAddAuxComment", value: function(e3) {
      e3 && this._printAuxBeforeComment(), this._insideAux || this._printAuxAfterComment();
    } }, { key: "_printAuxBeforeComment", value: function() {
      if (!this._printAuxAfterOnNextUserNode) {
        this._printAuxAfterOnNextUserNode = true;
        var e3 = this.format.auxiliaryCommentBefore;
        e3 && this._printComment({ type: "CommentBlock", value: e3 });
      }
    } }, { key: "_printAuxAfterComment", value: function() {
      if (this._printAuxAfterOnNextUserNode) {
        this._printAuxAfterOnNextUserNode = false;
        var e3 = this.format.auxiliaryCommentAfter;
        e3 && this._printComment({ type: "CommentBlock", value: e3 });
      }
    } }, { key: "getPossibleRaw", value: function(e3) {
      var t2 = e3.extra;
      if (t2 && null != t2.raw && null != t2.rawValue && e3.value === t2.rawValue) return t2.raw;
    } }, { key: "printJoin", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      if (e3 && e3.length) {
        r2.indent && this.indent();
        for (var n2 = { addNewlines: r2.addNewlines }, i2 = 0; i2 < e3.length; i2++) {
          var a2 = e3[i2];
          a2 && (r2.statement && this._printNewline(true, a2, t2, n2), this.print(a2, t2), r2.iterator && r2.iterator(a2, i2), r2.separator && i2 < e3.length - 1 && r2.separator.call(this), r2.statement && this._printNewline(false, a2, t2, n2));
        }
        r2.indent && this.dedent();
      }
    } }, { key: "printAndIndentOnComments", value: function(e3, t2) {
      var r2 = e3.leadingComments && e3.leadingComments.length > 0;
      r2 && this.indent(), this.print(e3, t2), r2 && this.dedent();
    } }, { key: "printBlock", value: function(e3) {
      var t2 = e3.body;
      u().isEmptyStatement(t2) || this.space(), this.print(t2, e3);
    } }, { key: "_printTrailingComments", value: function(e3, t2) {
      this._printComments(this._getComments(false, e3, t2));
    } }, { key: "_printLeadingComments", value: function(e3, t2) {
      this._printComments(this._getComments(true, e3, t2));
    } }, { key: "printInnerComments", value: function(e3) {
      var t2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
      e3.innerComments && e3.innerComments.length && (t2 && this.indent(), this._printComments(e3.innerComments), t2 && this.dedent());
    } }, { key: "printSequence", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      return r2.statement = true, this.printJoin(e3, t2, r2);
    } }, { key: "printList", value: function(e3, t2) {
      var r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      return null == r2.separator && (r2.separator = y), this.printJoin(e3, t2, r2);
    } }, { key: "_printNewline", value: function(e3, t2, r2, n2) {
      if (!this.format.retainLines && !this.format.compact) if (this.format.concise) this.space();
      else {
        var i2 = 0;
        if (this._buf.hasContent()) e3 || i2++, n2.addNewlines && (i2 += n2.addNewlines(e3, t2) || 0), (e3 ? s.needsWhitespaceBefore : s.needsWhitespaceAfter)(t2, r2) && i2++;
        this.newline(i2);
      }
    } }, { key: "_getComments", value: function(e3, t2) {
      return t2 && (e3 ? t2.leadingComments : t2.trailingComments) || [];
    } }, { key: "_printComment", value: function(e3) {
      var t2 = this;
      if (this.format.shouldPrintComment(e3.value) && !e3.ignore && !this._printedComments.has(e3)) {
        if (this._printedComments.add(e3), null != e3.start) {
          if (this._printedCommentStarts[e3.start]) return;
          this._printedCommentStarts[e3.start] = true;
        }
        var r2 = "CommentBlock" === e3.type;
        this.newline(this._buf.hasContent() && !this._noLineTerminator && r2 ? 1 : 0), this.endsWith("[") || this.endsWith("{") || this.space();
        var n2 = r2 || this._noLineTerminator ? "/*".concat(e3.value, "*/") : "//".concat(e3.value, "\n");
        if (r2 && this.format.indent.adjustMultilineComment) {
          var i2 = e3.loc && e3.loc.start.column;
          if (i2) {
            var o2 = new RegExp("\\n\\s{1," + i2 + "}", "g");
            n2 = n2.replace(o2, "\n");
          }
          var s2 = Math.max(this._getIndent().length, this._buf.getCurrentColumn());
          n2 = n2.replace(/\n(?!$)/g, "\n".concat((0, a().default)(" ", s2)));
        }
        this.endsWith("/") && this._space(), this.withSource("start", e3.loc, function() {
          t2._append(n2);
        }), this.newline(r2 && !this._noLineTerminator ? 1 : 0);
      }
    } }, { key: "_printComments", value: function(e3) {
      if (e3 && e3.length) {
        var t2 = true, r2 = false, n2 = void 0;
        try {
          for (var i2, a2 = e3[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
            var o2 = i2.value;
            this._printComment(o2);
          }
        } catch (e4) {
          r2 = true, n2 = e4;
        } finally {
          try {
            t2 || null == a2.return || a2.return();
          } finally {
            if (r2) throw n2;
          }
        }
      }
    } }]), e2;
  })();
  function y() {
    this.token(","), this.space();
  }
  t.default = v, Object.assign(v.prototype, l);
}, function(e, t, r) {
  "use strict";
  var n = r(163).SourceMapGenerator, i = r(60), a = /(\r?\n)/, o = "$$$isSourceNode$$$";
  function s(e2, t2, r2, n2, i2) {
    this.children = [], this.sourceContents = {}, this.line = null == e2 ? null : e2, this.column = null == t2 ? null : t2, this.source = null == r2 ? null : r2, this.name = null == i2 ? null : i2, this[o] = true, null != n2 && this.add(n2);
  }
  s.fromStringWithSourceMap = function(e2, t2, r2) {
    var n2 = new s(), o2 = e2.split(a), u = 0, l = function() {
      return e3() + (e3() || "");
      function e3() {
        return u < o2.length ? o2[u++] : void 0;
      }
    }, c = 1, f = 0, p = null;
    return t2.eachMapping(function(e3) {
      if (null !== p) {
        if (!(c < e3.generatedLine)) {
          var t3 = (r3 = o2[u]).substr(0, e3.generatedColumn - f);
          return o2[u] = r3.substr(e3.generatedColumn - f), f = e3.generatedColumn, d(p, t3), void (p = e3);
        }
        d(p, l()), c++, f = 0;
      }
      for (; c < e3.generatedLine; ) n2.add(l()), c++;
      if (f < e3.generatedColumn) {
        var r3 = o2[u];
        n2.add(r3.substr(0, e3.generatedColumn)), o2[u] = r3.substr(e3.generatedColumn), f = e3.generatedColumn;
      }
      p = e3;
    }, this), u < o2.length && (p && d(p, l()), n2.add(o2.splice(u).join(""))), t2.sources.forEach(function(e3) {
      var a2 = t2.sourceContentFor(e3);
      null != a2 && (null != r2 && (e3 = i.join(r2, e3)), n2.setSourceContent(e3, a2));
    }), n2;
    function d(e3, t3) {
      if (null === e3 || void 0 === e3.source) n2.add(t3);
      else {
        var a2 = r2 ? i.join(r2, e3.source) : e3.source;
        n2.add(new s(e3.originalLine, e3.originalColumn, a2, t3, e3.name));
      }
    }
  }, s.prototype.add = function(e2) {
    if (Array.isArray(e2)) e2.forEach(function(e3) {
      this.add(e3);
    }, this);
    else {
      if (!e2[o] && "string" != typeof e2) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e2);
      e2 && this.children.push(e2);
    }
    return this;
  }, s.prototype.prepend = function(e2) {
    if (Array.isArray(e2)) for (var t2 = e2.length - 1; t2 >= 0; t2--) this.prepend(e2[t2]);
    else {
      if (!e2[o] && "string" != typeof e2) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e2);
      this.children.unshift(e2);
    }
    return this;
  }, s.prototype.walk = function(e2) {
    for (var t2, r2 = 0, n2 = this.children.length; r2 < n2; r2++) (t2 = this.children[r2])[o] ? t2.walk(e2) : "" !== t2 && e2(t2, { source: this.source, line: this.line, column: this.column, name: this.name });
  }, s.prototype.join = function(e2) {
    var t2, r2, n2 = this.children.length;
    if (n2 > 0) {
      for (t2 = [], r2 = 0; r2 < n2 - 1; r2++) t2.push(this.children[r2]), t2.push(e2);
      t2.push(this.children[r2]), this.children = t2;
    }
    return this;
  }, s.prototype.replaceRight = function(e2, t2) {
    var r2 = this.children[this.children.length - 1];
    return r2[o] ? r2.replaceRight(e2, t2) : "string" == typeof r2 ? this.children[this.children.length - 1] = r2.replace(e2, t2) : this.children.push("".replace(e2, t2)), this;
  }, s.prototype.setSourceContent = function(e2, t2) {
    this.sourceContents[i.toSetString(e2)] = t2;
  }, s.prototype.walkSourceContents = function(e2) {
    for (var t2 = 0, r2 = this.children.length; t2 < r2; t2++) this.children[t2][o] && this.children[t2].walkSourceContents(e2);
    var n2 = Object.keys(this.sourceContents);
    for (t2 = 0, r2 = n2.length; t2 < r2; t2++) e2(i.fromSetString(n2[t2]), this.sourceContents[n2[t2]]);
  }, s.prototype.toString = function() {
    var e2 = "";
    return this.walk(function(t2) {
      e2 += t2;
    }), e2;
  }, s.prototype.toStringWithSourceMap = function(e2) {
    var t2 = { code: "", line: 1, column: 0 }, r2 = new n(e2), i2 = false, a2 = null, o2 = null, s2 = null, u = null;
    return this.walk(function(e3, n2) {
      t2.code += e3, null !== n2.source && null !== n2.line && null !== n2.column ? (a2 === n2.source && o2 === n2.line && s2 === n2.column && u === n2.name || r2.addMapping({ source: n2.source, original: { line: n2.line, column: n2.column }, generated: { line: t2.line, column: t2.column }, name: n2.name }), a2 = n2.source, o2 = n2.line, s2 = n2.column, u = n2.name, i2 = true) : i2 && (r2.addMapping({ generated: { line: t2.line, column: t2.column } }), a2 = null, i2 = false);
      for (var l = 0, c = e3.length; l < c; l++) 10 === e3.charCodeAt(l) ? (t2.line++, t2.column = 0, l + 1 === c ? (a2 = null, i2 = false) : i2 && r2.addMapping({ source: n2.source, original: { line: n2.line, column: n2.column }, generated: { line: t2.line, column: t2.column }, name: n2.name })) : t2.column++;
    }), this.walkSourceContents(function(e3, t3) {
      r2.setSourceContent(e3, t3);
    }), { code: t2.code, map: r2 };
  }, t.SourceNode = s;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2, r2) {
    var n2 = e2[t2];
    e2[t2] = e2[r2], e2[r2] = n2;
  }
  function i(e2, t2, r2, a) {
    if (r2 < a) {
      var o = r2 - 1;
      n(e2, (function(e3, t3) {
        return Math.round(e3 + Math.random() * (t3 - e3));
      })(r2, a), a);
      for (var s = e2[a], u = r2; u < a; u++) t2(e2[u], s) <= 0 && n(e2, o += 1, u);
      n(e2, o + 1, u);
      var l = o + 1;
      i(e2, t2, r2, l - 1), i(e2, t2, l + 1, a);
    }
  }
  t.quickSort = function(e2, t2) {
    i(e2, t2, 0, e2.length - 1);
  };
}, function(e, t, r) {
  "use strict";
  t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2, t.search = function(e2, r2, n, i) {
    if (0 === r2.length) return -1;
    var a = (function e3(r3, n2, i2, a2, o, s) {
      var u = Math.floor((n2 - r3) / 2) + r3, l = o(i2, a2[u], true);
      return 0 === l ? u : l > 0 ? n2 - u > 1 ? e3(u, n2, i2, a2, o, s) : s == t.LEAST_UPPER_BOUND ? n2 < a2.length ? n2 : -1 : u : u - r3 > 1 ? e3(r3, u, i2, a2, o, s) : s == t.LEAST_UPPER_BOUND ? u : r3 < 0 ? -1 : r3;
    })(-1, r2.length, e2, r2, n, i || t.GREATEST_LOWER_BOUND);
    if (a < 0) return -1;
    for (; a - 1 >= 0 && 0 === n(r2[a], r2[a - 1], true); ) --a;
    return a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(60), i = r(568), a = r(161).ArraySet, o = r(162), s = r(567).quickSort;
  function u(e2) {
    var t2 = e2;
    return "string" == typeof e2 && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, ""))), null != t2.sections ? new f(t2) : new l(t2);
  }
  function l(e2) {
    var t2 = e2;
    "string" == typeof e2 && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, "")));
    var r2 = n.getArg(t2, "version"), i2 = n.getArg(t2, "sources"), o2 = n.getArg(t2, "names", []), s2 = n.getArg(t2, "sourceRoot", null), u2 = n.getArg(t2, "sourcesContent", null), l2 = n.getArg(t2, "mappings"), c2 = n.getArg(t2, "file", null);
    if (r2 != this._version) throw new Error("Unsupported version: " + r2);
    i2 = i2.map(String).map(n.normalize).map(function(e3) {
      return s2 && n.isAbsolute(s2) && n.isAbsolute(e3) ? n.relative(s2, e3) : e3;
    }), this._names = a.fromArray(o2.map(String), true), this._sources = a.fromArray(i2, true), this.sourceRoot = s2, this.sourcesContent = u2, this._mappings = l2, this.file = c2;
  }
  function c() {
    this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
  }
  function f(e2) {
    var t2 = e2;
    "string" == typeof e2 && (t2 = JSON.parse(e2.replace(/^\)\]\}'/, "")));
    var r2 = n.getArg(t2, "version"), i2 = n.getArg(t2, "sections");
    if (r2 != this._version) throw new Error("Unsupported version: " + r2);
    this._sources = new a(), this._names = new a();
    var o2 = { line: -1, column: 0 };
    this._sections = i2.map(function(e3) {
      if (e3.url) throw new Error("Support for url field in sections not implemented.");
      var t3 = n.getArg(e3, "offset"), r3 = n.getArg(t3, "line"), i3 = n.getArg(t3, "column");
      if (r3 < o2.line || r3 === o2.line && i3 < o2.column) throw new Error("Section offsets must be ordered and non-overlapping.");
      return o2 = t3, { generatedOffset: { generatedLine: r3 + 1, generatedColumn: i3 + 1 }, consumer: new u(n.getArg(e3, "map")) };
    });
  }
  u.fromSourceMap = function(e2) {
    return l.fromSourceMap(e2);
  }, u.prototype._version = 3, u.prototype.__generatedMappings = null, Object.defineProperty(u.prototype, "_generatedMappings", { get: function() {
    return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
  } }), u.prototype.__originalMappings = null, Object.defineProperty(u.prototype, "_originalMappings", { get: function() {
    return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
  } }), u.prototype._charIsMappingSeparator = function(e2, t2) {
    var r2 = e2.charAt(t2);
    return ";" === r2 || "," === r2;
  }, u.prototype._parseMappings = function(e2, t2) {
    throw new Error("Subclasses must implement _parseMappings");
  }, u.GENERATED_ORDER = 1, u.ORIGINAL_ORDER = 2, u.GREATEST_LOWER_BOUND = 1, u.LEAST_UPPER_BOUND = 2, u.prototype.eachMapping = function(e2, t2, r2) {
    var i2, a2 = t2 || null;
    switch (r2 || u.GENERATED_ORDER) {
      case u.GENERATED_ORDER:
        i2 = this._generatedMappings;
        break;
      case u.ORIGINAL_ORDER:
        i2 = this._originalMappings;
        break;
      default:
        throw new Error("Unknown order of iteration.");
    }
    var o2 = this.sourceRoot;
    i2.map(function(e3) {
      var t3 = null === e3.source ? null : this._sources.at(e3.source);
      return null != t3 && null != o2 && (t3 = n.join(o2, t3)), { source: t3, generatedLine: e3.generatedLine, generatedColumn: e3.generatedColumn, originalLine: e3.originalLine, originalColumn: e3.originalColumn, name: null === e3.name ? null : this._names.at(e3.name) };
    }, this).forEach(e2, a2);
  }, u.prototype.allGeneratedPositionsFor = function(e2) {
    var t2 = n.getArg(e2, "line"), r2 = { source: n.getArg(e2, "source"), originalLine: t2, originalColumn: n.getArg(e2, "column", 0) };
    if (null != this.sourceRoot && (r2.source = n.relative(this.sourceRoot, r2.source)), !this._sources.has(r2.source)) return [];
    r2.source = this._sources.indexOf(r2.source);
    var a2 = [], o2 = this._findMapping(r2, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, i.LEAST_UPPER_BOUND);
    if (o2 >= 0) {
      var s2 = this._originalMappings[o2];
      if (void 0 === e2.column) for (var u2 = s2.originalLine; s2 && s2.originalLine === u2; ) a2.push({ line: n.getArg(s2, "generatedLine", null), column: n.getArg(s2, "generatedColumn", null), lastColumn: n.getArg(s2, "lastGeneratedColumn", null) }), s2 = this._originalMappings[++o2];
      else for (var l2 = s2.originalColumn; s2 && s2.originalLine === t2 && s2.originalColumn == l2; ) a2.push({ line: n.getArg(s2, "generatedLine", null), column: n.getArg(s2, "generatedColumn", null), lastColumn: n.getArg(s2, "lastGeneratedColumn", null) }), s2 = this._originalMappings[++o2];
    }
    return a2;
  }, t.SourceMapConsumer = u, l.prototype = Object.create(u.prototype), l.prototype.consumer = u, l.fromSourceMap = function(e2) {
    var t2 = Object.create(l.prototype), r2 = t2._names = a.fromArray(e2._names.toArray(), true), i2 = t2._sources = a.fromArray(e2._sources.toArray(), true);
    t2.sourceRoot = e2._sourceRoot, t2.sourcesContent = e2._generateSourcesContent(t2._sources.toArray(), t2.sourceRoot), t2.file = e2._file;
    for (var o2 = e2._mappings.toArray().slice(), u2 = t2.__generatedMappings = [], f2 = t2.__originalMappings = [], p = 0, d = o2.length; p < d; p++) {
      var h = o2[p], v = new c();
      v.generatedLine = h.generatedLine, v.generatedColumn = h.generatedColumn, h.source && (v.source = i2.indexOf(h.source), v.originalLine = h.originalLine, v.originalColumn = h.originalColumn, h.name && (v.name = r2.indexOf(h.name)), f2.push(v)), u2.push(v);
    }
    return s(t2.__originalMappings, n.compareByOriginalPositions), t2;
  }, l.prototype._version = 3, Object.defineProperty(l.prototype, "sources", { get: function() {
    return this._sources.toArray().map(function(e2) {
      return null != this.sourceRoot ? n.join(this.sourceRoot, e2) : e2;
    }, this);
  } }), l.prototype._parseMappings = function(e2, t2) {
    for (var r2, i2, a2, u2, l2, f2 = 1, p = 0, d = 0, h = 0, v = 0, y = 0, m = e2.length, b = 0, g = {}, w = {}, E = [], S = []; b < m; ) if (";" === e2.charAt(b)) f2++, b++, p = 0;
    else if ("," === e2.charAt(b)) b++;
    else {
      for ((r2 = new c()).generatedLine = f2, u2 = b; u2 < m && !this._charIsMappingSeparator(e2, u2); u2++) ;
      if (a2 = g[i2 = e2.slice(b, u2)]) b += i2.length;
      else {
        for (a2 = []; b < u2; ) o.decode(e2, b, w), l2 = w.value, b = w.rest, a2.push(l2);
        if (2 === a2.length) throw new Error("Found a source, but no line and column");
        if (3 === a2.length) throw new Error("Found a source and line, but no column");
        g[i2] = a2;
      }
      r2.generatedColumn = p + a2[0], p = r2.generatedColumn, a2.length > 1 && (r2.source = v + a2[1], v += a2[1], r2.originalLine = d + a2[2], d = r2.originalLine, r2.originalLine += 1, r2.originalColumn = h + a2[3], h = r2.originalColumn, a2.length > 4 && (r2.name = y + a2[4], y += a2[4])), S.push(r2), "number" == typeof r2.originalLine && E.push(r2);
    }
    s(S, n.compareByGeneratedPositionsDeflated), this.__generatedMappings = S, s(E, n.compareByOriginalPositions), this.__originalMappings = E;
  }, l.prototype._findMapping = function(e2, t2, r2, n2, a2, o2) {
    if (e2[r2] <= 0) throw new TypeError("Line must be greater than or equal to 1, got " + e2[r2]);
    if (e2[n2] < 0) throw new TypeError("Column must be greater than or equal to 0, got " + e2[n2]);
    return i.search(e2, t2, a2, o2);
  }, l.prototype.computeColumnSpans = function() {
    for (var e2 = 0; e2 < this._generatedMappings.length; ++e2) {
      var t2 = this._generatedMappings[e2];
      if (e2 + 1 < this._generatedMappings.length) {
        var r2 = this._generatedMappings[e2 + 1];
        if (t2.generatedLine === r2.generatedLine) {
          t2.lastGeneratedColumn = r2.generatedColumn - 1;
          continue;
        }
      }
      t2.lastGeneratedColumn = 1 / 0;
    }
  }, l.prototype.originalPositionFor = function(e2) {
    var t2 = { generatedLine: n.getArg(e2, "line"), generatedColumn: n.getArg(e2, "column") }, r2 = this._findMapping(t2, this._generatedMappings, "generatedLine", "generatedColumn", n.compareByGeneratedPositionsDeflated, n.getArg(e2, "bias", u.GREATEST_LOWER_BOUND));
    if (r2 >= 0) {
      var i2 = this._generatedMappings[r2];
      if (i2.generatedLine === t2.generatedLine) {
        var a2 = n.getArg(i2, "source", null);
        null !== a2 && (a2 = this._sources.at(a2), null != this.sourceRoot && (a2 = n.join(this.sourceRoot, a2)));
        var o2 = n.getArg(i2, "name", null);
        return null !== o2 && (o2 = this._names.at(o2)), { source: a2, line: n.getArg(i2, "originalLine", null), column: n.getArg(i2, "originalColumn", null), name: o2 };
      }
    }
    return { source: null, line: null, column: null, name: null };
  }, l.prototype.hasContentsOfAllSources = function() {
    return !!this.sourcesContent && (this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e2) {
      return null == e2;
    }));
  }, l.prototype.sourceContentFor = function(e2, t2) {
    if (!this.sourcesContent) return null;
    if (null != this.sourceRoot && (e2 = n.relative(this.sourceRoot, e2)), this._sources.has(e2)) return this.sourcesContent[this._sources.indexOf(e2)];
    var r2;
    if (null != this.sourceRoot && (r2 = n.urlParse(this.sourceRoot))) {
      var i2 = e2.replace(/^file:\/\//, "");
      if ("file" == r2.scheme && this._sources.has(i2)) return this.sourcesContent[this._sources.indexOf(i2)];
      if ((!r2.path || "/" == r2.path) && this._sources.has("/" + e2)) return this.sourcesContent[this._sources.indexOf("/" + e2)];
    }
    if (t2) return null;
    throw new Error('"' + e2 + '" is not in the SourceMap.');
  }, l.prototype.generatedPositionFor = function(e2) {
    var t2 = n.getArg(e2, "source");
    if (null != this.sourceRoot && (t2 = n.relative(this.sourceRoot, t2)), !this._sources.has(t2)) return { line: null, column: null, lastColumn: null };
    var r2 = { source: t2 = this._sources.indexOf(t2), originalLine: n.getArg(e2, "line"), originalColumn: n.getArg(e2, "column") }, i2 = this._findMapping(r2, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, n.getArg(e2, "bias", u.GREATEST_LOWER_BOUND));
    if (i2 >= 0) {
      var a2 = this._originalMappings[i2];
      if (a2.source === r2.source) return { line: n.getArg(a2, "generatedLine", null), column: n.getArg(a2, "generatedColumn", null), lastColumn: n.getArg(a2, "lastGeneratedColumn", null) };
    }
    return { line: null, column: null, lastColumn: null };
  }, t.BasicSourceMapConsumer = l, f.prototype = Object.create(u.prototype), f.prototype.constructor = u, f.prototype._version = 3, Object.defineProperty(f.prototype, "sources", { get: function() {
    for (var e2 = [], t2 = 0; t2 < this._sections.length; t2++) for (var r2 = 0; r2 < this._sections[t2].consumer.sources.length; r2++) e2.push(this._sections[t2].consumer.sources[r2]);
    return e2;
  } }), f.prototype.originalPositionFor = function(e2) {
    var t2 = { generatedLine: n.getArg(e2, "line"), generatedColumn: n.getArg(e2, "column") }, r2 = i.search(t2, this._sections, function(e3, t3) {
      var r3 = e3.generatedLine - t3.generatedOffset.generatedLine;
      return r3 || e3.generatedColumn - t3.generatedOffset.generatedColumn;
    }), a2 = this._sections[r2];
    return a2 ? a2.consumer.originalPositionFor({ line: t2.generatedLine - (a2.generatedOffset.generatedLine - 1), column: t2.generatedColumn - (a2.generatedOffset.generatedLine === t2.generatedLine ? a2.generatedOffset.generatedColumn - 1 : 0), bias: e2.bias }) : { source: null, line: null, column: null, name: null };
  }, f.prototype.hasContentsOfAllSources = function() {
    return this._sections.every(function(e2) {
      return e2.consumer.hasContentsOfAllSources();
    });
  }, f.prototype.sourceContentFor = function(e2, t2) {
    for (var r2 = 0; r2 < this._sections.length; r2++) {
      var n2 = this._sections[r2].consumer.sourceContentFor(e2, true);
      if (n2) return n2;
    }
    if (t2) return null;
    throw new Error('"' + e2 + '" is not in the SourceMap.');
  }, f.prototype.generatedPositionFor = function(e2) {
    for (var t2 = 0; t2 < this._sections.length; t2++) {
      var r2 = this._sections[t2];
      if (-1 !== r2.consumer.sources.indexOf(n.getArg(e2, "source"))) {
        var i2 = r2.consumer.generatedPositionFor(e2);
        if (i2) return { line: i2.line + (r2.generatedOffset.generatedLine - 1), column: i2.column + (r2.generatedOffset.generatedLine === i2.line ? r2.generatedOffset.generatedColumn - 1 : 0) };
      }
    }
    return { line: null, column: null };
  }, f.prototype._parseMappings = function(e2, t2) {
    this.__generatedMappings = [], this.__originalMappings = [];
    for (var r2 = 0; r2 < this._sections.length; r2++) for (var i2 = this._sections[r2], a2 = i2.consumer._generatedMappings, o2 = 0; o2 < a2.length; o2++) {
      var u2 = a2[o2], l2 = i2.consumer._sources.at(u2.source);
      null !== i2.consumer.sourceRoot && (l2 = n.join(i2.consumer.sourceRoot, l2)), this._sources.add(l2), l2 = this._sources.indexOf(l2);
      var c2 = i2.consumer._names.at(u2.name);
      this._names.add(c2), c2 = this._names.indexOf(c2);
      var f2 = { source: l2, generatedLine: u2.generatedLine + (i2.generatedOffset.generatedLine - 1), generatedColumn: u2.generatedColumn + (i2.generatedOffset.generatedLine === u2.generatedLine ? i2.generatedOffset.generatedColumn - 1 : 0), originalLine: u2.originalLine, originalColumn: u2.originalColumn, name: c2 };
      this.__generatedMappings.push(f2), "number" == typeof f2.originalLine && this.__originalMappings.push(f2);
    }
    s(this.__generatedMappings, n.compareByGeneratedPositionsDeflated), s(this.__originalMappings, n.compareByOriginalPositions);
  }, t.IndexedSourceMapConsumer = f;
}, function(e, t, r) {
  "use strict";
  var n = r(60);
  function i() {
    this._array = [], this._sorted = true, this._last = { generatedLine: -1, generatedColumn: 0 };
  }
  i.prototype.unsortedForEach = function(e2, t2) {
    this._array.forEach(e2, t2);
  }, i.prototype.add = function(e2) {
    !(function(e3, t2) {
      var r2 = e3.generatedLine, i2 = t2.generatedLine, a = e3.generatedColumn, o = t2.generatedColumn;
      return i2 > r2 || i2 == r2 && o >= a || n.compareByGeneratedPositionsInflated(e3, t2) <= 0;
    })(this._last, e2) ? (this._sorted = false, this._array.push(e2)) : (this._last = e2, this._array.push(e2));
  }, i.prototype.toArray = function() {
    return this._sorted || (this._array.sort(n.compareByGeneratedPositionsInflated), this._sorted = true), this._array;
  }, t.MappingList = i;
}, function(e, t, r) {
  "use strict";
  var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
  t.encode = function(e2) {
    if (0 <= e2 && e2 < n.length) return n[e2];
    throw new TypeError("Must be between 0 and 63: " + e2);
  }, t.decode = function(e2) {
    return 65 <= e2 && e2 <= 90 ? e2 - 65 : 97 <= e2 && e2 <= 122 ? e2 - 97 + 26 : 48 <= e2 && e2 <= 57 ? e2 - 48 + 52 : 43 == e2 ? 62 : 47 == e2 ? 63 : -1;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a() {
    var e2 = (function(e3) {
      return e3 && e3.__esModule ? e3 : { default: e3 };
    })(r(164));
    return a = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var o = (function() {
    function e2(t2, r2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this._cachedMap = null, this._code = r2, this._opts = t2, this._rawMappings = [];
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "get", value: function() {
      if (!this._cachedMap) {
        var e3 = this._cachedMap = new (a()).default.SourceMapGenerator({ sourceRoot: this._opts.sourceRoot }), t2 = this._code;
        "string" == typeof t2 ? e3.setSourceContent(this._opts.sourceFileName, t2) : "object" === n(t2) && Object.keys(t2).forEach(function(r2) {
          e3.setSourceContent(r2, t2[r2]);
        }), this._rawMappings.forEach(e3.addMapping, e3);
      }
      return this._cachedMap.toJSON();
    } }, { key: "getRawMappings", value: function() {
      return this._rawMappings.slice();
    } }, { key: "mark", value: function(e3, t2, r2, n2, i2, a2, o2) {
      this._lastGenLine !== e3 && null === r2 || (o2 || this._lastGenLine !== e3 || this._lastSourceLine !== r2 || this._lastSourceColumn !== n2) && (this._cachedMap = null, this._lastGenLine = e3, this._lastSourceLine = r2, this._lastSourceColumn = n2, this._rawMappings.push({ name: i2 || void 0, generated: { line: e3, column: t2 }, source: null == r2 ? void 0 : a2 || this._opts.sourceFileName, original: null == r2 ? void 0 : { line: r2, column: n2 } }));
    } }]), e2;
  })();
  t.default = o;
}, function(e) {
  e.exports = { builtin: { Array: false, ArrayBuffer: false, Atomics: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, SharedArrayBuffer: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, es5: { Array: false, Boolean: false, constructor: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Function: false, hasOwnProperty: false, Infinity: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, propertyIsEnumerable: false, RangeError: false, ReferenceError: false, RegExp: false, String: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, undefined: false, unescape: false, URIError: false, valueOf: false }, es2015: { Array: false, ArrayBuffer: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, es2017: { Array: false, ArrayBuffer: false, Atomics: false, Boolean: false, constructor: false, DataView: false, Date: false, decodeURI: false, decodeURIComponent: false, encodeURI: false, encodeURIComponent: false, Error: false, escape: false, eval: false, EvalError: false, Float32Array: false, Float64Array: false, Function: false, hasOwnProperty: false, Infinity: false, Int16Array: false, Int32Array: false, Int8Array: false, isFinite: false, isNaN: false, isPrototypeOf: false, JSON: false, Map: false, Math: false, NaN: false, Number: false, Object: false, parseFloat: false, parseInt: false, Promise: false, propertyIsEnumerable: false, Proxy: false, RangeError: false, ReferenceError: false, Reflect: false, RegExp: false, Set: false, SharedArrayBuffer: false, String: false, Symbol: false, SyntaxError: false, toLocaleString: false, toString: false, TypeError: false, Uint16Array: false, Uint32Array: false, Uint8Array: false, Uint8ClampedArray: false, undefined: false, unescape: false, URIError: false, valueOf: false, WeakMap: false, WeakSet: false }, browser: { AbortController: false, AbortSignal: false, addEventListener: false, alert: false, AnalyserNode: false, Animation: false, AnimationEffectReadOnly: false, AnimationEffectTiming: false, AnimationEffectTimingReadOnly: false, AnimationEvent: false, AnimationPlaybackEvent: false, AnimationTimeline: false, applicationCache: false, ApplicationCache: false, ApplicationCacheErrorEvent: false, atob: false, Attr: false, Audio: false, AudioBuffer: false, AudioBufferSourceNode: false, AudioContext: false, AudioDestinationNode: false, AudioListener: false, AudioNode: false, AudioParam: false, AudioProcessingEvent: false, AudioScheduledSourceNode: false, BarProp: false, BaseAudioContext: false, BatteryManager: false, BeforeUnloadEvent: false, BiquadFilterNode: false, Blob: false, BlobEvent: false, blur: false, BroadcastChannel: false, btoa: false, BudgetService: false, ByteLengthQueuingStrategy: false, Cache: false, caches: false, CacheStorage: false, cancelAnimationFrame: false, cancelIdleCallback: false, CanvasCaptureMediaStreamTrack: false, CanvasGradient: false, CanvasPattern: false, CanvasRenderingContext2D: false, ChannelMergerNode: false, ChannelSplitterNode: false, CharacterData: false, clearInterval: false, clearTimeout: false, clientInformation: false, ClipboardEvent: false, close: false, closed: false, CloseEvent: false, Comment: false, CompositionEvent: false, confirm: false, console: false, ConstantSourceNode: false, ConvolverNode: false, CountQueuingStrategy: false, createImageBitmap: false, Credential: false, CredentialsContainer: false, crypto: false, Crypto: false, CryptoKey: false, CSS: false, CSSConditionRule: false, CSSFontFaceRule: false, CSSGroupingRule: false, CSSImportRule: false, CSSKeyframeRule: false, CSSKeyframesRule: false, CSSMediaRule: false, CSSNamespaceRule: false, CSSPageRule: false, CSSRule: false, CSSRuleList: false, CSSStyleDeclaration: false, CSSStyleRule: false, CSSStyleSheet: false, CSSSupportsRule: false, CustomElementRegistry: false, customElements: false, CustomEvent: false, DataTransfer: false, DataTransferItem: false, DataTransferItemList: false, defaultstatus: false, defaultStatus: false, DelayNode: false, DeviceMotionEvent: false, DeviceOrientationEvent: false, devicePixelRatio: false, dispatchEvent: false, document: false, Document: false, DocumentFragment: false, DocumentType: false, DOMError: false, DOMException: false, DOMImplementation: false, DOMMatrix: false, DOMMatrixReadOnly: false, DOMParser: false, DOMPoint: false, DOMPointReadOnly: false, DOMQuad: false, DOMRect: false, DOMRectReadOnly: false, DOMStringList: false, DOMStringMap: false, DOMTokenList: false, DragEvent: false, DynamicsCompressorNode: false, Element: false, ErrorEvent: false, event: false, Event: false, EventSource: false, EventTarget: false, external: false, fetch: false, File: false, FileList: false, FileReader: false, find: false, focus: false, FocusEvent: false, FontFace: false, FontFaceSetLoadEvent: false, FormData: false, frameElement: false, frames: false, GainNode: false, Gamepad: false, GamepadButton: false, GamepadEvent: false, getComputedStyle: false, getSelection: false, HashChangeEvent: false, Headers: false, history: false, History: false, HTMLAllCollection: false, HTMLAnchorElement: false, HTMLAreaElement: false, HTMLAudioElement: false, HTMLBaseElement: false, HTMLBodyElement: false, HTMLBRElement: false, HTMLButtonElement: false, HTMLCanvasElement: false, HTMLCollection: false, HTMLContentElement: false, HTMLDataElement: false, HTMLDataListElement: false, HTMLDetailsElement: false, HTMLDialogElement: false, HTMLDirectoryElement: false, HTMLDivElement: false, HTMLDListElement: false, HTMLDocument: false, HTMLElement: false, HTMLEmbedElement: false, HTMLFieldSetElement: false, HTMLFontElement: false, HTMLFormControlsCollection: false, HTMLFormElement: false, HTMLFrameElement: false, HTMLFrameSetElement: false, HTMLHeadElement: false, HTMLHeadingElement: false, HTMLHRElement: false, HTMLHtmlElement: false, HTMLIFrameElement: false, HTMLImageElement: false, HTMLInputElement: false, HTMLLabelElement: false, HTMLLegendElement: false, HTMLLIElement: false, HTMLLinkElement: false, HTMLMapElement: false, HTMLMarqueeElement: false, HTMLMediaElement: false, HTMLMenuElement: false, HTMLMetaElement: false, HTMLMeterElement: false, HTMLModElement: false, HTMLObjectElement: false, HTMLOListElement: false, HTMLOptGroupElement: false, HTMLOptionElement: false, HTMLOptionsCollection: false, HTMLOutputElement: false, HTMLParagraphElement: false, HTMLParamElement: false, HTMLPictureElement: false, HTMLPreElement: false, HTMLProgressElement: false, HTMLQuoteElement: false, HTMLScriptElement: false, HTMLSelectElement: false, HTMLShadowElement: false, HTMLSlotElement: false, HTMLSourceElement: false, HTMLSpanElement: false, HTMLStyleElement: false, HTMLTableCaptionElement: false, HTMLTableCellElement: false, HTMLTableColElement: false, HTMLTableElement: false, HTMLTableRowElement: false, HTMLTableSectionElement: false, HTMLTemplateElement: false, HTMLTextAreaElement: false, HTMLTimeElement: false, HTMLTitleElement: false, HTMLTrackElement: false, HTMLUListElement: false, HTMLUnknownElement: false, HTMLVideoElement: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, IdleDeadline: false, IIRFilterNode: false, Image: false, ImageBitmap: false, ImageBitmapRenderingContext: false, ImageCapture: false, ImageData: false, indexedDB: false, innerHeight: false, innerWidth: false, InputEvent: false, IntersectionObserver: false, IntersectionObserverEntry: false, Intl: false, isSecureContext: false, KeyboardEvent: false, KeyframeEffect: false, KeyframeEffectReadOnly: false, length: false, localStorage: false, location: false, Location: false, locationbar: false, matchMedia: false, MediaDeviceInfo: false, MediaDevices: false, MediaElementAudioSourceNode: false, MediaEncryptedEvent: false, MediaError: false, MediaKeyMessageEvent: false, MediaKeySession: false, MediaKeyStatusMap: false, MediaKeySystemAccess: false, MediaList: false, MediaQueryList: false, MediaQueryListEvent: false, MediaRecorder: false, MediaSettingsRange: false, MediaSource: false, MediaStream: false, MediaStreamAudioDestinationNode: false, MediaStreamAudioSourceNode: false, MediaStreamEvent: false, MediaStreamTrack: false, MediaStreamTrackEvent: false, menubar: false, MessageChannel: false, MessageEvent: false, MessagePort: false, MIDIAccess: false, MIDIConnectionEvent: false, MIDIInput: false, MIDIInputMap: false, MIDIMessageEvent: false, MIDIOutput: false, MIDIOutputMap: false, MIDIPort: false, MimeType: false, MimeTypeArray: false, MouseEvent: false, moveBy: false, moveTo: false, MutationEvent: false, MutationObserver: false, MutationRecord: false, name: false, NamedNodeMap: false, NavigationPreloadManager: false, navigator: false, Navigator: false, NetworkInformation: false, Node: false, NodeFilter: false, NodeIterator: false, NodeList: false, Notification: false, OfflineAudioCompletionEvent: false, OfflineAudioContext: false, offscreenBuffering: false, OffscreenCanvas: true, onabort: true, onafterprint: true, onanimationend: true, onanimationiteration: true, onanimationstart: true, onappinstalled: true, onauxclick: true, onbeforeinstallprompt: true, onbeforeprint: true, onbeforeunload: true, onblur: true, oncancel: true, oncanplay: true, oncanplaythrough: true, onchange: true, onclick: true, onclose: true, oncontextmenu: true, oncuechange: true, ondblclick: true, ondevicemotion: true, ondeviceorientation: true, ondeviceorientationabsolute: true, ondrag: true, ondragend: true, ondragenter: true, ondragleave: true, ondragover: true, ondragstart: true, ondrop: true, ondurationchange: true, onemptied: true, onended: true, onerror: true, onfocus: true, ongotpointercapture: true, onhashchange: true, oninput: true, oninvalid: true, onkeydown: true, onkeypress: true, onkeyup: true, onlanguagechange: true, onload: true, onloadeddata: true, onloadedmetadata: true, onloadstart: true, onlostpointercapture: true, onmessage: true, onmessageerror: true, onmousedown: true, onmouseenter: true, onmouseleave: true, onmousemove: true, onmouseout: true, onmouseover: true, onmouseup: true, onmousewheel: true, onoffline: true, ononline: true, onpagehide: true, onpageshow: true, onpause: true, onplay: true, onplaying: true, onpointercancel: true, onpointerdown: true, onpointerenter: true, onpointerleave: true, onpointermove: true, onpointerout: true, onpointerover: true, onpointerup: true, onpopstate: true, onprogress: true, onratechange: true, onrejectionhandled: true, onreset: true, onresize: true, onscroll: true, onsearch: true, onseeked: true, onseeking: true, onselect: true, onstalled: true, onstorage: true, onsubmit: true, onsuspend: true, ontimeupdate: true, ontoggle: true, ontransitionend: true, onunhandledrejection: true, onunload: true, onvolumechange: true, onwaiting: true, onwheel: true, open: false, openDatabase: false, opener: false, Option: false, origin: false, OscillatorNode: false, outerHeight: false, outerWidth: false, PageTransitionEvent: false, pageXOffset: false, pageYOffset: false, PannerNode: false, parent: false, Path2D: false, PaymentAddress: false, PaymentRequest: false, PaymentRequestUpdateEvent: false, PaymentResponse: false, performance: false, Performance: false, PerformanceEntry: false, PerformanceLongTaskTiming: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceNavigationTiming: false, PerformanceObserver: false, PerformanceObserverEntryList: false, PerformancePaintTiming: false, PerformanceResourceTiming: false, PerformanceTiming: false, PeriodicWave: false, Permissions: false, PermissionStatus: false, personalbar: false, PhotoCapabilities: false, Plugin: false, PluginArray: false, PointerEvent: false, PopStateEvent: false, postMessage: false, Presentation: false, PresentationAvailability: false, PresentationConnection: false, PresentationConnectionAvailableEvent: false, PresentationConnectionCloseEvent: false, PresentationConnectionList: false, PresentationReceiver: false, PresentationRequest: false, print: false, ProcessingInstruction: false, ProgressEvent: false, PromiseRejectionEvent: false, prompt: false, PushManager: false, PushSubscription: false, PushSubscriptionOptions: false, RadioNodeList: false, Range: false, ReadableStream: false, RemotePlayback: false, removeEventListener: false, Request: false, requestAnimationFrame: false, requestIdleCallback: false, resizeBy: false, ResizeObserver: false, ResizeObserverEntry: false, resizeTo: false, Response: false, RTCCertificate: false, RTCDataChannel: false, RTCDataChannelEvent: false, RTCDtlsTransport: false, RTCIceCandidate: false, RTCIceGatherer: false, RTCIceTransport: false, RTCPeerConnection: false, RTCPeerConnectionIceEvent: false, RTCRtpContributingSource: false, RTCRtpReceiver: false, RTCRtpSender: false, RTCSctpTransport: false, RTCSessionDescription: false, RTCStatsReport: false, RTCTrackEvent: false, screen: false, Screen: false, screenLeft: false, ScreenOrientation: false, screenTop: false, screenX: false, screenY: false, ScriptProcessorNode: false, scroll: false, scrollbars: false, scrollBy: false, scrollTo: false, scrollX: false, scrollY: false, SecurityPolicyViolationEvent: false, Selection: false, self: false, ServiceWorker: false, ServiceWorkerContainer: false, ServiceWorkerRegistration: false, sessionStorage: false, setInterval: false, setTimeout: false, ShadowRoot: false, SharedWorker: false, SourceBuffer: false, SourceBufferList: false, speechSynthesis: false, SpeechSynthesisEvent: false, SpeechSynthesisUtterance: false, StaticRange: false, status: false, statusbar: false, StereoPannerNode: false, stop: false, Storage: false, StorageEvent: false, StorageManager: false, styleMedia: false, StyleSheet: false, StyleSheetList: false, SubtleCrypto: false, SVGAElement: false, SVGAngle: false, SVGAnimatedAngle: false, SVGAnimatedBoolean: false, SVGAnimatedEnumeration: false, SVGAnimatedInteger: false, SVGAnimatedLength: false, SVGAnimatedLengthList: false, SVGAnimatedNumber: false, SVGAnimatedNumberList: false, SVGAnimatedPreserveAspectRatio: false, SVGAnimatedRect: false, SVGAnimatedString: false, SVGAnimatedTransformList: false, SVGAnimateElement: false, SVGAnimateMotionElement: false, SVGAnimateTransformElement: false, SVGAnimationElement: false, SVGCircleElement: false, SVGClipPathElement: false, SVGComponentTransferFunctionElement: false, SVGDefsElement: false, SVGDescElement: false, SVGDiscardElement: false, SVGElement: false, SVGEllipseElement: false, SVGFEBlendElement: false, SVGFEColorMatrixElement: false, SVGFEComponentTransferElement: false, SVGFECompositeElement: false, SVGFEConvolveMatrixElement: false, SVGFEDiffuseLightingElement: false, SVGFEDisplacementMapElement: false, SVGFEDistantLightElement: false, SVGFEDropShadowElement: false, SVGFEFloodElement: false, SVGFEFuncAElement: false, SVGFEFuncBElement: false, SVGFEFuncGElement: false, SVGFEFuncRElement: false, SVGFEGaussianBlurElement: false, SVGFEImageElement: false, SVGFEMergeElement: false, SVGFEMergeNodeElement: false, SVGFEMorphologyElement: false, SVGFEOffsetElement: false, SVGFEPointLightElement: false, SVGFESpecularLightingElement: false, SVGFESpotLightElement: false, SVGFETileElement: false, SVGFETurbulenceElement: false, SVGFilterElement: false, SVGForeignObjectElement: false, SVGGElement: false, SVGGeometryElement: false, SVGGradientElement: false, SVGGraphicsElement: false, SVGImageElement: false, SVGLength: false, SVGLengthList: false, SVGLinearGradientElement: false, SVGLineElement: false, SVGMarkerElement: false, SVGMaskElement: false, SVGMatrix: false, SVGMetadataElement: false, SVGMPathElement: false, SVGNumber: false, SVGNumberList: false, SVGPathElement: false, SVGPatternElement: false, SVGPoint: false, SVGPointList: false, SVGPolygonElement: false, SVGPolylineElement: false, SVGPreserveAspectRatio: false, SVGRadialGradientElement: false, SVGRect: false, SVGRectElement: false, SVGScriptElement: false, SVGSetElement: false, SVGStopElement: false, SVGStringList: false, SVGStyleElement: false, SVGSVGElement: false, SVGSwitchElement: false, SVGSymbolElement: false, SVGTextContentElement: false, SVGTextElement: false, SVGTextPathElement: false, SVGTextPositioningElement: false, SVGTitleElement: false, SVGTransform: false, SVGTransformList: false, SVGTSpanElement: false, SVGUnitTypes: false, SVGUseElement: false, SVGViewElement: false, TaskAttributionTiming: false, Text: false, TextDecoder: false, TextEncoder: false, TextEvent: false, TextMetrics: false, TextTrack: false, TextTrackCue: false, TextTrackCueList: false, TextTrackList: false, TimeRanges: false, toolbar: false, top: false, Touch: false, TouchEvent: false, TouchList: false, TrackEvent: false, TransitionEvent: false, TreeWalker: false, UIEvent: false, URL: false, URLSearchParams: false, ValidityState: false, visualViewport: false, VisualViewport: false, VTTCue: false, WaveShaperNode: false, WebAssembly: false, WebGL2RenderingContext: false, WebGLActiveInfo: false, WebGLBuffer: false, WebGLContextEvent: false, WebGLFramebuffer: false, WebGLProgram: false, WebGLQuery: false, WebGLRenderbuffer: false, WebGLRenderingContext: false, WebGLSampler: false, WebGLShader: false, WebGLShaderPrecisionFormat: false, WebGLSync: false, WebGLTexture: false, WebGLTransformFeedback: false, WebGLUniformLocation: false, WebGLVertexArrayObject: false, WebSocket: false, WheelEvent: false, window: false, Window: false, Worker: false, WritableStream: false, XMLDocument: false, XMLHttpRequest: false, XMLHttpRequestEventTarget: false, XMLHttpRequestUpload: false, XMLSerializer: false, XPathEvaluator: false, XPathExpression: false, XPathResult: false, XSLTProcessor: false }, worker: { applicationCache: false, atob: false, Blob: false, BroadcastChannel: false, btoa: false, Cache: false, caches: false, clearInterval: false, clearTimeout: false, close: true, console: false, fetch: false, FileReaderSync: false, FormData: false, Headers: false, IDBCursor: false, IDBCursorWithValue: false, IDBDatabase: false, IDBFactory: false, IDBIndex: false, IDBKeyRange: false, IDBObjectStore: false, IDBOpenDBRequest: false, IDBRequest: false, IDBTransaction: false, IDBVersionChangeEvent: false, ImageData: false, importScripts: true, indexedDB: false, location: false, MessageChannel: false, MessagePort: false, name: false, navigator: false, Notification: false, onclose: true, onconnect: true, onerror: true, onlanguagechange: true, onmessage: true, onoffline: true, ononline: true, onrejectionhandled: true, onunhandledrejection: true, performance: false, Performance: false, PerformanceEntry: false, PerformanceMark: false, PerformanceMeasure: false, PerformanceNavigation: false, PerformanceResourceTiming: false, PerformanceTiming: false, postMessage: true, Promise: false, Request: false, Response: false, self: true, ServiceWorkerRegistration: false, setInterval: false, setTimeout: false, TextDecoder: false, TextEncoder: false, URL: false, URLSearchParams: false, WebSocket: false, Worker: false, XMLHttpRequest: false }, node: { __dirname: false, __filename: false, Buffer: false, clearImmediate: false, clearInterval: false, clearTimeout: false, console: false, exports: true, global: false, Intl: false, module: false, process: false, require: false, setImmediate: false, setInterval: false, setTimeout: false }, commonjs: { exports: true, global: false, module: false, require: false }, amd: { define: false, require: false }, mocha: { after: false, afterEach: false, before: false, beforeEach: false, context: false, describe: false, it: false, mocha: false, run: false, setup: false, specify: false, suite: false, suiteSetup: false, suiteTeardown: false, teardown: false, test: false, xcontext: false, xdescribe: false, xit: false, xspecify: false }, jasmine: { afterAll: false, afterEach: false, beforeAll: false, beforeEach: false, describe: false, expect: false, fail: false, fdescribe: false, fit: false, it: false, jasmine: false, pending: false, runs: false, spyOn: false, spyOnProperty: false, waits: false, waitsFor: false, xdescribe: false, xit: false }, jest: { afterAll: false, afterEach: false, beforeAll: false, beforeEach: false, describe: false, expect: false, fdescribe: false, fit: false, it: false, jest: false, pit: false, require: false, test: false, xdescribe: false, xit: false, xtest: false }, qunit: { asyncTest: false, deepEqual: false, equal: false, expect: false, module: false, notDeepEqual: false, notEqual: false, notOk: false, notPropEqual: false, notStrictEqual: false, ok: false, propEqual: false, QUnit: false, raises: false, start: false, stop: false, strictEqual: false, test: false, throws: false }, phantomjs: { console: true, exports: true, phantom: true, require: true, WebPage: true }, couch: { emit: false, exports: false, getRow: false, log: false, module: false, provides: false, require: false, respond: false, send: false, start: false, sum: false }, rhino: { defineClass: false, deserialize: false, gc: false, help: false, importClass: false, importPackage: false, java: false, load: false, loadClass: false, Packages: false, print: false, quit: false, readFile: false, readUrl: false, runCommand: false, seal: false, serialize: false, spawn: false, sync: false, toint32: false, version: false }, nashorn: { __DIR__: false, __FILE__: false, __LINE__: false, com: false, edu: false, exit: false, java: false, Java: false, javafx: false, JavaImporter: false, javax: false, JSAdapter: false, load: false, loadWithNewGlobal: false, org: false, Packages: false, print: false, quit: false }, wsh: { ActiveXObject: true, Enumerator: true, GetObject: true, ScriptEngine: true, ScriptEngineBuildVersion: true, ScriptEngineMajorVersion: true, ScriptEngineMinorVersion: true, VBArray: true, WScript: true, WSH: true, XDomainRequest: true }, jquery: { $: false, jQuery: false }, yui: { Y: false, YUI: false, YUI_config: false }, shelljs: { cat: false, cd: false, chmod: false, config: false, cp: false, dirs: false, echo: false, env: false, error: false, exec: false, exit: false, find: false, grep: false, ln: false, ls: false, mkdir: false, mv: false, popd: false, pushd: false, pwd: false, rm: false, sed: false, set: false, target: false, tempdir: false, test: false, touch: false, which: false }, prototypejs: { $: false, $$: false, $A: false, $break: false, $continue: false, $F: false, $H: false, $R: false, $w: false, Abstract: false, Ajax: false, Autocompleter: false, Builder: false, Class: false, Control: false, Draggable: false, Draggables: false, Droppables: false, Effect: false, Element: false, Enumerable: false, Event: false, Field: false, Form: false, Hash: false, Insertion: false, ObjectRange: false, PeriodicalExecuter: false, Position: false, Prototype: false, Scriptaculous: false, Selector: false, Sortable: false, SortableObserver: false, Sound: false, Template: false, Toggle: false, Try: false }, meteor: { _: false, $: false, Accounts: false, AccountsClient: false, AccountsCommon: false, AccountsServer: false, App: false, Assets: false, Blaze: false, check: false, Cordova: false, DDP: false, DDPRateLimiter: false, DDPServer: false, Deps: false, EJSON: false, Email: false, HTTP: false, Log: false, Match: false, Meteor: false, Mongo: false, MongoInternals: false, Npm: false, Package: false, Plugin: false, process: false, Random: false, ReactiveDict: false, ReactiveVar: false, Router: false, ServiceConfiguration: false, Session: false, share: false, Spacebars: false, Template: false, Tinytest: false, Tracker: false, UI: false, Utils: false, WebApp: false, WebAppInternals: false }, mongo: { _isWindows: false, _rand: false, BulkWriteResult: false, cat: false, cd: false, connect: false, db: false, getHostName: false, getMemInfo: false, hostname: false, ISODate: false, listFiles: false, load: false, ls: false, md5sumFile: false, mkdir: false, Mongo: false, NumberInt: false, NumberLong: false, ObjectId: false, PlanCache: false, print: false, printjson: false, pwd: false, quit: false, removeFile: false, rs: false, sh: false, UUID: false, version: false, WriteResult: false }, applescript: { $: false, Application: false, Automation: false, console: false, delay: false, Library: false, ObjC: false, ObjectSpecifier: false, Path: false, Progress: false, Ref: false }, serviceworker: { Cache: false, caches: false, CacheStorage: false, Client: false, clients: false, Clients: false, ExtendableEvent: false, ExtendableMessageEvent: false, FetchEvent: false, importScripts: false, registration: false, self: false, ServiceWorker: false, ServiceWorkerContainer: false, ServiceWorkerGlobalScope: false, ServiceWorkerMessageEvent: false, ServiceWorkerRegistration: false, skipWaiting: false, WindowClient: false }, atomtest: { advanceClock: false, fakeClearInterval: false, fakeClearTimeout: false, fakeSetInterval: false, fakeSetTimeout: false, resetTimeouts: false, waitsForPromise: false }, embertest: { andThen: false, click: false, currentPath: false, currentRouteName: false, currentURL: false, fillIn: false, find: false, findWithAssert: false, keyEvent: false, pauseTest: false, resumeTest: false, triggerEvent: false, visit: false, wait: false }, protractor: { $: false, $$: false, browser: false, by: false, By: false, DartObject: false, element: false, protractor: false }, "shared-node-browser": { clearInterval: false, clearTimeout: false, console: false, setInterval: false, setTimeout: false }, webextensions: { browser: false, chrome: false, opr: false }, greasemonkey: { GM: false, GM_addStyle: false, GM_deleteValue: false, GM_getResourceText: false, GM_getResourceURL: false, GM_getValue: false, GM_info: false, GM_listValues: false, GM_log: false, GM_openInTab: false, GM_registerMenuCommand: false, GM_setClipboard: false, GM_setValue: false, GM_xmlhttpRequest: false, unsafeWindow: false }, devtools: { $: false, $_: false, $$: false, $0: false, $1: false, $2: false, $3: false, $4: false, $x: false, chrome: false, clear: false, copy: false, debug: false, dir: false, dirxml: false, getEventListeners: false, inspect: false, keys: false, monitor: false, monitorEvents: false, profile: false, profileEnd: false, queryObjects: false, table: false, undebug: false, unmonitor: false, unmonitorEvents: false, values: false } };
}, function(e, t, r) {
  "use strict";
  e.exports = r(573);
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = [];
    if (null != e2) for (var r2 in Object(e2)) t2.push(r2);
    return t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(42), i = r(110), a = r(575), o = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    if (!n(e2)) return a(e2);
    var t2 = i(e2), r2 = [];
    for (var s in e2) ("constructor" != s || !t2 && o.call(e2, s)) && r2.push(s);
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = 800, i = 16, a = Date.now;
  e.exports = function(e2) {
    var t2 = 0, r2 = 0;
    return function() {
      var o = a(), s = i - (o - r2);
      if (r2 = o, s > 0) {
        if (++t2 >= n) return arguments[0];
      } else t2 = 0;
      return e2.apply(void 0, arguments);
    };
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return null == e2 ? void 0 : e2[t2];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(27)["__core-js_shared__"];
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(579), i = (function() {
    var e2 = /[^.]+$/.exec(n && n.keys && n.keys.IE_PROTO || "");
    return e2 ? "Symbol(src)_1." + e2 : "";
  })();
  e.exports = function(e2) {
    return !!i && i in e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(179), i = r(580), a = r(42), o = r(165), s = /^\[object .+?Constructor\]$/, u = Function.prototype, l = Object.prototype, c = u.toString, f = l.hasOwnProperty, p = RegExp("^" + c.call(f).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  e.exports = function(e2) {
    return !(!a(e2) || i(e2)) && (n(e2) ? p : s).test(o(e2));
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return function() {
      return e2;
    };
  };
}, function(e, t, r) {
  "use strict";
  var n = r(582), i = r(166), a = r(167), o = i ? function(e2, t2) {
    return i(e2, "toString", { configurable: true, enumerable: false, value: n(t2), writable: true });
  } : a;
  e.exports = o;
}, function(e, t, r) {
  "use strict";
  var n = r(583), i = r(577)(n);
  e.exports = i;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2, r2) {
    switch (r2.length) {
      case 0:
        return e2.call(t2);
      case 1:
        return e2.call(t2, r2[0]);
      case 2:
        return e2.call(t2, r2[0], r2[1]);
      case 3:
        return e2.call(t2, r2[0], r2[1], r2[2]);
    }
    return e2.apply(t2, r2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(585), i = Math.max;
  e.exports = function(e2, t2, r2) {
    return t2 = i(void 0 === t2 ? e2.length - 1 : t2, 0), function() {
      for (var a = arguments, o = -1, s = i(a.length - t2, 0), u = Array(s); ++o < s; ) u[o] = a[t2 + o];
      o = -1;
      for (var l = Array(t2 + 1); ++o < t2; ) l[o] = a[o];
      return l[t2] = r2(u), n(e2, this, l);
    };
  };
}, function(e, t, r) {
  "use strict";
  var n = r(167), i = r(586), a = r(584);
  e.exports = function(e2, t2) {
    return a(i(e2, t2, n), e2 + "");
  };
}, function(e, t, r) {
  "use strict";
  var n = r(587), i = r(79), a = r(169), o = r(109), s = Object.prototype, u = s.hasOwnProperty, l = n(function(e2, t2) {
    e2 = Object(e2);
    var r2 = -1, n2 = t2.length, l2 = n2 > 2 ? t2[2] : void 0;
    for (l2 && a(t2[0], t2[1], l2) && (n2 = 1); ++r2 < n2; ) for (var c = t2[r2], f = o(c), p = -1, d = f.length; ++p < d; ) {
      var h = f[p], v = e2[h];
      (void 0 === v || i(v, s[h]) && !u.call(e2, h)) && (e2[h] = c[h]);
    }
    return e2;
  });
  e.exports = l;
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    if (!e2.isExportDeclaration()) throw new Error("Only export declarations can be splitted.");
    var t2 = e2.isExportDefaultDeclaration(), r2 = e2.get("declaration"), i = r2.isClassDeclaration();
    if (t2) {
      var a = r2.isFunctionDeclaration() || i, o = r2.isScope() ? r2.scope.parent : r2.scope, s = r2.node.id, u = false;
      s || (u = true, s = o.generateUidIdentifier("default"), (a || r2.isFunctionExpression() || r2.isClassExpression()) && (r2.node.id = n().cloneNode(s)));
      var l = a ? r2 : n().variableDeclaration("var", [n().variableDeclarator(n().cloneNode(s), r2.node)]), c = n().exportNamedDeclaration(null, [n().exportSpecifier(n().cloneNode(s), n().identifier("default"))]);
      return e2.insertAfter(c), e2.replaceWith(l), u && o.registerBinding(i ? "let" : "var", e2), e2;
    }
    if (e2.get("specifiers").length > 0) throw new Error("It doesn't make sense to split exported specifiers.");
    var f = r2.getOuterBindingIdentifiers(), p = Object.keys(f).map(function(e3) {
      return n().exportSpecifier(n().identifier(e3), n().identifier(e3));
    }), d = n().exportNamedDeclaration(null, p);
    return e2.insertAfter(d), e2.replaceWith(r2.node), e2;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  a(r(168));
  function i() {
    var e2 = a(r(589));
    return i = function() {
      return e2;
    }, e2;
  }
  function a(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var o = { ReferencedIdentifier: function(e2, t2) {
    var r2 = e2.node;
    r2.name === t2.oldName && (r2.name = t2.newName);
  }, Scope: function(e2, t2) {
    e2.scope.bindingIdentifierEquals(t2.oldName, t2.binding.identifier) || e2.skip();
  }, "AssignmentExpression|Declaration": function(e2, t2) {
    var r2 = e2.getOuterBindingIdentifiers();
    for (var n2 in r2) n2 === t2.oldName && (r2[n2].name = t2.newName);
  } }, s = (function() {
    function e2(t2, r2, n2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.newName = n2, this.oldName = r2, this.binding = t2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "maybeConvertFromExportDeclaration", value: function(e3) {
      var t2 = e3.parentPath;
      t2.isExportDeclaration() && (t2.isExportDefaultDeclaration() && !t2.get("declaration").node.id || (0, i().default)(t2));
    } }, { key: "maybeConvertFromClassFunctionDeclaration", value: function(e3) {
    } }, { key: "maybeConvertFromClassFunctionExpression", value: function(e3) {
    } }, { key: "rename", value: function(e3) {
      var t2 = this.binding, r2 = this.oldName, n2 = this.newName, i2 = t2.scope, a2 = t2.path.find(function(e4) {
        return e4.isDeclaration() || e4.isFunctionExpression() || e4.isClassExpression();
      });
      a2 && (a2.getOuterBindingIdentifiers()[r2] === t2.identifier && this.maybeConvertFromExportDeclaration(a2));
      i2.traverse(e3 || i2.block, o, this), e3 || (i2.removeOwnBinding(r2), i2.bindings[n2] = t2, this.binding.identifier.name = n2), t2.type, a2 && (this.maybeConvertFromClassFunctionDeclaration(a2), this.maybeConvertFromClassFunctionExpression(a2));
    } }]), e2;
  })();
  t.default = s;
}, function(e, t, r) {
  "use strict";
  var n = r(81), i = r(174), a = r(61), o = r(175), s = 1 / 0, u = n ? n.prototype : void 0, l = u ? u.toString : void 0;
  e.exports = function e2(t2) {
    if ("string" == typeof t2) return t2;
    if (a(t2)) return i(t2, e2) + "";
    if (o(t2)) return l ? l.call(t2) : "";
    var r2 = t2 + "";
    return "0" == r2 && 1 / t2 == -s ? "-0" : r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(591);
  e.exports = function(e2) {
    return null == e2 ? "" : n(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = 9007199254740991, i = Math.floor;
  e.exports = function(e2, t2) {
    var r2 = "";
    if (!e2 || t2 < 1 || t2 > n) return r2;
    do {
      t2 % 2 && (r2 += e2), (t2 = i(t2 / 2)) && (e2 += e2);
    } while (t2);
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(593), i = r(169), a = r(176), o = r(592);
  e.exports = function(e2, t2, r2) {
    return t2 = (r2 ? i(e2, t2, r2) : void 0 === t2) ? 1 : a(t2), n(o(e2), t2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(170)(Object.keys, Object);
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(110), i = r(595), a = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    if (!n(e2)) return i(e2);
    var t2 = [];
    for (var r2 in Object(e2)) a.call(e2, r2) && "constructor" != r2 && t2.push(r2);
    return t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(51), i = r(177), a = r(41), o = {};
  o["[object Float32Array]"] = o["[object Float64Array]"] = o["[object Int8Array]"] = o["[object Int16Array]"] = o["[object Int32Array]"] = o["[object Uint8Array]"] = o["[object Uint8ClampedArray]"] = o["[object Uint16Array]"] = o["[object Uint32Array]"] = true, o["[object Arguments]"] = o["[object Array]"] = o["[object ArrayBuffer]"] = o["[object Boolean]"] = o["[object DataView]"] = o["[object Date]"] = o["[object Error]"] = o["[object Function]"] = o["[object Map]"] = o["[object Number]"] = o["[object Object]"] = o["[object RegExp]"] = o["[object Set]"] = o["[object String]"] = o["[object WeakMap]"] = false, e.exports = function(e2) {
    return a(e2) && i(e2.length) && !!o[n(e2)];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(597), i = r(112), a = r(111), o = a && a.isTypedArray, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
    return false;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(51), i = r(41), a = "[object Arguments]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(600), i = r(41), a = Object.prototype, o = a.hasOwnProperty, s = a.propertyIsEnumerable, u = n(/* @__PURE__ */ (function() {
    return arguments;
  })()) ? n : function(e2) {
    return i(e2) && o.call(e2, "callee") && !s.call(e2, "callee");
  };
  e.exports = u;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = Array(e2); ++r2 < e2; ) n[r2] = t2(r2);
    return n;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(174);
  e.exports = function(e2, t2) {
    return n(t2, function(t3) {
      return e2[t3];
    });
  };
}, function(e, t, r) {
  "use strict";
  var n = r(603), i = r(80);
  e.exports = function(e2) {
    return null == e2 ? [] : n(e2, i(e2));
  };
}, function(e, t, r) {
  "use strict";
  var n = r(42), i = r(175), a = NaN, o = /^\s+|\s+$/g, s = /^[-+]0x[0-9a-f]+$/i, u = /^0b[01]+$/i, l = /^0o[0-7]+$/i, c = parseInt;
  e.exports = function(e2) {
    if ("number" == typeof e2) return e2;
    if (i(e2)) return a;
    if (n(e2)) {
      var t2 = "function" == typeof e2.valueOf ? e2.valueOf() : e2;
      e2 = n(t2) ? t2 + "" : t2;
    }
    if ("string" != typeof e2) return 0 === e2 ? e2 : +e2;
    e2 = e2.replace(o, "");
    var r2 = u.test(e2);
    return r2 || l.test(e2) ? c(e2.slice(2), r2 ? 2 : 8) : s.test(e2) ? a : +e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(605), i = 1 / 0, a = 17976931348623157e292;
  e.exports = function(e2) {
    return e2 ? (e2 = n(e2)) === i || e2 === -i ? (e2 < 0 ? -1 : 1) * a : e2 == e2 ? e2 : 0 : 0 === e2 ? e2 : 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(51), i = r(61), a = r(41), o = "[object String]";
  e.exports = function(e2) {
    return "string" == typeof e2 || !i(e2) && a(e2) && n(e2) == o;
  };
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype.toString;
  e.exports = function(e2) {
    return n.call(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(81), i = Object.prototype, a = i.hasOwnProperty, o = i.toString, s = n ? n.toStringTag : void 0;
  e.exports = function(e2) {
    var t2 = a.call(e2, s), r2 = e2[s];
    try {
      e2[s] = void 0;
      var n2 = true;
    } catch (e3) {
    }
    var i2 = o.call(e2);
    return n2 && (t2 ? e2[s] = r2 : delete e2[s]), i2;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2, r2) {
    for (var n = r2 - 1, i = e2.length; ++n < i; ) if (e2[n] === t2) return n;
    return -1;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return e2 != e2;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2, r2, n) {
    for (var i = e2.length, a = r2 + (n ? 1 : -1); n ? a-- : ++a < i; ) if (t2(e2[a], a, e2)) return a;
    return -1;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(612), i = r(611), a = r(610);
  e.exports = function(e2, t2, r2) {
    return t2 == t2 ? a(e2, t2, r2) : n(e2, i, r2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = 1e3, a = 60 * i, o = 60 * a, s = 24 * o, u = 365.25 * s;
  function l(e2, t2, r2) {
    if (!(e2 < t2)) return e2 < 1.5 * t2 ? Math.floor(e2 / t2) + " " + r2 : Math.ceil(e2 / t2) + " " + r2 + "s";
  }
  e.exports = function(e2, t2) {
    t2 = t2 || {};
    var r2 = n(e2);
    if ("string" === r2 && e2.length > 0) return (function(e3) {
      if ((e3 = String(e3)).length > 100) return;
      var t3 = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e3);
      if (!t3) return;
      var r3 = parseFloat(t3[1]);
      switch ((t3[2] || "ms").toLowerCase()) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return r3 * u;
        case "days":
        case "day":
        case "d":
          return r3 * s;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return r3 * o;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return r3 * a;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return r3 * i;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return r3;
        default:
          return;
      }
    })(e2);
    if ("number" === r2 && false === isNaN(e2)) return t2.long ? (function(e3) {
      return l(e3, s, "day") || l(e3, o, "hour") || l(e3, a, "minute") || l(e3, i, "second") || e3 + " ms";
    })(e2) : (function(e3) {
      if (e3 >= s) return Math.round(e3 / s) + "d";
      if (e3 >= o) return Math.round(e3 / o) + "h";
      if (e3 >= a) return Math.round(e3 / a) + "m";
      if (e3 >= i) return Math.round(e3 / i) + "s";
      return e3 + "ms";
    })(e2);
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    var r2;
    function n2() {
      if (n2.enabled) {
        var e3 = n2, i2 = +/* @__PURE__ */ new Date(), a = i2 - (r2 || i2);
        e3.diff = a, e3.prev = r2, e3.curr = i2, r2 = i2;
        for (var o = new Array(arguments.length), s = 0; s < o.length; s++) o[s] = arguments[s];
        o[0] = t.coerce(o[0]), "string" != typeof o[0] && o.unshift("%O");
        var u = 0;
        o[0] = o[0].replace(/%([a-zA-Z%])/g, function(r3, n3) {
          if ("%%" === r3) return r3;
          u++;
          var i3 = t.formatters[n3];
          if ("function" == typeof i3) {
            var a2 = o[u];
            r3 = i3.call(e3, a2), o.splice(u, 1), u--;
          }
          return r3;
        }), t.formatArgs.call(e3, o), (n2.log || t.log || console.log.bind(console)).apply(e3, o);
      }
    }
    return n2.namespace = e2, n2.enabled = t.enabled(e2), n2.useColors = t.useColors(), n2.color = (function(e3) {
      var r3, n3 = 0;
      for (r3 in e3) n3 = (n3 << 5) - n3 + e3.charCodeAt(r3), n3 |= 0;
      return t.colors[Math.abs(n3) % t.colors.length];
    })(e2), n2.destroy = i, "function" == typeof t.init && t.init(n2), t.instances.push(n2), n2;
  }
  function i() {
    var e2 = t.instances.indexOf(this);
    return -1 !== e2 && (t.instances.splice(e2, 1), true);
  }
  (t = e.exports = n.debug = n.default = n).coerce = function(e2) {
    return e2 instanceof Error ? e2.stack || e2.message : e2;
  }, t.disable = function() {
    t.enable("");
  }, t.enable = function(e2) {
    var r2;
    t.save(e2), t.names = [], t.skips = [];
    var n2 = ("string" == typeof e2 ? e2 : "").split(/[\s,]+/), i2 = n2.length;
    for (r2 = 0; r2 < i2; r2++) n2[r2] && ("-" === (e2 = n2[r2].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e2.substr(1) + "$")) : t.names.push(new RegExp("^" + e2 + "$")));
    for (r2 = 0; r2 < t.instances.length; r2++) {
      var a = t.instances[r2];
      a.enabled = t.enabled(a.namespace);
    }
  }, t.enabled = function(e2) {
    if ("*" === e2[e2.length - 1]) return true;
    var r2, n2;
    for (r2 = 0, n2 = t.skips.length; r2 < n2; r2++) if (t.skips[r2].test(e2)) return false;
    for (r2 = 0, n2 = t.names.length; r2 < n2; r2++) if (t.names[r2].test(e2)) return true;
    return false;
  }, t.humanize = r(614), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
}, function(e, t, r) {
  "use strict";
  (function(n) {
    function i(e2) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
        return typeof e3;
      } : function(e3) {
        return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
      })(e2);
    }
    function a() {
      var e2;
      try {
        e2 = t.storage.debug;
      } catch (e3) {
      }
      return !e2 && void 0 !== n && "env" in n && (e2 = n.env.DEBUG), e2;
    }
    (t = e.exports = r(615)).log = function() {
      return "object" === ("undefined" == typeof console ? "undefined" : i(console)) && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }, t.formatArgs = function(e2) {
      var r2 = this.useColors;
      if (e2[0] = (r2 ? "%c" : "") + this.namespace + (r2 ? " %c" : " ") + e2[0] + (r2 ? "%c " : " ") + "+" + t.humanize(this.diff), !r2) return;
      var n2 = "color: " + this.color;
      e2.splice(1, 0, n2, "color: inherit");
      var i2 = 0, a2 = 0;
      e2[0].replace(/%[a-zA-Z%]/g, function(e3) {
        "%%" !== e3 && "%c" === e3 && (a2 = ++i2);
      }), e2.splice(a2, 0, n2);
    }, t.save = function(e2) {
      try {
        null == e2 ? t.storage.removeItem("debug") : t.storage.debug = e2;
      } catch (e3) {
      }
    }, t.load = a, t.useColors = function() {
      if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return true;
      if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return false;
      return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }, t.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : (function() {
      try {
        return window.localStorage;
      } catch (e2) {
      }
    })(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function(e2) {
      try {
        return JSON.stringify(e2);
      } catch (e3) {
        return "[UnexpectedJSONParseError]: " + e3.message;
      }
    }, t.enable(a());
  }).call(this, r(115));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(52));
  function a() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(5));
    return a = function() {
      return e2;
    }, e2;
  }
  var o = (function() {
    function e2(t2, r2, n2, i2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), this.queue = null, this.parentPath = i2, this.scope = t2, this.state = n2, this.opts = r2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "shouldVisit", value: function(e3) {
      var t2 = this.opts;
      if (t2.enter || t2.exit) return true;
      if (t2[e3.type]) return true;
      var r2 = a().VISITOR_KEYS[e3.type];
      if (!r2 || !r2.length) return false;
      var n2 = true, i2 = false, o2 = void 0;
      try {
        for (var s, u = r2[Symbol.iterator](); !(n2 = (s = u.next()).done); n2 = true) {
          if (e3[s.value]) return true;
        }
      } catch (e4) {
        i2 = true, o2 = e4;
      } finally {
        try {
          n2 || null == u.return || u.return();
        } finally {
          if (i2) throw o2;
        }
      }
      return false;
    } }, { key: "create", value: function(e3, t2, r2, n2) {
      return i.default.get({ parentPath: this.parentPath, parent: e3, container: t2, key: r2, listKey: n2 });
    } }, { key: "maybeQueue", value: function(e3, t2) {
      if (this.trap) throw new Error("Infinite cycle detected");
      this.queue && (t2 ? this.queue.push(e3) : this.priorityQueue.push(e3));
    } }, { key: "visitMultiple", value: function(e3, t2, r2) {
      if (0 === e3.length) return false;
      for (var n2 = [], i2 = 0; i2 < e3.length; i2++) {
        var a2 = e3[i2];
        a2 && this.shouldVisit(a2) && n2.push(this.create(t2, e3, i2, r2));
      }
      return this.visitQueue(n2);
    } }, { key: "visitSingle", value: function(e3, t2) {
      return !!this.shouldVisit(e3[t2]) && this.visitQueue([this.create(e3, e3, t2)]);
    } }, { key: "visitQueue", value: function(e3) {
      this.queue = e3, this.priorityQueue = [];
      var t2 = [], r2 = false, n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s = e3[Symbol.iterator](); !(n2 = (o2 = s.next()).done); n2 = true) {
          var u = o2.value;
          if (u.resync(), 0 !== u.contexts.length && u.contexts[u.contexts.length - 1] === this || u.pushContext(this), null !== u.key && !(t2.indexOf(u.node) >= 0)) {
            if (t2.push(u.node), u.visit()) {
              r2 = true;
              break;
            }
            if (this.priorityQueue.length && (r2 = this.visitQueue(this.priorityQueue), this.priorityQueue = [], this.queue = e3, r2)) break;
          }
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s.return || s.return();
        } finally {
          if (i2) throw a2;
        }
      }
      var l = true, c = false, f = void 0;
      try {
        for (var p, d = e3[Symbol.iterator](); !(l = (p = d.next()).done); l = true) {
          p.value.popContext();
        }
      } catch (e4) {
        c = true, f = e4;
      } finally {
        try {
          l || null == d.return || d.return();
        } finally {
          if (c) throw f;
        }
      }
      return this.queue = null, r2;
    } }, { key: "visit", value: function(e3, t2) {
      var r2 = e3[t2];
      return !!r2 && (Array.isArray(r2) ? this.visitMultiple(r2, e3, t2) : this.visitSingle(e3, t2));
    } }]), e2;
  })();
  t.default = o;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.DestructuringAssignmentEvaluation = p, t.IteratorDestructuringAssignmentEvaluation = d, t.KeyedDestructuringAssignmentEvaluation = h;
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), i = r(10), a = r(0), o = r(7), s = r(63), u = r(3), l = r(2);
  function c(e2, t2, r2, i2, a2, o2) {
    var s2, u2 = t2.argument;
    "ObjectPattern" !== u2.type && "ArrayPattern" !== u2.type && (s2 = o2.evaluate(u2, a2));
    var c2 = l.Create.ObjectCreate(e2, e2.intrinsics.ObjectPrototype);
    return l.Create.CopyDataProperties(e2, c2, r2, i2), "ObjectPattern" !== u2.type && "ArrayPattern" !== u2.type ? ((0, n.default)(s2), l.Properties.PutValue(e2, s2, c2)) : p(e2, u2, c2, a2, o2);
  }
  function f(e2, t2, r2, i2, o2) {
    if (0 === t2.length) return [];
    var c2, p2 = t2.slice(-1)[0], d2 = f(e2, t2.slice(0, -1), r2, i2, o2);
    if ("Identifier" === p2.key.type && ("Identifier" === p2.value.type && p2.value.name === p2.key.name || "AssignmentPattern" === p2.value.type && p2.value.left.name === p2.key.name) && false === p2.computed) {
      var v;
      "AssignmentPattern" === p2.value.type && (v = p2.value.right);
      var y = p2.key.name, m = l.Environment.ResolveBinding(e2, y, i2, o2), b = (0, u.GetV)(e2, r2, y);
      if (void 0 !== v && b instanceof a.UndefinedValue) {
        var g = o2.evaluate(v, i2);
        if (b = l.Environment.GetValue(e2, g), (0, u.IsAnonymousFunctionDefinition)(e2, v)) (0, n.default)(b instanceof a.ObjectValue), false === (0, u.HasOwnProperty)(e2, b, "name") && l.Functions.SetFunctionName(e2, b, y);
      }
      l.Properties.PutValue(e2, m, b), c2 = [new a.StringValue(e2, y)];
    } else {
      var w = (0, s.EvalPropertyName)(p2, o2, e2, i2);
      h(e2, p2.value, r2, w, i2, o2), c2 = [w];
    }
    return (0, n.default)(c2 instanceof Array), d2 = d2.concat(c2);
  }
  function p(e2, t2, r2, n2, i2) {
    if ("ObjectPattern" === t2.type) {
      var a2 = [], s2 = null, l2 = true, p2 = false, h2 = void 0;
      try {
        for (var v, y = t2.properties[Symbol.iterator](); !(l2 = (v = y.next()).done); l2 = true) {
          var m = v.value;
          "RestElement" === m.type ? s2 = m : a2.push(m);
        }
      } catch (e3) {
        p2 = true, h2 = e3;
      } finally {
        try {
          l2 || null == y.return || y.return();
        } finally {
          if (p2) throw h2;
        }
      }
      if (!s2) return (0, u.RequireObjectCoercible)(e2, r2), f(e2, a2, r2, n2, i2), e2.intrinsics.empty;
      if (0 === a2.length) {
        return c(e2, s2, r2, [], n2, i2);
      }
      return c(e2, s2, r2, f(e2, a2, r2, n2, i2), n2, i2);
    }
    if ("ArrayPattern" === t2.type) {
      var b, g = (0, u.GetIterator)(e2, r2), w = { $Iterator: g, $Done: false };
      try {
        b = d(e2, t2.elements, w, n2, i2);
      } catch (t3) {
        if (false === w.$Done && t3 instanceof o.AbruptCompletion) throw (0, u.IteratorClose)(e2, g, t3);
        throw t3;
      }
      if (false === w.$Done) {
        var E = (0, u.IteratorClose)(e2, g, new o.SimpleNormalCompletion(e2.intrinsics.undefined));
        if (E instanceof o.AbruptCompletion) throw E;
      }
      return b;
    }
  }
  function d(e2, t2, r2, s2, c2) {
    var f2, d2 = t2;
    if (d2.length > 0) {
      var h2 = d2[d2.length - 1];
      null !== h2 && "RestElement" === h2.type && (f2 = h2, d2 = d2.slice(0, -1));
    }
    var v = true, y = false, m = void 0;
    try {
      for (var b, g = d2[Symbol.iterator](); !(v = (b = g.next()).done); v = true) {
        var w = b.value;
        if (null !== w) {
          var E = void 0, S = void 0;
          "AssignmentPattern" === w.type ? (S = w.right, E = w.left) : E = w;
          var T = void 0;
          "ObjectPattern" !== E.type && "ArrayPattern" !== E.type && (T = c2.evaluate(E, s2));
          var A = void 0;
          if (false === r2.$Done) {
            var C = void 0;
            try {
              C = (0, u.IteratorStep)(e2, r2.$Iterator);
            } catch (e3) {
              throw e3 instanceof o.AbruptCompletion && (r2.$Done = true), e3;
            }
            if (false === C) r2.$Done = true, A = e2.intrinsics.undefined;
            else try {
              A = (0, u.IteratorValue)(e2, C);
            } catch (e3) {
              throw e3 instanceof o.AbruptCompletion && (r2.$Done = true), e3;
            }
          } else A = e2.intrinsics.undefined;
          var P = void 0;
          if (S && A instanceof a.UndefinedValue) {
            var O = c2.evaluate(S, s2);
            P = l.Environment.GetValue(e2, O);
          } else P = A;
          if ("ObjectPattern" !== E.type && "ArrayPattern" !== E.type) {
            if ((0, n.default)(T), S && A instanceof a.UndefinedValue && (0, u.IsAnonymousFunctionDefinition)(e2, S) && (0, u.IsIdentifierRef)(e2, E) && P instanceof a.ObjectValue) false === (0, u.HasOwnProperty)(e2, P, "name") && ((0, n.default)(T instanceof i.Reference), l.Functions.SetFunctionName(e2, P, l.Environment.GetReferencedName(e2, T)));
            l.Properties.PutValue(e2, T, P);
          } else {
            p(e2, E, P, s2, c2);
          }
        } else if (false === r2.$Done) {
          var x = void 0;
          try {
            x = (0, u.IteratorStep)(e2, r2.$Iterator);
          } catch (e3) {
            throw e3 instanceof o.AbruptCompletion && (r2.$Done = true), e3;
          }
          false === x && (r2.$Done = true);
        }
      }
    } catch (e3) {
      y = true, m = e3;
    } finally {
      try {
        v || null == g.return || g.return();
      } finally {
        if (y) throw m;
      }
    }
    if (f2) {
      var _, V = f2.argument;
      "ObjectPattern" !== V.type && "ArrayPattern" !== V.type && (_ = c2.evaluate(V, s2));
      for (var D = l.Create.ArrayCreate(e2, 0), N = 0; false === r2.$Done; ) {
        var I = void 0;
        try {
          I = (0, u.IteratorStep)(e2, r2.$Iterator);
        } catch (e3) {
          throw e3 instanceof o.AbruptCompletion && (r2.$Done = true), e3;
        }
        if (false === I) r2.$Done = true;
        else {
          var k = void 0;
          try {
            k = (0, u.IteratorValue)(e2, I);
          } catch (e3) {
            throw e3 instanceof o.AbruptCompletion && (r2.$Done = true), e3;
          }
          var j = l.Create.CreateDataProperty(e2, D, N.toString(), k);
          (0, n.default)(j, "expected to create data property"), N += 1;
        }
      }
      return "ObjectPattern" !== V.type && "ArrayPattern" !== V.type ? ((0, n.default)(_), l.Properties.PutValue(e2, _, D)) : p(e2, V, D, s2, c2);
    }
  }
  function h(e2, t2, r2, o2, s2, c2) {
    var f2, d2, h2, v;
    "AssignmentPattern" === t2.type ? (d2 = t2.right, f2 = t2.left) : f2 = t2, "ObjectPattern" !== f2.type && "ArrayPattern" !== f2.type && (h2 = c2.evaluate(f2, s2));
    var y = (0, u.GetV)(e2, r2, o2);
    if (d2 && y instanceof a.UndefinedValue) {
      var m = c2.evaluate(d2, s2);
      v = l.Environment.GetValue(e2, m);
    } else v = y;
    if ("ObjectPattern" === f2.type || "ArrayPattern" === f2.type) return p(e2, f2, v, s2, c2);
    ((0, n.default)(h2), d2 && y instanceof a.UndefinedValue && (0, u.IsAnonymousFunctionDefinition)(e2, d2) && (0, u.IsIdentifierRef)(e2, f2) && v instanceof a.ObjectValue) && (false === (0, u.HasOwnProperty)(e2, v, "name") && ((0, n.default)(h2 instanceof i.Reference), l.Functions.SetFunctionName(e2, v, l.Environment.GetReferencedName(e2, h2))));
    return l.Properties.PutValue(e2, h2, v);
  }
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.hashBinary = function(e2, t2, r2) {
    var n2 = t2.getHash(), i2 = r2.getHash();
    if (i2 < n2) {
      var o2;
      switch (e2) {
        case "*":
        case "==":
        case "!=":
        case "===":
        case "!==":
          o2 = !(t2.mightBeObject() && r2.mightBeObject());
          break;
        case "+":
          o2 = !(t2.mightBeObject() && r2.mightBeObject() || t2.mightBeString() || r2.mightBeString());
          break;
        default:
          o2 = false;
      }
      if (o2) {
        var s = [r2, t2];
        t2 = s[0], r2 = s[1];
        var u = [i2, n2];
        n2 = u[0], i2 = u[1];
      }
    }
    return [13 * (13 * a(e2) ^ n2) ^ i2, [t2, r2]];
  }, t.hashCall = function(e2) {
    for (var t2 = a(e2), r2 = arguments.length, n2 = new Array(r2 > 1 ? r2 - 1 : 0), i2 = 1; i2 < r2; i2++) n2[i2 - 1] = arguments[i2];
    for (var o2 = 0; o2 < n2.length; o2++) {
      var s = n2[o2];
      t2 = 13 * t2 ^ s.getHash();
    }
    return [t2, n2];
  }, t.hashTernary = function(e2, t2, r2) {
    return [13 * (13 * e2.getHash() ^ t2.getHash()) ^ r2.getHash(), [e2, t2, r2]];
  }, t.hashString = a, t.hashUnary = function(e2, t2) {
    return 13 * a(e2) ^ t2.getHash();
  }, t.HashSet = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  function a(e2) {
    for (var t2 = 5381, r2 = e2.length - 1; r2 >= 0; r2--) t2 = 33 * t2 ^ e2.charCodeAt(r2);
    return t2;
  }
  var o = (function() {
    function e2() {
      var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 32768;
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
      var r2 = 16;
      for (t2 *= 2; r2 < t2; ) r2 *= 2;
      this._entries = new Array(r2), this._count = 0;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "add", value: function(e3) {
      for (var t2 = this._entries, r2 = t2.length, n2 = e3.getHash() & r2 - 1; ; ) {
        var a2 = t2[n2];
        if (void 0 === a2) return t2[n2] = e3, ++this._count > r2 / 2 && this.expand(), e3;
        if (e3.equals(a2)) return a2;
        ++n2 >= r2 && (n2 = 0);
      }
      (0, i.default)(false);
    } }, { key: "expand", value: function() {
      var e3 = this._entries, t2 = e3.length, r2 = 2 * t2;
      if (!(r2 <= 0)) {
        for (var n2 = new Array(r2), i2 = 0; i2 < t2; i2++) {
          var a2 = e3[i2];
          if (void 0 !== a2) for (var o2 = a2.getHash() & r2 - 1; ; ) {
            if (void 0 === n2[o2]) {
              n2[o2] = a2;
              break;
            }
            ++o2 >= r2 && (o2 = 0);
          }
        }
        this._entries = n2;
      }
    } }]), e2;
  })();
  t.HashSet = o;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    var o2 = (function(e3, t3, r3) {
      var n2, a2, o3, u2 = "";
      do {
        var l2 = s(t3, u2 += "$");
        n2 = l2.names, a2 = new Set(n2), o3 = (0, i.default)(e3, e3.code(l2.code), { parser: r3.parser, placeholderWhitelist: new Set(l2.names.concat(r3.placeholderWhitelist ? Array.from(r3.placeholderWhitelist) : [])), placeholderPattern: r3.placeholderPattern, preserveComments: r3.preserveComments });
      } while (o3.placeholders.some(function(e4) {
        return e4.isDuplicate && a2.has(e4.name);
      }));
      return { metadata: o3, names: n2 };
    })(e2, t2, r2), u = o2.metadata, l = o2.names;
    return function(t3) {
      var r3 = t3.reduce(function(e3, t4, r4) {
        return e3[l[r4]] = t4, e3;
      }, {});
      return function(t4) {
        var i2 = (0, n.normalizeReplacements)(t4);
        return i2 && Object.keys(i2).forEach(function(e3) {
          if (Object.prototype.hasOwnProperty.call(r3, e3)) throw new Error("Unexpected replacement overlap.");
        }), e2.unwrap((0, a.default)(u, i2 ? Object.assign(i2, r3) : r3));
      };
    };
  };
  var n = r(116), i = o(r(189)), a = o(r(186));
  function o(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function s(e2, t2) {
    for (var r2 = [], n2 = e2[0], i2 = 1; i2 < e2.length; i2++) {
      var a2 = "".concat(t2).concat(i2 - 1);
      r2.push(a2), n2 += a2 + e2[i2];
    }
    return { names: r2, code: n2 };
  }
}, function(e, t, r) {
  "use strict";
  var n = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi, i = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, a = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, o = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi, s = /* @__PURE__ */ new Map([["n", "\n"], ["r", "\r"], ["t", "	"], ["b", "\b"], ["f", "\f"], ["v", "\v"], ["0", "\0"], ["\\", "\\"], ["e", "\x1B"], ["a", "\x07"]]);
  function u(e2) {
    return "u" === e2[0] && 5 === e2.length || "x" === e2[0] && 3 === e2.length ? String.fromCharCode(parseInt(e2.slice(1), 16)) : s.get(e2) || e2;
  }
  function l(e2, t2) {
    var r2, n2 = [], i2 = t2.trim().split(/\s*,\s*/g), s2 = true, l2 = false, c2 = void 0;
    try {
      for (var f, p = i2[Symbol.iterator](); !(s2 = (f = p.next()).done); s2 = true) {
        var d = f.value;
        if (isNaN(d)) {
          if (!(r2 = d.match(a))) throw new Error("Invalid Chalk template style argument: ".concat(d, " (in style '").concat(e2, "')"));
          n2.push(r2[2].replace(o, function(e3, t3, r3) {
            return t3 ? u(t3) : r3;
          }));
        } else n2.push(Number(d));
      }
    } catch (e3) {
      l2 = true, c2 = e3;
    } finally {
      try {
        s2 || null == p.return || p.return();
      } finally {
        if (l2) throw c2;
      }
    }
    return n2;
  }
  function c(e2, t2) {
    var r2 = {}, n2 = true, i2 = false, a2 = void 0;
    try {
      for (var o2, s2 = t2[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
        var u2 = o2.value, l2 = true, c2 = false, f = void 0;
        try {
          for (var p, d = u2.styles[Symbol.iterator](); !(l2 = (p = d.next()).done); l2 = true) {
            var h = p.value;
            r2[h[0]] = u2.inverse ? null : h.slice(1);
          }
        } catch (e3) {
          c2 = true, f = e3;
        } finally {
          try {
            l2 || null == d.return || d.return();
          } finally {
            if (c2) throw f;
          }
        }
      }
    } catch (e3) {
      i2 = true, a2 = e3;
    } finally {
      try {
        n2 || null == s2.return || s2.return();
      } finally {
        if (i2) throw a2;
      }
    }
    for (var v = e2, y = Object.keys(r2), m = 0; m < y.length; m++) {
      var b = y[m];
      if (Array.isArray(r2[b])) {
        if (!(b in v)) throw new Error("Unknown Chalk style: ".concat(b));
        v = r2[b].length > 0 ? v[b].apply(v, r2[b]) : v[b];
      }
    }
    return v;
  }
  e.exports = function(e2, t2) {
    var r2 = [], a2 = [], o2 = [];
    if (t2.replace(n, function(t3, n2, s3, f, p, d) {
      if (n2) o2.push(u(n2));
      else if (f) {
        var h = o2.join("");
        o2 = [], a2.push(0 === r2.length ? h : c(e2, r2)(h)), r2.push({ inverse: s3, styles: (function(e3) {
          i.lastIndex = 0;
          for (var t4, r3 = []; null !== (t4 = i.exec(e3)); ) {
            var n3 = t4[1];
            if (t4[2]) {
              var a3 = l(n3, t4[2]);
              r3.push([n3].concat(a3));
            } else r3.push([n3]);
          }
          return r3;
        })(f) });
      } else if (p) {
        if (0 === r2.length) throw new Error("Found extraneous } in Chalk template literal");
        a2.push(c(e2, r2)(o2.join(""))), o2 = [], r2.pop();
      } else o2.push(d);
    }), a2.push(o2.join("")), r2.length > 0) {
      var s2 = "Chalk template literal is missing ".concat(r2.length, " closing bracket").concat(1 === r2.length ? "" : "s", " (`}`)");
      throw new Error(s2);
    }
    return a2.join("");
  };
}, function(e, t, r) {
  "use strict";
  e.exports = { stdout: false, stderr: false };
}, function(e, t, r) {
  "use strict";
  var n = r(187);
  function i(e2) {
    var t2 = (function() {
      for (var e3 = {}, t3 = Object.keys(n), r3 = t3.length, i3 = 0; i3 < r3; i3++) e3[t3[i3]] = { distance: -1, parent: null };
      return e3;
    })(), r2 = [e2];
    for (t2[e2].distance = 0; r2.length; ) for (var i2 = r2.pop(), a2 = Object.keys(n[i2]), o2 = a2.length, s = 0; s < o2; s++) {
      var u = a2[s], l = t2[u];
      -1 === l.distance && (l.distance = t2[i2].distance + 1, l.parent = i2, r2.unshift(u));
    }
    return t2;
  }
  function a(e2, t2) {
    return function(r2) {
      return t2(e2(r2));
    };
  }
  function o(e2, t2) {
    for (var r2 = [t2[e2].parent, e2], i2 = n[t2[e2].parent][e2], o2 = t2[e2].parent; t2[o2].parent; ) r2.unshift(t2[o2].parent), i2 = a(n[t2[o2].parent][o2], i2), o2 = t2[o2].parent;
    return i2.conversion = r2, i2;
  }
  e.exports = function(e2) {
    for (var t2 = i(e2), r2 = {}, n2 = Object.keys(t2), a2 = n2.length, s = 0; s < a2; s++) {
      var u = n2[s];
      null !== t2[u].parent && (r2[u] = o(u, t2));
    }
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = r(187), a = r(623), o = {};
  Object.keys(i).forEach(function(e2) {
    o[e2] = {}, Object.defineProperty(o[e2], "channels", { value: i[e2].channels }), Object.defineProperty(o[e2], "labels", { value: i[e2].labels });
    var t2 = a(e2);
    Object.keys(t2).forEach(function(r2) {
      var i2 = t2[r2];
      o[e2][r2] = (function(e3) {
        var t3 = function(t4) {
          if (null == t4) return t4;
          arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments));
          var r3 = e3(t4);
          if ("object" === n(r3)) for (var i3 = r3.length, a2 = 0; a2 < i3; a2++) r3[a2] = Math.round(r3[a2]);
          return r3;
        };
        return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
      })(i2), o[e2][r2].raw = (function(e3) {
        var t3 = function(t4) {
          return null == t4 ? t4 : (arguments.length > 1 && (t4 = Array.prototype.slice.call(arguments)), e3(t4));
        };
        return "conversion" in e3 && (t3.conversion = e3.conversion), t3;
      })(i2);
    });
  }), e.exports = o;
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function t2(e3) {
      return (t2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var n = r(625), i = function(e3, t3) {
      return function() {
        var r2 = e3.apply(n, arguments);
        return "\x1B[".concat(r2 + t3, "m");
      };
    }, a = function(e3, t3) {
      return function() {
        var r2 = e3.apply(n, arguments);
        return "\x1B[".concat(38 + t3, ";5;").concat(r2, "m");
      };
    }, o = function(e3, t3) {
      return function() {
        var r2 = e3.apply(n, arguments);
        return "\x1B[".concat(38 + t3, ";2;").concat(r2[0], ";").concat(r2[1], ";").concat(r2[2], "m");
      };
    };
    Object.defineProperty(e2, "exports", { enumerable: true, get: function() {
      var e3 = /* @__PURE__ */ new Map(), r2 = { modifier: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, color: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], gray: [90, 39], redBright: [91, 39], greenBright: [92, 39], yellowBright: [93, 39], blueBright: [94, 39], magentaBright: [95, 39], cyanBright: [96, 39], whiteBright: [97, 39] }, bgColor: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49], bgBlackBright: [100, 49], bgRedBright: [101, 49], bgGreenBright: [102, 49], bgYellowBright: [103, 49], bgBlueBright: [104, 49], bgMagentaBright: [105, 49], bgCyanBright: [106, 49], bgWhiteBright: [107, 49] } };
      r2.color.grey = r2.color.gray;
      for (var s = Object.keys(r2), u = 0; u < s.length; u++) {
        for (var l = s[u], c = r2[l], f = Object.keys(c), p = 0; p < f.length; p++) {
          var d = f[p], h = c[d];
          r2[d] = { open: "\x1B[".concat(h[0], "m"), close: "\x1B[".concat(h[1], "m") }, c[d] = r2[d], e3.set(h[0], h[1]);
        }
        Object.defineProperty(r2, l, { value: c, enumerable: false }), Object.defineProperty(r2, "codes", { value: e3, enumerable: false });
      }
      var v = function(e4) {
        return e4;
      }, y = function(e4, t3, r3) {
        return [e4, t3, r3];
      };
      r2.color.close = "\x1B[39m", r2.bgColor.close = "\x1B[49m", r2.color.ansi = { ansi: i(v, 0) }, r2.color.ansi256 = { ansi256: a(v, 0) }, r2.color.ansi16m = { rgb: o(y, 0) }, r2.bgColor.ansi = { ansi: i(v, 10) }, r2.bgColor.ansi256 = { ansi256: a(v, 10) }, r2.bgColor.ansi16m = { rgb: o(y, 10) };
      for (var m = Object.keys(n), b = 0; b < m.length; b++) {
        var g = m[b];
        if ("object" === t2(n[g])) {
          var w = n[g];
          "ansi16" === g && (g = "ansi"), "ansi16" in w && (r2.color.ansi[g] = i(w.ansi16, 0), r2.bgColor.ansi[g] = i(w.ansi16, 10)), "ansi256" in w && (r2.color.ansi256[g] = a(w.ansi256, 0), r2.bgColor.ansi256[g] = a(w.ansi256, 10)), "rgb" in w && (r2.color.ansi16m[g] = o(w.rgb, 0), r2.bgColor.ansi16m[g] = o(w.rgb, 10));
        }
      }
      return r2;
    } });
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  var n = /[|\\{}()[\]^$+*?.]/g;
  e.exports = function(e2) {
    if ("string" != typeof e2) throw new TypeError("Expected a string");
    return e2.replace(n, "\\$&");
  };
}, function(e, t, r) {
  "use strict";
  (function(t2) {
    var n = r(627), i = r(626), a = r(622).stdout, o = r(621), s = "win32" === t2.platform && !(t2.env.TERM || "").toLowerCase().startsWith("xterm"), u = ["ansi", "ansi", "ansi256", "ansi16m"], l = /* @__PURE__ */ new Set(["gray"]), c = /* @__PURE__ */ Object.create(null);
    function f(e2, t3) {
      t3 = t3 || {};
      var r2 = a ? a.level : 0;
      e2.level = void 0 === t3.level ? r2 : t3.level, e2.enabled = "enabled" in t3 ? t3.enabled : e2.level > 0;
    }
    function p(e2) {
      if (!this || !(this instanceof p) || this.template) {
        var t3 = {};
        return f(t3, e2), t3.template = function() {
          var e3 = [].slice.call(arguments);
          return function(e4, t4) {
            if (!Array.isArray(t4)) return [].slice.call(arguments, 1).join(" ");
            for (var r2 = [].slice.call(arguments, 2), n2 = [t4.raw[0]], i2 = 1; i2 < t4.length; i2++) n2.push(String(r2[i2 - 1]).replace(/[{}\\]/g, "\\$&")), n2.push(String(t4.raw[i2]));
            return o(e4, n2.join(""));
          }.apply(null, [t3.template].concat(e3));
        }, Object.setPrototypeOf(t3, p.prototype), Object.setPrototypeOf(t3.template, t3), t3.template.constructor = p, t3.template;
      }
      f(this, e2);
    }
    s && (i.blue.open = "\x1B[94m");
    for (var d = Object.keys(i), h = function() {
      var e2 = d[v];
      i[e2].closeRe = new RegExp(n(i[e2].close), "g"), c[e2] = { get: function() {
        var t3 = i[e2];
        return T.call(this, this._styles ? this._styles.concat(t3) : [t3], this._empty, e2);
      } };
    }, v = 0; v < d.length; v++) h();
    c.visible = { get: function() {
      return T.call(this, this._styles || [], true, "visible");
    } }, i.color.closeRe = new RegExp(n(i.color.close), "g");
    for (var y = Object.keys(i.color.ansi), m = function() {
      var e2 = y[b];
      if (l.has(e2)) return "continue";
      c[e2] = { get: function() {
        var t3 = this.level;
        return function() {
          var r2 = { open: i.color[u[t3]][e2].apply(null, arguments), close: i.color.close, closeRe: i.color.closeRe };
          return T.call(this, this._styles ? this._styles.concat(r2) : [r2], this._empty, e2);
        };
      } };
    }, b = 0; b < y.length; b++) m();
    i.bgColor.closeRe = new RegExp(n(i.bgColor.close), "g");
    for (var g = Object.keys(i.bgColor.ansi), w = function() {
      var e2 = g[E];
      if (l.has(e2)) return "continue";
      var t3 = "bg" + e2[0].toUpperCase() + e2.slice(1);
      c[t3] = { get: function() {
        var t4 = this.level;
        return function() {
          var r2 = { open: i.bgColor[u[t4]][e2].apply(null, arguments), close: i.bgColor.close, closeRe: i.bgColor.closeRe };
          return T.call(this, this._styles ? this._styles.concat(r2) : [r2], this._empty, e2);
        };
      } };
    }, E = 0; E < g.length; E++) w();
    var S = Object.defineProperties(function() {
    }, c);
    function T(e2, t3, r2) {
      var n2 = function e3() {
        return function() {
          var e4 = arguments, t4 = e4.length, r3 = String(arguments[0]);
          if (0 === t4) return "";
          if (t4 > 1) for (var n3 = 1; n3 < t4; n3++) r3 += " " + e4[n3];
          if (!this.enabled || this.level <= 0 || !r3) return this._empty ? "" : r3;
          var a3 = i.dim.open;
          s && this.hasGrey && (i.dim.open = "");
          var o2 = true, u2 = false, l2 = void 0;
          try {
            for (var c2, f2 = this._styles.slice().reverse()[Symbol.iterator](); !(o2 = (c2 = f2.next()).done); o2 = true) {
              var p2 = c2.value;
              r3 = (r3 = p2.open + r3.replace(p2.closeRe, p2.open) + p2.close).replace(/\r?\n/g, "".concat(p2.close, "$&").concat(p2.open));
            }
          } catch (e5) {
            u2 = true, l2 = e5;
          } finally {
            try {
              o2 || null == f2.return || f2.return();
            } finally {
              if (u2) throw l2;
            }
          }
          return i.dim.open = a3, r3;
        }.apply(e3, arguments);
      };
      n2._styles = e2, n2._empty = t3;
      var a2 = this;
      return Object.defineProperty(n2, "level", { enumerable: true, get: function() {
        return a2.level;
      }, set: function(e3) {
        a2.level = e3;
      } }), Object.defineProperty(n2, "enabled", { enumerable: true, get: function() {
        return a2.enabled;
      }, set: function(e3) {
        a2.enabled = e3;
      } }), n2.hasGrey = this.hasGrey || "gray" === r2 || "grey" === r2, n2.__proto__ = S, n2;
    }
    Object.defineProperties(p.prototype, c), e.exports = p(), e.exports.supportsColor = a, e.exports.default = e.exports;
  }).call(this, r(115));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g, t.matchToToken = function(e2) {
    var t2 = { type: "invalid", value: e2[0], closed: void 0 };
    return e2[1] ? (t2.type = "string", t2.closed = !(!e2[3] && !e2[4])) : e2[5] ? t2.type = "comment" : e2[6] ? (t2.type = "comment", t2.closed = !!e2[7]) : e2[8] ? t2.type = "regex" : e2[9] ? t2.type = "number" : e2[10] ? t2.type = "name" : e2[11] ? t2.type = "punctuator" : e2[12] && (t2.type = "whitespace"), t2;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i() {
    var e2 = (function(e3) {
      if (e3 && e3.__esModule) return e3;
      var t2 = {};
      if (null != e3) {
        for (var r2 in e3) if (Object.prototype.hasOwnProperty.call(e3, r2)) {
          var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e3, r2) : {};
          n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e3[r2];
        }
      }
      return t2.default = e3, t2;
    })(r(629));
    return i = function() {
      return e2;
    }, e2;
  }
  function a() {
    var e2 = s(r(211));
    return a = function() {
      return e2;
    }, e2;
  }
  function o() {
    var e2 = s(r(628));
    return o = function() {
      return e2;
    }, e2;
  }
  function s(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.shouldHighlight = f, t.getChalk = p, t.default = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (f(t2)) {
      var r2 = p(t2), o2 = (function(e3) {
        return { keyword: e3.cyan, capitalized: e3.yellow, jsx_tag: e3.yellow, punctuator: e3.yellow, number: e3.magenta, string: e3.green, regex: e3.magenta, comment: e3.grey, invalid: e3.white.bgRed.bold };
      })(r2);
      return (function(e3, t3) {
        return t3.replace(i().default, function() {
          for (var t4 = arguments.length, r3 = new Array(t4), o3 = 0; o3 < t4; o3++) r3[o3] = arguments[o3];
          var s2 = (function(e4) {
            var t5 = n(e4.slice(-2), 2), r4 = t5[0], o4 = t5[1], s3 = (0, i().matchToToken)(e4);
            if ("name" === s3.type) {
              if (a().default.keyword.isReservedWordES6(s3.value)) return "keyword";
              if (l.test(s3.value) && ("<" === o4[r4 - 1] || "</" == o4.substr(r4 - 2, 2))) return "jsx_tag";
              if (s3.value[0] !== s3.value[0].toLowerCase()) return "capitalized";
            }
            if ("punctuator" === s3.type && c.test(s3.value)) return "bracket";
            if ("invalid" === s3.type && ("@" === s3.value || "#" === s3.value)) return "punctuator";
            return s3.type;
          })(r3), f2 = e3[s2];
          return f2 ? r3[0].split(u).map(function(e4) {
            return f2(e4);
          }).join("\n") : r3[0];
        });
      })(o2, e2);
    }
    return e2;
  };
  var u = /\r\n|[\n\r\u2028\u2029]/, l = /^[a-z][\w-]*$/i, c = /^[()[\]{}]$/;
  function f(e2) {
    return o().default.supportsColor || e2.forceColor;
  }
  function p(e2) {
    var t2 = o().default;
    return e2.forceColor && (t2 = new (o()).default.constructor({ enabled: true, level: 1 })), t2;
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    var o2;
    return t2 = e2.code(t2), function(s) {
      var u = (0, n.normalizeReplacements)(s);
      return o2 || (o2 = (0, i.default)(e2, t2, r2)), e2.unwrap((0, a.default)(o2, u));
    };
  };
  var n = r(116), i = o(r(189)), a = o(r(186));
  function o(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2, r2) {
    var s2 = /* @__PURE__ */ new WeakMap();
    var c = /* @__PURE__ */ new WeakMap();
    var f = r2 || (0, i.validate)(null);
    return Object.assign(function(r3) {
      for (var u2 = arguments.length, c2 = new Array(u2 > 1 ? u2 - 1 : 0), p = 1; p < u2; p++) c2[p - 1] = arguments[p];
      if ("string" == typeof r3) {
        if (c2.length > 1) throw new Error("Unexpected extra params.");
        return l((0, a.default)(t2, r3, (0, i.merge)(f, (0, i.validate)(c2[0]))));
      }
      if (Array.isArray(r3)) {
        var d = s2.get(r3);
        return d || (d = (0, o.default)(t2, r3, f), s2.set(r3, d)), l(d(c2));
      }
      if ("object" === n(r3) && r3) {
        if (c2.length > 0) throw new Error("Unexpected extra params.");
        return e2(t2, (0, i.merge)(f, (0, i.validate)(r3)));
      }
      throw new Error("Unexpected template param ".concat(n(r3)));
    }, { ast: function(e3) {
      for (var r3 = arguments.length, s3 = new Array(r3 > 1 ? r3 - 1 : 0), l2 = 1; l2 < r3; l2++) s3[l2 - 1] = arguments[l2];
      if ("string" == typeof e3) {
        if (s3.length > 1) throw new Error("Unexpected extra params.");
        return (0, a.default)(t2, e3, (0, i.merge)((0, i.merge)(f, (0, i.validate)(s3[0])), u))();
      }
      if (Array.isArray(e3)) {
        var p = c.get(e3);
        return p || (p = (0, o.default)(t2, e3, (0, i.merge)(f, u)), c.set(e3, p)), p(s3)();
      }
      throw new Error("Unexpected template param ".concat(n(e3)));
    } });
  };
  var i = r(116), a = s(r(631)), o = s(r(620));
  function s(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var u = (0, i.validate)({ placeholderPattern: false });
  function l(e2) {
    var t2 = "";
    try {
      throw new Error();
    } catch (e3) {
      e3.stack && (t2 = e3.stack.split("\n").slice(3).join("\n"));
    }
    return function(r2) {
      try {
        return e2(r2);
      } catch (e3) {
        throw e3.stack += "\n    =============\n".concat(t2), e3;
      }
    };
  }
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return { code: function(e3) {
      return "/* @babel/template */;\n".concat(e3);
    }, validate: function() {
    }, unwrap: function(t2) {
      return e2(t2.program.body.slice(1));
    } };
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.program = t.expression = t.statement = t.statements = t.smart = void 0;
  var i = n(function(e2) {
    return e2.length > 1 ? e2 : e2[0];
  });
  t.smart = i;
  var a = n(function(e2) {
    return e2;
  });
  t.statements = a;
  var o = n(function(e2) {
    if (0 === e2.length) throw new Error("Found nothing to return.");
    if (e2.length > 1) throw new Error("Found multiple statements but wanted one");
    return e2[0];
  });
  t.statement = o;
  var s = { code: function(e2) {
    return "(\n".concat(e2, "\n)");
  }, validate: function(e2) {
    var t2 = e2.program;
    if (t2.body.length > 1) throw new Error("Found multiple statements but wanted one");
    if (0 === t2.body[0].expression.start) throw new Error("Parse result included parens.");
  }, unwrap: function(e2) {
    return e2.program.body[0].expression;
  } };
  t.expression = s;
  t.program = { code: function(e2) {
    return e2;
  }, validate: function() {
  }, unwrap: function(e2) {
    return e2.program;
  } };
}, function(e, t) {
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(a, o) {
      var s, u = this, l = 256, c = 6, f = "random", p = o.pow(l, c), d = o.pow(2, 52), h = 2 * d, v = l - 1;
      function y(e3, t2, r2) {
        var n2 = [], y2 = b((function e4(t3, r3) {
          var n3, a2 = [], o2 = i(t3);
          if (r3 && "object" == o2) for (n3 in t3) try {
            a2.push(e4(t3[n3], r3 - 1));
          } catch (e5) {
          }
          return a2.length ? a2 : "string" == o2 ? t3 : t3 + "\0";
        })((t2 = 1 == t2 ? { entropy: true } : t2 || {}).entropy ? [e3, g(a)] : null == e3 ? (function() {
          try {
            var e4;
            return s && (e4 = s.randomBytes) ? e4 = e4(l) : (e4 = new Uint8Array(l), (u.crypto || u.msCrypto).getRandomValues(e4)), g(e4);
          } catch (e5) {
            var t3 = u.navigator, r3 = t3 && t3.plugins;
            return [+/* @__PURE__ */ new Date(), u, r3, u.screen, g(a)];
          }
        })() : e3, 3), n2), w = new function(e4) {
          var t3, r3 = e4.length, n3 = this, i2 = 0, a2 = n3.i = n3.j = 0, o2 = n3.S = [];
          r3 || (e4 = [r3++]);
          for (; i2 < l; ) o2[i2] = i2++;
          for (i2 = 0; i2 < l; i2++) o2[i2] = o2[a2 = v & a2 + e4[i2 % r3] + (t3 = o2[i2])], o2[a2] = t3;
          (n3.g = function(e5) {
            for (var t4, r4 = 0, i3 = n3.i, a3 = n3.j, o3 = n3.S; e5--; ) t4 = o3[i3 = v & i3 + 1], r4 = r4 * l + o3[v & (o3[i3] = o3[a3 = v & a3 + t4]) + (o3[a3] = t4)];
            return n3.i = i3, n3.j = a3, r4;
          })(l);
        }(n2), E = function() {
          for (var e4 = w.g(c), t3 = p, r3 = 0; e4 < d; ) e4 = (e4 + r3) * l, t3 *= l, r3 = w.g(1);
          for (; e4 >= h; ) e4 /= 2, t3 /= 2, r3 >>>= 1;
          return (e4 + r3) / t3;
        };
        return E.int32 = function() {
          return 0 | w.g(4);
        }, E.quick = function() {
          return w.g(4) / 4294967296;
        }, E.double = E, b(g(w.S), a), (t2.pass || r2 || function(e4, t3, r3, n3) {
          return n3 && (n3.S && m(n3, w), e4.state = function() {
            return m(w, {});
          }), r3 ? (o[f] = e4, t3) : e4;
        })(E, y2, "global" in t2 ? t2.global : this == o, t2.state);
      }
      function m(e3, t2) {
        return t2.i = e3.i, t2.j = e3.j, t2.S = e3.S.slice(), t2;
      }
      function b(e3, t2) {
        for (var r2, n2 = e3 + "", i2 = 0; i2 < n2.length; ) t2[v & i2] = v & (r2 ^= 19 * t2[v & i2]) + n2.charCodeAt(i2++);
        return g(t2);
      }
      function g(e3) {
        return String.fromCharCode.apply(0, e3);
      }
      if (o["seed" + f] = y, b(o.random(), a), "object" == i(e2) && e2.exports) {
        e2.exports = y;
        try {
          s = r(634);
        } catch (e3) {
        }
      } else void 0 === (n = function() {
        return y;
      }.call(t, r, t, e2)) || (e2.exports = n);
    })([], Math);
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(e3, a, o) {
      function s(e4, t2) {
        return t2.a = e4.a, t2.b = e4.b, t2.c = e4.c, t2.d = e4.d, t2;
      }
      function u(e4, t2) {
        var r2 = new function(e5) {
          var t3 = this, r3 = "";
          t3.next = function() {
            var e6 = t3.b, r4 = t3.c, n4 = t3.d, i2 = t3.a;
            return e6 = e6 << 25 ^ e6 >>> 7 ^ r4, r4 = r4 - n4 | 0, n4 = n4 << 24 ^ n4 >>> 8 ^ i2, i2 = i2 - e6 | 0, t3.b = e6 = e6 << 20 ^ e6 >>> 12 ^ r4, t3.c = r4 = r4 - n4 | 0, t3.d = n4 << 16 ^ r4 >>> 16 ^ i2, t3.a = i2 - e6 | 0;
          }, t3.a = 0, t3.b = 0, t3.c = -1640531527, t3.d = 1367130551, e5 === Math.floor(e5) ? (t3.a = e5 / 4294967296 | 0, t3.b = 0 | e5) : r3 += e5;
          for (var n3 = 0; n3 < r3.length + 20; n3++) t3.b ^= 0 | r3.charCodeAt(n3), t3.next();
        }(e4), n2 = t2 && t2.state, a2 = function() {
          return (r2.next() >>> 0) / 4294967296;
        };
        return a2.double = function() {
          do {
            var e5 = ((r2.next() >>> 11) + (r2.next() >>> 0) / 4294967296) / (1 << 21);
          } while (0 === e5);
          return e5;
        }, a2.int32 = r2.next, a2.quick = a2, n2 && ("object" == i(n2) && s(n2, r2), a2.state = function() {
          return s(r2, {});
        }), a2;
      }
      a && a.exports ? a.exports = u : r(21) && r(54) ? void 0 === (n = function() {
        return u;
      }.call(t, r, t, a)) || (a.exports = n) : this.tychei = u;
    })(0, "object" == i(e2) && e2, r(21));
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(e3, i2, a) {
      function o(e4, t2) {
        return t2.i = e4.i, t2.w = e4.w, t2.X = e4.X.slice(), t2;
      }
      function s(e4, t2) {
        null == e4 && (e4 = +/* @__PURE__ */ new Date());
        var r2 = new function(e5) {
          var t3 = this;
          t3.next = function() {
            var e6, r3, n3 = t3.w, i4 = t3.X, a2 = t3.i;
            return t3.w = n3 = n3 + 1640531527 | 0, r3 = i4[a2 + 34 & 127], e6 = i4[a2 = a2 + 1 & 127], r3 ^= r3 << 13, e6 ^= e6 << 17, r3 ^= r3 >>> 15, e6 ^= e6 >>> 12, r3 = i4[a2] = r3 ^ e6, t3.i = a2, r3 + (n3 ^ n3 >>> 16) | 0;
          }, (function(e6, t4) {
            var r3, n3, i4, a2, o2, s2 = [], u = 128;
            for (t4 === (0 | t4) ? (n3 = t4, t4 = null) : (t4 += "\0", n3 = 0, u = Math.max(u, t4.length)), i4 = 0, a2 = -32; a2 < u; ++a2) t4 && (n3 ^= t4.charCodeAt((a2 + 32) % t4.length)), 0 === a2 && (o2 = n3), n3 ^= n3 << 10, n3 ^= n3 >>> 15, n3 ^= n3 << 4, n3 ^= n3 >>> 13, a2 >= 0 && (o2 = o2 + 1640531527 | 0, i4 = 0 == (r3 = s2[127 & a2] ^= n3 + o2) ? i4 + 1 : 0);
            for (i4 >= 128 && (s2[127 & (t4 && t4.length || 0)] = -1), i4 = 127, a2 = 512; a2 > 0; --a2) n3 = s2[i4 + 34 & 127], r3 = s2[i4 = i4 + 1 & 127], n3 ^= n3 << 13, r3 ^= r3 << 17, n3 ^= n3 >>> 15, r3 ^= r3 >>> 12, s2[i4] = n3 ^ r3;
            e6.w = o2, e6.X = s2, e6.i = i4;
          })(t3, e5);
        }(e4), n2 = t2 && t2.state, i3 = function() {
          return (r2.next() >>> 0) / 4294967296;
        };
        return i3.double = function() {
          do {
            var e5 = ((r2.next() >>> 11) + (r2.next() >>> 0) / 4294967296) / (1 << 21);
          } while (0 === e5);
          return e5;
        }, i3.int32 = r2.next, i3.quick = i3, n2 && (n2.X && o(n2, r2), i3.state = function() {
          return o(r2, {});
        }), i3;
      }
      i2 && i2.exports ? i2.exports = s : r(21) && r(54) ? void 0 === (n = function() {
        return s;
      }.call(t, r, t, i2)) || (i2.exports = n) : this.xor4096 = s;
    })(0, "object" == i(e2) && e2, r(21));
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(e3, i2, a) {
      function o(e4, t2) {
        return t2.x = e4.x.slice(), t2.i = e4.i, t2;
      }
      function s(e4, t2) {
        null == e4 && (e4 = +/* @__PURE__ */ new Date());
        var r2 = new function(e5) {
          var t3 = this;
          t3.next = function() {
            var e6, r3, n3 = t3.x, i4 = t3.i;
            return e6 = n3[i4], r3 = (e6 ^= e6 >>> 7) ^ e6 << 24, r3 ^= (e6 = n3[i4 + 1 & 7]) ^ e6 >>> 10, r3 ^= (e6 = n3[i4 + 3 & 7]) ^ e6 >>> 3, r3 ^= (e6 = n3[i4 + 4 & 7]) ^ e6 << 7, e6 = n3[i4 + 7 & 7], r3 ^= (e6 ^= e6 << 13) ^ e6 << 9, n3[i4] = r3, t3.i = i4 + 1 & 7, r3;
          }, (function(e6, t4) {
            var r3, n3 = [];
            if (t4 === (0 | t4)) n3[0] = t4;
            else for (t4 = "" + t4, r3 = 0; r3 < t4.length; ++r3) n3[7 & r3] = n3[7 & r3] << 15 ^ t4.charCodeAt(r3) + n3[r3 + 1 & 7] << 13;
            for (; n3.length < 8; ) n3.push(0);
            for (r3 = 0; r3 < 8 && 0 === n3[r3]; ++r3) ;
            for (8 == r3 ? n3[7] = -1 : n3[r3], e6.x = n3, e6.i = 0, r3 = 256; r3 > 0; --r3) e6.next();
          })(t3, e5);
        }(e4), n2 = t2 && t2.state, i3 = function() {
          return (r2.next() >>> 0) / 4294967296;
        };
        return i3.double = function() {
          do {
            var e5 = ((r2.next() >>> 11) + (r2.next() >>> 0) / 4294967296) / (1 << 21);
          } while (0 === e5);
          return e5;
        }, i3.int32 = r2.next, i3.quick = i3, n2 && (n2.x && o(n2, r2), i3.state = function() {
          return o(r2, {});
        }), i3;
      }
      i2 && i2.exports ? i2.exports = s : r(21) && r(54) ? void 0 === (n = function() {
        return s;
      }.call(t, r, t, i2)) || (i2.exports = n) : this.xorshift7 = s;
    })(0, "object" == i(e2) && e2, r(21));
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(e3, a, o) {
      function s(e4, t2) {
        return t2.x = e4.x, t2.y = e4.y, t2.z = e4.z, t2.w = e4.w, t2.v = e4.v, t2.d = e4.d, t2;
      }
      function u(e4, t2) {
        var r2 = new function(e5) {
          var t3 = this, r3 = "";
          t3.next = function() {
            var e6 = t3.x ^ t3.x >>> 2;
            return t3.x = t3.y, t3.y = t3.z, t3.z = t3.w, t3.w = t3.v, (t3.d = t3.d + 362437 | 0) + (t3.v = t3.v ^ t3.v << 4 ^ e6 ^ e6 << 1) | 0;
          }, t3.x = 0, t3.y = 0, t3.z = 0, t3.w = 0, t3.v = 0, e5 === (0 | e5) ? t3.x = e5 : r3 += e5;
          for (var n3 = 0; n3 < r3.length + 64; n3++) t3.x ^= 0 | r3.charCodeAt(n3), n3 == r3.length && (t3.d = t3.x << 10 ^ t3.x >>> 4), t3.next();
        }(e4), n2 = t2 && t2.state, a2 = function() {
          return (r2.next() >>> 0) / 4294967296;
        };
        return a2.double = function() {
          do {
            var e5 = ((r2.next() >>> 11) + (r2.next() >>> 0) / 4294967296) / (1 << 21);
          } while (0 === e5);
          return e5;
        }, a2.int32 = r2.next, a2.quick = a2, n2 && ("object" == i(n2) && s(n2, r2), a2.state = function() {
          return s(r2, {});
        }), a2;
      }
      a && a.exports ? a.exports = u : r(21) && r(54) ? void 0 === (n = function() {
        return u;
      }.call(t, r, t, a)) || (a.exports = n) : this.xorwow = u;
    })(0, "object" == i(e2) && e2, r(21));
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(e3, a, o) {
      function s(e4, t2) {
        return t2.x = e4.x, t2.y = e4.y, t2.z = e4.z, t2.w = e4.w, t2;
      }
      function u(e4, t2) {
        var r2 = new function(e5) {
          var t3 = this, r3 = "";
          t3.x = 0, t3.y = 0, t3.z = 0, t3.w = 0, t3.next = function() {
            var e6 = t3.x ^ t3.x << 11;
            return t3.x = t3.y, t3.y = t3.z, t3.z = t3.w, t3.w ^= t3.w >>> 19 ^ e6 ^ e6 >>> 8;
          }, e5 === (0 | e5) ? t3.x = e5 : r3 += e5;
          for (var n3 = 0; n3 < r3.length + 64; n3++) t3.x ^= 0 | r3.charCodeAt(n3), t3.next();
        }(e4), n2 = t2 && t2.state, a2 = function() {
          return (r2.next() >>> 0) / 4294967296;
        };
        return a2.double = function() {
          do {
            var e5 = ((r2.next() >>> 11) + (r2.next() >>> 0) / 4294967296) / (1 << 21);
          } while (0 === e5);
          return e5;
        }, a2.int32 = r2.next, a2.quick = a2, n2 && ("object" == i(n2) && s(n2, r2), a2.state = function() {
          return s(r2, {});
        }), a2;
      }
      a && a.exports ? a.exports = u : r(21) && r(54) ? void 0 === (n = function() {
        return u;
      }.call(t, r, t, a)) || (a.exports = n) : this.xor128 = u;
    })(0, "object" == i(e2) && e2, r(21));
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    var n;
    function i(e3) {
      return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    !(function(e3, a, o) {
      function s(e4, t2) {
        return t2.c = e4.c, t2.s0 = e4.s0, t2.s1 = e4.s1, t2.s2 = e4.s2, t2;
      }
      function u(e4, t2) {
        var r2 = new function(e5) {
          var t3 = this, r3 = /* @__PURE__ */ (function() {
            var e6 = 4022871197;
            return function(t4) {
              t4 = t4.toString();
              for (var r4 = 0; r4 < t4.length; r4++) {
                var n3 = 0.02519603282416938 * (e6 += t4.charCodeAt(r4));
                n3 -= e6 = n3 >>> 0, e6 = (n3 *= e6) >>> 0, e6 += 4294967296 * (n3 -= e6);
              }
              return 23283064365386963e-26 * (e6 >>> 0);
            };
          })();
          t3.next = function() {
            var e6 = 2091639 * t3.s0 + 23283064365386963e-26 * t3.c;
            return t3.s0 = t3.s1, t3.s1 = t3.s2, t3.s2 = e6 - (t3.c = 0 | e6);
          }, t3.c = 1, t3.s0 = r3(" "), t3.s1 = r3(" "), t3.s2 = r3(" "), t3.s0 -= r3(e5), t3.s0 < 0 && (t3.s0 += 1), t3.s1 -= r3(e5), t3.s1 < 0 && (t3.s1 += 1), t3.s2 -= r3(e5), t3.s2 < 0 && (t3.s2 += 1), r3 = null;
        }(e4), n2 = t2 && t2.state, a2 = r2.next;
        return a2.int32 = function() {
          return 4294967296 * r2.next() | 0;
        }, a2.double = function() {
          return a2() + 11102230246251565e-32 * (2097152 * a2() | 0);
        }, a2.quick = a2, n2 && ("object" == i(n2) && s(n2, r2), a2.state = function() {
          return s(r2, {});
        }), a2;
      }
      a && a.exports ? a.exports = u : r(21) && r(54) ? void 0 === (n = function() {
        return u;
      }.call(t, r, t, a)) || (a.exports = n) : this.alea = u;
    })(0, "object" == i(e2) && e2, r(21));
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var i = r(7), a = r(4), o = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), s = r(3), u = r(2), l = r(0);
  var c = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2);
      var r2 = t2;
      if (r2 instanceof l.ConcreteValue) {
        var n2 = /* @__PURE__ */ new Set();
        n2.add(r2), r2 = n2;
      }
      this._elements = r2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "contains", value: function(e3) {
      var t2 = this._elements, r2 = e3._elements;
      if (t2 === r2) return true;
      if (void 0 === t2) return true;
      if (void 0 === r2) return false;
      if (t2.size < r2.size) return false;
      var n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = r2[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
          var u2 = o2.value;
          if (!t2.has(u2)) return false;
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return true;
    } }, { key: "containsValue", value: function(e3) {
      var t2 = this._elements;
      return void 0 === t2 || (e3 instanceof l.AbstractValue ? this.contains(e3.values) : ((0, o.default)(e3 instanceof l.ConcreteValue), t2.has(e3)));
    } }, { key: "isBottom", value: function() {
      return void 0 !== this._elements && 0 === this._elements.size;
    } }, { key: "isTop", value: function() {
      return void 0 === this._elements;
    } }, { key: "getElements", value: function() {
      return (0, o.default)(void 0 !== this._elements), this._elements;
    } }, { key: "includesValueNotOfType", value: function(e3) {
      (0, o.default)(!this.isTop());
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this.getElements()[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          if (!(i2.value instanceof e3)) return true;
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      return false;
    } }, { key: "includesValueOfType", value: function(e3) {
      (0, o.default)(!this.isTop());
      var t2 = true, r2 = false, n2 = void 0;
      try {
        for (var i2, a2 = this.getElements()[Symbol.iterator](); !(t2 = (i2 = a2.next()).done); t2 = true) {
          if (i2.value instanceof e3) return true;
        }
      } catch (e4) {
        r2 = true, n2 = e4;
      } finally {
        try {
          t2 || null == a2.return || a2.return();
        } finally {
          if (r2) throw n2;
        }
      }
      return false;
    } }, { key: "mightBeFalse", value: function() {
      (0, o.default)(!this.isTop());
      var e3 = true, t2 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          if (n2.value.mightBeFalse()) return true;
        }
      } catch (e4) {
        t2 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t2) throw r2;
        }
      }
      return false;
    } }, { key: "mightNotBeFalse", value: function() {
      (0, o.default)(!this.isTop());
      var e3 = true, t2 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.getElements()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          if (n2.value.mightNotBeFalse()) return true;
        }
      } catch (e4) {
        t2 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t2) throw r2;
        }
      }
      return false;
    } }, { key: "joinWith", value: function(t2) {
      if (this.isTop()) return this;
      var r2 = new Set(this.getElements());
      if (t2 instanceof l.AbstractValue) {
        if (t2.values.isTop()) return t2.values;
        t2.values.getElements().forEach(function(e3) {
          return r2.add(e3);
        });
      } else (0, o.default)(t2 instanceof l.ConcreteValue), r2.add(t2);
      return 0 === r2.size ? e2.bottomVal : new e2(r2);
    } }, { key: "meetWith", value: function(t2) {
      var r2 = /* @__PURE__ */ new Set(), n2 = this._elements;
      if (t2 instanceof l.AbstractValue) {
        if (t2.values.isTop()) return this;
        t2.values.getElements().forEach(function(e3) {
          (void 0 === n2 || n2.has(e3)) && r2.add(e3);
        });
      } else (0, o.default)(t2 instanceof l.ConcreteValue), (void 0 === n2 || n2.has(t2)) && r2.add(t2);
      return 0 === r2.size ? e2.bottomVal : new e2(r2);
    } }, { key: "promoteEmptyToUndefined", value: function() {
      if (this.isTop() || this.isBottom()) return this;
      var t2 = /* @__PURE__ */ new Set(), r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = this.getElements()[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var s2 = a2.value;
          s2 instanceof l.EmptyValue ? t2.add(s2.$Realm.intrinsics.undefined) : t2.add(s2);
        }
      } catch (e3) {
        n2 = true, i2 = e3;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
      return new e2(t2);
    } }], [{ key: "binaryOp", value: function(t2, r2, n2, s2) {
      if (n2.isBottom() || s2.isBottom()) return e2.bottomVal;
      var u2 = n2._elements, c2 = s2._elements;
      if (!u2 || !c2 || u2.size > 100 || c2.size > 100) return e2.topVal;
      var f = /* @__PURE__ */ new Set(), p = t2.errorHandler, d = t2.isReadOnly;
      t2.isReadOnly = true;
      try {
        t2.errorHandler = function() {
          throw new a.FatalError();
        };
        var h = true, v = false, y = void 0;
        try {
          for (var m, b = u2[Symbol.iterator](); !(h = (m = b.next()).done); h = true) {
            var g = m.value, w = true, E = false, S = void 0;
            try {
              for (var T, A = c2[Symbol.iterator](); !(w = (T = A.next()).done); w = true) {
                var C = T.value, P = e2.computeBinary(t2, r2, g, C);
                if (P instanceof l.ConcreteValue) f.add(P);
                else {
                  if ((0, o.default)(P instanceof l.AbstractValue), P.values.isTop()) return e2.topVal;
                  var O = true, x = false, _ = void 0;
                  try {
                    for (var V, D = P.values.getElements()[Symbol.iterator](); !(O = (V = D.next()).done); O = true) {
                      var N = V.value;
                      f.add(N);
                    }
                  } catch (e3) {
                    x = true, _ = e3;
                  } finally {
                    try {
                      O || null == D.return || D.return();
                    } finally {
                      if (x) throw _;
                    }
                  }
                }
              }
            } catch (e3) {
              E = true, S = e3;
            } finally {
              try {
                w || null == A.return || A.return();
              } finally {
                if (E) throw S;
              }
            }
          }
        } catch (e3) {
          v = true, y = e3;
        } finally {
          try {
            h || null == b.return || b.return();
          } finally {
            if (v) throw y;
          }
        }
      } catch (t3) {
        if (t3 instanceof i.AbruptCompletion) return e2.topVal;
      } finally {
        t2.errorHandler = p, t2.isReadOnly = d;
      }
      return new e2(f);
    } }, { key: "computeBinary", value: function(e3, t2, r2, n2) {
      if ("+" === t2) {
        var i2 = u.To.ToPrimitiveOrAbstract(e3, r2), c2 = u.To.ToPrimitiveOrAbstract(e3, n2);
        if (i2 instanceof l.AbstractValue || c2 instanceof l.AbstractValue) return l.AbstractValue.createFromBinaryOp(e3, t2, i2, c2);
        if (i2 instanceof l.StringValue || c2 instanceof l.StringValue) {
          var f = u.To.ToString(e3, i2), p = u.To.ToString(e3, c2);
          return new l.StringValue(e3, f + p);
        }
        var d = u.To.ToNumber(e3, i2), h = u.To.ToNumber(e3, c2);
        return (0, s.Add)(e3, d, h);
      }
      if ("<" === t2 || ">" === t2 || ">=" === t2 || "<=" === t2) {
        if ("<" === t2) {
          var v = (0, s.AbstractRelationalComparison)(e3, r2, n2, true, t2);
          return v instanceof l.UndefinedValue ? e3.intrinsics.false : v;
        }
        if ("<=" === t2) {
          var y = (0, s.AbstractRelationalComparison)(e3, n2, r2, false, t2);
          return y instanceof l.UndefinedValue || y instanceof l.BooleanValue && y.value ? e3.intrinsics.false : y instanceof l.AbstractValue ? y : e3.intrinsics.true;
        }
        if (">" === t2) {
          var m = (0, s.AbstractRelationalComparison)(e3, n2, r2, false, t2);
          return m instanceof l.UndefinedValue ? e3.intrinsics.false : m;
        }
        if (">=" === t2) {
          var b = (0, s.AbstractRelationalComparison)(e3, r2, n2, true, t2);
          return b instanceof l.UndefinedValue || b instanceof l.BooleanValue && b.value ? e3.intrinsics.false : b instanceof l.AbstractValue ? b : e3.intrinsics.true;
        }
      } else {
        if (">>>" === t2) {
          var g = u.To.ToUint32(e3, r2), w = u.To.ToUint32(e3, n2);
          return l.IntegralValue.createFromNumberValue(e3, g >>> w);
        }
        if ("<<" === t2 || ">>" === t2) {
          var E = u.To.ToInt32(e3, r2), S = u.To.ToUint32(e3, n2);
          if ("<<" === t2) return l.IntegralValue.createFromNumberValue(e3, E << S);
          if (">>" === t2) return l.IntegralValue.createFromNumberValue(e3, E >> S);
        } else {
          if ("**" === t2) {
            var T = u.To.ToNumberOrAbstract(e3, r2), A = u.To.ToNumberOrAbstract(e3, n2);
            if (T instanceof l.AbstractValue || A instanceof l.AbstractValue) {
              var C = T instanceof l.AbstractValue ? T : new l.NumberValue(e3, T), P = A instanceof l.AbstractValue ? A : new l.NumberValue(e3, A);
              return l.AbstractValue.createFromBinaryOp(e3, t2, C, P);
            }
            return new l.NumberValue(e3, Math.pow(T, A));
          }
          if ("%" === t2 || "/" === t2 || "*" === t2 || "-" === t2) {
            var O = u.To.ToNumberOrAbstract(e3, r2), x = u.To.ToNumberOrAbstract(e3, n2);
            if (O instanceof l.AbstractValue || x instanceof l.AbstractValue) {
              var _ = O instanceof l.AbstractValue ? O : new l.NumberValue(e3, O), V = x instanceof l.AbstractValue ? x : new l.NumberValue(e3, x);
              return l.AbstractValue.createFromBinaryOp(e3, t2, _, V);
            }
            if (isNaN(x)) return e3.intrinsics.NaN;
            if (isNaN(O)) return e3.intrinsics.NaN;
            if ("-" === t2) return (0, s.Add)(e3, O, x, true);
            if ("%" === t2) return new l.NumberValue(e3, O % x);
            if ("/" === t2) return new l.NumberValue(e3, O / x);
            if ("*" === t2) return new l.NumberValue(e3, O * x);
          } else {
            if ("!==" === t2) return new l.BooleanValue(e3, !(0, s.StrictEqualityComparison)(e3, r2, n2));
            if ("===" === t2) return new l.BooleanValue(e3, (0, s.StrictEqualityComparison)(e3, r2, n2));
            if ("!=" === t2 || "==" === t2) return (0, s.AbstractEqualityComparison)(e3, r2, n2, t2);
            if ("&" === t2 || "|" === t2 || "^" === t2) {
              var D = u.To.ToInt32(e3, r2), N = u.To.ToInt32(e3, n2);
              if ("&" === t2) return l.IntegralValue.createFromNumberValue(e3, D & N);
              if ("|" === t2) return l.IntegralValue.createFromNumberValue(e3, D | N);
              if ("^" === t2) return l.IntegralValue.createFromNumberValue(e3, D ^ N);
            } else {
              if ("in" === t2) {
                if (!(n2 instanceof l.ObjectValue)) throw new a.FatalError();
                return new l.BooleanValue(e3, (0, s.HasProperty)(e3, n2, u.To.ToPropertyKey(e3, r2)));
              }
              if ("instanceof" === t2) return new l.BooleanValue(e3, (0, s.InstanceofOperator)(e3, r2, n2));
            }
          }
        }
      }
      (0, o.default)(false, "unimplemented " + t2);
    } }, { key: "logicalOp", value: function(t2, r2, n2, o2) {
      var s2 = n2._elements, u2 = o2._elements;
      if (!s2 || !u2 || s2.size > 100 || u2.size > 100) return e2.topVal;
      var l2 = /* @__PURE__ */ new Set(), c2 = t2.errorHandler, f = t2.isReadOnly;
      t2.isReadOnly = true;
      try {
        t2.errorHandler = function() {
          throw new a.FatalError();
        };
        var p = true, d = false, h = void 0;
        try {
          for (var v, y = s2[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
            var m = v.value, b = true, g = false, w = void 0;
            try {
              for (var E, S = u2[Symbol.iterator](); !(b = (E = S.next()).done); b = true) {
                var T = E.value, A = e2.computeLogical(t2, r2, m, T);
                l2.add(A);
              }
            } catch (e3) {
              g = true, w = e3;
            } finally {
              try {
                b || null == S.return || S.return();
              } finally {
                if (g) throw w;
              }
            }
          }
        } catch (e3) {
          d = true, h = e3;
        } finally {
          try {
            p || null == y.return || y.return();
          } finally {
            if (d) throw h;
          }
        }
      } catch (t3) {
        if (t3 instanceof i.AbruptCompletion) return e2.topVal;
      } finally {
        t2.errorHandler = c2, t2.isReadOnly = f;
      }
      return new e2(l2);
    } }, { key: "computeLogical", value: function(e3, t2, r2, n2) {
      var i2 = u.To.ToBoolean(e3, r2);
      if ("&&" === t2) {
        if (false === i2) return r2;
      } else if ("||" === t2 && true === i2) return r2;
      return n2;
    } }, { key: "computeUnary", value: function(e3, t2, r2) {
      if ("+" === t2) return l.IntegralValue.createFromNumberValue(e3, u.To.ToNumber(e3, r2));
      if ("-" === t2) {
        var n2 = u.To.ToNumber(e3, r2);
        return isNaN(n2) ? e3.intrinsics.NaN : l.IntegralValue.createFromNumberValue(e3, -n2);
      }
      if ("~" === t2) {
        var i2 = u.To.ToInt32(e3, r2);
        return l.IntegralValue.createFromNumberValue(e3, ~i2);
      }
      if ("!" === t2) return true === u.To.ToBoolean(e3, r2) ? e3.intrinsics.false : e3.intrinsics.true;
      if ("void" === t2) return e3.intrinsics.undefined;
      if ("typeof" === t2) {
        var a2 = r2, s2 = u.Utils.typeToString(a2.getType());
        return (0, o.default)(void 0 !== s2), new l.StringValue(e3, s2);
      }
      (0, o.default)(false, "".concat(t2, " is a state update, not a pure operation, so we don't support it"));
    } }, { key: "unaryOp", value: function(t2, r2, n2) {
      if (n2.isBottom()) return e2.bottomVal;
      var s2 = n2._elements;
      if (void 0 === s2) return e2.topVal;
      var u2 = /* @__PURE__ */ new Set(), c2 = t2.errorHandler, f = t2.isReadOnly;
      t2.isReadOnly = true;
      try {
        t2.errorHandler = function() {
          throw new a.FatalError();
        };
        var p = true, d = false, h = void 0;
        try {
          for (var v, y = s2[Symbol.iterator](); !(p = (v = y.next()).done); p = true) {
            var m = v.value, b = e2.computeUnary(t2, r2, m);
            if (b instanceof l.ConcreteValue) u2.add(b);
            else {
              if ((0, o.default)(b instanceof l.AbstractValue), b.values.isTop()) return e2.topVal;
              var g = true, w = false, E = void 0;
              try {
                for (var S, T = b.values.getElements()[Symbol.iterator](); !(g = (S = T.next()).done); g = true) {
                  var A = S.value;
                  u2.add(A);
                }
              } catch (e3) {
                w = true, E = e3;
              } finally {
                try {
                  g || null == T.return || T.return();
                } finally {
                  if (w) throw E;
                }
              }
            }
          }
        } catch (e3) {
          d = true, h = e3;
        } finally {
          try {
            p || null == y.return || y.return();
          } finally {
            if (d) throw h;
          }
        }
      } catch (t3) {
        if (t3 instanceof i.AbruptCompletion) return e2.topVal;
      } finally {
        t2.errorHandler = c2, t2.isReadOnly = f;
      }
      return new e2(u2);
    } }, { key: "joinValues", value: function(t2) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t2.intrinsics.undefined, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t2.intrinsics.undefined;
      if (r2 instanceof l.AbstractValue) return r2.values.joinWith(n2);
      if (n2 instanceof l.AbstractValue) return n2.values.joinWith(r2);
      var i2 = /* @__PURE__ */ new Set();
      return (0, o.default)(r2 instanceof l.ConcreteValue), i2.add(r2), (0, o.default)(n2 instanceof l.ConcreteValue), i2.add(n2), new e2(i2);
    } }, { key: "meetValues", value: function(t2) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t2.intrinsics.undefined, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t2.intrinsics.undefined;
      if (r2 instanceof l.AbstractValue) return r2.values.meetWith(n2);
      if (n2 instanceof l.AbstractValue) return n2.values.meetWith(r2);
      var i2 = /* @__PURE__ */ new Set();
      return (0, o.default)(r2 instanceof l.ConcreteValue), (0, o.default)(n2 instanceof l.ConcreteValue), r2 === n2 && i2.add(r2), 0 === i2.size ? e2.bottomVal : new e2(i2);
    } }]), e2;
  })();
  t.default = c;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), a = r(0);
  var o = (function() {
    function e2(t2) {
      !(function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), (0, i.default)(t2 !== a.ConcreteValue, "Concrete values must be specific"), this._type = t2 === a.Value ? void 0 : t2;
    }
    return (function(e3, t2, r2) {
      t2 && n(e3.prototype, t2), r2 && n(e3, r2);
    })(e2, [{ key: "isBottom", value: function() {
      return this._type instanceof a.EmptyValue;
    } }, { key: "isTop", value: function() {
      return void 0 === this._type;
    } }, { key: "getType", value: function() {
      return this._type || a.Value;
    } }, { key: "joinWith", value: function(t2) {
      if (this.isBottom()) return t2 === a.EmptyValue ? e2.bottomVal : new e2(t2);
      var r2 = this.getType();
      return r2 === t2 || t2 instanceof a.EmptyValue ? this : a.Value.isTypeCompatibleWith(r2, a.NumberValue) && a.Value.isTypeCompatibleWith(t2, a.NumberValue) ? new e2(a.NumberValue) : a.Value.isTypeCompatibleWith(r2, a.FunctionValue) && a.Value.isTypeCompatibleWith(t2, a.FunctionValue) ? new e2(a.FunctionValue) : a.Value.isTypeCompatibleWith(r2, a.ObjectValue) && a.Value.isTypeCompatibleWith(t2, a.ObjectValue) ? new e2(a.ObjectValue) : a.Value.isTypeCompatibleWith(r2, a.PrimitiveValue) && a.Value.isTypeCompatibleWith(t2, a.PrimitiveValue) ? new e2(a.PrimitiveValue) : e2.topVal;
    } }], [{ key: "binaryOp", value: function(t2, r2, n2) {
      if (r2.isBottom() || n2.isBottom()) return e2.bottomVal;
      var o2 = r2._type, s = n2._type, u = a.Value;
      switch (t2) {
        case "+":
          if (void 0 === o2 || void 0 === s) return e2.topVal;
          if (a.Value.isTypeCompatibleWith(o2, a.StringValue) || a.Value.isTypeCompatibleWith(s, a.StringValue)) {
            u = a.StringValue;
            break;
          }
        case "-":
          if (void 0 === o2 || void 0 === s) return e2.topVal;
          o2 === a.IntegralValue && s === a.IntegralValue ? u = a.IntegralValue : a.Value.isTypeCompatibleWith(o2, a.NumberValue) && a.Value.isTypeCompatibleWith(s, a.NumberValue) && (u = a.NumberValue);
          break;
        case "<":
        case ">":
        case ">=":
        case "<=":
        case "!=":
        case "==":
        case "!==":
        case "===":
        case "in":
        case "instanceof":
          u = a.BooleanValue;
          break;
        case ">>>":
        case "<<":
        case ">>":
        case "&":
        case "|":
        case "^":
          u = a.IntegralValue;
          break;
        case "**":
        case "%":
        case "/":
        case "*":
          u = a.NumberValue;
          break;
        default:
          (0, i.default)(false);
      }
      return new e2(u);
    } }, { key: "joinValues", value: function(t2, r2) {
      return void 0 === t2 && void 0 === r2 ? new e2(a.UndefinedValue) : void 0 === t2 || void 0 === r2 ? e2.topVal : t2 instanceof a.AbstractValue ? t2.types.joinWith(r2.getType()) : r2 instanceof a.AbstractValue ? r2.types.joinWith(t2.getType()) : new e2(t2.getType()).joinWith(r2.getType());
    } }, { key: "logicalOp", value: function(e3, t2, r2) {
      return t2.joinWith(r2.getType());
    } }, { key: "unaryOp", value: function(t2, r2) {
      if (r2.isBottom()) return e2.bottomVal;
      var n2 = r2._type, o2 = a.Value;
      switch (t2) {
        case "-":
        case "+":
          o2 = n2 === a.IntegralValue ? a.IntegralValue : a.NumberValue;
          break;
        case "~":
          o2 = a.IntegralValue;
          break;
        case "!":
        case "delete":
          o2 = a.BooleanValue;
          break;
        case "typeof":
          o2 = a.StringValue;
          break;
        case "void":
          o2 = a.UndefinedValue;
          break;
        default:
          (0, i.default)(false);
      }
      return new e2(o2);
    } }]), e2;
  })();
  t.default = o;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function a(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  function u(e2) {
    if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var l = r(12), c = r(4), f = r(0), p = r(14), d = r(3), h = r(2), v = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1)), y = r(9), m = r(6);
  function b(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var r2 = null != arguments[t2] ? arguments[t2] : {}, n2 = Object.keys(r2);
      "function" == typeof Object.getOwnPropertySymbols && (n2 = n2.concat(Object.getOwnPropertySymbols(r2).filter(function(e3) {
        return Object.getOwnPropertyDescriptor(r2, e3).enumerable;
      }))), n2.forEach(function(t3) {
        g(e2, t3, r2[t3]);
      });
    }
    return e2;
  }
  function g(e2, t2, r2) {
    return t2 in e2 ? Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e2[t2] = r2, e2;
  }
  var w = (function(e2) {
    function t2(e3, r2, i2) {
      var a2, s2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), a2 = (function(e4, t3) {
        return !t3 || "object" !== n(t3) && "function" != typeof t3 ? u(e4) : t3;
      })(this, o(t2).call(this, e3, i2)), e3.recordNewObject(u(u(a2))), e3.useAbstractInterpretation && a2.setupBindings(a2.getTrackedPropertyNames()), a2.$Prototype = r2 || e3.intrinsics.null, a2.$Extensible = e3.intrinsics.true, a2._isPartial = e3.intrinsics.false, a2._isLeaked = e3.intrinsics.false, a2._isSimple = e3.intrinsics.false, a2._simplicityIsTransitive = e3.intrinsics.false, a2._isFinal = e3.intrinsics.false, a2.properties = /* @__PURE__ */ new Map(), a2.symbols = /* @__PURE__ */ new Map(), a2.refuseSerialization = s2, a2.$IsClassPrototype = false, a2;
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, f.ConcreteValue), (function(e3, t3, r2) {
      t3 && a(e3.prototype, t3), r2 && a(e3, r2);
    })(t2, [{ key: "getTrackedPropertyNames", value: function() {
      return t2.trackedPropertyNames;
    } }, { key: "setupBindings", value: function(e3) {
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = e3[Symbol.iterator](); !(r2 = (a2 = o2.next()).done); r2 = true) {
          var s2 = a2.value, u2 = t2.trackedPropertyBindingNames.get(s2);
          (0, v.default)(void 0 !== u2), this[u2] = void 0;
        }
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == o2.return || o2.return();
        } finally {
          if (n2) throw i2;
        }
      }
    } }, { key: "isValid", value: function() {
      return void 0 !== this._isPartial;
    } }, { key: "equals", value: function(e3) {
      return this === e3;
    } }, { key: "getHash", value: function() {
      return this.hashValue || (this.hashValue = ++this.$Realm.objectCount), this.hashValue;
    } }, { key: "hasStringOrSymbolProperties", value: function() {
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.properties.values()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          if (void 0 !== n2.value.descriptor) return true;
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
      var a2 = true, o2 = false, s2 = void 0;
      try {
        for (var u2, l2 = this.symbols.values()[Symbol.iterator](); !(a2 = (u2 = l2.next()).done); a2 = true) {
          if (void 0 !== u2.value.descriptor) return true;
        }
      } catch (e4) {
        o2 = true, s2 = e4;
      } finally {
        try {
          a2 || null == l2.return || l2.return();
        } finally {
          if (o2) throw s2;
        }
      }
      return false;
    } }, { key: "mightBeFalse", value: function() {
      return false;
    } }, { key: "mightNotBeObject", value: function() {
      return false;
    } }, { key: "throwIfNotObject", value: function() {
      return this;
    } }, { key: "makePartial", value: function() {
      this._isPartial = this.$Realm.intrinsics.true;
    } }, { key: "makeSimple", value: function(e3) {
      this._isSimple = this.$Realm.intrinsics.true, this._simplicityIsTransitive = new f.BooleanValue(this.$Realm, "transitive" === e3 || e3 instanceof f.StringValue && "transitive" === e3.value);
    } }, { key: "makeFinal", value: function() {
      this._isFinal = this.$Realm.intrinsics.true;
    } }, { key: "makeNotFinal", value: function() {
      this._isFinal = this.$Realm.intrinsics.false;
    } }, { key: "isPartialObject", value: function() {
      return this._isPartial.mightBeTrue();
    } }, { key: "isValid", value: function() {
      return void 0 !== this._isPartial;
    } }, { key: "mightBeFinalObject", value: function() {
      return this._isFinal.mightBeTrue();
    } }, { key: "mightNotBeFinalObject", value: function() {
      return this._isFinal.mightNotBeTrue();
    } }, { key: "leak", value: function() {
      this._isLeaked = this.$Realm.intrinsics.true;
    } }, { key: "mightBeLeakedObject", value: function() {
      return this._isLeaked.mightBeTrue();
    } }, { key: "mightNotBeLeakedObject", value: function() {
      return this._isLeaked.mightNotBeTrue();
    } }, { key: "isSimpleObject", value: function() {
      if (this === this.$Realm.intrinsics.ObjectPrototype) return true;
      if (!this._isSimple.mightNotBeTrue()) return true;
      if (this.isPartialObject()) return false;
      if (this.symbols.size > 0) return false;
      var e3 = true, t3 = false, r2 = void 0;
      try {
        for (var n2, i2 = this.properties.values()[Symbol.iterator](); !(e3 = (n2 = i2.next()).done); e3 = true) {
          var a2 = n2.value.descriptor;
          if (void 0 !== a2) {
            if (!(0, d.IsDataDescriptor)(this.$Realm, a2)) return false;
            if (!a2.writable) return false;
          }
        }
      } catch (e4) {
        t3 = true, r2 = e4;
      } finally {
        try {
          e3 || null == i2.return || i2.return();
        } finally {
          if (t3) throw r2;
        }
      }
      return this.$Prototype instanceof f.NullValue || ((0, v.default)(this.$Prototype), this.$Prototype.isSimpleObject());
    } }, { key: "isTransitivelySimple", value: function() {
      return !this._simplicityIsTransitive.mightNotBeTrue();
    } }, { key: "getExtensible", value: function() {
      return this.$Extensible.throwIfNotConcreteBoolean().value;
    } }, { key: "setExtensible", value: function(e3) {
      this.$Extensible = e3 ? this.$Realm.intrinsics.true : this.$Realm.intrinsics.false;
    } }, { key: "getKind", value: function() {
      return void 0 !== this.$SymbolData ? "Symbol" : void 0 !== this.$StringData ? "String" : void 0 !== this.$NumberData ? "Number" : void 0 !== this.$BooleanData ? "Boolean" : void 0 !== this.$DateValue ? "Date" : void 0 !== this.$RegExpMatcher ? "RegExp" : void 0 !== this.$SetData ? "Set" : void 0 !== this.$MapData ? "Map" : void 0 !== this.$DataView ? "DataView" : void 0 !== this.$ArrayBufferData ? "ArrayBuffer" : void 0 !== this.$WeakMapData ? "WeakMap" : void 0 !== this.$WeakSetData ? "WeakSet" : (0, p.isReactElement)(this) && this.$Realm.react.enabled ? "ReactElement" : void 0 !== this.$TypedArrayName ? this.$TypedArrayName : "Object";
    } }, { key: "defineNativeMethod", value: function(e3, t3, r2, n2) {
      var i2;
      "string" == typeof e3 ? this.intrinsicName && (i2 = "".concat(this.intrinsicName, ".").concat(e3)) : e3 instanceof f.SymbolValue ? this.intrinsicName && e3.intrinsicName && (i2 = "".concat(this.intrinsicName, "[").concat(e3.intrinsicName, "]")) : (0, v.default)(false);
      var a2 = new f.NativeFunctionValue(this.$Realm, i2, e3, t3, r2, false);
      return this.defineNativeProperty(e3, a2, n2), a2;
    } }, { key: "defineNativeProperty", value: function(e3, t3, r2) {
      (0, v.default)(!t3 || t3 instanceof f.Value), this.$DefineOwnProperty(e3, new m.PropertyDescriptor(b({ value: t3, writable: true, enumerable: false, configurable: true }, r2)));
    } }, { key: "defineNativeGetter", value: function(e3, t3, r2) {
      var n2, i2;
      "string" == typeof e3 ? (i2 = "get ".concat(e3), this.intrinsicName && (n2 = "".concat(this.intrinsicName, ".").concat(e3))) : e3 instanceof f.SymbolValue ? (i2 = e3.$Description instanceof f.Value ? "get [".concat(e3.$Description.throwIfNotConcreteString().value, "]") : "get [".concat("?", "]"), this.intrinsicName && e3.intrinsicName && (n2 = "".concat(this.intrinsicName, "[").concat(e3.intrinsicName, "]"))) : (0, v.default)(false);
      var a2 = new f.NativeFunctionValue(this.$Realm, n2, i2, 0, t3);
      this.$DefineOwnProperty(e3, new m.PropertyDescriptor(b({ get: a2, set: this.$Realm.intrinsics.undefined, enumerable: false, configurable: true }, r2)));
    } }, { key: "defineNativeConstant", value: function(e3, t3, r2) {
      (0, v.default)(!t3 || t3 instanceof f.Value), this.$DefineOwnProperty(e3, new m.PropertyDescriptor(b({ value: t3, writable: false, enumerable: false, configurable: false }, r2)));
    } }, { key: "getSnapshot", value: function(e3) {
      try {
        if (void 0 !== this.temporalAlias) return this.temporalAlias;
        var r2 = this.$Realm, n2 = new t2(this.$Realm, this.$Realm.intrinsics.ObjectPrototype), i2 = h.Properties.GetOwnPropertyKeysArray(r2, this, false, true);
        this.copyKeys(i2, this, n2), n2.makeFinal(), r2.react.enabled && r2.react.reactProps.has(this) && r2.react.reactProps.add(n2);
        var a2 = (0, y.createOperationDescriptor)("SINGLE_ARG"), o2 = f.AbstractValue.createTemporalFromBuildFunction(this.$Realm, t2, [n2], a2, { skipInvariant: true, isPure: true });
        return (0, v.default)(o2 instanceof f.AbstractObjectValue), o2.values = new l.ValuesDomain(n2), o2;
      } finally {
        e3 && e3.removeProperties && (this.properties = /* @__PURE__ */ new Map(), this.symbols = /* @__PURE__ */ new Map(), this.unknownProperty = void 0);
      }
    } }, { key: "copyKeys", value: function(e3, t3, r2) {
      var n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done); n2 = true) {
          var u2 = o2.value, l2 = t3.$GetOwnProperty(u2);
          if (l2 && l2.throwIfNotConcrete(this.$Realm).enumerable) {
            h.Properties.ThrowIfMightHaveBeenDeleted(l2);
            var c2 = (0, d.Get)(this.$Realm, t3, u2);
            h.Properties.Set(this.$Realm, r2, u2, c2, true);
          }
        }
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
    } }, { key: "_serialize", value: function(e3, t3) {
      var r2 = e3({}), n2 = true, a2 = false, o2 = void 0;
      try {
        for (var s2, u2 = this.properties[Symbol.iterator](); !(n2 = (s2 = u2.next()).done); n2 = true) {
          var l2 = i(s2.value, 2), c2 = l2[0], p2 = l2[1].descriptor;
          if (void 0 !== p2) {
            h.Properties.ThrowIfMightHaveBeenDeleted(p2);
            var d2 = { enumerable: (p2 = p2.throwIfNotConcrete(this.$Realm)).enumerable, configurable: p2.configurable };
            p2.value ? (d2.writable = p2.writable, (0, v.default)(p2.value instanceof f.Value), d2.value = p2.value.serialize(t3)) : ((0, v.default)(void 0 !== p2.get), d2.get = p2.get.serialize(t3), (0, v.default)(void 0 !== p2.set), d2.set = p2.set.serialize(t3)), Object.defineProperty(r2, c2, d2);
          }
        }
      } catch (e4) {
        a2 = true, o2 = e4;
      } finally {
        try {
          n2 || null == u2.return || u2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      return r2;
    } }, { key: "usesOrdinaryObjectInternalPrototypeMethods", value: function() {
      return true;
    } }, { key: "$GetPrototypeOf", value: function() {
      return this.$Prototype;
    } }, { key: "$SetPrototypeOf", value: function(e3) {
      return h.Properties.OrdinarySetPrototypeOf(this.$Realm, this, e3);
    } }, { key: "$IsExtensible", value: function() {
      return (0, d.OrdinaryIsExtensible)(this.$Realm, this);
    } }, { key: "$PreventExtensions", value: function() {
      return (0, d.OrdinaryPreventExtensions)(this.$Realm, this);
    } }, { key: "$GetOwnProperty", value: function(e3) {
      return h.Properties.OrdinaryGetOwnProperty(this.$Realm, this, e3);
    } }, { key: "$DefineOwnProperty", value: function(e3, t3) {
      return h.Properties.OrdinaryDefineOwnProperty(this.$Realm, this, e3, t3);
    } }, { key: "$HasProperty", value: function(e3) {
      if (void 0 !== this.unknownProperty && void 0 === this.$GetOwnProperty(e3)) throw f.AbstractValue.reportIntrospectionError(this, e3), new c.FatalError();
      return (0, d.OrdinaryHasProperty)(this.$Realm, this, e3);
    } }, { key: "$Get", value: function(e3, t3) {
      return (0, d.OrdinaryGet)(this.$Realm, this, e3, t3);
    } }, { key: "_SafeGetDataPropertyValue", value: function(e3) {
      var t3 = this.$Realm.invariantLevel;
      try {
        this.$Realm.invariantLevel = 0;
        var r2 = this.$GetOwnProperty(e3);
        return void 0 === r2 ? this.$Realm.intrinsics.undefined : (r2 = r2.throwIfNotConcrete(this.$Realm)).value ? r2.value : this.$Realm.intrinsics.undefined;
      } finally {
        this.$Realm.invariantLevel = t3;
      }
    } }, { key: "$GetPartial", value: function(e3, t3) {
      return (0, d.OrdinaryGetPartial)(this.$Realm, this, e3, t3);
    } }, { key: "$Set", value: function(e3, t3, r2) {
      return h.Properties.OrdinarySet(this.$Realm, this, e3, t3, r2);
    } }, { key: "$SetPartial", value: function(e3, t3, r2) {
      return h.Properties.OrdinarySetPartial(this.$Realm, this, e3, t3, r2);
    } }, { key: "$Delete", value: function(e3) {
      if (void 0 !== this.unknownProperty) throw f.AbstractValue.reportIntrospectionError(this, e3), new c.FatalError();
      return h.Properties.OrdinaryDelete(this.$Realm, this, e3);
    } }, { key: "$OwnPropertyKeys", value: function() {
      var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      return (0, d.OrdinaryOwnPropertyKeys)(this.$Realm, this, e3);
    } }, { key: "temporalAlias", get: function() {
      return this._temporalAlias;
    }, set: function(e3) {
      this._temporalAlias = e3;
    } }], [{ key: "setupTrackedPropertyAccessors", value: function(e3) {
      var r2 = true, n2 = false, i2 = void 0;
      try {
        for (var a2, o2 = function() {
          var e4 = a2.value, r3 = t2.trackedPropertyBindingNames.get(e4);
          void 0 === r3 && t2.trackedPropertyBindingNames.set(e4, r3 = e4 + "_binding"), Object.defineProperty(t2.prototype, e4, { configurable: true, get: function() {
            var e5 = this[r3];
            return (0, v.default)(void 0 === e5 || e5.descriptor instanceof m.InternalSlotDescriptor), void 0 === e5 ? void 0 : e5.descriptor.value;
          }, set: function(t3) {
            (0, v.default)(void 0 === this.$IsClassPrototype || this.mightNotBeLeakedObject() || "_isPartial_binding" === r3, "cannot mutate a leaked object");
            var n3 = this[r3];
            if (void 0 === n3) {
              var i3 = new m.InternalSlotDescriptor(void 0);
              this[r3] = n3 = { descriptor: i3, object: this, key: e4, internalSlot: true };
            }
            this.$Realm.recordModifiedProperty(n3), n3.descriptor.value = t3;
          } });
        }, s2 = e3[Symbol.iterator](); !(r2 = (a2 = s2.next()).done); r2 = true) o2();
      } catch (e4) {
        n2 = true, i2 = e4;
      } finally {
        try {
          r2 || null == s2.return || s2.return();
        } finally {
          if (n2) throw i2;
        }
      }
    } }, { key: "refuseSerializationOnPropertyBinding", value: function(e3) {
      return !!e3.object.refuseSerialization || !(!e3.internalSlot || "string" != typeof e3.key || "_" !== e3.key[0]);
    } }]), t2;
  })();
  t.default = w, g(w, "trackedPropertyNames", ["_isPartial", "_isLeaked", "_isSimple", "_isFinal", "_simplicityIsTransitive", "_temporalAlias", "$ArrayIteratorNextIndex", "$DateValue", "$Extensible", "$IteratedList", "$IteratedObject", "$IteratedSet", "$IteratedString", "$Map", "$MapData", "$MapNextIndex", "$Prototype", "$SetData", "$SetNextIndex", "$StringIteratorNextIndex", "$WeakMapData", "$WeakSetData"]), g(w, "trackedPropertyBindingNames", /* @__PURE__ */ new Map());
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  function a(e2, t2) {
    return !t2 || "object" !== n(t2) && "function" != typeof t2 ? (function(e3) {
      if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e3;
    })(e2) : t2;
  }
  function o(e2) {
    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    })(e2);
  }
  function s(e2, t2) {
    return (s = Object.setPrototypeOf || function(e3, t3) {
      return e3.__proto__ = t3, e3;
    })(e2, t2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var u = r(0), l = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(1));
  var c = (function(e2) {
    function t2(e3, r2) {
      return (function(e4, t3) {
        if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, t2), (0, l.default)(e3, "realm required"), a(this, o(t2).call(this, e3, r2));
    }
    return (function(e3, t3) {
      if ("function" != typeof t3 && null !== t3) throw new TypeError("Super expression must either be null or a function");
      e3.prototype = Object.create(t3 && t3.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t3 && s(e3, t3);
    })(t2, u.Value), (function(e3, t3, r2) {
      t3 && i(e3.prototype, t3), r2 && i(e3, r2);
    })(t2, [{ key: "isTemporal", value: function() {
      return false;
    } }, { key: "mightNotBeFalse", value: function() {
      return !this.mightBeFalse();
    } }, { key: "mightBeNull", value: function() {
      return this instanceof u.NullValue;
    } }, { key: "mightNotBeNull", value: function() {
      return !(this instanceof u.NullValue);
    } }, { key: "mightBeNumber", value: function() {
      return this instanceof u.NumberValue;
    } }, { key: "mightNotBeNumber", value: function() {
      return !(this instanceof u.NumberValue);
    } }, { key: "mightNotBeObject", value: function() {
      return !(this instanceof u.ObjectValue);
    } }, { key: "mightBeObject", value: function() {
      return this instanceof u.ObjectValue;
    } }, { key: "mightBeString", value: function() {
      return this instanceof u.StringValue;
    } }, { key: "mightNotBeString", value: function() {
      return !(this instanceof u.StringValue);
    } }, { key: "mightBeUndefined", value: function() {
      return this instanceof u.UndefinedValue;
    } }, { key: "mightNotBeUndefined", value: function() {
      return !(this instanceof u.UndefinedValue);
    } }, { key: "mightHaveBeenDeleted", value: function() {
      return this instanceof u.EmptyValue;
    } }, { key: "promoteEmptyToUndefined", value: function() {
      return this instanceof u.EmptyValue ? this.$Realm.intrinsics.undefined : this;
    } }, { key: "throwIfNotConcrete", value: function() {
      return this;
    } }, { key: "throwIfNotConcreteNumber", value: function() {
      (0, l.default)(false, "expected this to be a number if concrete");
    } }, { key: "throwIfNotConcreteString", value: function() {
      (0, l.default)(false, "expected this to be a string if concrete");
    } }, { key: "throwIfNotConcreteBoolean", value: function() {
      (0, l.default)(false, "expected this to be a boolean if concrete");
    } }, { key: "throwIfNotConcreteSymbol", value: function() {
      (0, l.default)(false, "expected this to be a symbol if concrete");
    } }, { key: "throwIfNotConcreteObject", value: function() {
      return this.throwIfNotObject();
    } }, { key: "throwIfNotConcretePrimitive", value: function() {
      (0, l.default)(false, "expected this to be a primitive value if concrete");
    } }, { key: "throwIfNotObject", value: function() {
      (0, l.default)(false, "expected this to be an object if concrete");
    } }]), t2;
  })();
  t.default = c;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.isVariableDeclaration)(e2, { kind: "var" }) && !e2[i.BLOCK_SCOPED_SYMBOL];
  };
  var n = r(17), i = r(45);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.default)(e2) && !i.has(e2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(66));
  var i = /* @__PURE__ */ new Set(["abstract", "boolean", "byte", "char", "double", "enum", "final", "float", "goto", "implements", "int", "interface", "long", "native", "package", "private", "protected", "public", "short", "static", "synchronized", "throws", "transient", "volatile"]);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.isImportDefaultSpecifier)(e2) || (0, n.isIdentifier)(e2.imported || e2.exported, { name: "default" });
  };
  var n = r(17);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if ((0, n.isBlockStatement)(e2) && (0, n.isFunction)(t2, { body: e2 })) return false;
    if ((0, n.isBlockStatement)(e2) && (0, n.isCatchClause)(t2, { body: e2 })) return false;
    return (0, n.isScopable)(e2);
  };
  var n = r(17);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    switch (t2.type) {
      case "MemberExpression":
      case "JSXMemberExpression":
      case "OptionalMemberExpression":
        return t2.property === e2 ? !!t2.computed : t2.object === e2;
      case "VariableDeclarator":
        return t2.init === e2;
      case "ArrowFunctionExpression":
        return t2.body === e2;
      case "ExportSpecifier":
        return !t2.source && t2.local === e2;
      case "ObjectProperty":
      case "ClassProperty":
      case "ClassPrivateProperty":
      case "ClassMethod":
      case "ObjectMethod":
        return t2.key === e2 ? !!t2.computed : t2.value === e2;
      case "ClassDeclaration":
      case "ClassExpression":
        return t2.superClass === e2;
      case "AssignmentExpression":
      case "AssignmentPattern":
        return t2.right === e2;
      case "LabeledStatement":
      case "CatchClause":
      case "RestElement":
        return false;
      case "BreakStatement":
      case "ContinueStatement":
        return false;
      case "FunctionDeclaration":
      case "FunctionExpression":
        return false;
      case "ExportNamespaceSpecifier":
      case "ExportDefaultSpecifier":
        return false;
      case "ImportDefaultSpecifier":
      case "ImportNamespaceSpecifier":
      case "ImportSpecifier":
      case "JSXAttribute":
        return false;
      case "ObjectPattern":
      case "ArrayPattern":
      case "MetaProperty":
        return false;
      case "ObjectTypeProperty":
        return t2.key !== e2;
    }
    return true;
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2, r2) {
    if ("object" !== n(t2) || "object" !== n(r2) || null == t2 || null == r2) return t2 === r2;
    if (t2.type !== r2.type) return false;
    var a = Object.keys(i.NODE_FIELDS[t2.type] || t2.type);
    var o = i.VISITOR_KEYS[t2.type];
    for (var s = 0; s < a.length; s++) {
      var u = a[s];
      if (n(t2[u]) !== n(r2[u])) return false;
      if (Array.isArray(t2[u])) {
        if (!Array.isArray(r2[u])) return false;
        if (t2[u].length !== r2[u].length) return false;
        for (var l = 0; l < t2[u].length; l++) if (!e2(t2[u][l], r2[u][l])) return false;
      } else if ("object" !== n(t2[u]) || o && o.includes(u)) {
        if (!e2(t2[u], r2[u])) return false;
      } else for (var c in t2[u]) if (t2[u][c] !== r2[u][c]) return false;
    }
    return true;
  };
  var i = r(29);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    if ((0, n.default)(e2.type, "Immutable")) return true;
    if ((0, i.isIdentifier)(e2)) return "undefined" === e2.name;
    return false;
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(120)), i = r(17);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.isFunctionDeclaration)(e2) || (0, n.isClassDeclaration)(e2) || (0, i.default)(e2);
  };
  var n = r(17), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(194));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    var r2 = n.default.keys[t2.type];
    if (r2) for (var i = 0; i < r2.length; i++) {
      var a = r2[i], o = t2[a];
      if (Array.isArray(o)) {
        if (o.indexOf(e2) >= 0) return true;
      } else if (o === e2) return true;
    }
    return false;
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(84));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2) {
    "function" == typeof t2 && (t2 = { enter: t2 });
    var i = t2, a = i.enter, o = i.exit;
    !(function e3(t3, r3, i2, a2, o2) {
      var s = n.VISITOR_KEYS[t3.type];
      if (!s) return;
      r3 && r3(t3, o2, a2);
      var u = true;
      var l = false;
      var c = void 0;
      try {
        for (var f, p = s[Symbol.iterator](); !(u = (f = p.next()).done); u = true) {
          var d = f.value, h = t3[d];
          if (Array.isArray(h)) for (var v = 0; v < h.length; v++) {
            var y = h[v];
            y && (o2.push({ node: t3, key: d, index: v }), e3(y, r3, i2, a2, o2), o2.pop());
          }
          else h && (o2.push({ node: t3, key: d }), e3(h, r3, i2, a2, o2), o2.pop());
        }
      } catch (e4) {
        l = true, c = e4;
      } finally {
        try {
          u || null == p.return || p.return();
        } finally {
          if (l) throw c;
        }
      }
      i2 && i2(t3, o2, a2);
    })(e2, a, o, r2, []);
  };
  var n = r(29);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    return (0, n.default)(e2, t2, true);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(84));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    return e2.object = (0, n.memberExpression)(t2, e2.object), e2;
  };
  var n = r(23);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if (!e2 || !t2) return e2;
    var r2 = true, a = false, o = void 0;
    try {
      for (var s, u = n.INHERIT_KEYS.optional[Symbol.iterator](); !(r2 = (s = u.next()).done); r2 = true) {
        var l = s.value;
        null == e2[l] && (e2[l] = t2[l]);
      }
    } catch (e3) {
      a = true, o = e3;
    } finally {
      try {
        r2 || null == u.return || u.return();
      } finally {
        if (a) throw o;
      }
    }
    for (var c in t2) "_" === c[0] && "__clone" !== c && (e2[c] = t2[c]);
    var f = true, p = false, d = void 0;
    try {
      for (var h, v = n.INHERIT_KEYS.force[Symbol.iterator](); !(f = (h = v.next()).done); f = true) {
        var y = h.value;
        e2[y] = t2[y];
      }
    } catch (e3) {
      p = true, d = e3;
    } finally {
      try {
        f || null == v.return || v.return();
      } finally {
        if (p) throw d;
      }
    }
    return (0, i.default)(e2, t2), e2;
  };
  var n = r(45), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(201));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    var r2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
    return e2.object = (0, n.memberExpression)(e2.object, e2.property, e2.computed), e2.property = t2, e2.computed = !!r2, e2;
  };
  var n = r(23);
}, function(e, t, r) {
  "use strict";
  var n = r(56), i = r(46), a = "[object RegExp]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(660), i = r(86), a = r(85), o = a && a.isRegExp, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = r(56), i = r(125), a = r(46), o = "[object Object]", s = Function.prototype, u = Object.prototype, l = s.toString, c = u.hasOwnProperty, f = l.call(Object);
  e.exports = function(e2) {
    if (!a(e2) || n(e2) != o) return false;
    var t2 = i(e2);
    if (null === t2) return true;
    var r2 = c.call(t2, "constructor") && t2.constructor;
    return "function" == typeof r2 && r2 instanceof r2 && l.call(r2) == f;
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = s(r(662));
    return n = function() {
      return e2;
    }, e2;
  }
  function i() {
    var e2 = s(r(661));
    return i = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2) {
    if (void 0 === t2) return (0, o.identifier)("undefined");
    if (true === t2 || false === t2) return (0, o.booleanLiteral)(t2);
    if (null === t2) return (0, o.nullLiteral)();
    if ("string" == typeof t2) return (0, o.stringLiteral)(t2);
    if ("number" == typeof t2) {
      var r2, s2;
      if (Number.isFinite(t2)) r2 = (0, o.numericLiteral)(Math.abs(t2));
      else s2 = Number.isNaN(t2) ? (0, o.numericLiteral)(0) : (0, o.numericLiteral)(1), r2 = (0, o.binaryExpression)("/", s2, (0, o.numericLiteral)(0));
      return (t2 < 0 || Object.is(t2, -0)) && (r2 = (0, o.unaryExpression)("-", r2)), r2;
    }
    if ((0, i().default)(t2)) {
      var u = t2.source, l = t2.toString().match(/\/([a-z]+|)$/)[1];
      return (0, o.regExpLiteral)(u, l);
    }
    if (Array.isArray(t2)) return (0, o.arrayExpression)(t2.map(e2));
    if ((0, n().default)(t2)) {
      var c = [];
      for (var f in t2) {
        var p = void 0;
        p = (0, a.default)(f) ? (0, o.identifier)(f) : (0, o.stringLiteral)(f), c.push((0, o.objectProperty)(p, e2(t2[f])));
      }
      return (0, o.objectExpression)(c);
    }
    throw new Error("don't know how to turn this value into a node");
  };
  var a = s(r(66)), o = r(23);
  function s(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if ((0, n.isStatement)(e2)) return e2;
    var r2, a = false;
    if ((0, n.isClass)(e2)) a = true, r2 = "ClassDeclaration";
    else if ((0, n.isFunction)(e2)) a = true, r2 = "FunctionDeclaration";
    else if ((0, n.isAssignmentExpression)(e2)) return (0, i.expressionStatement)(e2);
    a && !e2.id && (r2 = false);
    if (!r2) {
      if (t2) return false;
      throw new Error("cannot turn ".concat(e2.type, " to a statement"));
    }
    return e2.type = r2, e2;
  };
  var n = r(17), i = r(23);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function e2(t2, r2, s2) {
    var u = [];
    var l = true;
    var c = true;
    var f = false;
    var p = void 0;
    try {
      for (var d, h = t2[Symbol.iterator](); !(c = (d = h.next()).done); c = true) {
        var v = d.value;
        if (l = false, (0, i.isExpression)(v)) u.push(v);
        else if ((0, i.isExpressionStatement)(v)) u.push(v.expression);
        else if ((0, i.isVariableDeclaration)(v)) {
          if ("var" !== v.kind) return;
          var y = true, m = false, b = void 0;
          try {
            for (var g, w = v.declarations[Symbol.iterator](); !(y = (g = w.next()).done); y = true) {
              var E = g.value, S = (0, n.default)(E);
              for (var T in S) s2.push({ kind: v.kind, id: (0, o.default)(S[T]) });
              E.init && u.push((0, a.assignmentExpression)("=", E.id, E.init));
            }
          } catch (e3) {
            m = true, b = e3;
          } finally {
            try {
              y || null == w.return || w.return();
            } finally {
              if (m) throw b;
            }
          }
          l = true;
        } else if ((0, i.isIfStatement)(v)) {
          var A = v.consequent ? e2([v.consequent], r2, s2) : r2.buildUndefinedNode(), C = v.alternate ? e2([v.alternate], r2, s2) : r2.buildUndefinedNode();
          if (!A || !C) return;
          u.push((0, a.conditionalExpression)(v.test, A, C));
        } else if ((0, i.isBlockStatement)(v)) {
          var P = e2(v.body, r2, s2);
          if (!P) return;
          u.push(P);
        } else {
          if (!(0, i.isEmptyStatement)(v)) return;
          l = true;
        }
      }
    } catch (e3) {
      f = true, p = e3;
    } finally {
      try {
        c || null == h.return || h.return();
      } finally {
        if (f) throw p;
      }
    }
    l && u.push(r2.buildUndefinedNode());
    return 1 === u.length ? u[0] : (0, a.sequenceExpression)(u);
  };
  var n = s(r(84)), i = r(17), a = r(23), o = s(r(65));
  function s(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    if (!e2 || !e2.length) return;
    var r2 = [], i = (0, n.default)(e2, t2, r2);
    if (!i) return;
    for (var a = 0; a < r2.length; a++) {
      var o = r2[a];
      t2.push(o);
    }
    return i;
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(665));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = s;
  var n = r(17), i = o(r(65)), a = o(r(197));
  function o(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  function s(e2) {
    var t2, r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e2.key;
    return "method" === e2.kind ? s.increment() + "" : (t2 = (0, n.isIdentifier)(r2) ? r2.name : (0, n.isStringLiteral)(r2) ? JSON.stringify(r2.value) : JSON.stringify((0, a.default)((0, i.default)(r2))), e2.computed && (t2 = "[".concat(t2, "]")), e2.static && (t2 = "static:".concat(t2)), t2);
  }
  s.uid = 0, s.increment = function() {
    return s.uid >= Number.MAX_SAFE_INTEGER ? s.uid = 0 : s.uid++;
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    (0, n.isExpressionStatement)(e2) && (e2 = e2.expression);
    if ((0, n.isExpression)(e2)) return e2;
    (0, n.isClass)(e2) ? e2.type = "ClassExpression" : (0, n.isFunction)(e2) && (e2.type = "FunctionExpression");
    if (!(0, n.isExpression)(e2)) throw new Error("cannot turn ".concat(e2.type, " to an expression"));
    return e2;
  };
  var n = r(17);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e2.key || e2.property;
    !e2.computed && (0, n.isIdentifier)(t2) && (t2 = (0, i.stringLiteral)(t2.name));
    return t2;
  };
  var n = r(17), i = r(23);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    "eval" !== (e2 = (0, n.default)(e2)) && "arguments" !== e2 || (e2 = "_" + e2);
    return e2;
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(198));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "body";
    return e2[t2] = (0, n.default)(e2[t2], e2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(199));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.TSTYPE_TYPES = t.TSTYPEELEMENT_TYPES = t.PRIVATE_TYPES = t.JSX_TYPES = t.FLOWPREDICATE_TYPES = t.FLOWDECLARATION_TYPES = t.FLOWBASEANNOTATION_TYPES = t.FLOWTYPE_TYPES = t.FLOW_TYPES = t.MODULESPECIFIER_TYPES = t.EXPORTDECLARATION_TYPES = t.MODULEDECLARATION_TYPES = t.CLASS_TYPES = t.PATTERN_TYPES = t.UNARYLIKE_TYPES = t.PROPERTY_TYPES = t.OBJECTMEMBER_TYPES = t.METHOD_TYPES = t.USERWHITESPACABLE_TYPES = t.IMMUTABLE_TYPES = t.LITERAL_TYPES = t.TSENTITYNAME_TYPES = t.LVAL_TYPES = t.PATTERNLIKE_TYPES = t.DECLARATION_TYPES = t.PUREISH_TYPES = t.FUNCTIONPARENT_TYPES = t.FUNCTION_TYPES = t.FORXSTATEMENT_TYPES = t.FOR_TYPES = t.EXPRESSIONWRAPPER_TYPES = t.WHILE_TYPES = t.LOOP_TYPES = t.CONDITIONAL_TYPES = t.COMPLETIONSTATEMENT_TYPES = t.TERMINATORLESS_TYPES = t.STATEMENT_TYPES = t.BLOCK_TYPES = t.BLOCKPARENT_TYPES = t.SCOPABLE_TYPES = t.BINARY_TYPES = t.EXPRESSION_TYPES = void 0;
  var n = r(29), i = n.FLIPPED_ALIAS_KEYS.Expression;
  t.EXPRESSION_TYPES = i;
  var a = n.FLIPPED_ALIAS_KEYS.Binary;
  t.BINARY_TYPES = a;
  var o = n.FLIPPED_ALIAS_KEYS.Scopable;
  t.SCOPABLE_TYPES = o;
  var s = n.FLIPPED_ALIAS_KEYS.BlockParent;
  t.BLOCKPARENT_TYPES = s;
  var u = n.FLIPPED_ALIAS_KEYS.Block;
  t.BLOCK_TYPES = u;
  var l = n.FLIPPED_ALIAS_KEYS.Statement;
  t.STATEMENT_TYPES = l;
  var c = n.FLIPPED_ALIAS_KEYS.Terminatorless;
  t.TERMINATORLESS_TYPES = c;
  var f = n.FLIPPED_ALIAS_KEYS.CompletionStatement;
  t.COMPLETIONSTATEMENT_TYPES = f;
  var p = n.FLIPPED_ALIAS_KEYS.Conditional;
  t.CONDITIONAL_TYPES = p;
  var d = n.FLIPPED_ALIAS_KEYS.Loop;
  t.LOOP_TYPES = d;
  var h = n.FLIPPED_ALIAS_KEYS.While;
  t.WHILE_TYPES = h;
  var v = n.FLIPPED_ALIAS_KEYS.ExpressionWrapper;
  t.EXPRESSIONWRAPPER_TYPES = v;
  var y = n.FLIPPED_ALIAS_KEYS.For;
  t.FOR_TYPES = y;
  var m = n.FLIPPED_ALIAS_KEYS.ForXStatement;
  t.FORXSTATEMENT_TYPES = m;
  var b = n.FLIPPED_ALIAS_KEYS.Function;
  t.FUNCTION_TYPES = b;
  var g = n.FLIPPED_ALIAS_KEYS.FunctionParent;
  t.FUNCTIONPARENT_TYPES = g;
  var w = n.FLIPPED_ALIAS_KEYS.Pureish;
  t.PUREISH_TYPES = w;
  var E = n.FLIPPED_ALIAS_KEYS.Declaration;
  t.DECLARATION_TYPES = E;
  var S = n.FLIPPED_ALIAS_KEYS.PatternLike;
  t.PATTERNLIKE_TYPES = S;
  var T = n.FLIPPED_ALIAS_KEYS.LVal;
  t.LVAL_TYPES = T;
  var A = n.FLIPPED_ALIAS_KEYS.TSEntityName;
  t.TSENTITYNAME_TYPES = A;
  var C = n.FLIPPED_ALIAS_KEYS.Literal;
  t.LITERAL_TYPES = C;
  var P = n.FLIPPED_ALIAS_KEYS.Immutable;
  t.IMMUTABLE_TYPES = P;
  var O = n.FLIPPED_ALIAS_KEYS.UserWhitespacable;
  t.USERWHITESPACABLE_TYPES = O;
  var x = n.FLIPPED_ALIAS_KEYS.Method;
  t.METHOD_TYPES = x;
  var _ = n.FLIPPED_ALIAS_KEYS.ObjectMember;
  t.OBJECTMEMBER_TYPES = _;
  var V = n.FLIPPED_ALIAS_KEYS.Property;
  t.PROPERTY_TYPES = V;
  var D = n.FLIPPED_ALIAS_KEYS.UnaryLike;
  t.UNARYLIKE_TYPES = D;
  var N = n.FLIPPED_ALIAS_KEYS.Pattern;
  t.PATTERN_TYPES = N;
  var I = n.FLIPPED_ALIAS_KEYS.Class;
  t.CLASS_TYPES = I;
  var k = n.FLIPPED_ALIAS_KEYS.ModuleDeclaration;
  t.MODULEDECLARATION_TYPES = k;
  var j = n.FLIPPED_ALIAS_KEYS.ExportDeclaration;
  t.EXPORTDECLARATION_TYPES = j;
  var F = n.FLIPPED_ALIAS_KEYS.ModuleSpecifier;
  t.MODULESPECIFIER_TYPES = F;
  var R = n.FLIPPED_ALIAS_KEYS.Flow;
  t.FLOW_TYPES = R;
  var M = n.FLIPPED_ALIAS_KEYS.FlowType;
  t.FLOWTYPE_TYPES = M;
  var B = n.FLIPPED_ALIAS_KEYS.FlowBaseAnnotation;
  t.FLOWBASEANNOTATION_TYPES = B;
  var L = n.FLIPPED_ALIAS_KEYS.FlowDeclaration;
  t.FLOWDECLARATION_TYPES = L;
  var $ = n.FLIPPED_ALIAS_KEYS.FlowPredicate;
  t.FLOWPREDICATE_TYPES = $;
  var G = n.FLIPPED_ALIAS_KEYS.JSX;
  t.JSX_TYPES = G;
  var z = n.FLIPPED_ALIAS_KEYS.Private;
  t.PRIVATE_TYPES = z;
  var U = n.FLIPPED_ALIAS_KEYS.TSTypeElement;
  t.TSTYPEELEMENT_TYPES = U;
  var W = n.FLIPPED_ALIAS_KEYS.TSType;
  t.TSTYPE_TYPES = W;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return n.COMMENT_KEYS.forEach(function(t2) {
      e2[t2] = null;
    }), e2;
  };
  var n = r(45);
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
  };
}, function(e, t, r) {
  "use strict";
  var n = r(212), i = r(674), a = r(203), o = n && 1 / a(new n([, -0]))[1] == 1 / 0 ? function(e2) {
    return new n(e2);
  } : i;
  e.exports = o;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return e2.has(t2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2, r2) {
    for (var n = -1, i = null == e2 ? 0 : e2.length; ++n < i; ) if (r2(t2, e2[n])) return true;
    return false;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2, r2) {
    for (var n = r2 - 1, i = e2.length; ++n < i; ) if (e2[n] === t2) return n;
    return -1;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return e2 != e2;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2, r2, n) {
    for (var i = e2.length, a = r2 + (n ? 1 : -1); n ? a-- : ++a < i; ) if (t2(e2[a], a, e2)) return a;
    return -1;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(680), i = r(679), a = r(678);
  e.exports = function(e2, t2, r2) {
    return t2 == t2 ? a(e2, t2, r2) : n(e2, i, r2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(681);
  e.exports = function(e2, t2) {
    return !(null == e2 || !e2.length) && n(e2, t2, 0) > -1;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return this.__data__.has(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = "__lodash_hash_undefined__";
  e.exports = function(e2) {
    return this.__data__.set(e2, n), this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(225), i = r(684), a = r(683);
  function o(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.__data__ = new n(); ++t2 < r2; ) this.add(e2[t2]);
  }
  o.prototype.add = o.prototype.push = i, o.prototype.has = a, e.exports = o;
}, function(e, t, r) {
  "use strict";
  var n = r(685), i = r(682), a = r(677), o = r(676), s = r(675), u = r(203), l = 200;
  e.exports = function(e2, t2, r2) {
    var c = -1, f = i, p = e2.length, d = true, h = [], v = h;
    if (r2) d = false, f = a;
    else if (p >= l) {
      var y = t2 ? null : s(e2);
      if (y) return u(y);
      d = false, f = o, v = new n();
    } else v = t2 ? [] : h;
    e: for (; ++c < p; ) {
      var m = e2[c], b = t2 ? t2(m) : m;
      if (m = r2 || 0 !== m ? m : 0, d && b == b) {
        for (var g = v.length; g--; ) if (v[g] === b) continue e;
        t2 && v.push(b), h.push(m);
      } else f(v, b, r2) || (v !== h && v.push(b), h.push(m));
    }
    return h;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(686);
  e.exports = function(e2) {
    return e2 && e2.length ? n(e2) : [];
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2, r2, i) {
    return (0, n.default)(e2, t2, [{ type: i ? "CommentLine" : "CommentBlock", value: r2 }]);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(205));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = (0, n.default)(e2);
    return t2.loc = null, t2;
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(206));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return (0, n.default)(e2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(65));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    var t2 = (0, i.default)(e2);
    return 1 === t2.length ? t2[0] : (0, n.unionTypeAnnotation)(t2);
  };
  var n = r(23), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(207));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    if ("string" === e2) return (0, n.stringTypeAnnotation)();
    if ("number" === e2) return (0, n.numberTypeAnnotation)();
    if ("undefined" === e2) return (0, n.voidTypeAnnotation)();
    if ("boolean" === e2) return (0, n.booleanTypeAnnotation)();
    if ("function" === e2) return (0, n.genericTypeAnnotation)((0, n.identifier)("Function"));
    if ("object" === e2) return (0, n.genericTypeAnnotation)((0, n.identifier)("Object"));
    if ("symbol" === e2) return (0, n.genericTypeAnnotation)((0, n.identifier)("Symbol"));
    throw new Error("Invalid typeof value");
  };
  var n = r(23);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.assertArrayExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ArrayExpression", e2, t2);
  }, t.assertAssignmentExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("AssignmentExpression", e2, t2);
  }, t.assertBinaryExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BinaryExpression", e2, t2);
  }, t.assertInterpreterDirective = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("InterpreterDirective", e2, t2);
  }, t.assertDirective = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Directive", e2, t2);
  }, t.assertDirectiveLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DirectiveLiteral", e2, t2);
  }, t.assertBlockStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BlockStatement", e2, t2);
  }, t.assertBreakStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BreakStatement", e2, t2);
  }, t.assertCallExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("CallExpression", e2, t2);
  }, t.assertCatchClause = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("CatchClause", e2, t2);
  }, t.assertConditionalExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ConditionalExpression", e2, t2);
  }, t.assertContinueStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ContinueStatement", e2, t2);
  }, t.assertDebuggerStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DebuggerStatement", e2, t2);
  }, t.assertDoWhileStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DoWhileStatement", e2, t2);
  }, t.assertEmptyStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("EmptyStatement", e2, t2);
  }, t.assertExpressionStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExpressionStatement", e2, t2);
  }, t.assertFile = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("File", e2, t2);
  }, t.assertForInStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ForInStatement", e2, t2);
  }, t.assertForStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ForStatement", e2, t2);
  }, t.assertFunctionDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FunctionDeclaration", e2, t2);
  }, t.assertFunctionExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FunctionExpression", e2, t2);
  }, t.assertIdentifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Identifier", e2, t2);
  }, t.assertIfStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("IfStatement", e2, t2);
  }, t.assertLabeledStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("LabeledStatement", e2, t2);
  }, t.assertStringLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("StringLiteral", e2, t2);
  }, t.assertNumericLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NumericLiteral", e2, t2);
  }, t.assertNullLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NullLiteral", e2, t2);
  }, t.assertBooleanLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BooleanLiteral", e2, t2);
  }, t.assertRegExpLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("RegExpLiteral", e2, t2);
  }, t.assertLogicalExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("LogicalExpression", e2, t2);
  }, t.assertMemberExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("MemberExpression", e2, t2);
  }, t.assertNewExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NewExpression", e2, t2);
  }, t.assertProgram = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Program", e2, t2);
  }, t.assertObjectExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectExpression", e2, t2);
  }, t.assertObjectMethod = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectMethod", e2, t2);
  }, t.assertObjectProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectProperty", e2, t2);
  }, t.assertRestElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("RestElement", e2, t2);
  }, t.assertReturnStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ReturnStatement", e2, t2);
  }, t.assertSequenceExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("SequenceExpression", e2, t2);
  }, t.assertSwitchCase = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("SwitchCase", e2, t2);
  }, t.assertSwitchStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("SwitchStatement", e2, t2);
  }, t.assertThisExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ThisExpression", e2, t2);
  }, t.assertThrowStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ThrowStatement", e2, t2);
  }, t.assertTryStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TryStatement", e2, t2);
  }, t.assertUnaryExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("UnaryExpression", e2, t2);
  }, t.assertUpdateExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("UpdateExpression", e2, t2);
  }, t.assertVariableDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("VariableDeclaration", e2, t2);
  }, t.assertVariableDeclarator = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("VariableDeclarator", e2, t2);
  }, t.assertWhileStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("WhileStatement", e2, t2);
  }, t.assertWithStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("WithStatement", e2, t2);
  }, t.assertAssignmentPattern = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("AssignmentPattern", e2, t2);
  }, t.assertArrayPattern = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ArrayPattern", e2, t2);
  }, t.assertArrowFunctionExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ArrowFunctionExpression", e2, t2);
  }, t.assertClassBody = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassBody", e2, t2);
  }, t.assertClassDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassDeclaration", e2, t2);
  }, t.assertClassExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassExpression", e2, t2);
  }, t.assertExportAllDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportAllDeclaration", e2, t2);
  }, t.assertExportDefaultDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportDefaultDeclaration", e2, t2);
  }, t.assertExportNamedDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportNamedDeclaration", e2, t2);
  }, t.assertExportSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportSpecifier", e2, t2);
  }, t.assertForOfStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ForOfStatement", e2, t2);
  }, t.assertImportDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ImportDeclaration", e2, t2);
  }, t.assertImportDefaultSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ImportDefaultSpecifier", e2, t2);
  }, t.assertImportNamespaceSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ImportNamespaceSpecifier", e2, t2);
  }, t.assertImportSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ImportSpecifier", e2, t2);
  }, t.assertMetaProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("MetaProperty", e2, t2);
  }, t.assertClassMethod = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassMethod", e2, t2);
  }, t.assertObjectPattern = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectPattern", e2, t2);
  }, t.assertSpreadElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("SpreadElement", e2, t2);
  }, t.assertSuper = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Super", e2, t2);
  }, t.assertTaggedTemplateExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TaggedTemplateExpression", e2, t2);
  }, t.assertTemplateElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TemplateElement", e2, t2);
  }, t.assertTemplateLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TemplateLiteral", e2, t2);
  }, t.assertYieldExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("YieldExpression", e2, t2);
  }, t.assertAnyTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("AnyTypeAnnotation", e2, t2);
  }, t.assertArrayTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ArrayTypeAnnotation", e2, t2);
  }, t.assertBooleanTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BooleanTypeAnnotation", e2, t2);
  }, t.assertBooleanLiteralTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BooleanLiteralTypeAnnotation", e2, t2);
  }, t.assertNullLiteralTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NullLiteralTypeAnnotation", e2, t2);
  }, t.assertClassImplements = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassImplements", e2, t2);
  }, t.assertDeclareClass = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareClass", e2, t2);
  }, t.assertDeclareFunction = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareFunction", e2, t2);
  }, t.assertDeclareInterface = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareInterface", e2, t2);
  }, t.assertDeclareModule = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareModule", e2, t2);
  }, t.assertDeclareModuleExports = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareModuleExports", e2, t2);
  }, t.assertDeclareTypeAlias = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareTypeAlias", e2, t2);
  }, t.assertDeclareOpaqueType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareOpaqueType", e2, t2);
  }, t.assertDeclareVariable = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareVariable", e2, t2);
  }, t.assertDeclareExportDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareExportDeclaration", e2, t2);
  }, t.assertDeclareExportAllDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclareExportAllDeclaration", e2, t2);
  }, t.assertDeclaredPredicate = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DeclaredPredicate", e2, t2);
  }, t.assertExistsTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExistsTypeAnnotation", e2, t2);
  }, t.assertFunctionTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FunctionTypeAnnotation", e2, t2);
  }, t.assertFunctionTypeParam = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FunctionTypeParam", e2, t2);
  }, t.assertGenericTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("GenericTypeAnnotation", e2, t2);
  }, t.assertInferredPredicate = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("InferredPredicate", e2, t2);
  }, t.assertInterfaceExtends = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("InterfaceExtends", e2, t2);
  }, t.assertInterfaceDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("InterfaceDeclaration", e2, t2);
  }, t.assertInterfaceTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("InterfaceTypeAnnotation", e2, t2);
  }, t.assertIntersectionTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("IntersectionTypeAnnotation", e2, t2);
  }, t.assertMixedTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("MixedTypeAnnotation", e2, t2);
  }, t.assertEmptyTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("EmptyTypeAnnotation", e2, t2);
  }, t.assertNullableTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NullableTypeAnnotation", e2, t2);
  }, t.assertNumberLiteralTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NumberLiteralTypeAnnotation", e2, t2);
  }, t.assertNumberTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("NumberTypeAnnotation", e2, t2);
  }, t.assertObjectTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectTypeAnnotation", e2, t2);
  }, t.assertObjectTypeInternalSlot = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectTypeInternalSlot", e2, t2);
  }, t.assertObjectTypeCallProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectTypeCallProperty", e2, t2);
  }, t.assertObjectTypeIndexer = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectTypeIndexer", e2, t2);
  }, t.assertObjectTypeProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectTypeProperty", e2, t2);
  }, t.assertObjectTypeSpreadProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectTypeSpreadProperty", e2, t2);
  }, t.assertOpaqueType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("OpaqueType", e2, t2);
  }, t.assertQualifiedTypeIdentifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("QualifiedTypeIdentifier", e2, t2);
  }, t.assertStringLiteralTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("StringLiteralTypeAnnotation", e2, t2);
  }, t.assertStringTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("StringTypeAnnotation", e2, t2);
  }, t.assertThisTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ThisTypeAnnotation", e2, t2);
  }, t.assertTupleTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TupleTypeAnnotation", e2, t2);
  }, t.assertTypeofTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeofTypeAnnotation", e2, t2);
  }, t.assertTypeAlias = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeAlias", e2, t2);
  }, t.assertTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeAnnotation", e2, t2);
  }, t.assertTypeCastExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeCastExpression", e2, t2);
  }, t.assertTypeParameter = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeParameter", e2, t2);
  }, t.assertTypeParameterDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeParameterDeclaration", e2, t2);
  }, t.assertTypeParameterInstantiation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TypeParameterInstantiation", e2, t2);
  }, t.assertUnionTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("UnionTypeAnnotation", e2, t2);
  }, t.assertVariance = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Variance", e2, t2);
  }, t.assertVoidTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("VoidTypeAnnotation", e2, t2);
  }, t.assertJSXAttribute = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXAttribute", e2, t2);
  }, t.assertJSXClosingElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXClosingElement", e2, t2);
  }, t.assertJSXElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXElement", e2, t2);
  }, t.assertJSXEmptyExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXEmptyExpression", e2, t2);
  }, t.assertJSXExpressionContainer = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXExpressionContainer", e2, t2);
  }, t.assertJSXSpreadChild = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXSpreadChild", e2, t2);
  }, t.assertJSXIdentifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXIdentifier", e2, t2);
  }, t.assertJSXMemberExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXMemberExpression", e2, t2);
  }, t.assertJSXNamespacedName = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXNamespacedName", e2, t2);
  }, t.assertJSXOpeningElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXOpeningElement", e2, t2);
  }, t.assertJSXSpreadAttribute = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXSpreadAttribute", e2, t2);
  }, t.assertJSXText = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXText", e2, t2);
  }, t.assertJSXFragment = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXFragment", e2, t2);
  }, t.assertJSXOpeningFragment = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXOpeningFragment", e2, t2);
  }, t.assertJSXClosingFragment = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSXClosingFragment", e2, t2);
  }, t.assertNoop = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Noop", e2, t2);
  }, t.assertParenthesizedExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ParenthesizedExpression", e2, t2);
  }, t.assertAwaitExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("AwaitExpression", e2, t2);
  }, t.assertBindExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BindExpression", e2, t2);
  }, t.assertClassProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassProperty", e2, t2);
  }, t.assertOptionalMemberExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("OptionalMemberExpression", e2, t2);
  }, t.assertOptionalCallExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("OptionalCallExpression", e2, t2);
  }, t.assertClassPrivateProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ClassPrivateProperty", e2, t2);
  }, t.assertImport = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Import", e2, t2);
  }, t.assertDecorator = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Decorator", e2, t2);
  }, t.assertDoExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("DoExpression", e2, t2);
  }, t.assertExportDefaultSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportDefaultSpecifier", e2, t2);
  }, t.assertExportNamespaceSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportNamespaceSpecifier", e2, t2);
  }, t.assertPrivateName = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("PrivateName", e2, t2);
  }, t.assertBigIntLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BigIntLiteral", e2, t2);
  }, t.assertTSParameterProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSParameterProperty", e2, t2);
  }, t.assertTSDeclareFunction = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSDeclareFunction", e2, t2);
  }, t.assertTSDeclareMethod = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSDeclareMethod", e2, t2);
  }, t.assertTSQualifiedName = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSQualifiedName", e2, t2);
  }, t.assertTSCallSignatureDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSCallSignatureDeclaration", e2, t2);
  }, t.assertTSConstructSignatureDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSConstructSignatureDeclaration", e2, t2);
  }, t.assertTSPropertySignature = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSPropertySignature", e2, t2);
  }, t.assertTSMethodSignature = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSMethodSignature", e2, t2);
  }, t.assertTSIndexSignature = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSIndexSignature", e2, t2);
  }, t.assertTSAnyKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSAnyKeyword", e2, t2);
  }, t.assertTSNumberKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSNumberKeyword", e2, t2);
  }, t.assertTSObjectKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSObjectKeyword", e2, t2);
  }, t.assertTSBooleanKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSBooleanKeyword", e2, t2);
  }, t.assertTSStringKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSStringKeyword", e2, t2);
  }, t.assertTSSymbolKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSSymbolKeyword", e2, t2);
  }, t.assertTSVoidKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSVoidKeyword", e2, t2);
  }, t.assertTSUndefinedKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSUndefinedKeyword", e2, t2);
  }, t.assertTSNullKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSNullKeyword", e2, t2);
  }, t.assertTSNeverKeyword = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSNeverKeyword", e2, t2);
  }, t.assertTSThisType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSThisType", e2, t2);
  }, t.assertTSFunctionType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSFunctionType", e2, t2);
  }, t.assertTSConstructorType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSConstructorType", e2, t2);
  }, t.assertTSTypeReference = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeReference", e2, t2);
  }, t.assertTSTypePredicate = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypePredicate", e2, t2);
  }, t.assertTSTypeQuery = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeQuery", e2, t2);
  }, t.assertTSTypeLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeLiteral", e2, t2);
  }, t.assertTSArrayType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSArrayType", e2, t2);
  }, t.assertTSTupleType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTupleType", e2, t2);
  }, t.assertTSUnionType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSUnionType", e2, t2);
  }, t.assertTSIntersectionType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSIntersectionType", e2, t2);
  }, t.assertTSConditionalType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSConditionalType", e2, t2);
  }, t.assertTSInferType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSInferType", e2, t2);
  }, t.assertTSParenthesizedType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSParenthesizedType", e2, t2);
  }, t.assertTSTypeOperator = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeOperator", e2, t2);
  }, t.assertTSIndexedAccessType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSIndexedAccessType", e2, t2);
  }, t.assertTSMappedType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSMappedType", e2, t2);
  }, t.assertTSLiteralType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSLiteralType", e2, t2);
  }, t.assertTSExpressionWithTypeArguments = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSExpressionWithTypeArguments", e2, t2);
  }, t.assertTSInterfaceDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSInterfaceDeclaration", e2, t2);
  }, t.assertTSInterfaceBody = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSInterfaceBody", e2, t2);
  }, t.assertTSTypeAliasDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeAliasDeclaration", e2, t2);
  }, t.assertTSAsExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSAsExpression", e2, t2);
  }, t.assertTSTypeAssertion = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeAssertion", e2, t2);
  }, t.assertTSEnumDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSEnumDeclaration", e2, t2);
  }, t.assertTSEnumMember = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSEnumMember", e2, t2);
  }, t.assertTSModuleDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSModuleDeclaration", e2, t2);
  }, t.assertTSModuleBlock = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSModuleBlock", e2, t2);
  }, t.assertTSImportEqualsDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSImportEqualsDeclaration", e2, t2);
  }, t.assertTSExternalModuleReference = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSExternalModuleReference", e2, t2);
  }, t.assertTSNonNullExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSNonNullExpression", e2, t2);
  }, t.assertTSExportAssignment = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSExportAssignment", e2, t2);
  }, t.assertTSNamespaceExportDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSNamespaceExportDeclaration", e2, t2);
  }, t.assertTSTypeAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeAnnotation", e2, t2);
  }, t.assertTSTypeParameterInstantiation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeParameterInstantiation", e2, t2);
  }, t.assertTSTypeParameterDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeParameterDeclaration", e2, t2);
  }, t.assertTSTypeParameter = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeParameter", e2, t2);
  }, t.assertExpression = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Expression", e2, t2);
  }, t.assertBinary = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Binary", e2, t2);
  }, t.assertScopable = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Scopable", e2, t2);
  }, t.assertBlockParent = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("BlockParent", e2, t2);
  }, t.assertBlock = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Block", e2, t2);
  }, t.assertStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Statement", e2, t2);
  }, t.assertTerminatorless = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Terminatorless", e2, t2);
  }, t.assertCompletionStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("CompletionStatement", e2, t2);
  }, t.assertConditional = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Conditional", e2, t2);
  }, t.assertLoop = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Loop", e2, t2);
  }, t.assertWhile = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("While", e2, t2);
  }, t.assertExpressionWrapper = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExpressionWrapper", e2, t2);
  }, t.assertFor = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("For", e2, t2);
  }, t.assertForXStatement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ForXStatement", e2, t2);
  }, t.assertFunction = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Function", e2, t2);
  }, t.assertFunctionParent = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FunctionParent", e2, t2);
  }, t.assertPureish = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Pureish", e2, t2);
  }, t.assertDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Declaration", e2, t2);
  }, t.assertPatternLike = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("PatternLike", e2, t2);
  }, t.assertLVal = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("LVal", e2, t2);
  }, t.assertTSEntityName = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSEntityName", e2, t2);
  }, t.assertLiteral = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Literal", e2, t2);
  }, t.assertImmutable = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Immutable", e2, t2);
  }, t.assertUserWhitespacable = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("UserWhitespacable", e2, t2);
  }, t.assertMethod = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Method", e2, t2);
  }, t.assertObjectMember = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ObjectMember", e2, t2);
  }, t.assertProperty = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Property", e2, t2);
  }, t.assertUnaryLike = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("UnaryLike", e2, t2);
  }, t.assertPattern = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Pattern", e2, t2);
  }, t.assertClass = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Class", e2, t2);
  }, t.assertModuleDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ModuleDeclaration", e2, t2);
  }, t.assertExportDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ExportDeclaration", e2, t2);
  }, t.assertModuleSpecifier = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("ModuleSpecifier", e2, t2);
  }, t.assertFlow = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Flow", e2, t2);
  }, t.assertFlowType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FlowType", e2, t2);
  }, t.assertFlowBaseAnnotation = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FlowBaseAnnotation", e2, t2);
  }, t.assertFlowDeclaration = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FlowDeclaration", e2, t2);
  }, t.assertFlowPredicate = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("FlowPredicate", e2, t2);
  }, t.assertJSX = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("JSX", e2, t2);
  }, t.assertPrivate = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("Private", e2, t2);
  }, t.assertTSTypeElement = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSTypeElement", e2, t2);
  }, t.assertTSType = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    i("TSType", e2, t2);
  }, t.assertNumberLiteral = function(e2, t2) {
    console.trace("The node type NumberLiteral has been renamed to NumericLiteral"), i("NumberLiteral", e2, t2);
  }, t.assertRegexLiteral = function(e2, t2) {
    console.trace("The node type RegexLiteral has been renamed to RegExpLiteral"), i("RegexLiteral", e2, t2);
  }, t.assertRestProperty = function(e2, t2) {
    console.trace("The node type RestProperty has been renamed to RestElement"), i("RestProperty", e2, t2);
  }, t.assertSpreadProperty = function(e2, t2) {
    console.trace("The node type SpreadProperty has been renamed to SpreadElement"), i("SpreadProperty", e2, t2);
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(121));
  function i(e2, t2, r2) {
    if (!(0, n.default)(e2, t2, r2)) throw new Error('Expected type "'.concat(e2, '" with option ').concat(JSON.stringify(r2), ', but instead got "').concat(t2.type, '".'));
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    if (!(0, n.default)(e2)) {
      var t2 = e2 && e2.type || JSON.stringify(e2);
      throw new TypeError('Not a valid node of type "'.concat(t2, '"'));
    }
  };
  var n = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(208));
}, function(e, t, r) {
  "use strict";
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36)), i = r(122), a = r(119);
  var o = (0, n.assertValueType)("boolean"), s = { returnType: { validate: (0, n.assertNodeType)("TSTypeAnnotation", "Noop"), optional: true }, typeParameters: { validate: (0, n.assertNodeType)("TSTypeParameterDeclaration", "Noop"), optional: true } };
  (0, n.default)("TSParameterProperty", { aliases: ["LVal"], visitor: ["parameter"], fields: { accessibility: { validate: (0, n.assertOneOf)("public", "private", "protected"), optional: true }, readonly: { validate: (0, n.assertValueType)("boolean"), optional: true }, parameter: { validate: (0, n.assertNodeType)("Identifier", "AssignmentPattern") } } }), (0, n.default)("TSDeclareFunction", { aliases: ["Statement", "Declaration"], visitor: ["id", "typeParameters", "params", "returnType"], fields: Object.assign({}, i.functionDeclarationCommon, s) }), (0, n.default)("TSDeclareMethod", { visitor: ["decorators", "key", "typeParameters", "params", "returnType"], fields: Object.assign({}, a.classMethodOrDeclareMethodCommon, s) }), (0, n.default)("TSQualifiedName", { aliases: ["TSEntityName"], visitor: ["left", "right"], fields: { left: (0, n.validateType)("TSEntityName"), right: (0, n.validateType)("Identifier") } });
  var u = { typeParameters: (0, n.validateOptionalType)("TSTypeParameterDeclaration"), parameters: (0, n.validateArrayOfType)(["Identifier", "RestElement"]), typeAnnotation: (0, n.validateOptionalType)("TSTypeAnnotation") }, l = { aliases: ["TSTypeElement"], visitor: ["typeParameters", "parameters", "typeAnnotation"], fields: u };
  (0, n.default)("TSCallSignatureDeclaration", l), (0, n.default)("TSConstructSignatureDeclaration", l);
  var c = { key: (0, n.validateType)("Expression"), computed: (0, n.validate)(o), optional: (0, n.validateOptional)(o) };
  (0, n.default)("TSPropertySignature", { aliases: ["TSTypeElement"], visitor: ["key", "typeAnnotation", "initializer"], fields: Object.assign({}, c, { readonly: (0, n.validateOptional)(o), typeAnnotation: (0, n.validateOptionalType)("TSTypeAnnotation"), initializer: (0, n.validateOptionalType)("Expression") }) }), (0, n.default)("TSMethodSignature", { aliases: ["TSTypeElement"], visitor: ["key", "typeParameters", "parameters", "typeAnnotation"], fields: Object.assign({}, u, c) }), (0, n.default)("TSIndexSignature", { aliases: ["TSTypeElement"], visitor: ["parameters", "typeAnnotation"], fields: { readonly: (0, n.validateOptional)(o), parameters: (0, n.validateArrayOfType)("Identifier"), typeAnnotation: (0, n.validateOptionalType)("TSTypeAnnotation") } });
  for (var f = ["TSAnyKeyword", "TSNumberKeyword", "TSObjectKeyword", "TSBooleanKeyword", "TSStringKeyword", "TSSymbolKeyword", "TSVoidKeyword", "TSUndefinedKeyword", "TSNullKeyword", "TSNeverKeyword"], p = 0; p < f.length; p++) {
    var d = f[p];
    (0, n.default)(d, { aliases: ["TSType"], visitor: [], fields: {} });
  }
  (0, n.default)("TSThisType", { aliases: ["TSType"], visitor: [], fields: {} });
  var h = { aliases: ["TSType"], visitor: ["typeParameters", "typeAnnotation"], fields: u };
  (0, n.default)("TSFunctionType", h), (0, n.default)("TSConstructorType", h), (0, n.default)("TSTypeReference", { aliases: ["TSType"], visitor: ["typeName", "typeParameters"], fields: { typeName: (0, n.validateType)("TSEntityName"), typeParameters: (0, n.validateOptionalType)("TSTypeParameterInstantiation") } }), (0, n.default)("TSTypePredicate", { aliases: ["TSType"], visitor: ["parameterName", "typeAnnotation"], fields: { parameterName: (0, n.validateType)(["Identifier", "TSThisType"]), typeAnnotation: (0, n.validateType)("TSTypeAnnotation") } }), (0, n.default)("TSTypeQuery", { aliases: ["TSType"], visitor: ["exprName"], fields: { exprName: (0, n.validateType)("TSEntityName") } }), (0, n.default)("TSTypeLiteral", { aliases: ["TSType"], visitor: ["members"], fields: { members: (0, n.validateArrayOfType)("TSTypeElement") } }), (0, n.default)("TSArrayType", { aliases: ["TSType"], visitor: ["elementType"], fields: { elementType: (0, n.validateType)("TSType") } }), (0, n.default)("TSTupleType", { aliases: ["TSType"], visitor: ["elementTypes"], fields: { elementTypes: (0, n.validateArrayOfType)("TSType") } });
  var v = { aliases: ["TSType"], visitor: ["types"], fields: { types: (0, n.validateArrayOfType)("TSType") } };
  (0, n.default)("TSUnionType", v), (0, n.default)("TSIntersectionType", v), (0, n.default)("TSConditionalType", { aliases: ["TSType"], visitor: ["checkType", "extendsType", "trueType", "falseType"], fields: { checkType: (0, n.validateType)("TSType"), extendsType: (0, n.validateType)("TSType"), trueType: (0, n.validateType)("TSType"), falseType: (0, n.validateType)("TSType") } }), (0, n.default)("TSInferType", { aliases: ["TSType"], visitor: ["typeParameter"], fields: { typeParameter: (0, n.validateType)("TSTypeParameter") } }), (0, n.default)("TSParenthesizedType", { aliases: ["TSType"], visitor: ["typeAnnotation"], fields: { typeAnnotation: (0, n.validateType)("TSType") } }), (0, n.default)("TSTypeOperator", { aliases: ["TSType"], visitor: ["typeAnnotation"], fields: { operator: (0, n.validate)((0, n.assertValueType)("string")), typeAnnotation: (0, n.validateType)("TSType") } }), (0, n.default)("TSIndexedAccessType", { aliases: ["TSType"], visitor: ["objectType", "indexType"], fields: { objectType: (0, n.validateType)("TSType"), indexType: (0, n.validateType)("TSType") } }), (0, n.default)("TSMappedType", { aliases: ["TSType"], visitor: ["typeParameter", "typeAnnotation"], fields: { readonly: (0, n.validateOptional)(o), typeParameter: (0, n.validateType)("TSTypeParameter"), optional: (0, n.validateOptional)(o), typeAnnotation: (0, n.validateOptionalType)("TSType") } }), (0, n.default)("TSLiteralType", { aliases: ["TSType"], visitor: ["literal"], fields: { literal: (0, n.validateType)(["NumericLiteral", "StringLiteral", "BooleanLiteral"]) } }), (0, n.default)("TSExpressionWithTypeArguments", { aliases: ["TSType"], visitor: ["expression", "typeParameters"], fields: { expression: (0, n.validateType)("TSEntityName"), typeParameters: (0, n.validateOptionalType)("TSTypeParameterInstantiation") } }), (0, n.default)("TSInterfaceDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "typeParameters", "extends", "body"], fields: { declare: (0, n.validateOptional)(o), id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TSTypeParameterDeclaration"), extends: (0, n.validateOptional)((0, n.arrayOfType)("TSExpressionWithTypeArguments")), body: (0, n.validateType)("TSInterfaceBody") } }), (0, n.default)("TSInterfaceBody", { visitor: ["body"], fields: { body: (0, n.validateArrayOfType)("TSTypeElement") } }), (0, n.default)("TSTypeAliasDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "typeParameters", "typeAnnotation"], fields: { declare: (0, n.validateOptional)(o), id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TSTypeParameterDeclaration"), typeAnnotation: (0, n.validateType)("TSType") } }), (0, n.default)("TSAsExpression", { aliases: ["Expression"], visitor: ["expression", "typeAnnotation"], fields: { expression: (0, n.validateType)("Expression"), typeAnnotation: (0, n.validateType)("TSType") } }), (0, n.default)("TSTypeAssertion", { aliases: ["Expression"], visitor: ["typeAnnotation", "expression"], fields: { typeAnnotation: (0, n.validateType)("TSType"), expression: (0, n.validateType)("Expression") } }), (0, n.default)("TSEnumDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "members"], fields: { declare: (0, n.validateOptional)(o), const: (0, n.validateOptional)(o), id: (0, n.validateType)("Identifier"), members: (0, n.validateArrayOfType)("TSEnumMember"), initializer: (0, n.validateOptionalType)("Expression") } }), (0, n.default)("TSEnumMember", { visitor: ["id", "initializer"], fields: { id: (0, n.validateType)(["Identifier", "StringLiteral"]), initializer: (0, n.validateOptionalType)("Expression") } }), (0, n.default)("TSModuleDeclaration", { aliases: ["Statement", "Declaration"], visitor: ["id", "body"], fields: { declare: (0, n.validateOptional)(o), global: (0, n.validateOptional)(o), id: (0, n.validateType)(["Identifier", "StringLiteral"]), body: (0, n.validateType)(["TSModuleBlock", "TSModuleDeclaration"]) } }), (0, n.default)("TSModuleBlock", { visitor: ["body"], fields: { body: (0, n.validateArrayOfType)("Statement") } }), (0, n.default)("TSImportEqualsDeclaration", { aliases: ["Statement"], visitor: ["id", "moduleReference"], fields: { isExport: (0, n.validate)(o), id: (0, n.validateType)("Identifier"), moduleReference: (0, n.validateType)(["TSEntityName", "TSExternalModuleReference"]) } }), (0, n.default)("TSExternalModuleReference", { visitor: ["expression"], fields: { expression: (0, n.validateType)("StringLiteral") } }), (0, n.default)("TSNonNullExpression", { aliases: ["Expression"], visitor: ["expression"], fields: { expression: (0, n.validateType)("Expression") } }), (0, n.default)("TSExportAssignment", { aliases: ["Statement"], visitor: ["expression"], fields: { expression: (0, n.validateType)("Expression") } }), (0, n.default)("TSNamespaceExportDeclaration", { aliases: ["Statement"], visitor: ["id"], fields: { id: (0, n.validateType)("Identifier") } }), (0, n.default)("TSTypeAnnotation", { visitor: ["typeAnnotation"], fields: { typeAnnotation: { validate: (0, n.assertNodeType)("TSType") } } }), (0, n.default)("TSTypeParameterInstantiation", { visitor: ["params"], fields: { params: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("TSType"))) } } }), (0, n.default)("TSTypeParameterDeclaration", { visitor: ["params"], fields: { params: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("TSTypeParameter"))) } } }), (0, n.default)("TSTypeParameter", { visitor: ["constraint", "default"], fields: { name: { validate: (0, n.assertValueType)("string") }, constraint: { validate: (0, n.assertNodeType)("TSType"), optional: true }, default: { validate: (0, n.assertNodeType)("TSType"), optional: true } } });
}, function(e, t, r) {
  "use strict";
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36)), i = r(119);
  (0, n.default)("AwaitExpression", { builder: ["argument"], visitor: ["argument"], aliases: ["Expression", "Terminatorless"], fields: { argument: { validate: (0, n.assertNodeType)("Expression") } } }), (0, n.default)("BindExpression", { visitor: ["object", "callee"], aliases: ["Expression"], fields: {} }), (0, n.default)("ClassProperty", { visitor: ["key", "value", "typeAnnotation", "decorators"], builder: ["key", "value", "typeAnnotation", "decorators", "computed"], aliases: ["Property"], fields: Object.assign({}, i.classMethodOrPropertyCommon, { value: { validate: (0, n.assertNodeType)("Expression"), optional: true }, definite: { validate: (0, n.assertValueType)("boolean"), optional: true }, typeAnnotation: { validate: (0, n.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"), optional: true }, decorators: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Decorator"))), optional: true }, readonly: { validate: (0, n.assertValueType)("boolean"), optional: true } }) }), (0, n.default)("OptionalMemberExpression", { builder: ["object", "property", "computed", "optional"], visitor: ["object", "property"], aliases: ["Expression"], fields: { object: { validate: (0, n.assertNodeType)("Expression") }, property: { validate: (function() {
    var e2 = (0, n.assertNodeType)("Identifier"), t2 = (0, n.assertNodeType)("Expression");
    return function(r2, n2, i2) {
      (r2.computed ? t2 : e2)(r2, n2, i2);
    };
  })() }, computed: { default: false }, optional: { validate: (0, n.assertValueType)("boolean") } } }), (0, n.default)("OptionalCallExpression", { visitor: ["callee", "arguments", "typeParameters", "typeArguments"], builder: ["callee", "arguments", "optional"], aliases: ["Expression"], fields: { callee: { validate: (0, n.assertNodeType)("Expression") }, arguments: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("Expression", "SpreadElement", "JSXNamespacedName"))) }, optional: { validate: (0, n.assertValueType)("boolean") }, typeArguments: { validate: (0, n.assertNodeType)("TypeParameterInstantiation"), optional: true }, typeParameters: { validate: (0, n.assertNodeType)("TSTypeParameterInstantiation"), optional: true } } }), (0, n.default)("ClassPrivateProperty", { visitor: ["key", "value"], builder: ["key", "value"], aliases: ["Property", "Private"], fields: { key: { validate: (0, n.assertNodeType)("PrivateName") }, value: { validate: (0, n.assertNodeType)("Expression"), optional: true } } }), (0, n.default)("Import", { aliases: ["Expression"] }), (0, n.default)("Decorator", { visitor: ["expression"], fields: { expression: { validate: (0, n.assertNodeType)("Expression") } } }), (0, n.default)("DoExpression", { visitor: ["body"], aliases: ["Expression"], fields: { body: { validate: (0, n.assertNodeType)("BlockStatement") } } }), (0, n.default)("ExportDefaultSpecifier", { visitor: ["exported"], aliases: ["ModuleSpecifier"], fields: { exported: { validate: (0, n.assertNodeType)("Identifier") } } }), (0, n.default)("ExportNamespaceSpecifier", { visitor: ["exported"], aliases: ["ModuleSpecifier"], fields: { exported: { validate: (0, n.assertNodeType)("Identifier") } } }), (0, n.default)("PrivateName", { visitor: ["id"], aliases: ["Private"], fields: { id: { validate: (0, n.assertNodeType)("Identifier") } } }), (0, n.default)("BigIntLiteral", { builder: ["value"], fields: { value: { validate: (0, n.assertValueType)("string") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] });
}, function(e, t, r) {
  "use strict";
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36));
  (0, n.default)("Noop", { visitor: [] }), (0, n.default)("ParenthesizedExpression", { visitor: ["expression"], aliases: ["Expression", "ExpressionWrapper"], fields: { expression: { validate: (0, n.assertNodeType)("Expression") } } });
}, function(e, t, r) {
  "use strict";
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36));
  (0, n.default)("JSXAttribute", { visitor: ["name", "value"], aliases: ["JSX", "Immutable"], fields: { name: { validate: (0, n.assertNodeType)("JSXIdentifier", "JSXNamespacedName") }, value: { optional: true, validate: (0, n.assertNodeType)("JSXElement", "JSXFragment", "StringLiteral", "JSXExpressionContainer") } } }), (0, n.default)("JSXClosingElement", { visitor: ["name"], aliases: ["JSX", "Immutable"], fields: { name: { validate: (0, n.assertNodeType)("JSXIdentifier", "JSXMemberExpression") } } }), (0, n.default)("JSXElement", { builder: ["openingElement", "closingElement", "children", "selfClosing"], visitor: ["openingElement", "children", "closingElement"], aliases: ["JSX", "Immutable", "Expression"], fields: { openingElement: { validate: (0, n.assertNodeType)("JSXOpeningElement") }, closingElement: { optional: true, validate: (0, n.assertNodeType)("JSXClosingElement") }, children: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement", "JSXFragment"))) } } }), (0, n.default)("JSXEmptyExpression", { aliases: ["JSX"] }), (0, n.default)("JSXExpressionContainer", { visitor: ["expression"], aliases: ["JSX", "Immutable"], fields: { expression: { validate: (0, n.assertNodeType)("Expression") } } }), (0, n.default)("JSXSpreadChild", { visitor: ["expression"], aliases: ["JSX", "Immutable"], fields: { expression: { validate: (0, n.assertNodeType)("Expression") } } }), (0, n.default)("JSXIdentifier", { builder: ["name"], aliases: ["JSX"], fields: { name: { validate: (0, n.assertValueType)("string") } } }), (0, n.default)("JSXMemberExpression", { visitor: ["object", "property"], aliases: ["JSX"], fields: { object: { validate: (0, n.assertNodeType)("JSXMemberExpression", "JSXIdentifier") }, property: { validate: (0, n.assertNodeType)("JSXIdentifier") } } }), (0, n.default)("JSXNamespacedName", { visitor: ["namespace", "name"], aliases: ["JSX"], fields: { namespace: { validate: (0, n.assertNodeType)("JSXIdentifier") }, name: { validate: (0, n.assertNodeType)("JSXIdentifier") } } }), (0, n.default)("JSXOpeningElement", { builder: ["name", "attributes", "selfClosing"], visitor: ["name", "attributes"], aliases: ["JSX", "Immutable"], fields: { name: { validate: (0, n.assertNodeType)("JSXIdentifier", "JSXMemberExpression") }, selfClosing: { default: false, validate: (0, n.assertValueType)("boolean") }, attributes: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("JSXAttribute", "JSXSpreadAttribute"))) }, typeParameters: { validate: (0, n.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"), optional: true } } }), (0, n.default)("JSXSpreadAttribute", { visitor: ["argument"], aliases: ["JSX"], fields: { argument: { validate: (0, n.assertNodeType)("Expression") } } }), (0, n.default)("JSXText", { aliases: ["JSX", "Immutable"], builder: ["value"], fields: { value: { validate: (0, n.assertValueType)("string") } } }), (0, n.default)("JSXFragment", { builder: ["openingFragment", "closingFragment", "children"], visitor: ["openingFragment", "children", "closingFragment"], aliases: ["JSX", "Immutable", "Expression"], fields: { openingFragment: { validate: (0, n.assertNodeType)("JSXOpeningFragment") }, closingFragment: { validate: (0, n.assertNodeType)("JSXClosingFragment") }, children: { validate: (0, n.chain)((0, n.assertValueType)("array"), (0, n.assertEach)((0, n.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement", "JSXFragment"))) } } }), (0, n.default)("JSXOpeningFragment", { aliases: ["JSX", "Immutable"] }), (0, n.default)("JSXClosingFragment", { aliases: ["JSX", "Immutable"] });
}, function(e, t, r) {
  "use strict";
  var n = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(36));
  var i = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "TypeParameterDeclaration";
    (0, n.default)(e2, { builder: ["id", "typeParameters", "extends", "body"], visitor: ["id", "typeParameters", "extends", "mixins", "implements", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)(t2), extends: (0, n.validateOptional)((0, n.arrayOfType)("InterfaceExtends")), mixins: (0, n.validateOptional)((0, n.arrayOfType)("InterfaceExtends")), implements: (0, n.validateOptional)((0, n.arrayOfType)("ClassImplements")), body: (0, n.validateType)("ObjectTypeAnnotation") } });
  };
  (0, n.default)("AnyTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("ArrayTypeAnnotation", { visitor: ["elementType"], aliases: ["Flow", "FlowType"], fields: { elementType: (0, n.validateType)("FlowType") } }), (0, n.default)("BooleanTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("BooleanLiteralTypeAnnotation", { builder: ["value"], aliases: ["Flow", "FlowType"], fields: { value: (0, n.validate)((0, n.assertValueType)("boolean")) } }), (0, n.default)("NullLiteralTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("ClassImplements", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterInstantiation") } }), i("DeclareClass", "TypeParameterInstantiation"), (0, n.default)("DeclareFunction", { visitor: ["id"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier"), predicate: (0, n.validateOptionalType)("DeclaredPredicate") } }), i("DeclareInterface"), (0, n.default)("DeclareModule", { builder: ["id", "body", "kind"], visitor: ["id", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)(["Identifier", "StringLiteral"]), body: (0, n.validateType)("BlockStatement"), kind: (0, n.validateOptional)((0, n.assertOneOf)("CommonJS", "ES")) } }), (0, n.default)("DeclareModuleExports", { visitor: ["typeAnnotation"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { typeAnnotation: (0, n.validateType)("TypeAnnotation") } }), (0, n.default)("DeclareTypeAlias", { visitor: ["id", "typeParameters", "right"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterDeclaration"), right: (0, n.validateType)("FlowType") } }), (0, n.default)("DeclareOpaqueType", { visitor: ["id", "typeParameters", "supertype"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterDeclaration"), supertype: (0, n.validateOptionalType)("FlowType") } }), (0, n.default)("DeclareVariable", { visitor: ["id"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier") } }), (0, n.default)("DeclareExportDeclaration", { visitor: ["declaration", "specifiers", "source"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { declaration: (0, n.validateOptionalType)("Flow"), specifiers: (0, n.validateOptional)((0, n.arrayOfType)(["ExportSpecifier", "ExportNamespaceSpecifier"])), source: (0, n.validateOptionalType)("StringLiteral"), default: (0, n.validateOptional)((0, n.assertValueType)("boolean")) } }), (0, n.default)("DeclareExportAllDeclaration", { visitor: ["source"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { source: (0, n.validateType)("StringLiteral"), exportKind: (0, n.validateOptional)((0, n.assertOneOf)(["type", "value"])) } }), (0, n.default)("DeclaredPredicate", { visitor: ["value"], aliases: ["Flow", "FlowPredicate"], fields: { value: (0, n.validateType)("Flow") } }), (0, n.default)("ExistsTypeAnnotation", { aliases: ["Flow", "FlowType"] }), (0, n.default)("FunctionTypeAnnotation", { visitor: ["typeParameters", "params", "rest", "returnType"], aliases: ["Flow", "FlowType"], fields: { typeParameters: (0, n.validateOptionalType)("TypeParameterDeclaration"), params: (0, n.validate)((0, n.arrayOfType)("FunctionTypeParam")), rest: (0, n.validateOptionalType)("FunctionTypeParam"), returnType: (0, n.validateType)("FlowType") } }), (0, n.default)("FunctionTypeParam", { visitor: ["name", "typeAnnotation"], aliases: ["Flow"], fields: { name: (0, n.validateOptionalType)("Identifier"), typeAnnotation: (0, n.validateType)("FlowType"), optional: (0, n.validateOptional)((0, n.assertValueType)("boolean")) } }), (0, n.default)("GenericTypeAnnotation", { visitor: ["id", "typeParameters"], aliases: ["Flow", "FlowType"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterInstantiation") } }), (0, n.default)("InferredPredicate", { aliases: ["Flow", "FlowPredicate"] }), (0, n.default)("InterfaceExtends", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterInstantiation") } }), i("InterfaceDeclaration"), (0, n.default)("InterfaceTypeAnnotation", { visitor: ["extends", "body"], aliases: ["Flow", "FlowType"], fields: { extends: (0, n.validateOptional)((0, n.arrayOfType)("InterfaceExtends")), body: (0, n.validateType)("ObjectTypeAnnotation") } }), (0, n.default)("IntersectionTypeAnnotation", { visitor: ["types"], aliases: ["Flow", "FlowType"], fields: { types: (0, n.validate)((0, n.arrayOfType)("FlowType")) } }), (0, n.default)("MixedTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("EmptyTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("NullableTypeAnnotation", { visitor: ["typeAnnotation"], aliases: ["Flow", "FlowType"], fields: { typeAnnotation: (0, n.validateType)("FlowType") } }), (0, n.default)("NumberLiteralTypeAnnotation", { builder: ["value"], aliases: ["Flow", "FlowType"], fields: { value: (0, n.validate)((0, n.assertValueType)("number")) } }), (0, n.default)("NumberTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("ObjectTypeAnnotation", { visitor: ["properties", "indexers", "callProperties", "internalSlots"], aliases: ["Flow", "FlowType"], builder: ["properties", "indexers", "callProperties", "internalSlots", "exact"], fields: { properties: (0, n.validate)((0, n.arrayOfType)(["ObjectTypeProperty", "ObjectTypeSpreadProperty"])), indexers: (0, n.validateOptional)((0, n.arrayOfType)("ObjectTypeIndexer")), callProperties: (0, n.validateOptional)((0, n.arrayOfType)("ObjectTypeCallProperty")), internalSlots: (0, n.validateOptional)((0, n.arrayOfType)("ObjectTypeInternalSlot")), exact: { validate: (0, n.assertValueType)("boolean"), default: false } } }), (0, n.default)("ObjectTypeInternalSlot", { visitor: ["id", "value", "optional", "static", "method"], aliases: ["Flow", "UserWhitespacable"], fields: { id: (0, n.validateType)("Identifier"), value: (0, n.validateType)("FlowType"), optional: (0, n.validate)((0, n.assertValueType)("boolean")), static: (0, n.validate)((0, n.assertValueType)("boolean")), method: (0, n.validate)((0, n.assertValueType)("boolean")) } }), (0, n.default)("ObjectTypeCallProperty", { visitor: ["value"], aliases: ["Flow", "UserWhitespacable"], fields: { value: (0, n.validateType)("FlowType"), static: (0, n.validate)((0, n.assertValueType)("boolean")) } }), (0, n.default)("ObjectTypeIndexer", { visitor: ["id", "key", "value", "variance"], aliases: ["Flow", "UserWhitespacable"], fields: { id: (0, n.validateOptionalType)("Identifier"), key: (0, n.validateType)("FlowType"), value: (0, n.validateType)("FlowType"), static: (0, n.validate)((0, n.assertValueType)("boolean")), variance: (0, n.validateOptionalType)("Variance") } }), (0, n.default)("ObjectTypeProperty", { visitor: ["key", "value", "variance"], aliases: ["Flow", "UserWhitespacable"], fields: { key: (0, n.validateType)(["Identifier", "StringLiteral"]), value: (0, n.validateType)("FlowType"), kind: (0, n.validate)((0, n.assertOneOf)("init", "get", "set")), static: (0, n.validate)((0, n.assertValueType)("boolean")), proto: (0, n.validate)((0, n.assertValueType)("boolean")), optional: (0, n.validate)((0, n.assertValueType)("boolean")), variance: (0, n.validateOptionalType)("Variance") } }), (0, n.default)("ObjectTypeSpreadProperty", { visitor: ["argument"], aliases: ["Flow", "UserWhitespacable"], fields: { argument: (0, n.validateType)("FlowType") } }), (0, n.default)("OpaqueType", { visitor: ["id", "typeParameters", "supertype", "impltype"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterDeclaration"), supertype: (0, n.validateOptionalType)("FlowType"), impltype: (0, n.validateType)("FlowType") } }), (0, n.default)("QualifiedTypeIdentifier", { visitor: ["id", "qualification"], aliases: ["Flow"], fields: { id: (0, n.validateType)("Identifier"), qualification: (0, n.validateType)(["Identifier", "QualifiedTypeIdentifier"]) } }), (0, n.default)("StringLiteralTypeAnnotation", { builder: ["value"], aliases: ["Flow", "FlowType"], fields: { value: (0, n.validate)((0, n.assertValueType)("string")) } }), (0, n.default)("StringTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("ThisTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] }), (0, n.default)("TupleTypeAnnotation", { visitor: ["types"], aliases: ["Flow", "FlowType"], fields: { types: (0, n.validate)((0, n.arrayOfType)("FlowType")) } }), (0, n.default)("TypeofTypeAnnotation", { visitor: ["argument"], aliases: ["Flow", "FlowType"], fields: { argument: (0, n.validateType)("FlowType") } }), (0, n.default)("TypeAlias", { visitor: ["id", "typeParameters", "right"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: { id: (0, n.validateType)("Identifier"), typeParameters: (0, n.validateOptionalType)("TypeParameterDeclaration"), right: (0, n.validateType)("FlowType") } }), (0, n.default)("TypeAnnotation", { aliases: ["Flow"], visitor: ["typeAnnotation"], fields: { typeAnnotation: (0, n.validateType)("FlowType") } }), (0, n.default)("TypeCastExpression", { visitor: ["expression", "typeAnnotation"], aliases: ["Flow", "ExpressionWrapper", "Expression"], fields: { expression: (0, n.validateType)("Expression"), typeAnnotation: (0, n.validateType)("TypeAnnotation") } }), (0, n.default)("TypeParameter", { aliases: ["Flow"], visitor: ["bound", "default", "variance"], fields: { name: (0, n.validate)((0, n.assertValueType)("string")), bound: (0, n.validateOptionalType)("TypeAnnotation"), default: (0, n.validateOptionalType)("FlowType"), variance: (0, n.validateOptionalType)("Variance") } }), (0, n.default)("TypeParameterDeclaration", { aliases: ["Flow"], visitor: ["params"], fields: { params: (0, n.validate)((0, n.arrayOfType)("TypeParameter")) } }), (0, n.default)("TypeParameterInstantiation", { aliases: ["Flow"], visitor: ["params"], fields: { params: (0, n.validate)((0, n.arrayOfType)("FlowType")) } }), (0, n.default)("UnionTypeAnnotation", { visitor: ["types"], aliases: ["Flow", "FlowType"], fields: { types: (0, n.validate)((0, n.arrayOfType)("FlowType")) } }), (0, n.default)("Variance", { aliases: ["Flow"], builder: ["kind"], fields: { kind: (0, n.validate)((0, n.assertOneOf)("minus", "plus")) } }), (0, n.default)("VoidTypeAnnotation", { aliases: ["Flow", "FlowType", "FlowBaseAnnotation"] });
}, function(e, t, r) {
  "use strict";
  !(function() {
    var t2 = r(210);
    function n(e2, t3) {
      return !(!t3 && "yield" === e2) && i(e2, t3);
    }
    function i(e2, t3) {
      if (t3 && (function(e3) {
        switch (e3) {
          case "implements":
          case "interface":
          case "package":
          case "private":
          case "protected":
          case "public":
          case "static":
          case "let":
            return true;
          default:
            return false;
        }
      })(e2)) return true;
      switch (e2.length) {
        case 2:
          return "if" === e2 || "in" === e2 || "do" === e2;
        case 3:
          return "var" === e2 || "for" === e2 || "new" === e2 || "try" === e2;
        case 4:
          return "this" === e2 || "else" === e2 || "case" === e2 || "void" === e2 || "with" === e2 || "enum" === e2;
        case 5:
          return "while" === e2 || "break" === e2 || "catch" === e2 || "throw" === e2 || "const" === e2 || "yield" === e2 || "class" === e2 || "super" === e2;
        case 6:
          return "return" === e2 || "typeof" === e2 || "delete" === e2 || "switch" === e2 || "export" === e2 || "import" === e2;
        case 7:
          return "default" === e2 || "finally" === e2 || "extends" === e2;
        case 8:
          return "function" === e2 || "continue" === e2 || "debugger" === e2;
        case 10:
          return "instanceof" === e2;
        default:
          return false;
      }
    }
    function a(e2, t3) {
      return "null" === e2 || "true" === e2 || "false" === e2 || n(e2, t3);
    }
    function o(e2, t3) {
      return "null" === e2 || "true" === e2 || "false" === e2 || i(e2, t3);
    }
    function s(e2) {
      var r2, n2, i2;
      if (0 === e2.length) return false;
      if (i2 = e2.charCodeAt(0), !t2.isIdentifierStartES5(i2)) return false;
      for (r2 = 1, n2 = e2.length; r2 < n2; ++r2) if (i2 = e2.charCodeAt(r2), !t2.isIdentifierPartES5(i2)) return false;
      return true;
    }
    function u(e2, t3) {
      return 1024 * (e2 - 55296) + (t3 - 56320) + 65536;
    }
    function l(e2) {
      var r2, n2, i2, a2, o2;
      if (0 === e2.length) return false;
      for (o2 = t2.isIdentifierStartES6, r2 = 0, n2 = e2.length; r2 < n2; ++r2) {
        if (55296 <= (i2 = e2.charCodeAt(r2)) && i2 <= 56319) {
          if (++r2 >= n2) return false;
          if (!(56320 <= (a2 = e2.charCodeAt(r2)) && a2 <= 57343)) return false;
          i2 = u(i2, a2);
        }
        if (!o2(i2)) return false;
        o2 = t2.isIdentifierPartES6;
      }
      return true;
    }
    e.exports = { isKeywordES5: n, isKeywordES6: i, isReservedWordES5: a, isReservedWordES6: o, isRestrictedWord: function(e2) {
      return "eval" === e2 || "arguments" === e2;
    }, isIdentifierNameES5: s, isIdentifierNameES6: l, isIdentifierES5: function(e2, t3) {
      return s(e2) && !a(e2, t3);
    }, isIdentifierES6: function(e2, t3) {
      return l(e2) && !o(e2, t3);
    } };
  })();
}, function(e, t, r) {
  "use strict";
  !(function() {
    function t2(e2) {
      if (null == e2) return false;
      switch (e2.type) {
        case "BlockStatement":
        case "BreakStatement":
        case "ContinueStatement":
        case "DebuggerStatement":
        case "DoWhileStatement":
        case "EmptyStatement":
        case "ExpressionStatement":
        case "ForInStatement":
        case "ForStatement":
        case "IfStatement":
        case "LabeledStatement":
        case "ReturnStatement":
        case "SwitchStatement":
        case "ThrowStatement":
        case "TryStatement":
        case "VariableDeclaration":
        case "WhileStatement":
        case "WithStatement":
          return true;
      }
      return false;
    }
    function r2(e2) {
      switch (e2.type) {
        case "IfStatement":
          return null != e2.alternate ? e2.alternate : e2.consequent;
        case "LabeledStatement":
        case "ForStatement":
        case "ForInStatement":
        case "WhileStatement":
        case "WithStatement":
          return e2.body;
      }
      return null;
    }
    e.exports = { isExpression: function(e2) {
      if (null == e2) return false;
      switch (e2.type) {
        case "ArrayExpression":
        case "AssignmentExpression":
        case "BinaryExpression":
        case "CallExpression":
        case "ConditionalExpression":
        case "FunctionExpression":
        case "Identifier":
        case "Literal":
        case "LogicalExpression":
        case "MemberExpression":
        case "NewExpression":
        case "ObjectExpression":
        case "SequenceExpression":
        case "ThisExpression":
        case "UnaryExpression":
        case "UpdateExpression":
          return true;
      }
      return false;
    }, isStatement: t2, isIterationStatement: function(e2) {
      if (null == e2) return false;
      switch (e2.type) {
        case "DoWhileStatement":
        case "ForInStatement":
        case "ForStatement":
        case "WhileStatement":
          return true;
      }
      return false;
    }, isSourceElement: function(e2) {
      return t2(e2) || null != e2 && "FunctionDeclaration" === e2.type;
    }, isProblematicIfStatement: function(e2) {
      var t3;
      if ("IfStatement" !== e2.type) return false;
      if (null == e2.alternate) return false;
      t3 = e2.consequent;
      do {
        if ("IfStatement" === t3.type && null == t3.alternate) return true;
        t3 = r2(t3);
      } while (t3);
      return false;
    }, trailingStatement: r2 };
  })();
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = null;
  function a(e2) {
    if (null !== i && n(i.property)) {
      var t2 = i;
      return i = a.prototype = null, t2;
    }
    return i = a.prototype = null == e2 ? /* @__PURE__ */ Object.create(null) : e2, new a();
  }
  a(), e.exports = function(e2) {
    return a(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(124), i = r(46), a = "[object Set]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(703), i = r(86), a = r(85), o = a && a.isSet, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = r(124), i = r(46), a = "[object Map]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(705), i = r(86), a = r(85), o = a && a.isMap, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  var n = r(67), i = Object.create, a = /* @__PURE__ */ (function() {
    function e2() {
    }
    return function(t2) {
      if (!n(t2)) return {};
      if (i) return i(t2);
      e2.prototype = t2;
      var r2 = new e2();
      return e2.prototype = void 0, r2;
    };
  })();
  e.exports = a;
}, function(e, t, r) {
  "use strict";
  var n = r(707), i = r(125), a = r(127);
  e.exports = function(e2) {
    return "function" != typeof e2.constructor || a(e2) ? {} : n(i(e2));
  };
}, function(e, t, r) {
  "use strict";
  var n = r(123);
  e.exports = function(e2, t2) {
    var r2 = t2 ? n(e2.buffer) : e2.buffer;
    return new e2.constructor(r2, e2.byteOffset, e2.length);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(130), i = n ? n.prototype : void 0, a = i ? i.valueOf : void 0;
  e.exports = function(e2) {
    return a ? Object(a.call(e2)) : {};
  };
}, function(e, t, r) {
  "use strict";
  var n = /\w*$/;
  e.exports = function(e2) {
    var t2 = new e2.constructor(e2.source, n.exec(e2));
    return t2.lastIndex = e2.lastIndex, t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(123);
  e.exports = function(e2, t2) {
    var r2 = t2 ? n(e2.buffer) : e2.buffer;
    return new e2.constructor(r2, e2.byteOffset, e2.byteLength);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(30).Uint8Array;
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(123), i = r(712), a = r(711), o = r(710), s = r(709), u = "[object Boolean]", l = "[object Date]", c = "[object Map]", f = "[object Number]", p = "[object RegExp]", d = "[object Set]", h = "[object String]", v = "[object Symbol]", y = "[object ArrayBuffer]", m = "[object DataView]", b = "[object Float32Array]", g = "[object Float64Array]", w = "[object Int8Array]", E = "[object Int16Array]", S = "[object Int32Array]", T = "[object Uint8Array]", A = "[object Uint8ClampedArray]", C = "[object Uint16Array]", P = "[object Uint32Array]";
  e.exports = function(e2, t2, r2) {
    var O = e2.constructor;
    switch (t2) {
      case y:
        return n(e2);
      case u:
      case l:
        return new O(+e2);
      case m:
        return i(e2, r2);
      case b:
      case g:
      case w:
      case E:
      case S:
      case T:
      case A:
      case C:
      case P:
        return s(e2, r2);
      case c:
        return new O();
      case f:
      case h:
        return new O(e2);
      case p:
        return a(e2);
      case d:
        return new O();
      case v:
        return o(e2);
    }
  };
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    var t2 = e2.length, r2 = new e2.constructor(t2);
    return t2 && "string" == typeof e2[0] && n.call(e2, "index") && (r2.index = e2.index, r2.input = e2.input), r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(47)(r(30), "WeakMap");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(47)(r(30), "Promise");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(47)(r(30), "DataView");
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(213), i = r(215), a = r(217);
  e.exports = function(e2) {
    return n(e2, a, i);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(213), i = r(126), a = r(129);
  e.exports = function(e2) {
    return n(e2, a, i);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(87), i = r(215);
  e.exports = function(e2, t2) {
    return n(e2, i(e2), t2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = null == e2 ? 0 : e2.length, i = 0, a = []; ++r2 < n; ) {
      var o = e2[r2];
      t2(o, r2, e2) && (a[i++] = o);
    }
    return a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(87), i = r(126);
  e.exports = function(e2, t2) {
    return n(e2, i(e2), t2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    var r2 = -1, n = e2.length;
    for (t2 || (t2 = Array(n)); ++r2 < n; ) t2[r2] = e2[r2];
    return t2;
  };
}, function(e, t, r) {
  "use strict";
  (function(e2) {
    function n(e3) {
      return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
        return typeof e4;
      } : function(e4) {
        return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
      })(e3);
    }
    var i = r(30), a = "object" == n(t) && t && !t.nodeType && t, o = a && "object" == n(e2) && e2 && !e2.nodeType && e2, s = o && o.exports === a ? i.Buffer : void 0, u = s ? s.allocUnsafe : void 0;
    e2.exports = function(e3, t2) {
      if (t2) return e3.slice();
      var r2 = e3.length, n2 = u ? u(r2) : new e3.constructor(r2);
      return e3.copy(n2), n2;
    };
  }).call(this, r(18)(e));
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = [];
    if (null != e2) for (var r2 in Object(e2)) t2.push(r2);
    return t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(67), i = r(127), a = r(726), o = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    if (!n(e2)) return a(e2);
    var t2 = i(e2), r2 = [];
    for (var s in e2) ("constructor" != s || !t2 && o.call(e2, s)) && r2.push(s);
    return r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(87), i = r(217);
  e.exports = function(e2, t2) {
    return e2 && n(t2, i(t2), e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(219)(Object.keys, Object);
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(127), i = r(729), a = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    if (!n(e2)) return i(e2);
    var t2 = [];
    for (var r2 in Object(e2)) a.call(e2, r2) && "constructor" != r2 && t2.push(r2);
    return t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(56), i = r(220), a = r(46), o = {};
  o["[object Float32Array]"] = o["[object Float64Array]"] = o["[object Int8Array]"] = o["[object Int16Array]"] = o["[object Int32Array]"] = o["[object Uint8Array]"] = o["[object Uint8ClampedArray]"] = o["[object Uint16Array]"] = o["[object Uint32Array]"] = true, o["[object Arguments]"] = o["[object Array]"] = o["[object ArrayBuffer]"] = o["[object Boolean]"] = o["[object DataView]"] = o["[object Date]"] = o["[object Error]"] = o["[object Function]"] = o["[object Map]"] = o["[object Number]"] = o["[object Object]"] = o["[object RegExp]"] = o["[object Set]"] = o["[object String]"] = o["[object WeakMap]"] = false, e.exports = function(e2) {
    return a(e2) && i(e2.length) && !!o[n(e2)];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(731), i = r(86), a = r(85), o = a && a.isTypedArray, s = o ? i(o) : n;
  e.exports = s;
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var i = 9007199254740991, a = /^(?:0|[1-9]\d*)$/;
  e.exports = function(e2, t2) {
    var r2 = n(e2);
    return !!(t2 = null == t2 ? i : t2) && ("number" == r2 || "symbol" != r2 && a.test(e2)) && e2 > -1 && e2 % 1 == 0 && e2 < t2;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
    return false;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(56), i = r(46), a = "[object Arguments]";
  e.exports = function(e2) {
    return i(e2) && n(e2) == a;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(735), i = r(46), a = Object.prototype, o = a.hasOwnProperty, s = a.propertyIsEnumerable, u = n(/* @__PURE__ */ (function() {
    return arguments;
  })()) ? n : function(e2) {
    return i(e2) && o.call(e2, "callee") && !s.call(e2, "callee");
  };
  e.exports = u;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = Array(e2); ++r2 < e2; ) n[r2] = t2(r2);
    return n;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(87), i = r(129);
  e.exports = function(e2, t2) {
    return e2 && n(t2, i(t2), e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(47), i = (function() {
    try {
      var e2 = n(Object, "defineProperty");
      return e2({}, "", {}), e2;
    } catch (e3) {
    }
  })();
  e.exports = i;
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    for (var r2 = -1, n = null == e2 ? 0 : e2.length; ++r2 < n && false !== t2(e2[r2], r2, e2); ) ;
    return e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(88);
  e.exports = function(e2, t2) {
    var r2 = n(this, e2), i = r2.size;
    return r2.set(e2, t2), this.size += r2.size == i ? 0 : 1, this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(88);
  e.exports = function(e2) {
    return n(this, e2).has(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(88);
  e.exports = function(e2) {
    return n(this, e2).get(e2);
  };
}, function(e, t, r) {
  "use strict";
  function n(e2) {
    return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
      return typeof e3;
    } : function(e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  e.exports = function(e2) {
    var t2 = n(e2);
    return "string" == t2 || "number" == t2 || "symbol" == t2 || "boolean" == t2 ? "__proto__" !== e2 : null === e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(88);
  e.exports = function(e2) {
    var t2 = n(this, e2).delete(e2);
    return this.size -= t2 ? 1 : 0, t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(89), i = "__lodash_hash_undefined__";
  e.exports = function(e2, t2) {
    var r2 = this.__data__;
    return this.size += this.has(e2) ? 0 : 1, r2[e2] = n && void 0 === t2 ? i : t2, this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(89), i = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    var t2 = this.__data__;
    return n ? void 0 !== t2[e2] : i.call(t2, e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(89), i = "__lodash_hash_undefined__", a = Object.prototype.hasOwnProperty;
  e.exports = function(e2) {
    var t2 = this.__data__;
    if (n) {
      var r2 = t2[e2];
      return r2 === i ? void 0 : r2;
    }
    return a.call(t2, e2) ? t2[e2] : void 0;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = this.has(e2) && delete this.__data__[e2];
    return this.size -= t2 ? 1 : 0, t2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(89);
  e.exports = function() {
    this.__data__ = n ? n(null) : {}, this.size = 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(750), i = r(749), a = r(748), o = r(747), s = r(746);
  function u(e2) {
    var t2 = -1, r2 = null == e2 ? 0 : e2.length;
    for (this.clear(); ++t2 < r2; ) {
      var n2 = e2[t2];
      this.set(n2[0], n2[1]);
    }
  }
  u.prototype.clear = n, u.prototype.delete = i, u.prototype.get = a, u.prototype.has = o, u.prototype.set = s, e.exports = u;
}, function(e, t, r) {
  "use strict";
  var n = r(751), i = r(91), a = r(131);
  e.exports = function() {
    this.size = 0, this.__data__ = { hash: new n(), map: new (a || i)(), string: new n() };
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2, t2) {
    return null == e2 ? void 0 : e2[t2];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(30)["__core-js_shared__"];
  e.exports = n;
}, function(e, t, r) {
  "use strict";
  var n = r(754), i = (function() {
    var e2 = /[^.]+$/.exec(n && n.keys && n.keys.IE_PROTO || "");
    return e2 ? "Symbol(src)_1." + e2 : "";
  })();
  e.exports = function(e2) {
    return !!i && i in e2;
  };
}, function(e, t, r) {
  "use strict";
  var n = Object.prototype.toString;
  e.exports = function(e2) {
    return n.call(e2);
  };
}, function(e, t, r) {
  "use strict";
  var n = r(130), i = Object.prototype, a = i.hasOwnProperty, o = i.toString, s = n ? n.toStringTag : void 0;
  e.exports = function(e2) {
    var t2 = a.call(e2, s), r2 = e2[s];
    try {
      e2[s] = void 0;
      var n2 = true;
    } catch (e3) {
    }
    var i2 = o.call(e2);
    return n2 && (t2 ? e2[s] = r2 : delete e2[s]), i2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(228), i = r(755), a = r(67), o = r(226), s = /^\[object .+?Constructor\]$/, u = Function.prototype, l = Object.prototype, c = u.toString, f = l.hasOwnProperty, p = RegExp("^" + c.call(f).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  e.exports = function(e2) {
    return !(!a(e2) || i(e2)) && (n(e2) ? p : s).test(o(e2));
  };
}, function(e, t, r) {
  "use strict";
  var n = r(91), i = r(131), a = r(225), o = 200;
  e.exports = function(e2, t2) {
    var r2 = this.__data__;
    if (r2 instanceof n) {
      var s = r2.__data__;
      if (!i || s.length < o - 1) return s.push([e2, t2]), this.size = ++r2.size, this;
      r2 = this.__data__ = new a(s);
    }
    return r2.set(e2, t2), this.size = r2.size, this;
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return this.__data__.has(e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    return this.__data__.get(e2);
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function(e2) {
    var t2 = this.__data__, r2 = t2.delete(e2);
    return this.size = t2.size, r2;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(91);
  e.exports = function() {
    this.__data__ = new n(), this.size = 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(90);
  e.exports = function(e2, t2) {
    var r2 = this.__data__, i = n(r2, e2);
    return i < 0 ? (++this.size, r2.push([e2, t2])) : r2[i][1] = t2, this;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(90);
  e.exports = function(e2) {
    return n(this.__data__, e2) > -1;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(90);
  e.exports = function(e2) {
    var t2 = this.__data__, r2 = n(t2, e2);
    return r2 < 0 ? void 0 : t2[r2][1];
  };
}, function(e, t, r) {
  "use strict";
  var n = r(90), i = Array.prototype.splice;
  e.exports = function(e2) {
    var t2 = this.__data__, r2 = n(t2, e2);
    return !(r2 < 0 || (r2 == t2.length - 1 ? t2.pop() : i.call(t2, r2, 1), --this.size, 0));
  };
}, function(e, t, r) {
  "use strict";
  e.exports = function() {
    this.__data__ = [], this.size = 0;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(91), i = r(763), a = r(762), o = r(761), s = r(760), u = r(759);
  function l(e2) {
    var t2 = this.__data__ = new n(e2);
    this.size = t2.size;
  }
  l.prototype.clear = i, l.prototype.delete = a, l.prototype.get = o, l.prototype.has = s, l.prototype.set = u, e.exports = l;
}, function(e, t, r) {
  "use strict";
  var n = r(769), i = r(740), a = r(224), o = r(738), s = r(728), u = r(725), l = r(724), c = r(723), f = r(721), p = r(720), d = r(719), h = r(124), v = r(715), y = r(714), m = r(708), b = r(128), g = r(221), w = r(706), E = r(67), S = r(704), T = r(129), A = 1, C = 2, P = 4, O = "[object Arguments]", x = "[object Function]", _ = "[object GeneratorFunction]", V = "[object Object]", D = {};
  D[O] = D["[object Array]"] = D["[object ArrayBuffer]"] = D["[object DataView]"] = D["[object Boolean]"] = D["[object Date]"] = D["[object Float32Array]"] = D["[object Float64Array]"] = D["[object Int8Array]"] = D["[object Int16Array]"] = D["[object Int32Array]"] = D["[object Map]"] = D["[object Number]"] = D[V] = D["[object RegExp]"] = D["[object Set]"] = D["[object String]"] = D["[object Symbol]"] = D["[object Uint8Array]"] = D["[object Uint8ClampedArray]"] = D["[object Uint16Array]"] = D["[object Uint32Array]"] = true, D["[object Error]"] = D[x] = D["[object WeakMap]"] = false, e.exports = function e2(t2, r2, N, I, k, j) {
    var F, R = r2 & A, M = r2 & C, B = r2 & P;
    if (N && (F = k ? N(t2, I, k, j) : N(t2)), void 0 !== F) return F;
    if (!E(t2)) return t2;
    var L = b(t2);
    if (L) {
      if (F = v(t2), !R) return l(t2, F);
    } else {
      var $ = h(t2), G = $ == x || $ == _;
      if (g(t2)) return u(t2, R);
      if ($ == V || $ == O || G && !k) {
        if (F = M || G ? {} : m(t2), !R) return M ? f(t2, s(F, t2)) : c(t2, o(F, t2));
      } else {
        if (!D[$]) return k ? t2 : {};
        F = y(t2, $, R);
      }
    }
    j || (j = new n());
    var z = j.get(t2);
    if (z) return z;
    if (j.set(t2, F), S(t2)) return t2.forEach(function(n2) {
      F.add(e2(n2, r2, N, n2, t2, j));
    }), F;
    if (w(t2)) return t2.forEach(function(n2, i2) {
      F.set(i2, e2(n2, r2, N, i2, t2, j));
    }), F;
    var U = B ? M ? d : p : M ? keysIn : T, W = L ? void 0 : U(t2);
    return i(W || t2, function(n2, i2) {
      W && (n2 = t2[i2 = n2]), a(F, i2, e2(n2, r2, N, i2, t2, j));
    }), F;
  };
}, function(e, t, r) {
  "use strict";
  var n = r(770), i = 4;
  e.exports = function(e2) {
    return n(e2, i);
  };
}, function(e, t, r) {
  "use strict";
  function n() {
    var e2 = o(r(771));
    return n = function() {
      return e2;
    }, e2;
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    for (var t2 = arguments.length, r2 = new Array(t2 > 1 ? t2 - 1 : 0), o2 = 1; o2 < t2; o2++) r2[o2 - 1] = arguments[o2];
    var s = i.BUILDER_KEYS[e2], u = r2.length;
    if (u > s.length) throw new Error("".concat(e2, ": Too many arguments passed. Received ").concat(u, " but can receive no more than ").concat(s.length));
    var l = { type: e2 }, c = 0;
    for (var f in s.forEach(function(t3) {
      var a2, o3 = i.NODE_FIELDS[e2][t3];
      c < u && (a2 = r2[c]), void 0 === a2 && (a2 = (0, n().default)(o3.default)), l[t3] = a2, c++;
    }), l) (0, a.default)(l, f, l[f]);
    return l;
  };
  var i = r(29), a = o(r(209));
  function o(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2, t2) {
    for (var r2 = e2.value.split(/\r\n|\n|\r/), i = 0, a = 0; a < r2.length; a++) r2[a].match(/[^ \t]/) && (i = a);
    for (var o = "", s = 0; s < r2.length; s++) {
      var u = r2[s], l = 0 === s, c = s === r2.length - 1, f = s === i, p = u.replace(/\t/g, " ");
      l || (p = p.replace(/^[ ]+/, "")), c || (p = p.replace(/[ ]+$/, "")), p && (f || (p += " "), o += p);
    }
    o && t2.push((0, n.stringLiteral)(o));
  };
  var n = r(23);
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    for (var t2 = [], r2 = 0; r2 < e2.children.length; r2++) {
      var a = e2.children[r2];
      (0, n.isJSXText)(a) ? (0, i.default)(a, t2) : ((0, n.isJSXExpressionContainer)(a) && (a = a.expression), (0, n.isJSXEmptyExpression)(a) || t2.push(a));
    }
    return t2;
  };
  var n = r(17), i = (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(773));
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = function(e2) {
    return !!e2 && /^[a-z]/.test(e2);
  };
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var n = (0, (function(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  })(r(231)).default)("React.Component");
  t.default = n;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  function i(e2, t2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var n2 = t2[r2];
      n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e2, n2.key, n2);
    }
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.Serializer = void 0;
  var a = r(10), o = r(8), s = r(4), u = (r(35), r(7)), l = r(9), c = I(r(108)), f = I(r(39)), p = I(r(1)), d = r(50), h = r(33), v = r(436), y = r(19), m = r(38), b = r(431), g = r(430), w = r(49), E = r(97), S = r(95), T = r(422), A = (function(e2) {
    if (e2 && e2.__esModule) return e2;
    var t2 = {};
    if (null != e2) {
      for (var r2 in e2) if (Object.prototype.hasOwnProperty.call(e2, r2)) {
        var n2 = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(e2, r2) : {};
        n2.get || n2.set ? Object.defineProperty(t2, r2, n2) : t2[r2] = e2[r2];
      }
    }
    return t2.default = e2, t2;
  })(r(5)), C = r(421), P = r(420), O = r(141), x = r(3), _ = r(0), V = r(2), D = r(6), N = r(419);
  function I(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var k = (function() {
    function e2(t2) {
      var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      if ((function(e3, t3) {
        if (!(e3 instanceof t3)) throw new TypeError("Cannot call a class as a function");
      })(this, e2), (0, p.default)(t2.useAbstractInterpretation), t2.generator = new l.Generator(t2, "main", t2.pathConditions), this.realm = t2, this.logger = new y.Logger(this.realm, !!r2.internalDebug), this.modules = new m.Modules(this.realm, this.logger, !!r2.logModules), this.functions = new v.Functions(this.realm, this.modules.moduleTracer), r2.trace) {
        var n2 = new g.LoggingTracer(this.realm);
        this.realm.tracers.push(n2);
      }
      this.options = r2;
    }
    return (function(e3, t2, r2) {
      t2 && i(e3.prototype, t2), r2 && i(e3, r2);
    })(e2, [{ key: "_execute", value: function(e3) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      var t2 = arguments.length > 2 ? arguments[2] : void 0, r2 = this.realm, i2 = n(r2.$GlobalEnv.executeSources(e3.toArray(), "script", function(e4) {
        var n2 = r2.preludeGenerator;
        (0, p.default)(n2);
        var i3 = n2.nameGenerator.forbiddenNames;
        (0, f.default)(e4, function(e5) {
          return !!A.isIdentifier(e5) && (i3.add(e5.name), true);
        }), t2 && t2(e4);
      }), 2), a2 = i2[0], l2 = i2[1];
      if (e3.destroy(), a2 instanceof u.AbruptCompletion) {
        var c2 = new o.ExecutionContext();
        r2.pushContext(c2);
        try {
          this.logger.logCompletion(a2);
        } finally {
          r2.popContext(c2);
        }
        var d2 = new s.CompilerDiagnostic("Global code may end abruptly", a2.location, "PP0016", "FatalError");
        throw r2.handleError(d2), new s.FatalError();
      }
      return l2;
    } }, { key: "processOutputEntries", value: function() {
      var e3 = this.realm, t2 = this.logger.tryQuery(function() {
        return (0, x.Get)(e3, e3.$GlobalObject, "__output");
      }, e3.intrinsics.undefined);
      if (!(t2 instanceof _.ObjectValue)) return false;
      var r2 = e3.generator, n2 = e3.preludeGenerator;
      if (void 0 === r2 || void 0 === n2) return false;
      r2._entries.length = 0, n2.declaredGlobals.clear();
      var i2 = true, a2 = false, o2 = void 0;
      try {
        for (var s2, u2 = V.Properties.GetOwnPropertyKeysArray(e3, t2, false, false)[Symbol.iterator](); !(i2 = (s2 = u2.next()).done); i2 = true) {
          var l2 = s2.value, c2 = t2.properties.get(l2);
          if (c2) {
            var f2 = c2.descriptor instanceof D.PropertyDescriptor && c2.descriptor.value;
            f2 instanceof _.Value && r2.emitGlobalDeclaration(l2, f2);
          }
        }
      } catch (e4) {
        a2 = true, o2 = e4;
      } finally {
        try {
          i2 || null == u2.return || u2.return();
        } finally {
          if (a2) throw o2;
        }
      }
      return true;
    } }, { key: "init", value: function(e3) {
      var t2 = this, r2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], i2 = arguments.length > 2 ? arguments[2] : void 0, o2 = arguments.length > 3 ? arguments[3] : void 0, s2 = this.realm.statistics;
      (0, p.default)(s2 instanceof d.SerializerStatistics, "serialization requires SerializerStatistics");
      var u2 = s2, l2 = u2.total.measure(function() {
        t2.realm.react.verbose && t2.logger.logInformation("Evaluating initialization path...");
        var s3, l3 = t2._execute(e3, r2, i2), f2 = a.EnvironmentRecord.nextId;
        if (!t2.logger.hasErrors() && (t2.processOutputEntries() || u2.resolveInitializedModules.measure(function() {
          return t2.modules.resolveInitializedModules();
        }), u2.checkThatFunctionsAreIndependent.measure(function() {
          return t2.functions.checkThatFunctionsAreIndependent(f2);
        }), t2.realm.react.enabled && u2.optimizeReactComponentTreeRoots.measure(function() {
          s3 = new h.ReactStatistics(), t2.functions.optimizeReactComponentTreeRoots(s3, f2);
        }), u2.dumpIR.measure(function() {
          if (void 0 !== o2) {
            var e4 = /* @__PURE__ */ new Map(), r3 = true, i3 = false, a2 = void 0;
            try {
              for (var s4, u3 = t2.functions.writeEffects[Symbol.iterator](); !(r3 = (s4 = u3.next()).done); r3 = true) {
                var l4 = n(s4.value, 2), c2 = l4[0], f3 = l4[1];
                e4.set(c2, f3.generator);
              }
            } catch (e5) {
              i3 = true, a2 = e5;
            } finally {
              try {
                r3 || null == u3.return || u3.return();
              } finally {
                if (i3) throw a2;
              }
            }
            o2(t2.realm, e4);
          }
        }), u2.processCollectedNestedOptimizedFunctions.measure(function() {
          return t2.functions.processCollectedNestedOptimizedFunctions(f2);
        }), !t2.options.initializeMoreModules || (u2.initializeMoreModules.measure(function() {
          return t2.modules.initializeMoreModules();
        }), !t2.logger.hasErrors()))) {
          var d2, v2 = (function() {
            var e4 = t2.functions.getAdditionalFunctionValuesToEffects(), r3 = t2.realm.preludeGenerator;
            (0, p.default)(void 0 !== r3), t2.realm.react.verbose && t2.logger.logInformation("Visiting evaluated nodes...");
            var i3 = n((function() {
              var r4 = new w.ResidualHeapVisitor(t2.realm, t2.logger, t2.modules, e4);
              return u2.deepTraversal.measure(function() {
                return r4.visitRoots();
              }), [r4.toInfo(), r4.generatorTree, r4.inspector];
            })(), 3), a2 = i3[0], o3 = i3[1], s4 = i3[2];
            if (!t2.logger.hasErrors()) {
              var l4 = new N.ResidualOptimizedFunctions(o3, e4, a2.values), c2 = new O.Referentializer(t2.realm, t2.options, r3.createNameGenerator("__scope_"), r3.createNameGenerator("__get_scope_binding_"), r3.createNameGenerator("__leaked_"), l4);
              u2.referentialization.measure(function() {
                var e5 = true, t3 = false, r4 = void 0;
                try {
                  for (var n2, i4 = a2.functionInstances.values()[Symbol.iterator](); !(e5 = (n2 = i4.next()).done); e5 = true) {
                    var o4 = n2.value;
                    c2.referentialize(o4);
                  }
                } catch (e6) {
                  t3 = true, r4 = e6;
                } finally {
                  try {
                    e5 || null == i4.return || i4.return();
                  } finally {
                    if (t3) throw r4;
                  }
                }
              }), t2.realm.react.verbose && t2.logger.logInformation("Serializing evaluated nodes...");
              var f3 = t2.realm.preludeGenerator;
              (0, p.default)(f3);
              var h2 = new S.ResidualHeapValueIdentifiers(a2.values.keys(), f3);
              if (t2.options.heapGraphFormat) {
                var v3 = new C.ResidualHeapRefCounter(t2.realm, t2.logger, t2.modules, e4);
                v3.visitRoots();
                var y3 = new P.ResidualHeapGraphGenerator(t2.realm, t2.logger, t2.modules, e4, h2, v3.getResult());
                y3.visitRoots(), (0, p.default)(t2.options.heapGraphFormat), d2 = y3.generateResult(t2.options.heapGraphFormat);
              }
              if (t2.options.inlineExpressions) {
                if (h2.initPass1(), u2.referenceCounts.measure(function() {
                  new E.ResidualHeapSerializer(t2.realm, t2.logger, t2.modules, h2, s4, a2, t2.options, e4, c2, o3, l4).serialize();
                }), t2.logger.hasErrors()) return;
                h2.initPass2();
              }
              var m2 = null != t2.options.lazyObjectsRuntime ? T.LazyObjectsSerializer : E.ResidualHeapSerializer;
              return u2.resetBeforePass(), u2.serializePass.measure(function() {
                return new m2(t2.realm, t2.logger, t2.modules, h2, s4, a2, t2.options, e4, c2, o3, l4).serialize();
              });
            }
          })();
          (0, p.default)(void 0 !== v2), t2.realm.stripFlow && (0, b.stripFlowTypeAnnotations)(v2);
          var y2 = u2.babelGenerate.measure(function() {
            return (0, c.default)(v2, { sourceMaps: r2 }, l3);
          });
          return (0, p.default)(!t2.logger.hasErrors()), { code: y2.code, map: y2.map, statistics: u2, reactStatistics: s3, heapGraph: d2 };
        }
      });
      return this.options.logStatistics && (u2.log(), u2.logSerializerPerformanceTrackers("time statistics", u2.forcingGC ? "Time statistics are skewed because of forced garbage collections; remove --expose-gc flag from node.js invocation to disable forced garbage collections." : void 0, function(e4) {
        return "".concat(e4.time, "ms");
      }), u2.logSerializerPerformanceTrackers("memory statistics", u2.forcingGC ? void 0 : "Memory statistics are unreliable because garbage collections could not be forced; pass --expose-gc to node.js to enable forced garbage collections.", function(e4) {
        return "".concat(e4.memory > 0 ? "+" : "").concat(Math.round(e4.memory / 1024 / 1024), "MB");
      })), l2;
    } }]), e2;
  })();
  t.Serializer = k;
}, function(e, t, r) {
  "use strict";
  Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
  var n = r(777).Serializer;
  t.default = n;
}, function(e, t, r) {
  "use strict";
  function n(e2, t2) {
    return (function(e3) {
      if (Array.isArray(e3)) return e3;
    })(e2) || (function(e3, t3) {
      var r2 = [], n2 = true, i2 = false, a2 = void 0;
      try {
        for (var o2, s2 = e3[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t3 || r2.length !== t3); n2 = true) ;
      } catch (e4) {
        i2 = true, a2 = e4;
      } finally {
        try {
          n2 || null == s2.return || s2.return();
        } finally {
          if (i2) throw a2;
        }
      }
      return r2;
    })(e2, t2) || (function() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    })();
  }
  Object.defineProperty(t, "__esModule", { value: true }), t.prepackSources = function(e2) {
    var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p.defaultOptions, r2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
    Array.isArray(e2) && (e2 = new c.SourceFileCollection(e2));
    var h2 = (0, u.getRealmOptions)(t2);
    h2.errorHandler = t2.errorHandler;
    var E2 = (0, a.default)(h2, t2.debuggerConfigArgs, r2 || new v.SerializerStatistics(), t2.debugReproArgs);
    (0, o.default)(E2), "function" == typeof t2.additionalGlobals && t2.additionalGlobals(E2);
    if (t2.check) {
      E2.generator = new g.Generator(E2, "main", E2.pathConditions);
      var S2 = new b.Logger(E2, !!t2.internalDebug), T = new m.Modules(E2, S2, !!t2.logModules), A = E2.$GlobalEnv.executeSources(e2.toArray()), C = n(A, 1), P = C[0];
      if (P instanceof f.AbruptCompletion) throw P;
      return (0, d.default)(t2.check), (function(e3, t3, r3) {
        var n2 = e3.realm, i2 = n2.$GlobalEnv;
        n2.$GlobalObject.makeSimple();
        var a2 = n2.errorHandler;
        a2 || (a2 = function(e4, t4) {
          return n2.handleError(e4);
        });
        n2.errorHandler = function(e4, t4) {
          return (0, d.default)(a2), "FatalError" === e4.severity ? a2(e4, n2.suppressDiagnostics) : "Recover";
        }, e3.resolveInitializedModules();
        var o2 = new y.ResidualHeapVisitor(n2, e3.logger, e3, /* @__PURE__ */ new Map());
        if (o2.visitRoots(), e3.logger.hasErrors()) return;
        var u2 = 0, l2 = 0, c2 = true, f2 = false, p2 = void 0;
        try {
          var h3 = function() {
            var a3 = v2.value;
            if (++u2 <= t3) return "continue";
            var o3 = a3.functionValue;
            console.log("analyzing: " + u2);
            for (var c3 = n2.intrinsics.null, f3 = o3.getLength() || 0, p3 = [], d2 = 0; d2 < f3; d2++) {
              var h4 = "dummy parameter", y2 = w.AbstractValue.createFromType(n2, w.ObjectValue, h4);
              y2.makeSimple("transitive"), y2.intrinsicName = h4, p3[d2] = y2;
            }
            try {
              n2.evaluateForEffectsInGlobalEnv(function() {
                return (0, s.EvaluateDirectCallWithArgList)(e3.realm, true, i2, o3, o3, c3, p3);
              }), l2++;
            } catch (e4) {
            }
            return u2 >= t3 + r3 ? "break" : void 0;
          };
          e: for (var v2, m2 = o2.functionInstances.values()[Symbol.iterator](); !(c2 = (v2 = m2.next()).done); c2 = true) {
            var b2 = h3();
            switch (b2) {
              case "continue":
                continue;
              case "break":
                break e;
            }
          }
        } catch (e4) {
          f2 = true, p2 = e4;
        } finally {
          try {
            c2 || null == m2.return || m2.return();
          } finally {
            if (f2) throw p2;
          }
        }
        console.log("Analyzed ".concat(r3, " functions starting at ").concat(t3, " of which ").concat(l2, " did not have fatal errors."));
      })(T, t2.check[0], t2.check[1]), { code: "", map: void 0 };
    }
    var O = new i.default(E2, (0, u.getSerializerOptions)(t2)), x = O.init(e2, t2.sourceMaps, t2.onParse, t2.onExecute);
    if (E2.debuggerInstance && E2.debuggerInstance.shutdown(), !x) throw new l.FatalError("serializer failed");
    if (E2.debugReproManager) {
      var _ = E2.debugReproManager, V = { sourceFiles: _.getSourceFilePaths(), sourceMaps: _.getSourceMapPaths() };
      x.sourceFilePaths = V;
    }
    return x;
  }, t.prepackVersion = void 0;
  var i = E(r(778)), a = E(r(418)), o = E(r(249)), s = r(3), u = r(234), l = r(4), c = r(35), f = r(7), p = r(233), d = E(r(1)), h = r(232), v = r(50), y = r(49), m = r(38), b = r(19), g = r(9), w = r(0);
  function E(e2) {
    return e2 && e2.__esModule ? e2 : { default: e2 };
  }
  var S = h.version;
  t.prepackVersion = S;
}]);
